/*
 * vis-charts
 * http://visjs.org/
 *
 * A dynamic, browser-based visualization library.
 *
 * @version 5.0.0
 * @date    2019-08-06T17:08:58Z
 *
 * @copyright (c) 2011-2017 Almende B.V, http://almende.com
 * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
 *
 * @license 
 * vis.js is dual licensed under both
 *
 *   1. The Apache 2.0 License
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   and
 *
 *   2. The MIT License
 *      http://opensource.org/licenses/MIT
 *
 * vis.js may be distributed under either license.
 */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.vis = factory());
}(this, function () { 'use strict';

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var defineProperty = _defineProperty;

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  var arrayWithoutHoles = _arrayWithoutHoles;

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  var iterableToArray = _iterableToArray;

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  var nonIterableSpread = _nonIterableSpread;

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  var toConsumableArray = _toConsumableArray;
  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function commonjsRequire() {
    throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
  }

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var _typeof_1 = createCommonjsModule(function (module) {
    function _typeof2(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof2(obj) {
          return typeof obj;
        };
      } else {
        _typeof2 = function _typeof2(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof2(obj);
    }

    function _typeof(obj) {
      if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
        module.exports = _typeof = function _typeof(obj) {
          return _typeof2(obj);
        };
      } else {
        module.exports = _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
        };
      }

      return _typeof(obj);
    }

    module.exports = _typeof;
  });

  var moment = createCommonjsModule(function (module, exports) {
    (function (global, factory) {
      module.exports = factory();
    })(commonjsGlobal, function () {
      var hookCallback;

      function hooks() {
        return hookCallback.apply(null, arguments);
      } // This is done to register the method called with moment()
      // without creating circular dependencies.


      function setHookCallback(callback) {
        hookCallback = callback;
      }

      function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
      }

      function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
      }

      function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
          return Object.getOwnPropertyNames(obj).length === 0;
        } else {
          var k;

          for (k in obj) {
            if (obj.hasOwnProperty(k)) {
              return false;
            }
          }

          return true;
        }
      }

      function isUndefined(input) {
        return input === void 0;
      }

      function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
      }

      function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
      }

      function map(arr, fn) {
        var res = [],
            i;

        for (i = 0; i < arr.length; ++i) {
          res.push(fn(arr[i], i));
        }

        return res;
      }

      function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
      }

      function extend(a, b) {
        for (var i in b) {
          if (hasOwnProp(b, i)) {
            a[i] = b[i];
          }
        }

        if (hasOwnProp(b, 'toString')) {
          a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
          a.valueOf = b.valueOf;
        }

        return a;
      }

      function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
      }

      function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
          empty: false,
          unusedTokens: [],
          unusedInput: [],
          overflow: -2,
          charsLeftOver: 0,
          nullInput: false,
          invalidMonth: null,
          invalidFormat: false,
          userInvalidated: false,
          iso: false,
          parsedDateParts: [],
          meridiem: null,
          rfc2822: false,
          weekdayMismatch: false
        };
      }

      function getParsingFlags(m) {
        if (m._pf == null) {
          m._pf = defaultParsingFlags();
        }

        return m._pf;
      }

      var some;

      if (Array.prototype.some) {
        some = Array.prototype.some;
      } else {
        some = function (fun) {
          var t = Object(this);
          var len = t.length >>> 0;

          for (var i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
              return true;
            }
          }

          return false;
        };
      }

      function isValid(m) {
        if (m._isValid == null) {
          var flags = getParsingFlags(m);
          var parsedParts = some.call(flags.parsedDateParts, function (i) {
            return i != null;
          });
          var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);

          if (m._strict) {
            isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
          }

          if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
          } else {
            return isNowValid;
          }
        }

        return m._isValid;
      }

      function createInvalid(flags) {
        var m = createUTC(NaN);

        if (flags != null) {
          extend(getParsingFlags(m), flags);
        } else {
          getParsingFlags(m).userInvalidated = true;
        }

        return m;
      } // Plugins that add properties should also add the key here (null value),
      // so we can properly clone ourselves.


      var momentProperties = hooks.momentProperties = [];

      function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
          to._isAMomentObject = from._isAMomentObject;
        }

        if (!isUndefined(from._i)) {
          to._i = from._i;
        }

        if (!isUndefined(from._f)) {
          to._f = from._f;
        }

        if (!isUndefined(from._l)) {
          to._l = from._l;
        }

        if (!isUndefined(from._strict)) {
          to._strict = from._strict;
        }

        if (!isUndefined(from._tzm)) {
          to._tzm = from._tzm;
        }

        if (!isUndefined(from._isUTC)) {
          to._isUTC = from._isUTC;
        }

        if (!isUndefined(from._offset)) {
          to._offset = from._offset;
        }

        if (!isUndefined(from._pf)) {
          to._pf = getParsingFlags(from);
        }

        if (!isUndefined(from._locale)) {
          to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
          for (i = 0; i < momentProperties.length; i++) {
            prop = momentProperties[i];
            val = from[prop];

            if (!isUndefined(val)) {
              to[prop] = val;
            }
          }
        }

        return to;
      }

      var updateInProgress = false; // Moment prototype object

      function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);

        if (!this.isValid()) {
          this._d = new Date(NaN);
        } // Prevent infinite loop in case updateOffset creates new moment
        // objects.


        if (updateInProgress === false) {
          updateInProgress = true;
          hooks.updateOffset(this);
          updateInProgress = false;
        }
      }

      function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
      }

      function absFloor(number) {
        if (number < 0) {
          // -0 -> 0
          return Math.ceil(number) || 0;
        } else {
          return Math.floor(number);
        }
      }

      function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
          value = absFloor(coercedNumber);
        }

        return value;
      } // compare two arrays, return the number of differences


      function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;

        for (i = 0; i < len; i++) {
          if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
            diffs++;
          }
        }

        return diffs + lengthDiff;
      }

      function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
          console.warn('Deprecation warning: ' + msg);
        }
      }

      function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function () {
          if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
          }

          if (firstTime) {
            var args = [];
            var arg;

            for (var i = 0; i < arguments.length; i++) {
              arg = '';

              if (typeof arguments[i] === 'object') {
                arg += '\n[' + i + '] ';

                for (var key in arguments[0]) {
                  arg += key + ': ' + arguments[0][key] + ', ';
                }

                arg = arg.slice(0, -2); // Remove trailing comma and space
              } else {
                arg = arguments[i];
              }

              args.push(arg);
            }

            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + new Error().stack);
            firstTime = false;
          }

          return fn.apply(this, arguments);
        }, fn);
      }

      var deprecations = {};

      function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
          hooks.deprecationHandler(name, msg);
        }

        if (!deprecations[name]) {
          warn(msg);
          deprecations[name] = true;
        }
      }

      hooks.suppressDeprecationWarnings = false;
      hooks.deprecationHandler = null;

      function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
      }

      function set(config) {
        var prop, i;

        for (i in config) {
          prop = config[i];

          if (isFunction(prop)) {
            this[i] = prop;
          } else {
            this['_' + i] = prop;
          }
        }

        this._config = config; // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.

        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\d{1,2}/.source);
      }

      function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;

        for (prop in childConfig) {
          if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
              res[prop] = {};
              extend(res[prop], parentConfig[prop]);
              extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
              res[prop] = childConfig[prop];
            } else {
              delete res[prop];
            }
          }
        }

        for (prop in parentConfig) {
          if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
            // make sure changes to properties don't modify parent config
            res[prop] = extend({}, res[prop]);
          }
        }

        return res;
      }

      function Locale(config) {
        if (config != null) {
          this.set(config);
        }
      }

      var keys;

      if (Object.keys) {
        keys = Object.keys;
      } else {
        keys = function (obj) {
          var i,
              res = [];

          for (i in obj) {
            if (hasOwnProp(obj, i)) {
              res.push(i);
            }
          }

          return res;
        };
      }

      var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L'
      };

      function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
      }

      var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A'
      };

      function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
          return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
          return val.slice(1);
        });
        return this._longDateFormat[key];
      }

      var defaultInvalidDate = 'Invalid date';

      function invalidDate() {
        return this._invalidDate;
      }

      var defaultOrdinal = '%d';
      var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

      function ordinal(number) {
        return this._ordinal.replace('%d', number);
      }

      var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years'
      };

      function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
      }

      function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
      }

      var aliases = {};

      function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
      }

      function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
      }

      function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
          if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);

            if (normalizedProp) {
              normalizedInput[normalizedProp] = inputObject[prop];
            }
          }
        }

        return normalizedInput;
      }

      var priorities = {};

      function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
      }

      function getPrioritizedUnits(unitsObj) {
        var units = [];

        for (var u in unitsObj) {
          units.push({
            unit: u,
            priority: priorities[u]
          });
        }

        units.sort(function (a, b) {
          return a.priority - b.priority;
        });
        return units;
      }

      function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
      }

      var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
      var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
      var formatFunctions = {};
      var formatTokenFunctions = {}; // token:    'M'
      // padded:   ['MM', 2]
      // ordinal:  'Mo'
      // callback: function () { this.month() + 1 }

      function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;

        if (typeof callback === 'string') {
          func = function () {
            return this[callback]();
          };
        }

        if (token) {
          formatTokenFunctions[token] = func;
        }

        if (padded) {
          formatTokenFunctions[padded[0]] = function () {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
          };
        }

        if (ordinal) {
          formatTokenFunctions[ordinal] = function () {
            return this.localeData().ordinal(func.apply(this, arguments), token);
          };
        }
      }

      function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
          return input.replace(/^\[|\]$/g, '');
        }

        return input.replace(/\\/g, '');
      }

      function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
          if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
          } else {
            array[i] = removeFormattingTokens(array[i]);
          }
        }

        return function (mom) {
          var output = '',
              i;

          for (i = 0; i < length; i++) {
            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
          }

          return output;
        };
      } // format date using native date object


      function formatMoment(m, format) {
        if (!m.isValid()) {
          return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
        return formatFunctions[format](m);
      }

      function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
          return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;

        while (i >= 0 && localFormattingTokens.test(format)) {
          format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
          localFormattingTokens.lastIndex = 0;
          i -= 1;
        }

        return format;
      }

      var match1 = /\d/; //       0 - 9

      var match2 = /\d\d/; //      00 - 99

      var match3 = /\d{3}/; //     000 - 999

      var match4 = /\d{4}/; //    0000 - 9999

      var match6 = /[+-]?\d{6}/; // -999999 - 999999

      var match1to2 = /\d\d?/; //       0 - 99

      var match3to4 = /\d\d\d\d?/; //     999 - 9999

      var match5to6 = /\d\d\d\d\d\d?/; //   99999 - 999999

      var match1to3 = /\d{1,3}/; //       0 - 999

      var match1to4 = /\d{1,4}/; //       0 - 9999

      var match1to6 = /[+-]?\d{1,6}/; // -999999 - 999999

      var matchUnsigned = /\d+/; //       0 - inf

      var matchSigned = /[+-]?\d+/; //    -inf - inf

      var matchOffset = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

      var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

      var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
      // any word (or two) characters or numbers including two/three word month in arabic.
      // includes scottish gaelic two word and hyphenated months

      var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
      var regexes = {};

      function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
          return isStrict && strictRegex ? strictRegex : regex;
        };
      }

      function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
          return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
      } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript


      function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
          return p1 || p2 || p3 || p4;
        }));
      }

      function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
      }

      var tokens = {};

      function addParseToken(token, callback) {
        var i,
            func = callback;

        if (typeof token === 'string') {
          token = [token];
        }

        if (isNumber(callback)) {
          func = function (input, array) {
            array[callback] = toInt(input);
          };
        }

        for (i = 0; i < token.length; i++) {
          tokens[token[i]] = func;
        }
      }

      function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
          config._w = config._w || {};
          callback(input, config._w, config, token);
        });
      }

      function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
          tokens[token](input, config._a, config, token);
        }
      }

      var YEAR = 0;
      var MONTH = 1;
      var DATE = 2;
      var HOUR = 3;
      var MINUTE = 4;
      var SECOND = 5;
      var MILLISECOND = 6;
      var WEEK = 7;
      var WEEKDAY = 8; // FORMATTING

      addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
      });
      addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
      });
      addFormatToken(0, ['YYYY', 4], 0, 'year');
      addFormatToken(0, ['YYYYY', 5], 0, 'year');
      addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES

      addUnitAlias('year', 'y'); // PRIORITIES

      addUnitPriority('year', 1); // PARSING

      addRegexToken('Y', matchSigned);
      addRegexToken('YY', match1to2, match2);
      addRegexToken('YYYY', match1to4, match4);
      addRegexToken('YYYYY', match1to6, match6);
      addRegexToken('YYYYYY', match1to6, match6);
      addParseToken(['YYYYY', 'YYYYYY'], YEAR);
      addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
      });
      addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
      });
      addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
      }); // HELPERS

      function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
      }

      function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      } // HOOKS


      hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
      }; // MOMENTS


      var getSetYear = makeGetSet('FullYear', true);

      function getIsLeapYear() {
        return isLeapYear(this.year());
      }

      function makeGetSet(unit, keepTime) {
        return function (value) {
          if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
          } else {
            return get(this, unit);
          }
        };
      }

      function get(mom, unit) {
        return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
      }

      function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
          if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
          } else {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
          }
        }
      } // MOMENTS


      function stringGet(units) {
        units = normalizeUnits(units);

        if (isFunction(this[units])) {
          return this[units]();
        }

        return this;
      }

      function stringSet(units, value) {
        if (typeof units === 'object') {
          units = normalizeObjectUnits(units);
          var prioritized = getPrioritizedUnits(units);

          for (var i = 0; i < prioritized.length; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
          }
        } else {
          units = normalizeUnits(units);

          if (isFunction(this[units])) {
            return this[units](value);
          }
        }

        return this;
      }

      function mod(n, x) {
        return (n % x + x) % x;
      }

      var indexOf;

      if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
      } else {
        indexOf = function (o) {
          // I know
          var i;

          for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
              return i;
            }
          }

          return -1;
        };
      }

      function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
          return NaN;
        }

        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
      } // FORMATTING


      addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
      });
      addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
      });
      addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
      }); // ALIASES

      addUnitAlias('month', 'M'); // PRIORITY

      addUnitPriority('month', 8); // PARSING

      addRegexToken('M', match1to2);
      addRegexToken('MM', match1to2, match2);
      addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
      });
      addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
      });
      addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
      });
      addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.


        if (month != null) {
          array[MONTH] = month;
        } else {
          getParsingFlags(config).invalidMonth = input;
        }
      }); // LOCALES

      var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
      var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');

      function localeMonths(m, format) {
        if (!m) {
          return isArray(this._months) ? this._months : this._months['standalone'];
        }

        return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
      }

      var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');

      function localeMonthsShort(m, format) {
        if (!m) {
          return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];
        }

        return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
      }

      function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();

        if (!this._monthsParse) {
          // this is not used
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];

          for (i = 0; i < 12; ++i) {
            mom = createUTC([2000, i]);
            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
          }
        }

        if (strict) {
          if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }

      function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
          return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
        } // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse


        for (i = 0; i < 12; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, i]);

          if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
          }

          if (!strict && !this._monthsParse[i]) {
            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
          } // test the regex


          if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
            return i;
          } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
            return i;
          } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
          }
        }
      } // MOMENTS


      function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
          // No op
          return mom;
        }

        if (typeof value === 'string') {
          if (/^\d+$/.test(value)) {
            value = toInt(value);
          } else {
            value = mom.localeData().monthsParse(value); // TODO: Another silent failure?

            if (!isNumber(value)) {
              return mom;
            }
          }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));

        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);

        return mom;
      }

      function getSetMonth(value) {
        if (value != null) {
          setMonth(this, value);
          hooks.updateOffset(this, true);
          return this;
        } else {
          return get(this, 'Month');
        }
      }

      function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
      }

      var defaultMonthsShortRegex = matchWord;

      function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
          }

          if (isStrict) {
            return this._monthsShortStrictRegex;
          } else {
            return this._monthsShortRegex;
          }
        } else {
          if (!hasOwnProp(this, '_monthsShortRegex')) {
            this._monthsShortRegex = defaultMonthsShortRegex;
          }

          return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
      }

      var defaultMonthsRegex = matchWord;

      function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
          }

          if (isStrict) {
            return this._monthsStrictRegex;
          } else {
            return this._monthsRegex;
          }
        } else {
          if (!hasOwnProp(this, '_monthsRegex')) {
            this._monthsRegex = defaultMonthsRegex;
          }

          return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
        }
      }

      function computeMonthsParse() {
        function cmpLenRev(a, b) {
          return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;

        for (i = 0; i < 12; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, i]);
          shortPieces.push(this.monthsShort(mom, ''));
          longPieces.push(this.months(mom, ''));
          mixedPieces.push(this.months(mom, ''));
          mixedPieces.push(this.monthsShort(mom, ''));
        } // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.


        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        for (i = 0; i < 12; i++) {
          shortPieces[i] = regexEscape(shortPieces[i]);
          longPieces[i] = regexEscape(longPieces[i]);
        }

        for (i = 0; i < 24; i++) {
          mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
      }

      function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date; // the date constructor remaps years 0-99 to 1900-1999

        if (y < 100 && y >= 0) {
          // preserve leap years using a full 400 year cycle, then reset
          date = new Date(y + 400, m, d, h, M, s, ms);

          if (isFinite(date.getFullYear())) {
            date.setFullYear(y);
          }
        } else {
          date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
      }

      function createUTCDate(y) {
        var date; // the Date.UTC function remaps years 0-99 to 1900-1999

        if (y < 100 && y >= 0) {
          var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset

          args[0] = y + 400;
          date = new Date(Date.UTC.apply(null, args));

          if (isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
          }
        } else {
          date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
      } // start-of-first-week - start-of-year


      function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1;
      } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday


      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
          resYear = year - 1;
          resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
          resYear = year + 1;
          resDayOfYear = dayOfYear - daysInYear(year);
        } else {
          resYear = year;
          resDayOfYear = dayOfYear;
        }

        return {
          year: resYear,
          dayOfYear: resDayOfYear
        };
      }

      function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
          resYear = mom.year() - 1;
          resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
          resWeek = week - weeksInYear(mom.year(), dow, doy);
          resYear = mom.year() + 1;
        } else {
          resYear = mom.year();
          resWeek = week;
        }

        return {
          week: resWeek,
          year: resYear
        };
      }

      function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
      } // FORMATTING


      addFormatToken('w', ['ww', 2], 'wo', 'week');
      addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES

      addUnitAlias('week', 'w');
      addUnitAlias('isoWeek', 'W'); // PRIORITIES

      addUnitPriority('week', 5);
      addUnitPriority('isoWeek', 5); // PARSING

      addRegexToken('w', match1to2);
      addRegexToken('ww', match1to2, match2);
      addRegexToken('W', match1to2);
      addRegexToken('WW', match1to2, match2);
      addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
      }); // HELPERS
      // LOCALES

      function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
      }

      var defaultLocaleWeek = {
        dow: 0,
        // Sunday is the first day of the week.
        doy: 6 // The week that contains Jan 6th is the first week of the year.

      };

      function localeFirstDayOfWeek() {
        return this._week.dow;
      }

      function localeFirstDayOfYear() {
        return this._week.doy;
      } // MOMENTS


      function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
      }

      function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
      } // FORMATTING


      addFormatToken('d', 0, 'do', 'day');
      addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
      });
      addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
      });
      addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
      });
      addFormatToken('e', 0, 0, 'weekday');
      addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES

      addUnitAlias('day', 'd');
      addUnitAlias('weekday', 'e');
      addUnitAlias('isoWeekday', 'E'); // PRIORITY

      addUnitPriority('day', 11);
      addUnitPriority('weekday', 11);
      addUnitPriority('isoWeekday', 11); // PARSING

      addRegexToken('d', match1to2);
      addRegexToken('e', match1to2);
      addRegexToken('E', match1to2);
      addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
      });
      addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
      });
      addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
      });
      addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid


        if (weekday != null) {
          week.d = weekday;
        } else {
          getParsingFlags(config).invalidWeekday = input;
        }
      });
      addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
      }); // HELPERS

      function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
          return input;
        }

        if (!isNaN(input)) {
          return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);

        if (typeof input === 'number') {
          return input;
        }

        return null;
      }

      function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
          return locale.weekdaysParse(input) % 7 || 7;
        }

        return isNaN(input) ? null : input;
      } // LOCALES


      function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
      }

      var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');

      function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];
        return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
      }

      var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');

      function localeWeekdaysShort(m) {
        return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
      }

      var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');

      function localeWeekdaysMin(m) {
        return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
      }

      function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();

        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._minWeekdaysParse = [];

          for (i = 0; i < 7; ++i) {
            mom = createUTC([2000, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
          }
        }

        if (strict) {
          if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._shortWeekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._weekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._weekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }

      function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
          return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._minWeekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, 1]).day(i);

          if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
          }

          if (!this._weekdaysParse[i]) {
            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
          } // test the regex


          if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
          }
        }
      } // MOMENTS


      function getSetDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }

        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();

        if (input != null) {
          input = parseWeekday(input, this.localeData());
          return this.add(input - day, 'd');
        } else {
          return day;
        }
      }

      function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }

        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
      }

      function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        } // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.


        if (input != null) {
          var weekday = parseIsoWeekday(input, this.localeData());
          return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
          return this.day() || 7;
        }
      }

      var defaultWeekdaysRegex = matchWord;

      function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
          }

          if (isStrict) {
            return this._weekdaysStrictRegex;
          } else {
            return this._weekdaysRegex;
          }
        } else {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            this._weekdaysRegex = defaultWeekdaysRegex;
          }

          return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
      }

      var defaultWeekdaysShortRegex = matchWord;

      function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
          }

          if (isStrict) {
            return this._weekdaysShortStrictRegex;
          } else {
            return this._weekdaysShortRegex;
          }
        } else {
          if (!hasOwnProp(this, '_weekdaysShortRegex')) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
          }

          return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
      }

      var defaultWeekdaysMinRegex = matchWord;

      function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
          }

          if (isStrict) {
            return this._weekdaysMinStrictRegex;
          } else {
            return this._weekdaysMinRegex;
          }
        } else {
          if (!hasOwnProp(this, '_weekdaysMinRegex')) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
          }

          return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
      }

      function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
          return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;

        for (i = 0; i < 7; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, 1]).day(i);
          minp = this.weekdaysMin(mom, '');
          shortp = this.weekdaysShort(mom, '');
          longp = this.weekdays(mom, '');
          minPieces.push(minp);
          shortPieces.push(shortp);
          longPieces.push(longp);
          mixedPieces.push(minp);
          mixedPieces.push(shortp);
          mixedPieces.push(longp);
        } // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.


        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        for (i = 0; i < 7; i++) {
          shortPieces[i] = regexEscape(shortPieces[i]);
          longPieces[i] = regexEscape(longPieces[i]);
          mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
      } // FORMATTING


      function hFormat() {
        return this.hours() % 12 || 12;
      }

      function kFormat() {
        return this.hours() || 24;
      }

      addFormatToken('H', ['HH', 2], 0, 'hour');
      addFormatToken('h', ['hh', 2], 0, hFormat);
      addFormatToken('k', ['kk', 2], 0, kFormat);
      addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
      });
      addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
      });
      addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });

      function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
          return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
      }

      meridiem('a', true);
      meridiem('A', false); // ALIASES

      addUnitAlias('hour', 'h'); // PRIORITY

      addUnitPriority('hour', 13); // PARSING

      function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
      }

      addRegexToken('a', matchMeridiem);
      addRegexToken('A', matchMeridiem);
      addRegexToken('H', match1to2);
      addRegexToken('h', match1to2);
      addRegexToken('k', match1to2);
      addRegexToken('HH', match1to2, match2);
      addRegexToken('hh', match1to2, match2);
      addRegexToken('kk', match1to2, match2);
      addRegexToken('hmm', match3to4);
      addRegexToken('hmmss', match5to6);
      addRegexToken('Hmm', match3to4);
      addRegexToken('Hmmss', match5to6);
      addParseToken(['H', 'HH'], HOUR);
      addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
      });
      addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
      });
      addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
      });
      addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
      });
      addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
      });
      addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
      });
      addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
      }); // LOCALES

      function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
      }

      var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;

      function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
          return isLower ? 'pm' : 'PM';
        } else {
          return isLower ? 'am' : 'AM';
        }
      } // MOMENTS
      // Setting the hour should keep the time, because the user explicitly
      // specified which hour they want. So trying to maintain the same hour (in
      // a new timezone) makes sense. Adding/subtracting hours does not follow
      // this rule.


      var getSetHour = makeGetSet('Hours', true);
      var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,
        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,
        week: defaultLocaleWeek,
        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,
        meridiemParse: defaultLocaleMeridiemParse
      }; // internal storage for locale config files

      var locales = {};
      var localeFamilies = {};
      var globalLocale;

      function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
      } // pick the locale from the array
      // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
      // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root


      function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
          split = normalizeLocale(names[i]).split('-');
          j = split.length;
          next = normalizeLocale(names[i + 1]);
          next = next ? next.split('-') : null;

          while (j > 0) {
            locale = loadLocale(split.slice(0, j).join('-'));

            if (locale) {
              return locale;
            }

            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
              //the next array item is better than a shallower substring of this one
              break;
            }

            j--;
          }

          i++;
        }

        return globalLocale;
      }

      function loadLocale(name) {
        var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node

        if (!locales[name] && 'object' !== 'undefined' && module && module.exports) {
          try {
            oldLocale = globalLocale._abbr;
            var aliasedRequire = commonjsRequire;
            aliasedRequire('./locale/' + name);
            getSetGlobalLocale(oldLocale);
          } catch (e) {}
        }

        return locales[name];
      } // This function will load locale and then set the global locale.  If
      // no arguments are passed in, it will simply return the current global
      // locale key.


      function getSetGlobalLocale(key, values) {
        var data;

        if (key) {
          if (isUndefined(values)) {
            data = getLocale(key);
          } else {
            data = defineLocale(key, values);
          }

          if (data) {
            // moment.duration._locale = moment._locale = data;
            globalLocale = data;
          } else {
            if (typeof console !== 'undefined' && console.warn) {
              //warn user if arguments are passed but the locale could not be set
              console.warn('Locale ' + key + ' not found. Did you forget to load it?');
            }
          }
        }

        return globalLocale._abbr;
      }

      function defineLocale(name, config) {
        if (config !== null) {
          var locale,
              parentConfig = baseConfig;
          config.abbr = name;

          if (locales[name] != null) {
            deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
            parentConfig = locales[name]._config;
          } else if (config.parentLocale != null) {
            if (locales[config.parentLocale] != null) {
              parentConfig = locales[config.parentLocale]._config;
            } else {
              locale = loadLocale(config.parentLocale);

              if (locale != null) {
                parentConfig = locale._config;
              } else {
                if (!localeFamilies[config.parentLocale]) {
                  localeFamilies[config.parentLocale] = [];
                }

                localeFamilies[config.parentLocale].push({
                  name: name,
                  config: config
                });
                return null;
              }
            }
          }

          locales[name] = new Locale(mergeConfigs(parentConfig, config));

          if (localeFamilies[name]) {
            localeFamilies[name].forEach(function (x) {
              defineLocale(x.name, x.config);
            });
          } // backwards compat for now: also set the locale
          // make sure we set the locale AFTER all child locales have been
          // created, so we won't end up with the child locale set.


          getSetGlobalLocale(name);
          return locales[name];
        } else {
          // useful for testing
          delete locales[name];
          return null;
        }
      }

      function updateLocale(name, config) {
        if (config != null) {
          var locale,
              tmpLocale,
              parentConfig = baseConfig; // MERGE

          tmpLocale = loadLocale(name);

          if (tmpLocale != null) {
            parentConfig = tmpLocale._config;
          }

          config = mergeConfigs(parentConfig, config);
          locale = new Locale(config);
          locale.parentLocale = locales[name];
          locales[name] = locale; // backwards compat for now: also set the locale

          getSetGlobalLocale(name);
        } else {
          // pass null for config to unupdate, useful for tests
          if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
              locales[name] = locales[name].parentLocale;
            } else if (locales[name] != null) {
              delete locales[name];
            }
          }
        }

        return locales[name];
      } // returns locale data


      function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
          key = key._locale._abbr;
        }

        if (!key) {
          return globalLocale;
        }

        if (!isArray(key)) {
          //short-circuit everything else
          locale = loadLocale(key);

          if (locale) {
            return locale;
          }

          key = [key];
        }

        return chooseLocale(key);
      }

      function listLocales() {
        return keys(locales);
      }

      function checkOverflow(m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
          overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;

          if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
          }

          if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
          }

          if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
          }

          getParsingFlags(m).overflow = overflow;
        }

        return m;
      } // Pick the first defined of two or three arguments.


      function defaults(a, b, c) {
        if (a != null) {
          return a;
        }

        if (b != null) {
          return b;
        }

        return c;
      }

      function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());

        if (config._useUTC) {
          return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }

        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
      } // convert an array to a date.
      // the array should mirror the parameters below
      // note: all values past the year are optional and will default to the lowest possible value.
      // [year, month, day , hour, minute, second, millisecond]


      function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
          return;
        }

        currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays

        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
          dayOfYearFromWeekInfo(config);
        } //if the day of the year is set, figure out what it is


        if (config._dayOfYear != null) {
          yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

          if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
            getParsingFlags(config)._overflowDayOfYear = true;
          }

          date = createUTCDate(yearToUse, 0, config._dayOfYear);
          config._a[MONTH] = date.getUTCMonth();
          config._a[DATE] = date.getUTCDate();
        } // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything


        for (i = 0; i < 3 && config._a[i] == null; ++i) {
          config._a[i] = input[i] = currentDate[i];
        } // Zero out whatever was not defaulted, including time


        for (; i < 7; i++) {
          config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
        } // Check for 24:00:00.000


        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
          config._nextDay = true;
          config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.

        if (config._tzm != null) {
          config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
          config._a[HOUR] = 24;
        } // check for mismatching day of week


        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
          getParsingFlags(config).weekdayMismatch = true;
        }
      }

      function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
        w = config._w;

        if (w.GG != null || w.W != null || w.E != null) {
          dow = 1;
          doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on
          // how we interpret now (local, utc, fixed offset). So create
          // a now version of current config (take local/utc/offset flags, and
          // create now).

          weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
          week = defaults(w.W, 1);
          weekday = defaults(w.E, 1);

          if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
          }
        } else {
          dow = config._locale._week.dow;
          doy = config._locale._week.doy;
          var curWeek = weekOfYear(createLocal(), dow, doy);
          weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.

          week = defaults(w.w, curWeek.week);

          if (w.d != null) {
            // weekday -- low day numbers are considered next week
            weekday = w.d;

            if (weekday < 0 || weekday > 6) {
              weekdayOverflow = true;
            }
          } else if (w.e != null) {
            // local weekday -- counting starts from beginning of week
            weekday = w.e + dow;

            if (w.e < 0 || w.e > 6) {
              weekdayOverflow = true;
            }
          } else {
            // default to beginning of week
            weekday = dow;
          }
        }

        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
          getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
          getParsingFlags(config)._overflowWeekday = true;
        } else {
          temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
          config._a[YEAR] = temp.year;
          config._dayOfYear = temp.dayOfYear;
        }
      } // iso 8601 regex
      // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)


      var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
      var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
      var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
      var isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, false], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, false], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], // YYYYMM is NOT allowed by the standard
      ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, false], ['YYYYDDD', /\d{7}/]]; // iso time formats and regexes

      var isoTimes = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]];
      var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i; // date from iso format

      function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
          getParsingFlags(config).iso = true;

          for (i = 0, l = isoDates.length; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
              dateFormat = isoDates[i][0];
              allowTime = isoDates[i][2] !== false;
              break;
            }
          }

          if (dateFormat == null) {
            config._isValid = false;
            return;
          }

          if (match[3]) {
            for (i = 0, l = isoTimes.length; i < l; i++) {
              if (isoTimes[i][1].exec(match[3])) {
                // match[2] should be 'T' or space
                timeFormat = (match[2] || ' ') + isoTimes[i][0];
                break;
              }
            }

            if (timeFormat == null) {
              config._isValid = false;
              return;
            }
          }

          if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
          }

          if (match[4]) {
            if (tzRegex.exec(match[4])) {
              tzFormat = 'Z';
            } else {
              config._isValid = false;
              return;
            }
          }

          config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
          configFromStringAndFormat(config);
        } else {
          config._isValid = false;
        }
      } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3


      var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

      function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];

        if (secondStr) {
          result.push(parseInt(secondStr, 10));
        }

        return result;
      }

      function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);

        if (year <= 49) {
          return 2000 + year;
        } else if (year <= 999) {
          return 1900 + year;
        }

        return year;
      }

      function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
      }

      function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
          // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
          var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
              weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();

          if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config).weekdayMismatch = true;
            config._isValid = false;
            return false;
          }
        }

        return true;
      }

      var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
      };

      function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
          return obsOffsets[obsOffset];
        } else if (militaryOffset) {
          // the only allowed military tz is Z
          return 0;
        } else {
          var hm = parseInt(numOffset, 10);
          var m = hm % 100,
              h = (hm - m) / 100;
          return h * 60 + m;
        }
      } // date and time from ref 2822 format


      function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));

        if (match) {
          var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);

          if (!checkWeekday(match[1], parsedArray, config)) {
            return;
          }

          config._a = parsedArray;
          config._tzm = calculateOffset(match[8], match[9], match[10]);
          config._d = createUTCDate.apply(null, config._a);

          config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

          getParsingFlags(config).rfc2822 = true;
        } else {
          config._isValid = false;
        }
      } // date from iso format or fallback


      function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
          config._d = new Date(+matched[1]);
          return;
        }

        configFromISO(config);

        if (config._isValid === false) {
          delete config._isValid;
        } else {
          return;
        }

        configFromRFC2822(config);

        if (config._isValid === false) {
          delete config._isValid;
        } else {
          return;
        } // Final attempt, use Input Fallback


        hooks.createFromInputFallback(config);
      }

      hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
      }); // constant that refers to the ISO standard

      hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form


      hooks.RFC_2822 = function () {}; // date from string and format string


      function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
          configFromISO(config);
          return;
        }

        if (config._f === hooks.RFC_2822) {
          configFromRFC2822(config);
          return;
        }

        config._a = [];
        getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`

        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;
        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
          token = tokens[i];
          parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,
          //         'regex', getParseRegexForToken(token, config));

          if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));

            if (skipped.length > 0) {
              getParsingFlags(config).unusedInput.push(skipped);
            }

            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
          } // don't parse if it's not a known token


          if (formatTokenFunctions[token]) {
            if (parsedInput) {
              getParsingFlags(config).empty = false;
            } else {
              getParsingFlags(config).unusedTokens.push(token);
            }

            addTimeToArrayFromToken(token, parsedInput, config);
          } else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token);
          }
        } // add remaining unparsed input length to the string


        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;

        if (string.length > 0) {
          getParsingFlags(config).unusedInput.push(string);
        } // clear _12h flag if hour is <= 12


        if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
          getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem; // handle meridiem

        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
        configFromArray(config);
        checkOverflow(config);
      }

      function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
          // nothing to do
          return hour;
        }

        if (locale.meridiemHour != null) {
          return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
          // Fallback
          isPm = locale.isPM(meridiem);

          if (isPm && hour < 12) {
            hour += 12;
          }

          if (!isPm && hour === 12) {
            hour = 0;
          }

          return hour;
        } else {
          // this is not supposed to happen
          return hour;
        }
      } // date from string and array of format strings


      function configFromStringAndArray(config) {
        var tempConfig, bestMoment, scoreToBeat, i, currentScore;

        if (config._f.length === 0) {
          getParsingFlags(config).invalidFormat = true;
          config._d = new Date(NaN);
          return;
        }

        for (i = 0; i < config._f.length; i++) {
          currentScore = 0;
          tempConfig = copyConfig({}, config);

          if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
          }

          tempConfig._f = config._f[i];
          configFromStringAndFormat(tempConfig);

          if (!isValid(tempConfig)) {
            continue;
          } // if there is any input that was not parsed add a penalty for that format


          currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens

          currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
          getParsingFlags(tempConfig).score = currentScore;

          if (scoreToBeat == null || currentScore < scoreToBeat) {
            scoreToBeat = currentScore;
            bestMoment = tempConfig;
          }
        }

        extend(config, bestMoment || tempConfig);
      }

      function configFromObject(config) {
        if (config._d) {
          return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
          return obj && parseInt(obj, 10);
        });
        configFromArray(config);
      }

      function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));

        if (res._nextDay) {
          // Adding is smart enough around DST
          res.add(1, 'd');
          res._nextDay = undefined;
        }

        return res;
      }

      function prepareConfig(config) {
        var input = config._i,
            format = config._f;
        config._locale = config._locale || getLocale(config._l);

        if (input === null || format === undefined && input === '') {
          return createInvalid({
            nullInput: true
          });
        }

        if (typeof input === 'string') {
          config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
          return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
          config._d = input;
        } else if (isArray(format)) {
          configFromStringAndArray(config);
        } else if (format) {
          configFromStringAndFormat(config);
        } else {
          configFromInput(config);
        }

        if (!isValid(config)) {
          config._d = null;
        }

        return config;
      }

      function configFromInput(config) {
        var input = config._i;

        if (isUndefined(input)) {
          config._d = new Date(hooks.now());
        } else if (isDate(input)) {
          config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
          configFromString(config);
        } else if (isArray(input)) {
          config._a = map(input.slice(0), function (obj) {
            return parseInt(obj, 10);
          });
          configFromArray(config);
        } else if (isObject(input)) {
          configFromObject(config);
        } else if (isNumber(input)) {
          // from milliseconds
          config._d = new Date(input);
        } else {
          hooks.createFromInputFallback(config);
        }
      }

      function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
          strict = locale;
          locale = undefined;
        }

        if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
          input = undefined;
        } // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423


        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;
        return createFromConfig(c);
      }

      function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
      }

      var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);

        if (this.isValid() && other.isValid()) {
          return other < this ? this : other;
        } else {
          return createInvalid();
        }
      });
      var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);

        if (this.isValid() && other.isValid()) {
          return other > this ? this : other;
        } else {
          return createInvalid();
        }
      }); // Pick a moment m from moments so that m[fn](other) is true for all
      // other. This relies on the function fn to be transitive.
      //
      // moments should either be an array of moment objects or an array, whose
      // first element is an array of moment objects.

      function pickBy(fn, moments) {
        var res, i;

        if (moments.length === 1 && isArray(moments[0])) {
          moments = moments[0];
        }

        if (!moments.length) {
          return createLocal();
        }

        res = moments[0];

        for (i = 1; i < moments.length; ++i) {
          if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
          }
        }

        return res;
      } // TODO: Use [].sort instead?


      function min() {
        var args = [].slice.call(arguments, 0);
        return pickBy('isBefore', args);
      }

      function max() {
        var args = [].slice.call(arguments, 0);
        return pickBy('isAfter', args);
      }

      var now = function () {
        return Date.now ? Date.now() : +new Date();
      };

      var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

      function isDurationValid(m) {
        for (var key in m) {
          if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
          }
        }

        var unitHasDecimal = false;

        for (var i = 0; i < ordering.length; ++i) {
          if (m[ordering[i]]) {
            if (unitHasDecimal) {
              return false; // only allow non-integers for smallest unit
            }

            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
              unitHasDecimal = true;
            }
          }
        }

        return true;
      }

      function isValid$1() {
        return this._isValid;
      }

      function createInvalid$1() {
        return createDuration(NaN);
      }

      function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;
        this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove

        this._milliseconds = +milliseconds + seconds * 1e3 + // 1000
        minutes * 6e4 + // 1000 * 60
        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately

        this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.

        this._months = +months + quarters * 3 + years * 12;
        this._data = {};
        this._locale = getLocale();

        this._bubble();
      }

      function isDuration(obj) {
        return obj instanceof Duration;
      }

      function absRound(number) {
        if (number < 0) {
          return Math.round(-1 * number) * -1;
        } else {
          return Math.round(number);
        }
      } // FORMATTING


      function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
          var offset = this.utcOffset();
          var sign = '+';

          if (offset < 0) {
            offset = -offset;
            sign = '-';
          }

          return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);
        });
      }

      offset('Z', ':');
      offset('ZZ', ''); // PARSING

      addRegexToken('Z', matchShortOffset);
      addRegexToken('ZZ', matchShortOffset);
      addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
      }); // HELPERS
      // timezone chunker
      // '+10:00' > ['10',  '00']
      // '-1530'  > ['-15', '30']

      var chunkOffset = /([\+\-]|\d\d)/gi;

      function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
          return null;
        }

        var chunk = matches[matches.length - 1] || [];
        var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);
        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
      } // Return a moment from input, that is local/utc/zone equivalent to model.


      function cloneWithOffset(input, model) {
        var res, diff;

        if (model._isUTC) {
          res = model.clone();
          diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.

          res._d.setTime(res._d.valueOf() + diff);

          hooks.updateOffset(res, false);
          return res;
        } else {
          return createLocal(input).local();
        }
      }

      function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
      } // HOOKS
      // This function will be called whenever a moment is mutated.
      // It is intended to keep the offset in sync with the timezone.


      hooks.updateOffset = function () {}; // MOMENTS
      // keepLocalTime = true means only change the timezone, without
      // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
      // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
      // +0200, so we adjust the time as needed, to be valid.
      //
      // Keeping the time actually adds/subtracts (one hour)
      // from the actual represented time. That is why we call updateOffset
      // a second time. In case it wants us to change the offset again
      // _changeInProgress == true case, then we have to adjust, because
      // there is no such time in the given timezone.


      function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;

        if (!this.isValid()) {
          return input != null ? this : NaN;
        }

        if (input != null) {
          if (typeof input === 'string') {
            input = offsetFromString(matchShortOffset, input);

            if (input === null) {
              return this;
            }
          } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
          }

          if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
          }

          this._offset = input;
          this._isUTC = true;

          if (localAdjust != null) {
            this.add(localAdjust, 'm');
          }

          if (offset !== input) {
            if (!keepLocalTime || this._changeInProgress) {
              addSubtract(this, createDuration(input - offset, 'm'), 1, false);
            } else if (!this._changeInProgress) {
              this._changeInProgress = true;
              hooks.updateOffset(this, true);
              this._changeInProgress = null;
            }
          }

          return this;
        } else {
          return this._isUTC ? offset : getDateOffset(this);
        }
      }

      function getSetZone(input, keepLocalTime) {
        if (input != null) {
          if (typeof input !== 'string') {
            input = -input;
          }

          this.utcOffset(input, keepLocalTime);
          return this;
        } else {
          return -this.utcOffset();
        }
      }

      function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
      }

      function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
          this.utcOffset(0, keepLocalTime);
          this._isUTC = false;

          if (keepLocalTime) {
            this.subtract(getDateOffset(this), 'm');
          }
        }

        return this;
      }

      function setOffsetToParsedOffset() {
        if (this._tzm != null) {
          this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
          var tZone = offsetFromString(matchOffset, this._i);

          if (tZone != null) {
            this.utcOffset(tZone);
          } else {
            this.utcOffset(0, true);
          }
        }

        return this;
      }

      function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
          return false;
        }

        input = input ? createLocal(input).utcOffset() : 0;
        return (this.utcOffset() - input) % 60 === 0;
      }

      function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
      }

      function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
          return this._isDSTShifted;
        }

        var c = {};
        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
          var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
          this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
          this._isDSTShifted = false;
        }

        return this._isDSTShifted;
      }

      function isLocal() {
        return this.isValid() ? !this._isUTC : false;
      }

      function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
      }

      function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
      } // ASP.NET json date format regex


      var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
      // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
      // and further modified to allow for strings containing both week and day

      var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

      function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
        match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
          duration = {
            ms: input._milliseconds,
            d: input._days,
            M: input._months
          };
        } else if (isNumber(input)) {
          duration = {};

          if (key) {
            duration[key] = input;
          } else {
            duration.milliseconds = input;
          }
        } else if (!!(match = aspNetRegex.exec(input))) {
          sign = match[1] === '-' ? -1 : 1;
          duration = {
            y: 0,
            d: toInt(match[DATE]) * sign,
            h: toInt(match[HOUR]) * sign,
            m: toInt(match[MINUTE]) * sign,
            s: toInt(match[SECOND]) * sign,
            ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match

          };
        } else if (!!(match = isoRegex.exec(input))) {
          sign = match[1] === '-' ? -1 : 1;
          duration = {
            y: parseIso(match[2], sign),
            M: parseIso(match[3], sign),
            w: parseIso(match[4], sign),
            d: parseIso(match[5], sign),
            h: parseIso(match[6], sign),
            m: parseIso(match[7], sign),
            s: parseIso(match[8], sign)
          };
        } else if (duration == null) {
          // checks for null or undefined
          duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
          diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
          duration = {};
          duration.ms = diffRes.milliseconds;
          duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
          ret._locale = input._locale;
        }

        return ret;
      }

      createDuration.fn = Duration.prototype;
      createDuration.invalid = createInvalid$1;

      function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it

        return (isNaN(res) ? 0 : res) * sign;
      }

      function positiveMomentsDifference(base, other) {
        var res = {};
        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;

        if (base.clone().add(res.months, 'M').isAfter(other)) {
          --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');
        return res;
      }

      function momentsDifference(base, other) {
        var res;

        if (!(base.isValid() && other.isValid())) {
          return {
            milliseconds: 0,
            months: 0
          };
        }

        other = cloneWithOffset(other, base);

        if (base.isBefore(other)) {
          res = positiveMomentsDifference(base, other);
        } else {
          res = positiveMomentsDifference(other, base);
          res.milliseconds = -res.milliseconds;
          res.months = -res.months;
        }

        return res;
      } // TODO: remove 'name' arg after deprecation is removed


      function createAdder(direction, name) {
        return function (val, period) {
          var dur, tmp; //invert the arguments, but complain about it

          if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
            tmp = val;
            val = period;
            period = tmp;
          }

          val = typeof val === 'string' ? +val : val;
          dur = createDuration(val, period);
          addSubtract(this, dur, direction);
          return this;
        };
      }

      function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
          // No op
          return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
          setMonth(mom, get(mom, 'Month') + months * isAdding);
        }

        if (days) {
          set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }

        if (milliseconds) {
          mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }

        if (updateOffset) {
          hooks.updateOffset(mom, days || months);
        }
      }

      var add = createAdder(1, 'add');
      var subtract = createAdder(-1, 'subtract');

      function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
      }

      function calendar$1(time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';
        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
      }

      function clone() {
        return new Moment(this);
      }

      function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);

        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }

        units = normalizeUnits(units) || 'millisecond';

        if (units === 'millisecond') {
          return this.valueOf() > localInput.valueOf();
        } else {
          return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
      }

      function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);

        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }

        units = normalizeUnits(units) || 'millisecond';

        if (units === 'millisecond') {
          return this.valueOf() < localInput.valueOf();
        } else {
          return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
      }

      function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);

        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
          return false;
        }

        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
      }

      function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;

        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }

        units = normalizeUnits(units) || 'millisecond';

        if (units === 'millisecond') {
          return this.valueOf() === localInput.valueOf();
        } else {
          inputMs = localInput.valueOf();
          return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
      }

      function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
      }

      function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
      }

      function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
          return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
          return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
        units = normalizeUnits(units);

        switch (units) {
          case 'year':
            output = monthDiff(this, that) / 12;
            break;

          case 'month':
            output = monthDiff(this, that);
            break;

          case 'quarter':
            output = monthDiff(this, that) / 3;
            break;

          case 'second':
            output = (this - that) / 1e3;
            break;
          // 1000

          case 'minute':
            output = (this - that) / 6e4;
            break;
          // 1000 * 60

          case 'hour':
            output = (this - that) / 36e5;
            break;
          // 1000 * 60 * 60

          case 'day':
            output = (this - that - zoneDelta) / 864e5;
            break;
          // 1000 * 60 * 60 * 24, negate dst

          case 'week':
            output = (this - that - zoneDelta) / 6048e5;
            break;
          // 1000 * 60 * 60 * 24 * 7, negate dst

          default:
            output = this - that;
        }

        return asFloat ? output : absFloor(output);
      }

      function monthDiff(a, b) {
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
        anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
          anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month

          adjust = (b - anchor) / (anchor - anchor2);
        } else {
          anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month

          adjust = (b - anchor) / (anchor2 - anchor);
        } //check for negative zero, return zero if negative zero


        return -(wholeMonthDiff + adjust) || 0;
      }

      hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
      hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

      function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
      }

      function toISOString(keepOffset) {
        if (!this.isValid()) {
          return null;
        }

        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;

        if (m.year() < 0 || m.year() > 9999) {
          return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }

        if (isFunction(Date.prototype.toISOString)) {
          // native implementation is ~50x faster, use it when we can
          if (utc) {
            return this.toDate().toISOString();
          } else {
            return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
          }
        }

        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
      }
      /**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */


      function inspect() {
        if (!this.isValid()) {
          return 'moment.invalid(/* ' + this._i + ' */)';
        }

        var func = 'moment';
        var zone = '';

        if (!this.isLocal()) {
          func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
          zone = 'Z';
        }

        var prefix = '[' + func + '("]';
        var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';
        return this.format(prefix + year + datetime + suffix);
      }

      function format(inputString) {
        if (!inputString) {
          inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }

        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
      }

      function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({
            to: this,
            from: time
          }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }

      function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
      }

      function to(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({
            from: this,
            to: time
          }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }

      function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
      } // If passed a locale key, it will set the locale for this
      // instance.  Otherwise, it will return the locale configuration
      // variables for this instance.


      function locale(key) {
        var newLocaleData;

        if (key === undefined) {
          return this._locale._abbr;
        } else {
          newLocaleData = getLocale(key);

          if (newLocaleData != null) {
            this._locale = newLocaleData;
          }

          return this;
        }
      }

      var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
        if (key === undefined) {
          return this.localeData();
        } else {
          return this.locale(key);
        }
      });

      function localeData() {
        return this._locale;
      }

      var MS_PER_SECOND = 1000;
      var MS_PER_MINUTE = 60 * MS_PER_SECOND;
      var MS_PER_HOUR = 60 * MS_PER_MINUTE;
      var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):

      function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
      }

      function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
          // preserve leap years using a full 400 year cycle, then reset
          return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
          return new Date(y, m, d).valueOf();
        }
      }

      function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
          // preserve leap years using a full 400 year cycle, then reset
          return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
          return Date.UTC(y, m, d);
        }
      }

      function startOf(units) {
        var time;
        units = normalizeUnits(units);

        if (units === undefined || units === 'millisecond' || !this.isValid()) {
          return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
          case 'year':
            time = startOfDate(this.year(), 0, 1);
            break;

          case 'quarter':
            time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
            break;

          case 'month':
            time = startOfDate(this.year(), this.month(), 1);
            break;

          case 'week':
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
            break;

          case 'isoWeek':
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
            break;

          case 'day':
          case 'date':
            time = startOfDate(this.year(), this.month(), this.date());
            break;

          case 'hour':
            time = this._d.valueOf();
            time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
            break;

          case 'minute':
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_MINUTE);
            break;

          case 'second':
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_SECOND);
            break;
        }

        this._d.setTime(time);

        hooks.updateOffset(this, true);
        return this;
      }

      function endOf(units) {
        var time;
        units = normalizeUnits(units);

        if (units === undefined || units === 'millisecond' || !this.isValid()) {
          return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
          case 'year':
            time = startOfDate(this.year() + 1, 0, 1) - 1;
            break;

          case 'quarter':
            time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
            break;

          case 'month':
            time = startOfDate(this.year(), this.month() + 1, 1) - 1;
            break;

          case 'week':
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
            break;

          case 'isoWeek':
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
            break;

          case 'day':
          case 'date':
            time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
            break;

          case 'hour':
            time = this._d.valueOf();
            time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
            break;

          case 'minute':
            time = this._d.valueOf();
            time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
            break;

          case 'second':
            time = this._d.valueOf();
            time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
            break;
        }

        this._d.setTime(time);

        hooks.updateOffset(this, true);
        return this;
      }

      function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
      }

      function unix() {
        return Math.floor(this.valueOf() / 1000);
      }

      function toDate() {
        return new Date(this.valueOf());
      }

      function toArray() {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
      }

      function toObject() {
        var m = this;
        return {
          years: m.year(),
          months: m.month(),
          date: m.date(),
          hours: m.hours(),
          minutes: m.minutes(),
          seconds: m.seconds(),
          milliseconds: m.milliseconds()
        };
      }

      function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
      }

      function isValid$2() {
        return isValid(this);
      }

      function parsingFlags() {
        return extend({}, getParsingFlags(this));
      }

      function invalidAt() {
        return getParsingFlags(this).overflow;
      }

      function creationData() {
        return {
          input: this._i,
          format: this._f,
          locale: this._locale,
          isUTC: this._isUTC,
          strict: this._strict
        };
      } // FORMATTING


      addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
      });
      addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
      });

      function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
      }

      addWeekYearFormatToken('gggg', 'weekYear');
      addWeekYearFormatToken('ggggg', 'weekYear');
      addWeekYearFormatToken('GGGG', 'isoWeekYear');
      addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES

      addUnitAlias('weekYear', 'gg');
      addUnitAlias('isoWeekYear', 'GG'); // PRIORITY

      addUnitPriority('weekYear', 1);
      addUnitPriority('isoWeekYear', 1); // PARSING

      addRegexToken('G', matchSigned);
      addRegexToken('g', matchSigned);
      addRegexToken('GG', match1to2, match2);
      addRegexToken('gg', match1to2, match2);
      addRegexToken('GGGG', match1to4, match4);
      addRegexToken('gggg', match1to4, match4);
      addRegexToken('GGGGG', match1to6, match6);
      addRegexToken('ggggg', match1to6, match6);
      addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
      });
      addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
      }); // MOMENTS

      function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
      }

      function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
      }

      function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
      }

      function getWeeksInYear() {
        var weekInfo = this.localeData()._week;

        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
      }

      function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;

        if (input == null) {
          return weekOfYear(this, dow, doy).year;
        } else {
          weeksTarget = weeksInYear(input, dow, doy);

          if (week > weeksTarget) {
            week = weeksTarget;
          }

          return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
      }

      function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
      } // FORMATTING


      addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES

      addUnitAlias('quarter', 'Q'); // PRIORITY

      addUnitPriority('quarter', 7); // PARSING

      addRegexToken('Q', match1);
      addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
      }); // MOMENTS

      function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
      } // FORMATTING


      addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES

      addUnitAlias('date', 'D'); // PRIORITY

      addUnitPriority('date', 9); // PARSING

      addRegexToken('D', match1to2);
      addRegexToken('DD', match1to2, match2);
      addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;
      });
      addParseToken(['D', 'DD'], DATE);
      addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
      }); // MOMENTS

      var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING

      addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES

      addUnitAlias('dayOfYear', 'DDD'); // PRIORITY

      addUnitPriority('dayOfYear', 4); // PARSING

      addRegexToken('DDD', match1to3);
      addRegexToken('DDDD', match3);
      addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
      }); // HELPERS
      // MOMENTS

      function getSetDayOfYear(input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
      } // FORMATTING


      addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES

      addUnitAlias('minute', 'm'); // PRIORITY

      addUnitPriority('minute', 14); // PARSING

      addRegexToken('m', match1to2);
      addRegexToken('mm', match1to2, match2);
      addParseToken(['m', 'mm'], MINUTE); // MOMENTS

      var getSetMinute = makeGetSet('Minutes', false); // FORMATTING

      addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES

      addUnitAlias('second', 's'); // PRIORITY

      addUnitPriority('second', 15); // PARSING

      addRegexToken('s', match1to2);
      addRegexToken('ss', match1to2, match2);
      addParseToken(['s', 'ss'], SECOND); // MOMENTS

      var getSetSecond = makeGetSet('Seconds', false); // FORMATTING

      addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
      });
      addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
      });
      addFormatToken(0, ['SSS', 3], 0, 'millisecond');
      addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
      });
      addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
      });
      addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
      });
      addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
      });
      addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
      });
      addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
      }); // ALIASES

      addUnitAlias('millisecond', 'ms'); // PRIORITY

      addUnitPriority('millisecond', 16); // PARSING

      addRegexToken('S', match1to3, match1);
      addRegexToken('SS', match1to3, match2);
      addRegexToken('SSS', match1to3, match3);
      var token;

      for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
      }

      function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
      }

      for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
      } // MOMENTS


      var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING

      addFormatToken('z', 0, 0, 'zoneAbbr');
      addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS

      function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
      }

      function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
      }

      var proto = Moment.prototype;
      proto.add = add;
      proto.calendar = calendar$1;
      proto.clone = clone;
      proto.diff = diff;
      proto.endOf = endOf;
      proto.format = format;
      proto.from = from;
      proto.fromNow = fromNow;
      proto.to = to;
      proto.toNow = toNow;
      proto.get = stringGet;
      proto.invalidAt = invalidAt;
      proto.isAfter = isAfter;
      proto.isBefore = isBefore;
      proto.isBetween = isBetween;
      proto.isSame = isSame;
      proto.isSameOrAfter = isSameOrAfter;
      proto.isSameOrBefore = isSameOrBefore;
      proto.isValid = isValid$2;
      proto.lang = lang;
      proto.locale = locale;
      proto.localeData = localeData;
      proto.max = prototypeMax;
      proto.min = prototypeMin;
      proto.parsingFlags = parsingFlags;
      proto.set = stringSet;
      proto.startOf = startOf;
      proto.subtract = subtract;
      proto.toArray = toArray;
      proto.toObject = toObject;
      proto.toDate = toDate;
      proto.toISOString = toISOString;
      proto.inspect = inspect;
      proto.toJSON = toJSON;
      proto.toString = toString;
      proto.unix = unix;
      proto.valueOf = valueOf;
      proto.creationData = creationData;
      proto.year = getSetYear;
      proto.isLeapYear = getIsLeapYear;
      proto.weekYear = getSetWeekYear;
      proto.isoWeekYear = getSetISOWeekYear;
      proto.quarter = proto.quarters = getSetQuarter;
      proto.month = getSetMonth;
      proto.daysInMonth = getDaysInMonth;
      proto.week = proto.weeks = getSetWeek;
      proto.isoWeek = proto.isoWeeks = getSetISOWeek;
      proto.weeksInYear = getWeeksInYear;
      proto.isoWeeksInYear = getISOWeeksInYear;
      proto.date = getSetDayOfMonth;
      proto.day = proto.days = getSetDayOfWeek;
      proto.weekday = getSetLocaleDayOfWeek;
      proto.isoWeekday = getSetISODayOfWeek;
      proto.dayOfYear = getSetDayOfYear;
      proto.hour = proto.hours = getSetHour;
      proto.minute = proto.minutes = getSetMinute;
      proto.second = proto.seconds = getSetSecond;
      proto.millisecond = proto.milliseconds = getSetMillisecond;
      proto.utcOffset = getSetOffset;
      proto.utc = setOffsetToUTC;
      proto.local = setOffsetToLocal;
      proto.parseZone = setOffsetToParsedOffset;
      proto.hasAlignedHourOffset = hasAlignedHourOffset;
      proto.isDST = isDaylightSavingTime;
      proto.isLocal = isLocal;
      proto.isUtcOffset = isUtcOffset;
      proto.isUtc = isUtc;
      proto.isUTC = isUtc;
      proto.zoneAbbr = getZoneAbbr;
      proto.zoneName = getZoneName;
      proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
      proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
      proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
      proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
      proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

      function createUnix(input) {
        return createLocal(input * 1000);
      }

      function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
      }

      function preParsePostFormat(string) {
        return string;
      }

      var proto$1 = Locale.prototype;
      proto$1.calendar = calendar;
      proto$1.longDateFormat = longDateFormat;
      proto$1.invalidDate = invalidDate;
      proto$1.ordinal = ordinal;
      proto$1.preparse = preParsePostFormat;
      proto$1.postformat = preParsePostFormat;
      proto$1.relativeTime = relativeTime;
      proto$1.pastFuture = pastFuture;
      proto$1.set = set;
      proto$1.months = localeMonths;
      proto$1.monthsShort = localeMonthsShort;
      proto$1.monthsParse = localeMonthsParse;
      proto$1.monthsRegex = monthsRegex;
      proto$1.monthsShortRegex = monthsShortRegex;
      proto$1.week = localeWeek;
      proto$1.firstDayOfYear = localeFirstDayOfYear;
      proto$1.firstDayOfWeek = localeFirstDayOfWeek;
      proto$1.weekdays = localeWeekdays;
      proto$1.weekdaysMin = localeWeekdaysMin;
      proto$1.weekdaysShort = localeWeekdaysShort;
      proto$1.weekdaysParse = localeWeekdaysParse;
      proto$1.weekdaysRegex = weekdaysRegex;
      proto$1.weekdaysShortRegex = weekdaysShortRegex;
      proto$1.weekdaysMinRegex = weekdaysMinRegex;
      proto$1.isPM = localeIsPM;
      proto$1.meridiem = localeMeridiem;

      function get$1(format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
      }

      function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
          index = format;
          format = undefined;
        }

        format = format || '';

        if (index != null) {
          return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];

        for (i = 0; i < 12; i++) {
          out[i] = get$1(format, i, field, 'month');
        }

        return out;
      } // ()
      // (5)
      // (fmt, 5)
      // (fmt)
      // (true)
      // (true, 5)
      // (true, fmt, 5)
      // (true, fmt)


      function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
          if (isNumber(format)) {
            index = format;
            format = undefined;
          }

          format = format || '';
        } else {
          format = localeSorted;
          index = format;
          localeSorted = false;

          if (isNumber(format)) {
            index = format;
            format = undefined;
          }

          format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
          return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];

        for (i = 0; i < 7; i++) {
          out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }

        return out;
      }

      function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
      }

      function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
      }

      function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
      }

      function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
      }

      function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
      }

      getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
          var b = number % 10,
              output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
          return number + output;
        }
      }); // Side effect imports

      hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
      hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
      var mathAbs = Math.abs;

      function abs() {
        var data = this._data;
        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);
        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);
        return this;
      }

      function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);
        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;
        return duration._bubble();
      } // supports only 2.0-style add(1, 's') or add(duration)


      function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
      } // supports only 2.0-style subtract(1, 's') or subtract(duration)


      function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
      }

      function absCeil(number) {
        if (number < 0) {
          return Math.floor(number);
        } else {
          return Math.ceil(number);
        }
      }

      function bubble() {
        var milliseconds = this._milliseconds;
        var days = this._days;
        var months = this._months;
        var data = this._data;
        var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166

        if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {
          milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
          days = 0;
          months = 0;
        } // The following code bubbles up values, see the tests for
        // examples of what that means.


        data.milliseconds = milliseconds % 1000;
        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;
        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;
        hours = absFloor(minutes / 60);
        data.hours = hours % 24;
        days += absFloor(hours / 24); // convert days to months

        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year

        years = absFloor(months / 12);
        months %= 12;
        data.days = days;
        data.months = months;
        data.years = years;
        return this;
      }

      function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
      }

      function monthsToDays(months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
      }

      function as(units) {
        if (!this.isValid()) {
          return NaN;
        }

        var days;
        var months;
        var milliseconds = this._milliseconds;
        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
          days = this._days + milliseconds / 864e5;
          months = this._months + daysToMonths(days);

          switch (units) {
            case 'month':
              return months;

            case 'quarter':
              return months / 3;

            case 'year':
              return months / 12;
          }
        } else {
          // handle milliseconds separately because of floating point math errors (issue #1867)
          days = this._days + Math.round(monthsToDays(this._months));

          switch (units) {
            case 'week':
              return days / 7 + milliseconds / 6048e5;

            case 'day':
              return days + milliseconds / 864e5;

            case 'hour':
              return days * 24 + milliseconds / 36e5;

            case 'minute':
              return days * 1440 + milliseconds / 6e4;

            case 'second':
              return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here

            case 'millisecond':
              return Math.floor(days * 864e5) + milliseconds;

            default:
              throw new Error('Unknown unit ' + units);
          }
        }
      } // TODO: Use this.as('ms')?


      function valueOf$1() {
        if (!this.isValid()) {
          return NaN;
        }

        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
      }

      function makeAs(alias) {
        return function () {
          return this.as(alias);
        };
      }

      var asMilliseconds = makeAs('ms');
      var asSeconds = makeAs('s');
      var asMinutes = makeAs('m');
      var asHours = makeAs('h');
      var asDays = makeAs('d');
      var asWeeks = makeAs('w');
      var asMonths = makeAs('M');
      var asQuarters = makeAs('Q');
      var asYears = makeAs('y');

      function clone$1() {
        return createDuration(this);
      }

      function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
      }

      function makeGetter(name) {
        return function () {
          return this.isValid() ? this._data[name] : NaN;
        };
      }

      var milliseconds = makeGetter('milliseconds');
      var seconds = makeGetter('seconds');
      var minutes = makeGetter('minutes');
      var hours = makeGetter('hours');
      var days = makeGetter('days');
      var months = makeGetter('months');
      var years = makeGetter('years');

      function weeks() {
        return absFloor(this.days() / 7);
      }

      var round = Math.round;
      var thresholds = {
        ss: 44,
        // a few seconds to seconds
        s: 45,
        // seconds to minute
        m: 45,
        // minutes to hour
        h: 22,
        // hours to day
        d: 26,
        // days to month
        M: 11 // months to year

      }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize

      function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
      }

      function relativeTime$1(posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds = round(duration.as('s'));
        var minutes = round(duration.as('m'));
        var hours = round(duration.as('h'));
        var days = round(duration.as('d'));
        var months = round(duration.as('M'));
        var years = round(duration.as('y'));
        var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];
        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
      } // This function allows you to set the rounding function for relative time strings


      function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
          return round;
        }

        if (typeof roundingFunction === 'function') {
          round = roundingFunction;
          return true;
        }

        return false;
      } // This function allows you to set a threshold for relative time strings


      function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
          return false;
        }

        if (limit === undefined) {
          return thresholds[threshold];
        }

        thresholds[threshold] = limit;

        if (threshold === 's') {
          thresholds.ss = limit - 1;
        }

        return true;
      }

      function humanize(withSuffix) {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
          output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
      }

      var abs$1 = Math.abs;

      function sign(x) {
        return (x > 0) - (x < 0) || +x;
      }

      function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days = abs$1(this._days);
        var months = abs$1(this._months);
        var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour

        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60; // 12 months -> 1 year

        years = absFloor(months / 12);
        months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js

        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
          // this is the same as C#'s (Noda) and python (isodate)...
          // but not other JS (goog.date)
          return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
        return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');
      }

      var proto$2 = Duration.prototype;
      proto$2.isValid = isValid$1;
      proto$2.abs = abs;
      proto$2.add = add$1;
      proto$2.subtract = subtract$1;
      proto$2.as = as;
      proto$2.asMilliseconds = asMilliseconds;
      proto$2.asSeconds = asSeconds;
      proto$2.asMinutes = asMinutes;
      proto$2.asHours = asHours;
      proto$2.asDays = asDays;
      proto$2.asWeeks = asWeeks;
      proto$2.asMonths = asMonths;
      proto$2.asQuarters = asQuarters;
      proto$2.asYears = asYears;
      proto$2.valueOf = valueOf$1;
      proto$2._bubble = bubble;
      proto$2.clone = clone$1;
      proto$2.get = get$2;
      proto$2.milliseconds = milliseconds;
      proto$2.seconds = seconds;
      proto$2.minutes = minutes;
      proto$2.hours = hours;
      proto$2.days = days;
      proto$2.weeks = weeks;
      proto$2.months = months;
      proto$2.years = years;
      proto$2.humanize = humanize;
      proto$2.toISOString = toISOString$1;
      proto$2.toString = toISOString$1;
      proto$2.toJSON = toISOString$1;
      proto$2.locale = locale;
      proto$2.localeData = localeData;
      proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
      proto$2.lang = lang; // Side effect imports
      // FORMATTING

      addFormatToken('X', 0, 0, 'unix');
      addFormatToken('x', 0, 0, 'valueOf'); // PARSING

      addRegexToken('x', matchSigned);
      addRegexToken('X', matchTimestamp);
      addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
      });
      addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
      }); // Side effect imports

      hooks.version = '2.24.0';
      setHookCallback(createLocal);
      hooks.fn = proto;
      hooks.min = min;
      hooks.max = max;
      hooks.now = now;
      hooks.utc = createUTC;
      hooks.unix = createUnix;
      hooks.months = listMonths;
      hooks.isDate = isDate;
      hooks.locale = getSetGlobalLocale;
      hooks.invalid = createInvalid;
      hooks.duration = createDuration;
      hooks.isMoment = isMoment;
      hooks.weekdays = listWeekdays;
      hooks.parseZone = createInZone;
      hooks.localeData = getLocale;
      hooks.isDuration = isDuration;
      hooks.monthsShort = listMonthsShort;
      hooks.weekdaysMin = listWeekdaysMin;
      hooks.defineLocale = defineLocale;
      hooks.updateLocale = updateLocale;
      hooks.locales = listLocales;
      hooks.weekdaysShort = listWeekdaysShort;
      hooks.normalizeUnits = normalizeUnits;
      hooks.relativeTimeRounding = getSetRelativeTimeRounding;
      hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
      hooks.calendarFormat = getCalendarFormat;
      hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats

      hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
        // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
        // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
        // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',
        // <input type="date" />
        TIME: 'HH:mm',
        // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',
        // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',
        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',
        // <input type="week" />
        MONTH: 'YYYY-MM' // <input type="month" />

      };
      return hooks;
    });
  }); // Maps for number <-> hex string conversion

  var byteToHex = [];

  for (var i = 0; i < 256; i++) {
    byteToHex[i] = (i + 0x100).toString(16).substr(1);
  }
  /**
   * Represent binary UUID into it's string representation.
   *
   * @param buf - Buffer containing UUID bytes.
   * @param offset - Offset from the start of the buffer where the UUID is saved (not needed if the buffer starts with the UUID).
   *
   * @returns String representation of the UUID.
   */


  function stringifyUUID(buf, offset) {
    var i = offset || 0;
    var bth = byteToHex;
    return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
  }
  /**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */


  var random = function () {
    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {
      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
      // Moderately fast, high quality
      var _rnds8 = new Uint8Array(16);

      return function whatwgRNG() {
        crypto.getRandomValues(_rnds8);
        return _rnds8;
      };
    } // Math.random()-based (RNG)
    //
    // If all else fails, use Math.random().
    // It's fast, but is of unspecified quality.


    var _rnds = new Array(16);

    return function () {
      for (var i = 0, r; i < 16; i++) {
        if ((i & 0x03) === 0) {
          r = Math.random() * 0x100000000;
        }

        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
      }

      return _rnds;
    }; //     uuid.js
    //
    //     Copyright (c) 2010-2012 Robert Kieffer
    //     MIT License - http://opensource.org/licenses/mit-license.php
    // Unique ID creation requires a high quality random # generator.  We feature
    // detect to determine the best RNG source, normalizing to a function that
    // returns 128-bits of randomness, since that's what's usually required
    // return require('./rng');
  }();

  var byteToHex$1 = [];

  for (var i$1 = 0; i$1 < 256; i$1++) {
    byteToHex$1[i$1] = (i$1 + 0x100).toString(16).substr(1);
  } // **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq


  var seedBytes = random(); // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)

  var defaultNodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]]; // Per 4.2.2, randomize (14 bit) clockseq

  var defaultClockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff; // Previous uuid creation time

  /**
   * UUIDv4 options.
   */

  /**
   * Generate UUIDv4
   *
   * @param options - Options to be used instead of default generated values.
   * String 'binary' is a shorthand for uuid4({}, new Array(16)).
   * @param buf - If present the buffer will be filled with the generated UUID.
   * @param offset - Offset of the UUID from the start of the buffer.
   *
   * @returns UUIDv4
   */

  function uuid4() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var buf = arguments.length > 1 ? arguments[1] : undefined;
    var offset = arguments.length > 2 ? arguments[2] : undefined; // Deprecated - 'format' argument, as supported in v1.2

    var i = buf && offset || 0;

    if (typeof options === 'string') {
      buf = options === 'binary' ? new Array(16) : undefined;
      options = {};
    }

    var rnds = options.random || (options.rng || random)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

    if (buf) {
      for (var ii = 0; ii < 16; ii++) {
        buf[i + ii] = rnds[ii];
      }
    }

    return buf || stringifyUUID(rnds);
  } // Rollup will complain about mixing default and named exports in UMD build,


  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      keys.push.apply(keys, Object.getOwnPropertySymbols(object));
    }

    if (enumerableOnly) keys = keys.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    return keys;
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(source, true).forEach(function (key) {
          defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(source).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  } // for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'
  // code from http://momentjs.com/


  var ASPDateRegex = /^\/?Date\((-?\d+)/i; // Hex color

  var fullHexRE = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
  var shortHexRE = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
  /**
   * Hue, Saturation, Value.
   */

  /**
   * Test whether given object is a number
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if number, false otherwise.
   */

  function isNumber(value) {
    return value instanceof Number || typeof value === 'number';
  }
  /**
   * Remove everything in the DOM object
   *
   * @param DOMobject - Node whose child nodes will be recursively deleted.
   */


  function recursiveDOMDelete(DOMobject) {
    if (DOMobject) {
      while (DOMobject.hasChildNodes() === true) {
        var child = DOMobject.firstChild;

        if (child) {
          recursiveDOMDelete(child);
          DOMobject.removeChild(child);
        }
      }
    }
  }
  /**
   * Test whether given object is a string
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if string, false otherwise.
   */


  function isString(value) {
    return value instanceof String || typeof value === 'string';
  }
  /**
   * Test whether given object is a object (not primitive or null).
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if not null object, false otherwise.
   */


  function isObject(value) {
    return _typeof_1(value) === 'object' && value !== null;
  }
  /**
   * Test whether given object is a Date, or a String containing a Date
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Date instance or string date representation, false otherwise.
   */


  function isDate(value) {
    if (value instanceof Date) {
      return true;
    } else if (isString(value)) {
      // test whether this string contains a date
      var match = ASPDateRegex.exec(value);

      if (match) {
        return true;
      } else if (!isNaN(Date.parse(value))) {
        return true;
      }
    }

    return false;
  }
  /**
   * Test whether given object is a Moment date.
   * @TODO: This is basically a workaround, if Moment was imported property it wouldn't necessary as moment.isMoment is a TS type guard.
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Moment instance, false otherwise.
   */


  function isMoment(value) {
    return moment.isMoment(value);
  }
  /**
   * Copy property from b to a if property present in a.
   * If property in b explicitly set to null, delete it if `allowDeletion` set.
   *
   * Internal helper routine, should not be exported. Not added to `exports` for that reason.
   *
   * @param a - Target object.
   * @param b - Source object.
   * @param prop - Name of property to copy from b to a.
   * @param allowDeletion  if true, delete property in a if explicitly set to null in b
   */


  function copyOrDelete(a, b, prop, allowDeletion) {
    var doDeletion = false;

    if (allowDeletion === true) {
      doDeletion = b[prop] === null && a[prop] !== undefined;
    }

    if (doDeletion) {
      delete a[prop];
    } else {
      a[prop] = b[prop]; // Remember, this is a reference copy!
    }
  }
  /**
   * Fill an object with a possibly partially defined other object.
   *
   * Only copies values for the properties already present in a.
   * That means an object is not created on a property if only the b object has it.
   *
   * @param a - The object that will have it's properties updated.
   * @param b - The object with property updates.
   * @param allowDeletion - if true, delete properties in a that are explicitly set to null in b
   */


  function fillIfDefined(a, b) {
    var allowDeletion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // NOTE: iteration of properties of a
    // NOTE: prototype properties iterated over as well

    for (var prop in a) {
      if (b[prop] !== undefined) {
        if (b[prop] === null || _typeof_1(b[prop]) !== 'object') {
          // Note: typeof null === 'object'
          copyOrDelete(a, b, prop, allowDeletion);
        } else {
          var aProp = a[prop];
          var bProp = b[prop];

          if (isObject(aProp) && isObject(bProp)) {
            fillIfDefined(aProp, bProp, allowDeletion);
          }
        }
      }
    }
  }
  /**
   * Copy the values of all of the enumerable own properties from one or more source objects to a
   * target object. Returns the target object.
   *
   * @param target - The target object to copy to.
   * @param source - The source object from which to copy properties.
   *
   * @return The target object.
   */


  var extend = Object.assign;
  /**
   * Extend object a with selected properties of object b or a series of objects
   * Only properties with defined values are copied
   *
   * @param props - Properties to be copied to a.
   * @param a - The target.
   * @param others - The sources.
   *
   * @returns Argument a.
   */

  function selectiveExtend(props, a) {
    if (!Array.isArray(props)) {
      throw new Error('Array with property names expected as first argument');
    }

    for (var _len = arguments.length, others = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      others[_key - 2] = arguments[_key];
    }

    for (var _i = 0, _others = others; _i < _others.length; _i++) {
      var other = _others[_i];

      for (var p = 0; p < props.length; p++) {
        var prop = props[p];

        if (other && Object.prototype.hasOwnProperty.call(other, prop)) {
          a[prop] = other[prop];
        }
      }
    }

    return a;
  }
  /**
   * Extend object a with selected properties of object b.
   * Only properties with defined values are copied.
   *
   * **Note:** Previous version of this routine implied that multiple source objects
   *           could be used; however, the implementation was **wrong**.
   *           Since multiple (>1) sources weren't used anywhere in the `vis.js` code,
   *           this has been removed
   *
   * @param props - Names of first-level properties to copy over.
   * @param a - Target object.
   * @param b - Source object.
   * @param allowDeletion - If true, delete property in a if explicitly set to null in b.
   *
   * @returns Argument a.
   */


  function selectiveDeepExtend(props, a, b) {
    var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false; // TODO: add support for Arrays to deepExtend

    if (Array.isArray(b)) {
      throw new TypeError('Arrays are not supported by deepExtend');
    }

    for (var p = 0; p < props.length; p++) {
      var prop = props[p];

      if (Object.prototype.hasOwnProperty.call(b, prop)) {
        if (b[prop] && b[prop].constructor === Object) {
          if (a[prop] === undefined) {
            a[prop] = {};
          }

          if (a[prop].constructor === Object) {
            deepExtend(a[prop], b[prop], false, allowDeletion);
          } else {
            copyOrDelete(a, b, prop, allowDeletion);
          }
        } else if (Array.isArray(b[prop])) {
          throw new TypeError('Arrays are not supported by deepExtend');
        } else {
          copyOrDelete(a, b, prop, allowDeletion);
        }
      }
    }

    return a;
  }
  /**
   * Extend object `a` with properties of object `b`, ignoring properties which are explicitly
   * specified to be excluded.
   *
   * The properties of `b` are considered for copying.
   * Properties which are themselves objects are are also extended.
   * Only properties with defined values are copied
   *
   * @param propsToExclude - Names of properties which should *not* be copied.
   * @param a - Object to extend.
   * @param b - Object to take properties from for extension.
   * @param allowDeletion - If true, delete properties in a that are explicitly set to null in b.
   *
   * @returns Argument a.
   */


  function selectiveNotDeepExtend(propsToExclude, a, b) {
    var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false; // TODO: add support for Arrays to deepExtend
    // NOTE: array properties have an else-below; apparently, there is a problem here.

    if (Array.isArray(b)) {
      throw new TypeError('Arrays are not supported by deepExtend');
    }

    for (var prop in b) {
      if (!Object.prototype.hasOwnProperty.call(b, prop)) {
        continue;
      } // Handle local properties only


      if (propsToExclude.indexOf(prop) !== -1) {
        continue;
      } // In exclusion list, skip


      if (b[prop] && b[prop].constructor === Object) {
        if (a[prop] === undefined) {
          a[prop] = {};
        }

        if (a[prop].constructor === Object) {
          deepExtend(a[prop], b[prop]); // NOTE: allowDeletion not propagated!
        } else {
          copyOrDelete(a, b, prop, allowDeletion);
        }
      } else if (Array.isArray(b[prop])) {
        a[prop] = [];

        for (var i = 0; i < b[prop].length; i++) {
          a[prop].push(b[prop][i]);
        }
      } else {
        copyOrDelete(a, b, prop, allowDeletion);
      }
    }

    return a;
  }
  /**
   * Deep extend an object a with the properties of object b
   *
   * @param a - Target object.
   * @param b - Source object.
   * @param protoExtend - If true, the prototype values will also be extended
   * (ie. the options objects that inherit from others will also get the inherited options).
   * @param allowDeletion - If true, the values of fields that are null will be deleted.
   *
   * @returns Argument a.
   */


  function deepExtend(a, b) {
    var protoExtend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    for (var prop in b) {
      if (Object.prototype.hasOwnProperty.call(b, prop) || protoExtend === true) {
        if (b[prop] && b[prop].constructor === Object) {
          if (a[prop] === undefined) {
            a[prop] = {};
          }

          if (a[prop].constructor === Object) {
            deepExtend(a[prop], b[prop], protoExtend); // NOTE: allowDeletion not propagated!
          } else {
            copyOrDelete(a, b, prop, allowDeletion);
          }
        } else if (Array.isArray(b[prop])) {
          a[prop] = [];

          for (var i = 0; i < b[prop].length; i++) {
            a[prop].push(b[prop][i]);
          }
        } else {
          copyOrDelete(a, b, prop, allowDeletion);
        }
      }
    }

    return a;
  }
  /**
   * Test whether all elements in two arrays are equal.
   *
   * @param a - First array.
   * @param b - Second array.
   *
   * @returns True if both arrays have the same length and same elements (1 = '1').
   */


  function equalArray(a, b) {
    if (a.length !== b.length) {
      return false;
    }

    for (var i = 0, len = a.length; i < len; i++) {
      if (a[i] != b[i]) {
        return false;
      }
    }

    return true;
  }
  /**
   * Convert an object into another type
   *
   * @param object - Value of unknown type.
   * @param type - Name of the desired type.
   *
   * @returns Object in the desired type.
   * @throws Error
   */


  function convert(object, type) {
    var match;

    if (object === undefined) {
      return undefined;
    }

    if (object === null) {
      return null;
    }

    if (!type) {
      return object;
    }

    if (!(typeof type === 'string') && !(type instanceof String)) {
      throw new Error('Type must be a string');
    } //noinspection FallthroughInSwitchStatementJS


    switch (type) {
      case 'boolean':
      case 'Boolean':
        return Boolean(object);

      case 'number':
      case 'Number':
        if (isString(object) && !isNaN(Date.parse(object))) {
          return moment(object).valueOf();
        } else {
          // @TODO: I don't think that Number and String constructors are a good idea.
          // This could also fail if the object doesn't have valueOf method or if it's redefined.
          // For example: Object.create(null) or { valueOf: 7 }.
          return Number(object.valueOf());
        }

      case 'string':
      case 'String':
        return String(object);

      case 'Date':
        if (isNumber(object)) {
          return new Date(object);
        }

        if (object instanceof Date) {
          return new Date(object.valueOf());
        } else if (isMoment(object)) {
          return new Date(object.valueOf());
        }

        if (isString(object)) {
          match = ASPDateRegex.exec(object);

          if (match) {
            // object is an ASP date
            return new Date(Number(match[1])); // parse number
          } else {
            return moment(new Date(object)).toDate(); // parse string
          }
        } else {
          throw new Error('Cannot convert object of type ' + getType(object) + ' to type Date');
        }

      case 'Moment':
        if (isNumber(object)) {
          return moment(object);
        }

        if (object instanceof Date) {
          return moment(object.valueOf());
        } else if (isMoment(object)) {
          return moment(object);
        }

        if (isString(object)) {
          match = ASPDateRegex.exec(object);

          if (match) {
            // object is an ASP date
            return moment(Number(match[1])); // parse number
          } else {
            return moment(object); // parse string
          }
        } else {
          throw new Error('Cannot convert object of type ' + getType(object) + ' to type Date');
        }

      case 'ISODate':
        if (isNumber(object)) {
          return new Date(object);
        } else if (object instanceof Date) {
          return object.toISOString();
        } else if (isMoment(object)) {
          return object.toDate().toISOString();
        } else if (isString(object)) {
          match = ASPDateRegex.exec(object);

          if (match) {
            // object is an ASP date
            return new Date(Number(match[1])).toISOString(); // parse number
          } else {
            return moment(object).format(); // ISO 8601
          }
        } else {
          throw new Error('Cannot convert object of type ' + getType(object) + ' to type ISODate');
        }

      case 'ASPDate':
        if (isNumber(object)) {
          return '/Date(' + object + ')/';
        } else if (object instanceof Date || isMoment(object)) {
          return '/Date(' + object.valueOf() + ')/';
        } else if (isString(object)) {
          match = ASPDateRegex.exec(object);

          var _value;

          if (match) {
            // object is an ASP date
            _value = new Date(Number(match[1])).valueOf(); // parse number
          } else {
            _value = new Date(object).valueOf(); // parse string
          }

          return '/Date(' + _value + ')/';
        } else {
          throw new Error('Cannot convert object of type ' + getType(object) + ' to type ASPDate');
        }

      default:
        var never = type;
        throw new Error("Unknown type ".concat(never));
    }
  }
  /**
   * Get the type of an object, for example exports.getType([]) returns 'Array'
   *
   * @param object - Input value of unknown type.
   *
   * @returns Detected type.
   */


  function getType(object) {
    var type = _typeof_1(object);

    if (type === 'object') {
      if (object === null) {
        return 'null';
      }

      if (object instanceof Boolean) {
        return 'Boolean';
      }

      if (object instanceof Number) {
        return 'Number';
      }

      if (object instanceof String) {
        return 'String';
      }

      if (Array.isArray(object)) {
        return 'Array';
      }

      if (object instanceof Date) {
        return 'Date';
      }

      return 'Object';
    }

    if (type === 'number') {
      return 'Number';
    }

    if (type === 'boolean') {
      return 'Boolean';
    }

    if (type === 'string') {
      return 'String';
    }

    if (type === undefined) {
      return 'undefined';
    }

    return type;
  }
  /**
   * Used to extend an array and copy it. This is used to propagate paths recursively.
   *
   * @param arr - First part.
   * @param newValue - The value to be aadded into the array.
   *
   * @returns A new array with all items from arr and newValue (which is last).
   */


  function copyAndExtendArray(arr, newValue) {
    return [].concat(toConsumableArray(arr), [newValue]);
  }
  /**
   * Used to extend an array and copy it. This is used to propagate paths recursively.
   *
   * @param arr - The array to be copied.
   *
   * @returns Shallow copy of arr.
   */


  function copyArray(arr) {
    return arr.slice();
  }
  /**
   * Retrieve the absolute left value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute left position of this element in the browser page.
   */


  function getAbsoluteLeft(elem) {
    return elem.getBoundingClientRect().left;
  }
  /**
   * Retrieve the absolute right value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute right position of this element in the browser page.
   */


  function getAbsoluteRight(elem) {
    return elem.getBoundingClientRect().right;
  }
  /**
   * Retrieve the absolute top value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute top position of this element in the browser page.
   */


  function getAbsoluteTop(elem) {
    return elem.getBoundingClientRect().top;
  }
  /**
   * Add a className to the given elements style.
   *
   * @param elem - The element to which the classes will be added.
   * @param classNames - Space separated list of classes.
   */


  function addClassName(elem, classNames) {
    var classes = elem.className.split(' ');
    var newClasses = classNames.split(' ');
    classes = classes.concat(newClasses.filter(function (className) {
      return classes.indexOf(className) < 0;
    }));
    elem.className = classes.join(' ');
  }
  /**
   * Remove a className from the given elements style.
   *
   * @param elem - The element from which the classes will be removed.
   * @param classNames - Space separated list of classes.
   */


  function removeClassName(elem, classNames) {
    var classes = elem.className.split(' ');
    var oldClasses = classNames.split(' ');
    classes = classes.filter(function (className) {
      return oldClasses.indexOf(className) < 0;
    });
    elem.className = classes.join(' ');
  }
  /**
   * For each method for both arrays and objects.
   * In case of an array, the built-in Array.forEach() is applied (**No, it's not!**).
   * In case of an Object, the method loops over all properties of the object.
   *
   * @param object - An Object or Array to be iterated over.
   * @param callback - Array.forEach-like callback.
   */


  function forEach(object, callback) {
    if (Array.isArray(object)) {
      // array
      var len = object.length;

      for (var i = 0; i < len; i++) {
        callback(object[i], i, object);
      }
    } else {
      // object
      for (var _key2 in object) {
        if (Object.prototype.hasOwnProperty.call(object, _key2)) {
          callback(object[_key2], _key2, object);
        }
      }
    }
  }
  /**
   * Convert an object into an array: all objects properties are put into the array. The resulting array is unordered.
   *
   * @param o - Object that contains the properties and methods.
   *
   * @returns An array of unordered values.
   */


  var toArray = Object.values;
  /**
   * Update a property in an object
   *
   * @param object - The object whose property will be updated.
   * @param key - Name of the property to be updated.
   * @param value - The new value to be assigned.
   *
   * @returns Whether the value was updated (true) or already strictly the same in the original object (false).
   */

  function updateProperty(object, key, value) {
    if (object[key] !== value) {
      object[key] = value;
      return true;
    } else {
      return false;
    }
  }
  /**
   * Throttle the given function to be only executed once per animation frame.
   *
   * @param fn - The original function.
   *
   * @returns The throttled function.
   */


  function throttle(fn) {
    var scheduled = false;
    return function () {
      if (!scheduled) {
        scheduled = true;
        requestAnimationFrame(function () {
          scheduled = false;
          fn();
        });
      }
    };
  }
  /**
   * Add and event listener. Works for all browsers.
   *
   * @param element - The element to bind the event listener to.
   * @param action - Same as Element.addEventListener(action, —, —).
   * @param listener - Same as Element.addEventListener(—, listener, —).
   * @param useCapture - Same as Element.addEventListener(—, —, useCapture).
   */


  function addEventListener(element, action, listener, useCapture) {
    if (element.addEventListener) {
      if (useCapture === undefined) {
        useCapture = false;
      }

      if (action === 'mousewheel' && navigator.userAgent.indexOf('Firefox') >= 0) {
        action = 'DOMMouseScroll'; // For Firefox
      }

      element.addEventListener(action, listener, useCapture);
    } else {
      element.attachEvent('on' + action, listener); // IE browsers
    }
  }
  /**
   * Remove an event listener from an element
   *
   * @param element - The element to bind the event listener to.
   * @param action - Same as Element.removeEventListener(action, —, —).
   * @param listener - Same as Element.removeEventListener(—, listener, —).
   * @param useCapture - Same as Element.removeEventListener(—, —, useCapture).
   */


  function removeEventListener(element, action, listener, useCapture) {
    if (element.removeEventListener) {
      // non-IE browsers
      if (useCapture === undefined) {
        useCapture = false;
      }

      if (action === 'mousewheel' && navigator.userAgent.indexOf('Firefox') >= 0) {
        action = 'DOMMouseScroll'; // For Firefox
      }

      element.removeEventListener(action, listener, useCapture);
    } else {
      element.detachEvent('on' + action, listener); // IE browsers
    }
  }
  /**
   * Cancels the event's default action if it is cancelable, without stopping further propagation of the event.
   *
   * @param event - The event whose default action should be prevented.
   */


  function preventDefault(event) {
    if (!event) {
      event = window.event;
    }

    if (!event) ;else if (event.preventDefault) {
      event.preventDefault(); // non-IE browsers
    } else {
      event.returnValue = false; // IE browsers
    }
  }
  /**
   * Get HTML element which is the target of the event.
   *
   * @param event - The event.
   *
   * @returns The element or null if not obtainable.
   */


  function getTarget() {
    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.event; // code from http://www.quirksmode.org/js/events_properties.html
    // @TODO: EventTarget can be almost anything, is it okay to return only Elements?

    var target = null;
    if (!event) ;else if (event.target) {
      target = event.target;
    } else if (event.srcElement) {
      target = event.srcElement;
    }

    if (!(target instanceof Element)) {
      return null;
    }

    if (target.nodeType != null && target.nodeType == 3) {
      // defeat Safari bug
      target = target.parentNode;

      if (!(target instanceof Element)) {
        return null;
      }
    }

    return target;
  }
  /**
   * Check if given element contains given parent somewhere in the DOM tree
   *
   * @param element - The element to be tested.
   * @param parent - The ancestor (not necessarily parent) of the element.
   *
   * @returns True if parent is an ancestor of the element, false otherwise.
   */


  function hasParent(element, parent) {
    var elem = element;

    while (elem) {
      if (elem === parent) {
        return true;
      } else if (elem.parentNode) {
        elem = elem.parentNode;
      } else {
        return false;
      }
    }

    return false;
  }

  var option = {
    /**
     * Convert a value into a boolean.
     *
     * @param value - Value to be converted intoboolean, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding boolean value, if none then the default value, if none then null.
     */
    asBoolean: function asBoolean(value, defaultValue) {
      if (typeof value == 'function') {
        value = value();
      }

      if (value != null) {
        return value != false;
      }

      return defaultValue || null;
    },

    /**
     * Convert a value into a number.
     *
     * @param value - Value to be converted intonumber, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding **boxed** number value, if none then the default value, if none then null.
     */
    asNumber: function asNumber(value, defaultValue) {
      if (typeof value == 'function') {
        value = value();
      }

      if (value != null) {
        return Number(value) || defaultValue || null;
      }

      return defaultValue || null;
    },

    /**
     * Convert a value into a string.
     *
     * @param value - Value to be converted intostring, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding **boxed** string value, if none then the default value, if none then null.
     */
    asString: function asString(value, defaultValue) {
      if (typeof value == 'function') {
        value = value();
      }

      if (value != null) {
        return String(value);
      }

      return defaultValue || null;
    },

    /**
     * Convert a value into a size.
     *
     * @param value - Value to be converted intosize, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding string value (number + 'px'), if none then the default value, if none then null.
     */
    asSize: function asSize(value, defaultValue) {
      if (typeof value == 'function') {
        value = value();
      }

      if (isString(value)) {
        return value;
      } else if (isNumber(value)) {
        return value + 'px';
      } else {
        return defaultValue || null;
      }
    },

    /**
     * Convert a value into a DOM Element.
     *
     * @param value - Value to be converted into DOM Element, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns The DOM Element, if none then the default value, if none then null.
     */
    asElement: function asElement(value, defaultValue) {
      if (typeof value == 'function') {
        value = value();
      }

      return value || defaultValue || null;
    }
  };
  /**
   * Convert hex color string into RGB color object.
   * http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb
   *
   * @param hex - Hex color string (3 or 6 digits, with or without #).
   *
   * @returns RGB color object.
   */

  function hexToRGB(hex) {
    var result;

    switch (hex.length) {
      case 3:
      case 4:
        result = shortHexRE.exec(hex);
        return result ? {
          r: parseInt(result[1] + result[1], 16),
          g: parseInt(result[2] + result[2], 16),
          b: parseInt(result[3] + result[3], 16)
        } : null;

      case 6:
      case 7:
        result = fullHexRE.exec(hex);
        return result ? {
          r: parseInt(result[1], 16),
          g: parseInt(result[2], 16),
          b: parseInt(result[3], 16)
        } : null;

      default:
        return null;
    }
  }
  /**
   * This function takes string color in hex or RGB format and adds the opacity, RGBA is passed through unchanged.
   *
   * @param color - The color string (hex, RGB, RGBA).
   * @param opacity - The new opacity.
   *
   * @returns RGBA string, for example 'rgba(255, 0, 127, 0.3)'.
   */


  function overrideOpacity(color, opacity) {
    if (color.indexOf('rgba') !== -1) {
      return color;
    } else if (color.indexOf('rgb') !== -1) {
      var rgb = color.substr(color.indexOf('(') + 1).replace(')', '').split(',');
      return 'rgba(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ',' + opacity + ')';
    } else {
      var _rgb = hexToRGB(color);

      if (_rgb == null) {
        return color;
      } else {
        return 'rgba(' + _rgb.r + ',' + _rgb.g + ',' + _rgb.b + ',' + opacity + ')';
      }
    }
  }
  /**
   * Convert RGB <0, 255> into hex color string.
   *
   * @param red - Red channel.
   * @param green - Green channel.
   * @param blue - Blue channel.
   *
   * @returns Hex color string (for example: '#0acdc0').
   */


  function RGBToHex(red, green, blue) {
    return '#' + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1);
  }
  /**
   * Parse a color property into an object with border, background, and highlight colors
   *
   * @param inputColor - Shorthand color string or input color object.
   * @param defaultColor - Full color object to fill in missing values in inputColor.
   *
   * @returns Color object.
   */


  function parseColor(inputColor, defaultColor) {
    if (isString(inputColor)) {
      var colorStr = inputColor;

      if (isValidRGB(colorStr)) {
        var rgb = colorStr.substr(4).substr(0, colorStr.length - 5).split(',').map(function (value) {
          return parseInt(value);
        });
        colorStr = RGBToHex(rgb[0], rgb[1], rgb[2]);
      }

      if (isValidHex(colorStr) === true) {
        var hsv = hexToHSV(colorStr);
        var lighterColorHSV = {
          h: hsv.h,
          s: hsv.s * 0.8,
          v: Math.min(1, hsv.v * 1.02)
        };
        var darkerColorHSV = {
          h: hsv.h,
          s: Math.min(1, hsv.s * 1.25),
          v: hsv.v * 0.8
        };
        var darkerColorHex = HSVToHex(darkerColorHSV.h, darkerColorHSV.s, darkerColorHSV.v);
        var lighterColorHex = HSVToHex(lighterColorHSV.h, lighterColorHSV.s, lighterColorHSV.v);
        return {
          background: colorStr,
          border: darkerColorHex,
          highlight: {
            background: lighterColorHex,
            border: darkerColorHex
          },
          hover: {
            background: lighterColorHex,
            border: darkerColorHex
          }
        };
      } else {
        return {
          background: colorStr,
          border: colorStr,
          highlight: {
            background: colorStr,
            border: colorStr
          },
          hover: {
            background: colorStr,
            border: colorStr
          }
        };
      }
    } else {
      if (defaultColor) {
        var color = {
          background: inputColor.background || defaultColor.background,
          border: inputColor.border || defaultColor.border,
          highlight: isString(inputColor.highlight) ? {
            border: inputColor.highlight,
            background: inputColor.highlight
          } : {
            background: inputColor.highlight && inputColor.highlight.background || defaultColor.highlight.background,
            border: inputColor.highlight && inputColor.highlight.border || defaultColor.highlight.border
          },
          hover: isString(inputColor.hover) ? {
            border: inputColor.hover,
            background: inputColor.hover
          } : {
            border: inputColor.hover && inputColor.hover.border || defaultColor.hover.border,
            background: inputColor.hover && inputColor.hover.background || defaultColor.hover.background
          }
        };
        return color;
      } else {
        var _color = {
          background: inputColor.background || undefined,
          border: inputColor.border || undefined,
          highlight: isString(inputColor.highlight) ? {
            border: inputColor.highlight,
            background: inputColor.highlight
          } : {
            background: inputColor.highlight && inputColor.highlight.background || undefined,
            border: inputColor.highlight && inputColor.highlight.border || undefined
          },
          hover: isString(inputColor.hover) ? {
            border: inputColor.hover,
            background: inputColor.hover
          } : {
            border: inputColor.hover && inputColor.hover.border || undefined,
            background: inputColor.hover && inputColor.hover.background || undefined
          }
        };
        return _color;
      }
    }
  }
  /**
   * Convert RGB <0, 255> into HSV object.
   * http://www.javascripter.net/faq/rgb2hsv.htm
   *
   * @param red - Red channel.
   * @param green - Green channel.
   * @param blue - Blue channel.
   *
   * @returns HSV color object.
   */


  function RGBToHSV(red, green, blue) {
    red = red / 255;
    green = green / 255;
    blue = blue / 255;
    var minRGB = Math.min(red, Math.min(green, blue));
    var maxRGB = Math.max(red, Math.max(green, blue)); // Black-gray-white

    if (minRGB === maxRGB) {
      return {
        h: 0,
        s: 0,
        v: minRGB
      };
    } // Colors other than black-gray-white:


    var d = red === minRGB ? green - blue : blue === minRGB ? red - green : blue - red;
    var h = red === minRGB ? 3 : blue === minRGB ? 1 : 5;
    var hue = 60 * (h - d / (maxRGB - minRGB)) / 360;
    var saturation = (maxRGB - minRGB) / maxRGB;
    var value = maxRGB;
    return {
      h: hue,
      s: saturation,
      v: value
    };
  }

  var cssUtil = {
    // split a string with css styles into an object with key/values
    split: function split(cssText) {
      var styles = {};
      cssText.split(';').forEach(function (style) {
        if (style.trim() != '') {
          var parts = style.split(':');

          var _key3 = parts[0].trim();

          var _value2 = parts[1].trim();

          styles[_key3] = _value2;
        }
      });
      return styles;
    },
    // build a css text string from an object with key/values
    join: function join(styles) {
      return Object.keys(styles).map(function (key) {
        return key + ': ' + styles[key];
      }).join('; ');
    }
  };
  /**
   * Append a string with css styles to an element
   *
   * @param element - The element that will receive new styles.
   * @param cssText - The styles to be appended.
   */

  function addCssText(element, cssText) {
    var currentStyles = cssUtil.split(element.style.cssText);
    var newStyles = cssUtil.split(cssText);

    var styles = _objectSpread({}, currentStyles, {}, newStyles);

    element.style.cssText = cssUtil.join(styles);
  }
  /**
   * Remove a string with css styles from an element
   *
   * @param element - The element from which styles should be removed.
   * @param cssText - The styles to be removed.
   */


  function removeCssText(element, cssText) {
    var styles = cssUtil.split(element.style.cssText);
    var removeStyles = cssUtil.split(cssText);

    for (var _key4 in removeStyles) {
      if (Object.prototype.hasOwnProperty.call(removeStyles, _key4)) {
        delete styles[_key4];
      }
    }

    element.style.cssText = cssUtil.join(styles);
  }
  /**
   * Convert HSV <0, 1> into RGB color object.
   * https://gist.github.com/mjijackson/5311256
   *
   * @param h - Hue
   * @param s - Saturation
   * @param v - Value
   *
   * @returns RGB color object.
   */


  function HSVToRGB(h, s, v) {
    var r;
    var g;
    var b;
    var i = Math.floor(h * 6);
    var f = h * 6 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);

    switch (i % 6) {
      case 0:
        r = v, g = t, b = p;
        break;

      case 1:
        r = q, g = v, b = p;
        break;

      case 2:
        r = p, g = v, b = t;
        break;

      case 3:
        r = p, g = q, b = v;
        break;

      case 4:
        r = t, g = p, b = v;
        break;

      case 5:
        r = v, g = p, b = q;
        break;
    }

    return {
      r: Math.floor(r * 255),
      g: Math.floor(g * 255),
      b: Math.floor(b * 255)
    };
  }
  /**
   * Convert HSV <0, 1> into hex color string.
   *
   * @param h - Hue
   * @param s - Saturation
   * @param v - Value
   *
   * @returns Hex color string.
   */


  function HSVToHex(h, s, v) {
    var rgb = HSVToRGB(h, s, v);
    return RGBToHex(rgb.r, rgb.g, rgb.b);
  }
  /**
   * Convert hex color string into HSV <0, 1>.
   *
   * @param hex - Hex color string.
   *
   * @returns HSV color object.
   */


  function hexToHSV(hex) {
    var rgb = hexToRGB(hex);

    if (!rgb) {
      throw new TypeError("'".concat(hex, "' is not a valid color."));
    }

    return RGBToHSV(rgb.r, rgb.g, rgb.b);
  }
  /**
   * Validate hex color string.
   *
   * @param hex - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */


  function isValidHex(hex) {
    var isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);
    return isOk;
  }
  /**
   * Validate RGB color string.
   *
   * @param rgb - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */


  function isValidRGB(rgb) {
    rgb = rgb.replace(' ', '');
    var isOk = /rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/i.test(rgb);
    return isOk;
  }
  /**
   * Validate RGBA color string.
   *
   * @param rgba - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */


  function isValidRGBA(rgba) {
    rgba = rgba.replace(' ', '');
    var isOk = /rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),(0?.{1,3})\)/i.test(rgba);
    return isOk;
  }
  /**
   * This recursively redirects the prototype of JSON objects to the referenceObject.
   * This is used for default options.
   *
   * @param fields - Names of properties to be bridged.
   * @param referenceObject - The original object.
   *
   * @returns A new object inheriting from the referenceObject.
   */


  function selectiveBridgeObject(fields, referenceObject) {
    if (referenceObject !== null && _typeof_1(referenceObject) === 'object') {
      // !!! typeof null === 'object'
      var objectTo = Object.create(referenceObject);

      for (var i = 0; i < fields.length; i++) {
        if (Object.prototype.hasOwnProperty.call(referenceObject, fields[i])) {
          if (_typeof_1(referenceObject[fields[i]]) == 'object') {
            objectTo[fields[i]] = bridgeObject(referenceObject[fields[i]]);
          }
        }
      }

      return objectTo;
    } else {
      return null;
    }
  }
  /**
   * This recursively redirects the prototype of JSON objects to the referenceObject.
   * This is used for default options.
   *
   * @param referenceObject - The original object.
   *
   * @returns The Element if the referenceObject is an Element, or a new object inheriting from the referenceObject.
   */


  function bridgeObject(referenceObject) {
    if (referenceObject === null || _typeof_1(referenceObject) !== 'object') {
      return null;
    }

    if (referenceObject instanceof Element) {
      // Avoid bridging DOM objects
      return referenceObject;
    }

    var objectTo = Object.create(referenceObject);

    for (var i in referenceObject) {
      if (Object.prototype.hasOwnProperty.call(referenceObject, i)) {
        if (_typeof_1(referenceObject[i]) == 'object') {
          objectTo[i] = bridgeObject(referenceObject[i]);
        }
      }
    }

    return objectTo;
  }
  /**
   * This method provides a stable sort implementation, very fast for presorted data.
   *
   * @param a - The array to be sorted (in-place).
   * @param compare - An order comparator.
   *
   * @returns The argument a.
   */


  function insertSort(a, compare) {
    for (var i = 0; i < a.length; i++) {
      var k = a[i];
      var j = void 0;

      for (j = i; j > 0 && compare(k, a[j - 1]) < 0; j--) {
        a[j] = a[j - 1];
      }

      a[j] = k;
    }

    return a;
  }
  /**
   * This is used to set the options of subobjects in the options object.
   *
   * A requirement of these subobjects is that they have an 'enabled' element
   * which is optional for the user but mandatory for the program.
   *
   * The added value here of the merge is that option 'enabled' is set as required.
   *
   * @param mergeTarget - Either this.options or the options used for the groups.
   * @param options - Options.
   * @param option - Option key in the options argument.
   * @param globalOptions - Global options, passed in to determine value of option 'enabled'.
   */


  function mergeOptions(mergeTarget, options, option) {
    var globalOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {}; // Local helpers

    var isPresent = function isPresent(obj) {
      return obj !== null && obj !== undefined;
    };

    var isObject = function isObject(obj) {
      return obj !== null && _typeof_1(obj) === 'object';
    }; // https://stackoverflow.com/a/34491287/1223531


    var isEmpty = function isEmpty(obj) {
      for (var x in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, x)) {
          return false;
        }
      }

      return true;
    }; // Guards


    if (!isObject(mergeTarget)) {
      throw new Error('Parameter mergeTarget must be an object');
    }

    if (!isObject(options)) {
      throw new Error('Parameter options must be an object');
    }

    if (!isPresent(option)) {
      throw new Error('Parameter option must have a value');
    }

    if (!isObject(globalOptions)) {
      throw new Error('Parameter globalOptions must be an object');
    } //
    // Actual merge routine, separated from main logic
    // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.
    //


    var doMerge = function doMerge(target, options, option) {
      if (!isObject(target[option])) {
        target[option] = {};
      }

      var src = options[option];
      var dst = target[option];

      for (var prop in src) {
        if (Object.prototype.hasOwnProperty.call(src, prop)) {
          dst[prop] = src[prop];
        }
      }
    }; // Local initialization


    var srcOption = options[option];
    var globalPassed = isObject(globalOptions) && !isEmpty(globalOptions);
    var globalOption = globalPassed ? globalOptions[option] : undefined;
    var globalEnabled = globalOption ? globalOption.enabled : undefined; /////////////////////////////////////////
    // Main routine
    /////////////////////////////////////////

    if (srcOption === undefined) {
      return; // Nothing to do
    }

    if (typeof srcOption === 'boolean') {
      if (!isObject(mergeTarget[option])) {
        mergeTarget[option] = {};
      }

      mergeTarget[option].enabled = srcOption;
      return;
    }

    if (srcOption === null && !isObject(mergeTarget[option])) {
      // If possible, explicit copy from globals
      if (isPresent(globalOption)) {
        mergeTarget[option] = Object.create(globalOption);
      } else {
        return; // Nothing to do
      }
    }

    if (!isObject(srcOption)) {
      return;
    } //
    // Ensure that 'enabled' is properly set. It is required internally
    // Note that the value from options will always overwrite the existing value
    //


    var enabled = true; // default value

    if (srcOption.enabled !== undefined) {
      enabled = srcOption.enabled;
    } else {
      // Take from globals, if present
      if (globalEnabled !== undefined) {
        enabled = globalOption.enabled;
      }
    }

    doMerge(mergeTarget, options, option);
    mergeTarget[option].enabled = enabled;
  }
  /**
   * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses
   * this function will then iterate in both directions over this sorted list to find all visible items.
   *
   * @param orderedItems - Items ordered by start
   * @param comparator - -1 is lower, 0 is equal, 1 is higher
   * @param field - Property name on an item (i.e. item[field]).
   * @param field2 - Second property name on an item (i.e. item[field][field2]).
   *
   * @returns Index of the found item or -1 if nothing was found.
   */


  function binarySearchCustom(orderedItems, comparator, field, field2) {
    var maxIterations = 10000;
    var iteration = 0;
    var low = 0;
    var high = orderedItems.length - 1;

    while (low <= high && iteration < maxIterations) {
      var middle = Math.floor((low + high) / 2);
      var item = orderedItems[middle];

      var _value3 = field2 === undefined ? item[field] : item[field][field2];

      var searchResult = comparator(_value3);

      if (searchResult == 0) {
        // jihaa, found a visible item!
        return middle;
      } else if (searchResult == -1) {
        // it is too small --> increase low
        low = middle + 1;
      } else {
        // it is too big --> decrease high
        high = middle - 1;
      }

      iteration++;
    }

    return -1;
  }
  /**
   * This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of
   * two values, we return either the one before or the one after, depending on user input
   * If it is found, we return the index, else -1.
   *
   * @param orderedItems - Sorted array.
   * @param target - The searched value.
   * @param field - Name of the property in items to be searched.
   * @param sidePreference - If the target is between two values, should the index of the before or the after be returned?
   * @param comparator - An optional comparator, returning -1, 0, 1 for <, ===, >.
   *
   * @returns The index of found value or -1 if nothing was found.
   */


  function binarySearchValue(orderedItems, target, field, sidePreference, comparator) {
    var maxIterations = 10000;
    var iteration = 0;
    var low = 0;
    var high = orderedItems.length - 1;
    var prevValue;
    var value;
    var nextValue;
    var middle;
    comparator = comparator != undefined ? comparator : function (a, b) {
      return a == b ? 0 : a < b ? -1 : 1;
    };

    while (low <= high && iteration < maxIterations) {
      // get a new guess
      middle = Math.floor(0.5 * (high + low));
      prevValue = orderedItems[Math.max(0, middle - 1)][field];
      value = orderedItems[middle][field];
      nextValue = orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];

      if (comparator(value, target) == 0) {
        // we found the target
        return middle;
      } else if (comparator(prevValue, target) < 0 && comparator(value, target) > 0) {
        // target is in between of the previous and the current
        return sidePreference == 'before' ? Math.max(0, middle - 1) : middle;
      } else if (comparator(value, target) < 0 && comparator(nextValue, target) > 0) {
        // target is in between of the current and the next
        return sidePreference == 'before' ? middle : Math.min(orderedItems.length - 1, middle + 1);
      } else {
        // didnt find the target, we need to change our boundaries.
        if (comparator(value, target) < 0) {
          // it is too small --> increase low
          low = middle + 1;
        } else {
          // it is too big --> decrease high
          high = middle - 1;
        }
      }

      iteration++;
    } // didnt find anything. Return -1.


    return -1;
  }
  /*
   * Easing Functions.
   * Only considering the t value for the range [0, 1] => [0, 1].
   *
   * Inspiration: from http://gizma.com/easing/
   * https://gist.github.com/gre/1650294
   */


  var easingFunctions = {
    /**
     * no easing, no acceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    linear: function linear(t) {
      return t;
    },

    /**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInQuad: function easeInQuad(t) {
      return t * t;
    },

    /**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeOutQuad: function easeOutQuad(t) {
      return t * (2 - t);
    },

    /**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInOutQuad: function easeInOutQuad(t) {
      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    },

    /**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInCubic: function easeInCubic(t) {
      return t * t * t;
    },

    /**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeOutCubic: function easeOutCubic(t) {
      return --t * t * t + 1;
    },

    /**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInOutCubic: function easeInOutCubic(t) {
      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
    },

    /**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInQuart: function easeInQuart(t) {
      return t * t * t * t;
    },

    /**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeOutQuart: function easeOutQuart(t) {
      return 1 - --t * t * t * t;
    },

    /**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInOutQuart: function easeInOutQuart(t) {
      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
    },

    /**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInQuint: function easeInQuint(t) {
      return t * t * t * t * t;
    },

    /**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeOutQuint: function easeOutQuint(t) {
      return 1 + --t * t * t * t * t;
    },

    /**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */
    easeInOutQuint: function easeInOutQuint(t) {
      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
    }
  };
  /**
   * Experimentaly compute the width of the scrollbar for this browser.
   *
   * @returns The width in pixels.
   */

  function getScrollBarWidth() {
    var inner = document.createElement('p');
    inner.style.width = '100%';
    inner.style.height = '200px';
    var outer = document.createElement('div');
    outer.style.position = 'absolute';
    outer.style.top = '0px';
    outer.style.left = '0px';
    outer.style.visibility = 'hidden';
    outer.style.width = '200px';
    outer.style.height = '150px';
    outer.style.overflow = 'hidden';
    outer.appendChild(inner);
    document.body.appendChild(outer);
    var w1 = inner.offsetWidth;
    outer.style.overflow = 'scroll';
    var w2 = inner.offsetWidth;

    if (w1 == w2) {
      w2 = outer.clientWidth;
    }

    document.body.removeChild(outer);
    return w1 - w2;
  } // @TODO: This doesn't work properly.
  // It works only for single property objects,
  // otherwise it combines all of the types in a union.
  // export function topMost<K1 extends string, V1> (
  //   pile: Record<K1, undefined | V1>[],
  //   accessors: K1 | [K1]
  // ): undefined | V1
  // export function topMost<K1 extends string, K2 extends string, V1, V2> (
  //   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2>>[],
  //   accessors: [K1, K2]
  // ): undefined | V1 | V2
  // export function topMost<K1 extends string, K2 extends string, K3 extends string, V1, V2, V3> (
  //   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2 | Record<K3, undefined | V3>>>[],
  //   accessors: [K1, K2, K3]
  // ): undefined | V1 | V2 | V3

  /**
   * Get the top most property value from a pile of objects.
   *
   * @param pile - Array of objects, no required format.
   * @param accessors - Array of property names (e.g. object['foo']['bar'] → ['foo', 'bar']).
   *
   * @returns Value of the property with given accessors path from the first pile item where it's not undefined.
   */


  function topMost(pile, accessors) {
    var candidate;

    if (!Array.isArray(accessors)) {
      accessors = [accessors];
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = pile[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var member = _step.value;

        if (member) {
          candidate = member[accessors[0]];

          for (var i = 1; i < accessors.length; i++) {
            if (candidate) {
              candidate = candidate[accessors[i]];
            }
          }

          if (typeof candidate !== 'undefined') {
            break;
          }
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return candidate;
  }

  var util =
  /*#__PURE__*/
  Object.freeze({
    isNumber: isNumber,
    recursiveDOMDelete: recursiveDOMDelete,
    isString: isString,
    isObject: isObject,
    isDate: isDate,
    isMoment: isMoment,
    fillIfDefined: fillIfDefined,
    extend: extend,
    selectiveExtend: selectiveExtend,
    selectiveDeepExtend: selectiveDeepExtend,
    selectiveNotDeepExtend: selectiveNotDeepExtend,
    deepExtend: deepExtend,
    equalArray: equalArray,
    convert: convert,
    getType: getType,
    copyAndExtendArray: copyAndExtendArray,
    copyArray: copyArray,
    getAbsoluteLeft: getAbsoluteLeft,
    getAbsoluteRight: getAbsoluteRight,
    getAbsoluteTop: getAbsoluteTop,
    addClassName: addClassName,
    removeClassName: removeClassName,
    forEach: forEach,
    toArray: toArray,
    updateProperty: updateProperty,
    throttle: throttle,
    addEventListener: addEventListener,
    removeEventListener: removeEventListener,
    preventDefault: preventDefault,
    getTarget: getTarget,
    hasParent: hasParent,
    option: option,
    hexToRGB: hexToRGB,
    overrideOpacity: overrideOpacity,
    RGBToHex: RGBToHex,
    parseColor: parseColor,
    RGBToHSV: RGBToHSV,
    addCssText: addCssText,
    removeCssText: removeCssText,
    HSVToRGB: HSVToRGB,
    HSVToHex: HSVToHex,
    hexToHSV: hexToHSV,
    isValidHex: isValidHex,
    isValidRGB: isValidRGB,
    isValidRGBA: isValidRGBA,
    selectiveBridgeObject: selectiveBridgeObject,
    bridgeObject: bridgeObject,
    insertSort: insertSort,
    mergeOptions: mergeOptions,
    binarySearchCustom: binarySearchCustom,
    binarySearchValue: binarySearchValue,
    easingFunctions: easingFunctions,
    getScrollBarWidth: getScrollBarWidth,
    topMost: topMost,
    randomUUID: uuid4
  }); // New API (tree shakeable).

  var util$1 = /*#__PURE__*/Object.freeze({
    'default': util,
    HSVToHex: HSVToHex,
    HSVToRGB: HSVToRGB,
    RGBToHSV: RGBToHSV,
    RGBToHex: RGBToHex,
    addClassName: addClassName,
    addCssText: addCssText,
    addEventListener: addEventListener,
    binarySearchCustom: binarySearchCustom,
    binarySearchValue: binarySearchValue,
    bridgeObject: bridgeObject,
    convert: convert,
    copyAndExtendArray: copyAndExtendArray,
    copyArray: copyArray,
    deepExtend: deepExtend,
    easingFunctions: easingFunctions,
    equalArray: equalArray,
    extend: extend,
    fillIfDefined: fillIfDefined,
    forEach: forEach,
    getAbsoluteLeft: getAbsoluteLeft,
    getAbsoluteRight: getAbsoluteRight,
    getAbsoluteTop: getAbsoluteTop,
    getScrollBarWidth: getScrollBarWidth,
    getTarget: getTarget,
    getType: getType,
    hasParent: hasParent,
    hexToHSV: hexToHSV,
    hexToRGB: hexToRGB,
    insertSort: insertSort,
    isDate: isDate,
    isMoment: isMoment,
    isNumber: isNumber,
    isObject: isObject,
    isString: isString,
    isValidHex: isValidHex,
    isValidRGB: isValidRGB,
    isValidRGBA: isValidRGBA,
    mergeOptions: mergeOptions,
    option: option,
    overrideOpacity: overrideOpacity,
    parseColor: parseColor,
    preventDefault: preventDefault,
    randomUUID: uuid4,
    recursiveDOMDelete: recursiveDOMDelete,
    removeClassName: removeClassName,
    removeCssText: removeCssText,
    removeEventListener: removeEventListener,
    selectiveBridgeObject: selectiveBridgeObject,
    selectiveDeepExtend: selectiveDeepExtend,
    selectiveExtend: selectiveExtend,
    selectiveNotDeepExtend: selectiveNotDeepExtend,
    throttle: throttle,
    toArray: toArray,
    topMost: topMost,
    updateProperty: updateProperty
  });

  /** 
   * vis-data - data
   * http://visjs.org/
   * 
   * Manage unstructured data using DataSet. Add, update, and remove data, and listen for changes in the data.
   * 
   * @version 6.1.0
   * @date    2019-07-16T13:37:00Z
   * 
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
   * 
   * @license 
   * vis.js is dual licensed under both
   * 
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   * 
   *   and
   * 
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   * 
   * vis.js may be distributed under either license.
   */
  function _defineProperty$1(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var defineProperty$1 = _defineProperty$1;

  function createCommonjsModule$1(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var _typeof_1$1 = createCommonjsModule$1(function (module) {
    function _typeof2(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof2(obj) {
          return typeof obj;
        };
      } else {
        _typeof2 = function _typeof2(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof2(obj);
    }

    function _typeof(obj) {
      if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
        module.exports = _typeof = function _typeof(obj) {
          return _typeof2(obj);
        };
      } else {
        module.exports = _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
        };
      }

      return _typeof(obj);
    }

    module.exports = _typeof;
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var classCallCheck = _classCallCheck;

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  var createClass = _createClass;

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  var assertThisInitialized = _assertThisInitialized;

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof_1$1(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  var possibleConstructorReturn = _possibleConstructorReturn;
  var getPrototypeOf = createCommonjsModule$1(function (module) {
    function _getPrototypeOf(o) {
      module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    module.exports = _getPrototypeOf;
  });
  var setPrototypeOf = createCommonjsModule$1(function (module) {
    function _setPrototypeOf(o, p) {
      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    module.exports = _setPrototypeOf;
  });

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  var inherits = _inherits; // Maps for number <-> hex string conversion

  var byteToHex$2 = [];

  for (var i$2 = 0; i$2 < 256; i$2++) {
    byteToHex$2[i$2] = (i$2 + 0x100).toString(16).substr(1);
  }
  /**
   * Represent binary UUID into it's string representation.
   *
   * @param buf - Buffer containing UUID bytes.
   * @param offset - Offset from the start of the buffer where the UUID is saved (not needed if the buffer starts with the UUID).
   *
   * @returns String representation of the UUID.
   */


  function stringifyUUID$1(buf, offset) {
    var i = offset || 0;
    var bth = byteToHex$2;
    return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
  }
  /**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */


  var random$1 = function () {
    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {
      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
      // Moderately fast, high quality
      var _rnds8 = new Uint8Array(16);

      return function whatwgRNG() {
        crypto.getRandomValues(_rnds8);
        return _rnds8;
      };
    } // Math.random()-based (RNG)
    //
    // If all else fails, use Math.random().
    // It's fast, but is of unspecified quality.


    var _rnds = new Array(16);

    return function () {
      for (var i = 0, r; i < 16; i++) {
        if ((i & 0x03) === 0) {
          r = Math.random() * 0x100000000;
        }

        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
      }

      return _rnds;
    }; //     uuid.js
    //
    //     Copyright (c) 2010-2012 Robert Kieffer
    //     MIT License - http://opensource.org/licenses/mit-license.php
    // Unique ID creation requires a high quality random # generator.  We feature
    // detect to determine the best RNG source, normalizing to a function that
    // returns 128-bits of randomness, since that's what's usually required
    // return require('./rng');
  }();

  var byteToHex$1$1 = [];

  for (var i$1$1 = 0; i$1$1 < 256; i$1$1++) {
    byteToHex$1$1[i$1$1] = (i$1$1 + 0x100).toString(16).substr(1);
  } // **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq


  var seedBytes$1 = random$1(); // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)

  var defaultNodeId$1 = [seedBytes$1[0] | 0x01, seedBytes$1[1], seedBytes$1[2], seedBytes$1[3], seedBytes$1[4], seedBytes$1[5]]; // Per 4.2.2, randomize (14 bit) clockseq

  var defaultClockseq$1 = (seedBytes$1[6] << 8 | seedBytes$1[7]) & 0x3fff; // Previous uuid creation time

  /**
   * UUIDv4 options.
   */

  /**
   * Generate UUIDv4
   *
   * @param options - Options to be used instead of default generated values.
   * String 'binary' is a shorthand for uuid4({}, new Array(16)).
   * @param buf - If present the buffer will be filled with the generated UUID.
   * @param offset - Offset of the UUID from the start of the buffer.
   *
   * @returns UUIDv4
   */

  function uuid4$1() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var buf = arguments.length > 1 ? arguments[1] : undefined;
    var offset = arguments.length > 2 ? arguments[2] : undefined; // Deprecated - 'format' argument, as supported in v1.2

    var i = buf && offset || 0;

    if (typeof options === 'string') {
      buf = options === 'binary' ? new Array(16) : undefined;
      options = {};
    }

    var rnds = options.random || (options.rng || random$1)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

    if (buf) {
      for (var ii = 0; ii < 16; ii++) {
        buf[i + ii] = rnds[ii];
      }
    }

    return buf || stringifyUUID$1(rnds);
  } // Rollup will complain about mixing default and named exports in UMD build,


  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  var commonjsGlobal$1 = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function commonjsRequire$1() {
    throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
  }

  function createCommonjsModule$1$1(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var moment$1 = createCommonjsModule$1$1(function (module, exports) {
    (function (global, factory) {
      module.exports = factory();
    })(commonjsGlobal$1, function () {
      var hookCallback;

      function hooks() {
        return hookCallback.apply(null, arguments);
      } // This is done to register the method called with moment()
      // without creating circular dependencies.


      function setHookCallback(callback) {
        hookCallback = callback;
      }

      function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
      }

      function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
      }

      function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
          return Object.getOwnPropertyNames(obj).length === 0;
        } else {
          var k;

          for (k in obj) {
            if (obj.hasOwnProperty(k)) {
              return false;
            }
          }

          return true;
        }
      }

      function isUndefined(input) {
        return input === void 0;
      }

      function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
      }

      function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
      }

      function map(arr, fn) {
        var res = [],
            i;

        for (i = 0; i < arr.length; ++i) {
          res.push(fn(arr[i], i));
        }

        return res;
      }

      function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
      }

      function extend(a, b) {
        for (var i in b) {
          if (hasOwnProp(b, i)) {
            a[i] = b[i];
          }
        }

        if (hasOwnProp(b, 'toString')) {
          a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
          a.valueOf = b.valueOf;
        }

        return a;
      }

      function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
      }

      function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
          empty: false,
          unusedTokens: [],
          unusedInput: [],
          overflow: -2,
          charsLeftOver: 0,
          nullInput: false,
          invalidMonth: null,
          invalidFormat: false,
          userInvalidated: false,
          iso: false,
          parsedDateParts: [],
          meridiem: null,
          rfc2822: false,
          weekdayMismatch: false
        };
      }

      function getParsingFlags(m) {
        if (m._pf == null) {
          m._pf = defaultParsingFlags();
        }

        return m._pf;
      }

      var some;

      if (Array.prototype.some) {
        some = Array.prototype.some;
      } else {
        some = function (fun) {
          var t = Object(this);
          var len = t.length >>> 0;

          for (var i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
              return true;
            }
          }

          return false;
        };
      }

      function isValid(m) {
        if (m._isValid == null) {
          var flags = getParsingFlags(m);
          var parsedParts = some.call(flags.parsedDateParts, function (i) {
            return i != null;
          });
          var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);

          if (m._strict) {
            isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
          }

          if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
          } else {
            return isNowValid;
          }
        }

        return m._isValid;
      }

      function createInvalid(flags) {
        var m = createUTC(NaN);

        if (flags != null) {
          extend(getParsingFlags(m), flags);
        } else {
          getParsingFlags(m).userInvalidated = true;
        }

        return m;
      } // Plugins that add properties should also add the key here (null value),
      // so we can properly clone ourselves.


      var momentProperties = hooks.momentProperties = [];

      function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
          to._isAMomentObject = from._isAMomentObject;
        }

        if (!isUndefined(from._i)) {
          to._i = from._i;
        }

        if (!isUndefined(from._f)) {
          to._f = from._f;
        }

        if (!isUndefined(from._l)) {
          to._l = from._l;
        }

        if (!isUndefined(from._strict)) {
          to._strict = from._strict;
        }

        if (!isUndefined(from._tzm)) {
          to._tzm = from._tzm;
        }

        if (!isUndefined(from._isUTC)) {
          to._isUTC = from._isUTC;
        }

        if (!isUndefined(from._offset)) {
          to._offset = from._offset;
        }

        if (!isUndefined(from._pf)) {
          to._pf = getParsingFlags(from);
        }

        if (!isUndefined(from._locale)) {
          to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
          for (i = 0; i < momentProperties.length; i++) {
            prop = momentProperties[i];
            val = from[prop];

            if (!isUndefined(val)) {
              to[prop] = val;
            }
          }
        }

        return to;
      }

      var updateInProgress = false; // Moment prototype object

      function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);

        if (!this.isValid()) {
          this._d = new Date(NaN);
        } // Prevent infinite loop in case updateOffset creates new moment
        // objects.


        if (updateInProgress === false) {
          updateInProgress = true;
          hooks.updateOffset(this);
          updateInProgress = false;
        }
      }

      function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
      }

      function absFloor(number) {
        if (number < 0) {
          // -0 -> 0
          return Math.ceil(number) || 0;
        } else {
          return Math.floor(number);
        }
      }

      function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
          value = absFloor(coercedNumber);
        }

        return value;
      } // compare two arrays, return the number of differences


      function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;

        for (i = 0; i < len; i++) {
          if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
            diffs++;
          }
        }

        return diffs + lengthDiff;
      }

      function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
          console.warn('Deprecation warning: ' + msg);
        }
      }

      function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function () {
          if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
          }

          if (firstTime) {
            var args = [];
            var arg;

            for (var i = 0; i < arguments.length; i++) {
              arg = '';

              if (typeof arguments[i] === 'object') {
                arg += '\n[' + i + '] ';

                for (var key in arguments[0]) {
                  arg += key + ': ' + arguments[0][key] + ', ';
                }

                arg = arg.slice(0, -2); // Remove trailing comma and space
              } else {
                arg = arguments[i];
              }

              args.push(arg);
            }

            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + new Error().stack);
            firstTime = false;
          }

          return fn.apply(this, arguments);
        }, fn);
      }

      var deprecations = {};

      function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
          hooks.deprecationHandler(name, msg);
        }

        if (!deprecations[name]) {
          warn(msg);
          deprecations[name] = true;
        }
      }

      hooks.suppressDeprecationWarnings = false;
      hooks.deprecationHandler = null;

      function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
      }

      function set(config) {
        var prop, i;

        for (i in config) {
          prop = config[i];

          if (isFunction(prop)) {
            this[i] = prop;
          } else {
            this['_' + i] = prop;
          }
        }

        this._config = config; // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.

        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\d{1,2}/.source);
      }

      function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;

        for (prop in childConfig) {
          if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
              res[prop] = {};
              extend(res[prop], parentConfig[prop]);
              extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
              res[prop] = childConfig[prop];
            } else {
              delete res[prop];
            }
          }
        }

        for (prop in parentConfig) {
          if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
            // make sure changes to properties don't modify parent config
            res[prop] = extend({}, res[prop]);
          }
        }

        return res;
      }

      function Locale(config) {
        if (config != null) {
          this.set(config);
        }
      }

      var keys;

      if (Object.keys) {
        keys = Object.keys;
      } else {
        keys = function (obj) {
          var i,
              res = [];

          for (i in obj) {
            if (hasOwnProp(obj, i)) {
              res.push(i);
            }
          }

          return res;
        };
      }

      var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L'
      };

      function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
      }

      var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A'
      };

      function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
          return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
          return val.slice(1);
        });
        return this._longDateFormat[key];
      }

      var defaultInvalidDate = 'Invalid date';

      function invalidDate() {
        return this._invalidDate;
      }

      var defaultOrdinal = '%d';
      var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

      function ordinal(number) {
        return this._ordinal.replace('%d', number);
      }

      var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years'
      };

      function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
      }

      function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
      }

      var aliases = {};

      function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
      }

      function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
      }

      function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
          if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);

            if (normalizedProp) {
              normalizedInput[normalizedProp] = inputObject[prop];
            }
          }
        }

        return normalizedInput;
      }

      var priorities = {};

      function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
      }

      function getPrioritizedUnits(unitsObj) {
        var units = [];

        for (var u in unitsObj) {
          units.push({
            unit: u,
            priority: priorities[u]
          });
        }

        units.sort(function (a, b) {
          return a.priority - b.priority;
        });
        return units;
      }

      function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
      }

      var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
      var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
      var formatFunctions = {};
      var formatTokenFunctions = {}; // token:    'M'
      // padded:   ['MM', 2]
      // ordinal:  'Mo'
      // callback: function () { this.month() + 1 }

      function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;

        if (typeof callback === 'string') {
          func = function () {
            return this[callback]();
          };
        }

        if (token) {
          formatTokenFunctions[token] = func;
        }

        if (padded) {
          formatTokenFunctions[padded[0]] = function () {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
          };
        }

        if (ordinal) {
          formatTokenFunctions[ordinal] = function () {
            return this.localeData().ordinal(func.apply(this, arguments), token);
          };
        }
      }

      function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
          return input.replace(/^\[|\]$/g, '');
        }

        return input.replace(/\\/g, '');
      }

      function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
          if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
          } else {
            array[i] = removeFormattingTokens(array[i]);
          }
        }

        return function (mom) {
          var output = '',
              i;

          for (i = 0; i < length; i++) {
            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
          }

          return output;
        };
      } // format date using native date object


      function formatMoment(m, format) {
        if (!m.isValid()) {
          return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
        return formatFunctions[format](m);
      }

      function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
          return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;

        while (i >= 0 && localFormattingTokens.test(format)) {
          format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
          localFormattingTokens.lastIndex = 0;
          i -= 1;
        }

        return format;
      }

      var match1 = /\d/; //       0 - 9

      var match2 = /\d\d/; //      00 - 99

      var match3 = /\d{3}/; //     000 - 999

      var match4 = /\d{4}/; //    0000 - 9999

      var match6 = /[+-]?\d{6}/; // -999999 - 999999

      var match1to2 = /\d\d?/; //       0 - 99

      var match3to4 = /\d\d\d\d?/; //     999 - 9999

      var match5to6 = /\d\d\d\d\d\d?/; //   99999 - 999999

      var match1to3 = /\d{1,3}/; //       0 - 999

      var match1to4 = /\d{1,4}/; //       0 - 9999

      var match1to6 = /[+-]?\d{1,6}/; // -999999 - 999999

      var matchUnsigned = /\d+/; //       0 - inf

      var matchSigned = /[+-]?\d+/; //    -inf - inf

      var matchOffset = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

      var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

      var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
      // any word (or two) characters or numbers including two/three word month in arabic.
      // includes scottish gaelic two word and hyphenated months

      var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
      var regexes = {};

      function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
          return isStrict && strictRegex ? strictRegex : regex;
        };
      }

      function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
          return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
      } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript


      function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
          return p1 || p2 || p3 || p4;
        }));
      }

      function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
      }

      var tokens = {};

      function addParseToken(token, callback) {
        var i,
            func = callback;

        if (typeof token === 'string') {
          token = [token];
        }

        if (isNumber(callback)) {
          func = function (input, array) {
            array[callback] = toInt(input);
          };
        }

        for (i = 0; i < token.length; i++) {
          tokens[token[i]] = func;
        }
      }

      function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
          config._w = config._w || {};
          callback(input, config._w, config, token);
        });
      }

      function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
          tokens[token](input, config._a, config, token);
        }
      }

      var YEAR = 0;
      var MONTH = 1;
      var DATE = 2;
      var HOUR = 3;
      var MINUTE = 4;
      var SECOND = 5;
      var MILLISECOND = 6;
      var WEEK = 7;
      var WEEKDAY = 8; // FORMATTING

      addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
      });
      addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
      });
      addFormatToken(0, ['YYYY', 4], 0, 'year');
      addFormatToken(0, ['YYYYY', 5], 0, 'year');
      addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES

      addUnitAlias('year', 'y'); // PRIORITIES

      addUnitPriority('year', 1); // PARSING

      addRegexToken('Y', matchSigned);
      addRegexToken('YY', match1to2, match2);
      addRegexToken('YYYY', match1to4, match4);
      addRegexToken('YYYYY', match1to6, match6);
      addRegexToken('YYYYYY', match1to6, match6);
      addParseToken(['YYYYY', 'YYYYYY'], YEAR);
      addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
      });
      addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
      });
      addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
      }); // HELPERS

      function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
      }

      function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      } // HOOKS


      hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
      }; // MOMENTS


      var getSetYear = makeGetSet('FullYear', true);

      function getIsLeapYear() {
        return isLeapYear(this.year());
      }

      function makeGetSet(unit, keepTime) {
        return function (value) {
          if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
          } else {
            return get(this, unit);
          }
        };
      }

      function get(mom, unit) {
        return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
      }

      function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
          if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
          } else {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
          }
        }
      } // MOMENTS


      function stringGet(units) {
        units = normalizeUnits(units);

        if (isFunction(this[units])) {
          return this[units]();
        }

        return this;
      }

      function stringSet(units, value) {
        if (typeof units === 'object') {
          units = normalizeObjectUnits(units);
          var prioritized = getPrioritizedUnits(units);

          for (var i = 0; i < prioritized.length; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
          }
        } else {
          units = normalizeUnits(units);

          if (isFunction(this[units])) {
            return this[units](value);
          }
        }

        return this;
      }

      function mod(n, x) {
        return (n % x + x) % x;
      }

      var indexOf;

      if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
      } else {
        indexOf = function (o) {
          // I know
          var i;

          for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
              return i;
            }
          }

          return -1;
        };
      }

      function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
          return NaN;
        }

        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
      } // FORMATTING


      addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
      });
      addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
      });
      addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
      }); // ALIASES

      addUnitAlias('month', 'M'); // PRIORITY

      addUnitPriority('month', 8); // PARSING

      addRegexToken('M', match1to2);
      addRegexToken('MM', match1to2, match2);
      addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
      });
      addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
      });
      addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
      });
      addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.


        if (month != null) {
          array[MONTH] = month;
        } else {
          getParsingFlags(config).invalidMonth = input;
        }
      }); // LOCALES

      var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
      var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');

      function localeMonths(m, format) {
        if (!m) {
          return isArray(this._months) ? this._months : this._months['standalone'];
        }

        return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
      }

      var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');

      function localeMonthsShort(m, format) {
        if (!m) {
          return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];
        }

        return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
      }

      function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();

        if (!this._monthsParse) {
          // this is not used
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];

          for (i = 0; i < 12; ++i) {
            mom = createUTC([2000, i]);
            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
          }
        }

        if (strict) {
          if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._longMonthsParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }

      function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
          return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
        } // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse


        for (i = 0; i < 12; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, i]);

          if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
          }

          if (!strict && !this._monthsParse[i]) {
            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
          } // test the regex


          if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
            return i;
          } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
            return i;
          } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
          }
        }
      } // MOMENTS


      function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
          // No op
          return mom;
        }

        if (typeof value === 'string') {
          if (/^\d+$/.test(value)) {
            value = toInt(value);
          } else {
            value = mom.localeData().monthsParse(value); // TODO: Another silent failure?

            if (!isNumber(value)) {
              return mom;
            }
          }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));

        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);

        return mom;
      }

      function getSetMonth(value) {
        if (value != null) {
          setMonth(this, value);
          hooks.updateOffset(this, true);
          return this;
        } else {
          return get(this, 'Month');
        }
      }

      function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
      }

      var defaultMonthsShortRegex = matchWord;

      function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
          }

          if (isStrict) {
            return this._monthsShortStrictRegex;
          } else {
            return this._monthsShortRegex;
          }
        } else {
          if (!hasOwnProp(this, '_monthsShortRegex')) {
            this._monthsShortRegex = defaultMonthsShortRegex;
          }

          return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
      }

      var defaultMonthsRegex = matchWord;

      function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
          }

          if (isStrict) {
            return this._monthsStrictRegex;
          } else {
            return this._monthsRegex;
          }
        } else {
          if (!hasOwnProp(this, '_monthsRegex')) {
            this._monthsRegex = defaultMonthsRegex;
          }

          return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
        }
      }

      function computeMonthsParse() {
        function cmpLenRev(a, b) {
          return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;

        for (i = 0; i < 12; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, i]);
          shortPieces.push(this.monthsShort(mom, ''));
          longPieces.push(this.months(mom, ''));
          mixedPieces.push(this.months(mom, ''));
          mixedPieces.push(this.monthsShort(mom, ''));
        } // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.


        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        for (i = 0; i < 12; i++) {
          shortPieces[i] = regexEscape(shortPieces[i]);
          longPieces[i] = regexEscape(longPieces[i]);
        }

        for (i = 0; i < 24; i++) {
          mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
      }

      function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date; // the date constructor remaps years 0-99 to 1900-1999

        if (y < 100 && y >= 0) {
          // preserve leap years using a full 400 year cycle, then reset
          date = new Date(y + 400, m, d, h, M, s, ms);

          if (isFinite(date.getFullYear())) {
            date.setFullYear(y);
          }
        } else {
          date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
      }

      function createUTCDate(y) {
        var date; // the Date.UTC function remaps years 0-99 to 1900-1999

        if (y < 100 && y >= 0) {
          var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset

          args[0] = y + 400;
          date = new Date(Date.UTC.apply(null, args));

          if (isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
          }
        } else {
          date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
      } // start-of-first-week - start-of-year


      function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1;
      } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday


      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
          resYear = year - 1;
          resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
          resYear = year + 1;
          resDayOfYear = dayOfYear - daysInYear(year);
        } else {
          resYear = year;
          resDayOfYear = dayOfYear;
        }

        return {
          year: resYear,
          dayOfYear: resDayOfYear
        };
      }

      function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
          resYear = mom.year() - 1;
          resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
          resWeek = week - weeksInYear(mom.year(), dow, doy);
          resYear = mom.year() + 1;
        } else {
          resYear = mom.year();
          resWeek = week;
        }

        return {
          week: resWeek,
          year: resYear
        };
      }

      function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
      } // FORMATTING


      addFormatToken('w', ['ww', 2], 'wo', 'week');
      addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES

      addUnitAlias('week', 'w');
      addUnitAlias('isoWeek', 'W'); // PRIORITIES

      addUnitPriority('week', 5);
      addUnitPriority('isoWeek', 5); // PARSING

      addRegexToken('w', match1to2);
      addRegexToken('ww', match1to2, match2);
      addRegexToken('W', match1to2);
      addRegexToken('WW', match1to2, match2);
      addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
      }); // HELPERS
      // LOCALES

      function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
      }

      var defaultLocaleWeek = {
        dow: 0,
        // Sunday is the first day of the week.
        doy: 6 // The week that contains Jan 6th is the first week of the year.

      };

      function localeFirstDayOfWeek() {
        return this._week.dow;
      }

      function localeFirstDayOfYear() {
        return this._week.doy;
      } // MOMENTS


      function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
      }

      function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
      } // FORMATTING


      addFormatToken('d', 0, 'do', 'day');
      addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
      });
      addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
      });
      addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
      });
      addFormatToken('e', 0, 0, 'weekday');
      addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES

      addUnitAlias('day', 'd');
      addUnitAlias('weekday', 'e');
      addUnitAlias('isoWeekday', 'E'); // PRIORITY

      addUnitPriority('day', 11);
      addUnitPriority('weekday', 11);
      addUnitPriority('isoWeekday', 11); // PARSING

      addRegexToken('d', match1to2);
      addRegexToken('e', match1to2);
      addRegexToken('E', match1to2);
      addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
      });
      addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
      });
      addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
      });
      addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid


        if (weekday != null) {
          week.d = weekday;
        } else {
          getParsingFlags(config).invalidWeekday = input;
        }
      });
      addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
      }); // HELPERS

      function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
          return input;
        }

        if (!isNaN(input)) {
          return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);

        if (typeof input === 'number') {
          return input;
        }

        return null;
      }

      function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
          return locale.weekdaysParse(input) % 7 || 7;
        }

        return isNaN(input) ? null : input;
      } // LOCALES


      function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
      }

      var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');

      function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];
        return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
      }

      var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');

      function localeWeekdaysShort(m) {
        return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
      }

      var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');

      function localeWeekdaysMin(m) {
        return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
      }

      function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();

        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._minWeekdaysParse = [];

          for (i = 0; i < 7; ++i) {
            mom = createUTC([2000, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
          }
        }

        if (strict) {
          if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        } else {
          if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._shortWeekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._weekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._weekdaysParse, llc);

            if (ii !== -1) {
              return ii;
            }

            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
          }
        }
      }

      function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
          return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._minWeekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, 1]).day(i);

          if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
          }

          if (!this._weekdaysParse[i]) {
            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
          } // test the regex


          if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
          } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
          }
        }
      } // MOMENTS


      function getSetDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }

        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();

        if (input != null) {
          input = parseWeekday(input, this.localeData());
          return this.add(input - day, 'd');
        } else {
          return day;
        }
      }

      function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }

        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
      }

      function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        } // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.


        if (input != null) {
          var weekday = parseIsoWeekday(input, this.localeData());
          return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
          return this.day() || 7;
        }
      }

      var defaultWeekdaysRegex = matchWord;

      function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
          }

          if (isStrict) {
            return this._weekdaysStrictRegex;
          } else {
            return this._weekdaysRegex;
          }
        } else {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            this._weekdaysRegex = defaultWeekdaysRegex;
          }

          return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
      }

      var defaultWeekdaysShortRegex = matchWord;

      function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
          }

          if (isStrict) {
            return this._weekdaysShortStrictRegex;
          } else {
            return this._weekdaysShortRegex;
          }
        } else {
          if (!hasOwnProp(this, '_weekdaysShortRegex')) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
          }

          return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
      }

      var defaultWeekdaysMinRegex = matchWord;

      function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
          }

          if (isStrict) {
            return this._weekdaysMinStrictRegex;
          } else {
            return this._weekdaysMinRegex;
          }
        } else {
          if (!hasOwnProp(this, '_weekdaysMinRegex')) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
          }

          return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
      }

      function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
          return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;

        for (i = 0; i < 7; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, 1]).day(i);
          minp = this.weekdaysMin(mom, '');
          shortp = this.weekdaysShort(mom, '');
          longp = this.weekdays(mom, '');
          minPieces.push(minp);
          shortPieces.push(shortp);
          longPieces.push(longp);
          mixedPieces.push(minp);
          mixedPieces.push(shortp);
          mixedPieces.push(longp);
        } // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.


        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        for (i = 0; i < 7; i++) {
          shortPieces[i] = regexEscape(shortPieces[i]);
          longPieces[i] = regexEscape(longPieces[i]);
          mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
      } // FORMATTING


      function hFormat() {
        return this.hours() % 12 || 12;
      }

      function kFormat() {
        return this.hours() || 24;
      }

      addFormatToken('H', ['HH', 2], 0, 'hour');
      addFormatToken('h', ['hh', 2], 0, hFormat);
      addFormatToken('k', ['kk', 2], 0, kFormat);
      addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
      });
      addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
      });
      addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });

      function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
          return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
      }

      meridiem('a', true);
      meridiem('A', false); // ALIASES

      addUnitAlias('hour', 'h'); // PRIORITY

      addUnitPriority('hour', 13); // PARSING

      function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
      }

      addRegexToken('a', matchMeridiem);
      addRegexToken('A', matchMeridiem);
      addRegexToken('H', match1to2);
      addRegexToken('h', match1to2);
      addRegexToken('k', match1to2);
      addRegexToken('HH', match1to2, match2);
      addRegexToken('hh', match1to2, match2);
      addRegexToken('kk', match1to2, match2);
      addRegexToken('hmm', match3to4);
      addRegexToken('hmmss', match5to6);
      addRegexToken('Hmm', match3to4);
      addRegexToken('Hmmss', match5to6);
      addParseToken(['H', 'HH'], HOUR);
      addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
      });
      addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
      });
      addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
      });
      addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
      });
      addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
      });
      addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
      });
      addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
      }); // LOCALES

      function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
      }

      var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;

      function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
          return isLower ? 'pm' : 'PM';
        } else {
          return isLower ? 'am' : 'AM';
        }
      } // MOMENTS
      // Setting the hour should keep the time, because the user explicitly
      // specified which hour they want. So trying to maintain the same hour (in
      // a new timezone) makes sense. Adding/subtracting hours does not follow
      // this rule.


      var getSetHour = makeGetSet('Hours', true);
      var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,
        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,
        week: defaultLocaleWeek,
        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,
        meridiemParse: defaultLocaleMeridiemParse
      }; // internal storage for locale config files

      var locales = {};
      var localeFamilies = {};
      var globalLocale;

      function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
      } // pick the locale from the array
      // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
      // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root


      function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
          split = normalizeLocale(names[i]).split('-');
          j = split.length;
          next = normalizeLocale(names[i + 1]);
          next = next ? next.split('-') : null;

          while (j > 0) {
            locale = loadLocale(split.slice(0, j).join('-'));

            if (locale) {
              return locale;
            }

            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
              //the next array item is better than a shallower substring of this one
              break;
            }

            j--;
          }

          i++;
        }

        return globalLocale;
      }

      function loadLocale(name) {
        var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node

        if (!locales[name] && 'object' !== 'undefined' && module && module.exports) {
          try {
            oldLocale = globalLocale._abbr;
            var aliasedRequire = commonjsRequire$1;
            aliasedRequire('./locale/' + name);
            getSetGlobalLocale(oldLocale);
          } catch (e) {}
        }

        return locales[name];
      } // This function will load locale and then set the global locale.  If
      // no arguments are passed in, it will simply return the current global
      // locale key.


      function getSetGlobalLocale(key, values) {
        var data;

        if (key) {
          if (isUndefined(values)) {
            data = getLocale(key);
          } else {
            data = defineLocale(key, values);
          }

          if (data) {
            // moment.duration._locale = moment._locale = data;
            globalLocale = data;
          } else {
            if (typeof console !== 'undefined' && console.warn) {
              //warn user if arguments are passed but the locale could not be set
              console.warn('Locale ' + key + ' not found. Did you forget to load it?');
            }
          }
        }

        return globalLocale._abbr;
      }

      function defineLocale(name, config) {
        if (config !== null) {
          var locale,
              parentConfig = baseConfig;
          config.abbr = name;

          if (locales[name] != null) {
            deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
            parentConfig = locales[name]._config;
          } else if (config.parentLocale != null) {
            if (locales[config.parentLocale] != null) {
              parentConfig = locales[config.parentLocale]._config;
            } else {
              locale = loadLocale(config.parentLocale);

              if (locale != null) {
                parentConfig = locale._config;
              } else {
                if (!localeFamilies[config.parentLocale]) {
                  localeFamilies[config.parentLocale] = [];
                }

                localeFamilies[config.parentLocale].push({
                  name: name,
                  config: config
                });
                return null;
              }
            }
          }

          locales[name] = new Locale(mergeConfigs(parentConfig, config));

          if (localeFamilies[name]) {
            localeFamilies[name].forEach(function (x) {
              defineLocale(x.name, x.config);
            });
          } // backwards compat for now: also set the locale
          // make sure we set the locale AFTER all child locales have been
          // created, so we won't end up with the child locale set.


          getSetGlobalLocale(name);
          return locales[name];
        } else {
          // useful for testing
          delete locales[name];
          return null;
        }
      }

      function updateLocale(name, config) {
        if (config != null) {
          var locale,
              tmpLocale,
              parentConfig = baseConfig; // MERGE

          tmpLocale = loadLocale(name);

          if (tmpLocale != null) {
            parentConfig = tmpLocale._config;
          }

          config = mergeConfigs(parentConfig, config);
          locale = new Locale(config);
          locale.parentLocale = locales[name];
          locales[name] = locale; // backwards compat for now: also set the locale

          getSetGlobalLocale(name);
        } else {
          // pass null for config to unupdate, useful for tests
          if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
              locales[name] = locales[name].parentLocale;
            } else if (locales[name] != null) {
              delete locales[name];
            }
          }
        }

        return locales[name];
      } // returns locale data


      function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
          key = key._locale._abbr;
        }

        if (!key) {
          return globalLocale;
        }

        if (!isArray(key)) {
          //short-circuit everything else
          locale = loadLocale(key);

          if (locale) {
            return locale;
          }

          key = [key];
        }

        return chooseLocale(key);
      }

      function listLocales() {
        return keys(locales);
      }

      function checkOverflow(m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
          overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;

          if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
          }

          if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
          }

          if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
          }

          getParsingFlags(m).overflow = overflow;
        }

        return m;
      } // Pick the first defined of two or three arguments.


      function defaults(a, b, c) {
        if (a != null) {
          return a;
        }

        if (b != null) {
          return b;
        }

        return c;
      }

      function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());

        if (config._useUTC) {
          return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }

        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
      } // convert an array to a date.
      // the array should mirror the parameters below
      // note: all values past the year are optional and will default to the lowest possible value.
      // [year, month, day , hour, minute, second, millisecond]


      function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
          return;
        }

        currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays

        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
          dayOfYearFromWeekInfo(config);
        } //if the day of the year is set, figure out what it is


        if (config._dayOfYear != null) {
          yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

          if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
            getParsingFlags(config)._overflowDayOfYear = true;
          }

          date = createUTCDate(yearToUse, 0, config._dayOfYear);
          config._a[MONTH] = date.getUTCMonth();
          config._a[DATE] = date.getUTCDate();
        } // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything


        for (i = 0; i < 3 && config._a[i] == null; ++i) {
          config._a[i] = input[i] = currentDate[i];
        } // Zero out whatever was not defaulted, including time


        for (; i < 7; i++) {
          config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
        } // Check for 24:00:00.000


        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
          config._nextDay = true;
          config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.

        if (config._tzm != null) {
          config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
          config._a[HOUR] = 24;
        } // check for mismatching day of week


        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
          getParsingFlags(config).weekdayMismatch = true;
        }
      }

      function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
        w = config._w;

        if (w.GG != null || w.W != null || w.E != null) {
          dow = 1;
          doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on
          // how we interpret now (local, utc, fixed offset). So create
          // a now version of current config (take local/utc/offset flags, and
          // create now).

          weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
          week = defaults(w.W, 1);
          weekday = defaults(w.E, 1);

          if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
          }
        } else {
          dow = config._locale._week.dow;
          doy = config._locale._week.doy;
          var curWeek = weekOfYear(createLocal(), dow, doy);
          weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.

          week = defaults(w.w, curWeek.week);

          if (w.d != null) {
            // weekday -- low day numbers are considered next week
            weekday = w.d;

            if (weekday < 0 || weekday > 6) {
              weekdayOverflow = true;
            }
          } else if (w.e != null) {
            // local weekday -- counting starts from beginning of week
            weekday = w.e + dow;

            if (w.e < 0 || w.e > 6) {
              weekdayOverflow = true;
            }
          } else {
            // default to beginning of week
            weekday = dow;
          }
        }

        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
          getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
          getParsingFlags(config)._overflowWeekday = true;
        } else {
          temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
          config._a[YEAR] = temp.year;
          config._dayOfYear = temp.dayOfYear;
        }
      } // iso 8601 regex
      // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)


      var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
      var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
      var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
      var isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, false], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, false], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], // YYYYMM is NOT allowed by the standard
      ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, false], ['YYYYDDD', /\d{7}/]]; // iso time formats and regexes

      var isoTimes = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]];
      var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i; // date from iso format

      function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
          getParsingFlags(config).iso = true;

          for (i = 0, l = isoDates.length; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
              dateFormat = isoDates[i][0];
              allowTime = isoDates[i][2] !== false;
              break;
            }
          }

          if (dateFormat == null) {
            config._isValid = false;
            return;
          }

          if (match[3]) {
            for (i = 0, l = isoTimes.length; i < l; i++) {
              if (isoTimes[i][1].exec(match[3])) {
                // match[2] should be 'T' or space
                timeFormat = (match[2] || ' ') + isoTimes[i][0];
                break;
              }
            }

            if (timeFormat == null) {
              config._isValid = false;
              return;
            }
          }

          if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
          }

          if (match[4]) {
            if (tzRegex.exec(match[4])) {
              tzFormat = 'Z';
            } else {
              config._isValid = false;
              return;
            }
          }

          config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
          configFromStringAndFormat(config);
        } else {
          config._isValid = false;
        }
      } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3


      var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

      function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];

        if (secondStr) {
          result.push(parseInt(secondStr, 10));
        }

        return result;
      }

      function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);

        if (year <= 49) {
          return 2000 + year;
        } else if (year <= 999) {
          return 1900 + year;
        }

        return year;
      }

      function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
      }

      function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
          // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
          var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
              weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();

          if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config).weekdayMismatch = true;
            config._isValid = false;
            return false;
          }
        }

        return true;
      }

      var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
      };

      function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
          return obsOffsets[obsOffset];
        } else if (militaryOffset) {
          // the only allowed military tz is Z
          return 0;
        } else {
          var hm = parseInt(numOffset, 10);
          var m = hm % 100,
              h = (hm - m) / 100;
          return h * 60 + m;
        }
      } // date and time from ref 2822 format


      function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));

        if (match) {
          var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);

          if (!checkWeekday(match[1], parsedArray, config)) {
            return;
          }

          config._a = parsedArray;
          config._tzm = calculateOffset(match[8], match[9], match[10]);
          config._d = createUTCDate.apply(null, config._a);

          config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

          getParsingFlags(config).rfc2822 = true;
        } else {
          config._isValid = false;
        }
      } // date from iso format or fallback


      function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
          config._d = new Date(+matched[1]);
          return;
        }

        configFromISO(config);

        if (config._isValid === false) {
          delete config._isValid;
        } else {
          return;
        }

        configFromRFC2822(config);

        if (config._isValid === false) {
          delete config._isValid;
        } else {
          return;
        } // Final attempt, use Input Fallback


        hooks.createFromInputFallback(config);
      }

      hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
      }); // constant that refers to the ISO standard

      hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form


      hooks.RFC_2822 = function () {}; // date from string and format string


      function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
          configFromISO(config);
          return;
        }

        if (config._f === hooks.RFC_2822) {
          configFromRFC2822(config);
          return;
        }

        config._a = [];
        getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`

        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;
        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
          token = tokens[i];
          parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,
          //         'regex', getParseRegexForToken(token, config));

          if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));

            if (skipped.length > 0) {
              getParsingFlags(config).unusedInput.push(skipped);
            }

            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
          } // don't parse if it's not a known token


          if (formatTokenFunctions[token]) {
            if (parsedInput) {
              getParsingFlags(config).empty = false;
            } else {
              getParsingFlags(config).unusedTokens.push(token);
            }

            addTimeToArrayFromToken(token, parsedInput, config);
          } else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token);
          }
        } // add remaining unparsed input length to the string


        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;

        if (string.length > 0) {
          getParsingFlags(config).unusedInput.push(string);
        } // clear _12h flag if hour is <= 12


        if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
          getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem; // handle meridiem

        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
        configFromArray(config);
        checkOverflow(config);
      }

      function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
          // nothing to do
          return hour;
        }

        if (locale.meridiemHour != null) {
          return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
          // Fallback
          isPm = locale.isPM(meridiem);

          if (isPm && hour < 12) {
            hour += 12;
          }

          if (!isPm && hour === 12) {
            hour = 0;
          }

          return hour;
        } else {
          // this is not supposed to happen
          return hour;
        }
      } // date from string and array of format strings


      function configFromStringAndArray(config) {
        var tempConfig, bestMoment, scoreToBeat, i, currentScore;

        if (config._f.length === 0) {
          getParsingFlags(config).invalidFormat = true;
          config._d = new Date(NaN);
          return;
        }

        for (i = 0; i < config._f.length; i++) {
          currentScore = 0;
          tempConfig = copyConfig({}, config);

          if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
          }

          tempConfig._f = config._f[i];
          configFromStringAndFormat(tempConfig);

          if (!isValid(tempConfig)) {
            continue;
          } // if there is any input that was not parsed add a penalty for that format


          currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens

          currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
          getParsingFlags(tempConfig).score = currentScore;

          if (scoreToBeat == null || currentScore < scoreToBeat) {
            scoreToBeat = currentScore;
            bestMoment = tempConfig;
          }
        }

        extend(config, bestMoment || tempConfig);
      }

      function configFromObject(config) {
        if (config._d) {
          return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
          return obj && parseInt(obj, 10);
        });
        configFromArray(config);
      }

      function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));

        if (res._nextDay) {
          // Adding is smart enough around DST
          res.add(1, 'd');
          res._nextDay = undefined;
        }

        return res;
      }

      function prepareConfig(config) {
        var input = config._i,
            format = config._f;
        config._locale = config._locale || getLocale(config._l);

        if (input === null || format === undefined && input === '') {
          return createInvalid({
            nullInput: true
          });
        }

        if (typeof input === 'string') {
          config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
          return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
          config._d = input;
        } else if (isArray(format)) {
          configFromStringAndArray(config);
        } else if (format) {
          configFromStringAndFormat(config);
        } else {
          configFromInput(config);
        }

        if (!isValid(config)) {
          config._d = null;
        }

        return config;
      }

      function configFromInput(config) {
        var input = config._i;

        if (isUndefined(input)) {
          config._d = new Date(hooks.now());
        } else if (isDate(input)) {
          config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
          configFromString(config);
        } else if (isArray(input)) {
          config._a = map(input.slice(0), function (obj) {
            return parseInt(obj, 10);
          });
          configFromArray(config);
        } else if (isObject(input)) {
          configFromObject(config);
        } else if (isNumber(input)) {
          // from milliseconds
          config._d = new Date(input);
        } else {
          hooks.createFromInputFallback(config);
        }
      }

      function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
          strict = locale;
          locale = undefined;
        }

        if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
          input = undefined;
        } // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423


        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;
        return createFromConfig(c);
      }

      function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
      }

      var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);

        if (this.isValid() && other.isValid()) {
          return other < this ? this : other;
        } else {
          return createInvalid();
        }
      });
      var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);

        if (this.isValid() && other.isValid()) {
          return other > this ? this : other;
        } else {
          return createInvalid();
        }
      }); // Pick a moment m from moments so that m[fn](other) is true for all
      // other. This relies on the function fn to be transitive.
      //
      // moments should either be an array of moment objects or an array, whose
      // first element is an array of moment objects.

      function pickBy(fn, moments) {
        var res, i;

        if (moments.length === 1 && isArray(moments[0])) {
          moments = moments[0];
        }

        if (!moments.length) {
          return createLocal();
        }

        res = moments[0];

        for (i = 1; i < moments.length; ++i) {
          if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
          }
        }

        return res;
      } // TODO: Use [].sort instead?


      function min() {
        var args = [].slice.call(arguments, 0);
        return pickBy('isBefore', args);
      }

      function max() {
        var args = [].slice.call(arguments, 0);
        return pickBy('isAfter', args);
      }

      var now = function () {
        return Date.now ? Date.now() : +new Date();
      };

      var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

      function isDurationValid(m) {
        for (var key in m) {
          if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
          }
        }

        var unitHasDecimal = false;

        for (var i = 0; i < ordering.length; ++i) {
          if (m[ordering[i]]) {
            if (unitHasDecimal) {
              return false; // only allow non-integers for smallest unit
            }

            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
              unitHasDecimal = true;
            }
          }
        }

        return true;
      }

      function isValid$1() {
        return this._isValid;
      }

      function createInvalid$1() {
        return createDuration(NaN);
      }

      function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;
        this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove

        this._milliseconds = +milliseconds + seconds * 1e3 + // 1000
        minutes * 6e4 + // 1000 * 60
        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately

        this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.

        this._months = +months + quarters * 3 + years * 12;
        this._data = {};
        this._locale = getLocale();

        this._bubble();
      }

      function isDuration(obj) {
        return obj instanceof Duration;
      }

      function absRound(number) {
        if (number < 0) {
          return Math.round(-1 * number) * -1;
        } else {
          return Math.round(number);
        }
      } // FORMATTING


      function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
          var offset = this.utcOffset();
          var sign = '+';

          if (offset < 0) {
            offset = -offset;
            sign = '-';
          }

          return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);
        });
      }

      offset('Z', ':');
      offset('ZZ', ''); // PARSING

      addRegexToken('Z', matchShortOffset);
      addRegexToken('ZZ', matchShortOffset);
      addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
      }); // HELPERS
      // timezone chunker
      // '+10:00' > ['10',  '00']
      // '-1530'  > ['-15', '30']

      var chunkOffset = /([\+\-]|\d\d)/gi;

      function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
          return null;
        }

        var chunk = matches[matches.length - 1] || [];
        var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);
        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
      } // Return a moment from input, that is local/utc/zone equivalent to model.


      function cloneWithOffset(input, model) {
        var res, diff;

        if (model._isUTC) {
          res = model.clone();
          diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.

          res._d.setTime(res._d.valueOf() + diff);

          hooks.updateOffset(res, false);
          return res;
        } else {
          return createLocal(input).local();
        }
      }

      function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
      } // HOOKS
      // This function will be called whenever a moment is mutated.
      // It is intended to keep the offset in sync with the timezone.


      hooks.updateOffset = function () {}; // MOMENTS
      // keepLocalTime = true means only change the timezone, without
      // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
      // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
      // +0200, so we adjust the time as needed, to be valid.
      //
      // Keeping the time actually adds/subtracts (one hour)
      // from the actual represented time. That is why we call updateOffset
      // a second time. In case it wants us to change the offset again
      // _changeInProgress == true case, then we have to adjust, because
      // there is no such time in the given timezone.


      function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;

        if (!this.isValid()) {
          return input != null ? this : NaN;
        }

        if (input != null) {
          if (typeof input === 'string') {
            input = offsetFromString(matchShortOffset, input);

            if (input === null) {
              return this;
            }
          } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
          }

          if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
          }

          this._offset = input;
          this._isUTC = true;

          if (localAdjust != null) {
            this.add(localAdjust, 'm');
          }

          if (offset !== input) {
            if (!keepLocalTime || this._changeInProgress) {
              addSubtract(this, createDuration(input - offset, 'm'), 1, false);
            } else if (!this._changeInProgress) {
              this._changeInProgress = true;
              hooks.updateOffset(this, true);
              this._changeInProgress = null;
            }
          }

          return this;
        } else {
          return this._isUTC ? offset : getDateOffset(this);
        }
      }

      function getSetZone(input, keepLocalTime) {
        if (input != null) {
          if (typeof input !== 'string') {
            input = -input;
          }

          this.utcOffset(input, keepLocalTime);
          return this;
        } else {
          return -this.utcOffset();
        }
      }

      function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
      }

      function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
          this.utcOffset(0, keepLocalTime);
          this._isUTC = false;

          if (keepLocalTime) {
            this.subtract(getDateOffset(this), 'm');
          }
        }

        return this;
      }

      function setOffsetToParsedOffset() {
        if (this._tzm != null) {
          this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
          var tZone = offsetFromString(matchOffset, this._i);

          if (tZone != null) {
            this.utcOffset(tZone);
          } else {
            this.utcOffset(0, true);
          }
        }

        return this;
      }

      function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
          return false;
        }

        input = input ? createLocal(input).utcOffset() : 0;
        return (this.utcOffset() - input) % 60 === 0;
      }

      function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
      }

      function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
          return this._isDSTShifted;
        }

        var c = {};
        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
          var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
          this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
          this._isDSTShifted = false;
        }

        return this._isDSTShifted;
      }

      function isLocal() {
        return this.isValid() ? !this._isUTC : false;
      }

      function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
      }

      function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
      } // ASP.NET json date format regex


      var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
      // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
      // and further modified to allow for strings containing both week and day

      var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

      function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
        match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
          duration = {
            ms: input._milliseconds,
            d: input._days,
            M: input._months
          };
        } else if (isNumber(input)) {
          duration = {};

          if (key) {
            duration[key] = input;
          } else {
            duration.milliseconds = input;
          }
        } else if (!!(match = aspNetRegex.exec(input))) {
          sign = match[1] === '-' ? -1 : 1;
          duration = {
            y: 0,
            d: toInt(match[DATE]) * sign,
            h: toInt(match[HOUR]) * sign,
            m: toInt(match[MINUTE]) * sign,
            s: toInt(match[SECOND]) * sign,
            ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match

          };
        } else if (!!(match = isoRegex.exec(input))) {
          sign = match[1] === '-' ? -1 : 1;
          duration = {
            y: parseIso(match[2], sign),
            M: parseIso(match[3], sign),
            w: parseIso(match[4], sign),
            d: parseIso(match[5], sign),
            h: parseIso(match[6], sign),
            m: parseIso(match[7], sign),
            s: parseIso(match[8], sign)
          };
        } else if (duration == null) {
          // checks for null or undefined
          duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
          diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
          duration = {};
          duration.ms = diffRes.milliseconds;
          duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
          ret._locale = input._locale;
        }

        return ret;
      }

      createDuration.fn = Duration.prototype;
      createDuration.invalid = createInvalid$1;

      function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it

        return (isNaN(res) ? 0 : res) * sign;
      }

      function positiveMomentsDifference(base, other) {
        var res = {};
        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;

        if (base.clone().add(res.months, 'M').isAfter(other)) {
          --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');
        return res;
      }

      function momentsDifference(base, other) {
        var res;

        if (!(base.isValid() && other.isValid())) {
          return {
            milliseconds: 0,
            months: 0
          };
        }

        other = cloneWithOffset(other, base);

        if (base.isBefore(other)) {
          res = positiveMomentsDifference(base, other);
        } else {
          res = positiveMomentsDifference(other, base);
          res.milliseconds = -res.milliseconds;
          res.months = -res.months;
        }

        return res;
      } // TODO: remove 'name' arg after deprecation is removed


      function createAdder(direction, name) {
        return function (val, period) {
          var dur, tmp; //invert the arguments, but complain about it

          if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
            tmp = val;
            val = period;
            period = tmp;
          }

          val = typeof val === 'string' ? +val : val;
          dur = createDuration(val, period);
          addSubtract(this, dur, direction);
          return this;
        };
      }

      function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
          // No op
          return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
          setMonth(mom, get(mom, 'Month') + months * isAdding);
        }

        if (days) {
          set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }

        if (milliseconds) {
          mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }

        if (updateOffset) {
          hooks.updateOffset(mom, days || months);
        }
      }

      var add = createAdder(1, 'add');
      var subtract = createAdder(-1, 'subtract');

      function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
      }

      function calendar$1(time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';
        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
      }

      function clone() {
        return new Moment(this);
      }

      function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);

        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }

        units = normalizeUnits(units) || 'millisecond';

        if (units === 'millisecond') {
          return this.valueOf() > localInput.valueOf();
        } else {
          return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
      }

      function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);

        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }

        units = normalizeUnits(units) || 'millisecond';

        if (units === 'millisecond') {
          return this.valueOf() < localInput.valueOf();
        } else {
          return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
      }

      function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);

        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
          return false;
        }

        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
      }

      function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;

        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }

        units = normalizeUnits(units) || 'millisecond';

        if (units === 'millisecond') {
          return this.valueOf() === localInput.valueOf();
        } else {
          inputMs = localInput.valueOf();
          return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
      }

      function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
      }

      function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
      }

      function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
          return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
          return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
        units = normalizeUnits(units);

        switch (units) {
          case 'year':
            output = monthDiff(this, that) / 12;
            break;

          case 'month':
            output = monthDiff(this, that);
            break;

          case 'quarter':
            output = monthDiff(this, that) / 3;
            break;

          case 'second':
            output = (this - that) / 1e3;
            break;
          // 1000

          case 'minute':
            output = (this - that) / 6e4;
            break;
          // 1000 * 60

          case 'hour':
            output = (this - that) / 36e5;
            break;
          // 1000 * 60 * 60

          case 'day':
            output = (this - that - zoneDelta) / 864e5;
            break;
          // 1000 * 60 * 60 * 24, negate dst

          case 'week':
            output = (this - that - zoneDelta) / 6048e5;
            break;
          // 1000 * 60 * 60 * 24 * 7, negate dst

          default:
            output = this - that;
        }

        return asFloat ? output : absFloor(output);
      }

      function monthDiff(a, b) {
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
        anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
          anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month

          adjust = (b - anchor) / (anchor - anchor2);
        } else {
          anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month

          adjust = (b - anchor) / (anchor2 - anchor);
        } //check for negative zero, return zero if negative zero


        return -(wholeMonthDiff + adjust) || 0;
      }

      hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
      hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

      function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
      }

      function toISOString(keepOffset) {
        if (!this.isValid()) {
          return null;
        }

        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;

        if (m.year() < 0 || m.year() > 9999) {
          return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }

        if (isFunction(Date.prototype.toISOString)) {
          // native implementation is ~50x faster, use it when we can
          if (utc) {
            return this.toDate().toISOString();
          } else {
            return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
          }
        }

        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
      }
      /**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */


      function inspect() {
        if (!this.isValid()) {
          return 'moment.invalid(/* ' + this._i + ' */)';
        }

        var func = 'moment';
        var zone = '';

        if (!this.isLocal()) {
          func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
          zone = 'Z';
        }

        var prefix = '[' + func + '("]';
        var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';
        return this.format(prefix + year + datetime + suffix);
      }

      function format(inputString) {
        if (!inputString) {
          inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }

        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
      }

      function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({
            to: this,
            from: time
          }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }

      function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
      }

      function to(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({
            from: this,
            to: time
          }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }

      function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
      } // If passed a locale key, it will set the locale for this
      // instance.  Otherwise, it will return the locale configuration
      // variables for this instance.


      function locale(key) {
        var newLocaleData;

        if (key === undefined) {
          return this._locale._abbr;
        } else {
          newLocaleData = getLocale(key);

          if (newLocaleData != null) {
            this._locale = newLocaleData;
          }

          return this;
        }
      }

      var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
        if (key === undefined) {
          return this.localeData();
        } else {
          return this.locale(key);
        }
      });

      function localeData() {
        return this._locale;
      }

      var MS_PER_SECOND = 1000;
      var MS_PER_MINUTE = 60 * MS_PER_SECOND;
      var MS_PER_HOUR = 60 * MS_PER_MINUTE;
      var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):

      function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
      }

      function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
          // preserve leap years using a full 400 year cycle, then reset
          return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
          return new Date(y, m, d).valueOf();
        }
      }

      function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
          // preserve leap years using a full 400 year cycle, then reset
          return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
          return Date.UTC(y, m, d);
        }
      }

      function startOf(units) {
        var time;
        units = normalizeUnits(units);

        if (units === undefined || units === 'millisecond' || !this.isValid()) {
          return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
          case 'year':
            time = startOfDate(this.year(), 0, 1);
            break;

          case 'quarter':
            time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
            break;

          case 'month':
            time = startOfDate(this.year(), this.month(), 1);
            break;

          case 'week':
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
            break;

          case 'isoWeek':
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
            break;

          case 'day':
          case 'date':
            time = startOfDate(this.year(), this.month(), this.date());
            break;

          case 'hour':
            time = this._d.valueOf();
            time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
            break;

          case 'minute':
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_MINUTE);
            break;

          case 'second':
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_SECOND);
            break;
        }

        this._d.setTime(time);

        hooks.updateOffset(this, true);
        return this;
      }

      function endOf(units) {
        var time;
        units = normalizeUnits(units);

        if (units === undefined || units === 'millisecond' || !this.isValid()) {
          return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
          case 'year':
            time = startOfDate(this.year() + 1, 0, 1) - 1;
            break;

          case 'quarter':
            time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
            break;

          case 'month':
            time = startOfDate(this.year(), this.month() + 1, 1) - 1;
            break;

          case 'week':
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
            break;

          case 'isoWeek':
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
            break;

          case 'day':
          case 'date':
            time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
            break;

          case 'hour':
            time = this._d.valueOf();
            time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
            break;

          case 'minute':
            time = this._d.valueOf();
            time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
            break;

          case 'second':
            time = this._d.valueOf();
            time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
            break;
        }

        this._d.setTime(time);

        hooks.updateOffset(this, true);
        return this;
      }

      function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
      }

      function unix() {
        return Math.floor(this.valueOf() / 1000);
      }

      function toDate() {
        return new Date(this.valueOf());
      }

      function toArray() {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
      }

      function toObject() {
        var m = this;
        return {
          years: m.year(),
          months: m.month(),
          date: m.date(),
          hours: m.hours(),
          minutes: m.minutes(),
          seconds: m.seconds(),
          milliseconds: m.milliseconds()
        };
      }

      function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
      }

      function isValid$2() {
        return isValid(this);
      }

      function parsingFlags() {
        return extend({}, getParsingFlags(this));
      }

      function invalidAt() {
        return getParsingFlags(this).overflow;
      }

      function creationData() {
        return {
          input: this._i,
          format: this._f,
          locale: this._locale,
          isUTC: this._isUTC,
          strict: this._strict
        };
      } // FORMATTING


      addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
      });
      addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
      });

      function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
      }

      addWeekYearFormatToken('gggg', 'weekYear');
      addWeekYearFormatToken('ggggg', 'weekYear');
      addWeekYearFormatToken('GGGG', 'isoWeekYear');
      addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES

      addUnitAlias('weekYear', 'gg');
      addUnitAlias('isoWeekYear', 'GG'); // PRIORITY

      addUnitPriority('weekYear', 1);
      addUnitPriority('isoWeekYear', 1); // PARSING

      addRegexToken('G', matchSigned);
      addRegexToken('g', matchSigned);
      addRegexToken('GG', match1to2, match2);
      addRegexToken('gg', match1to2, match2);
      addRegexToken('GGGG', match1to4, match4);
      addRegexToken('gggg', match1to4, match4);
      addRegexToken('GGGGG', match1to6, match6);
      addRegexToken('ggggg', match1to6, match6);
      addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
      });
      addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
      }); // MOMENTS

      function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
      }

      function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
      }

      function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
      }

      function getWeeksInYear() {
        var weekInfo = this.localeData()._week;

        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
      }

      function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;

        if (input == null) {
          return weekOfYear(this, dow, doy).year;
        } else {
          weeksTarget = weeksInYear(input, dow, doy);

          if (week > weeksTarget) {
            week = weeksTarget;
          }

          return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
      }

      function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
      } // FORMATTING


      addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES

      addUnitAlias('quarter', 'Q'); // PRIORITY

      addUnitPriority('quarter', 7); // PARSING

      addRegexToken('Q', match1);
      addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
      }); // MOMENTS

      function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
      } // FORMATTING


      addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES

      addUnitAlias('date', 'D'); // PRIORITY

      addUnitPriority('date', 9); // PARSING

      addRegexToken('D', match1to2);
      addRegexToken('DD', match1to2, match2);
      addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;
      });
      addParseToken(['D', 'DD'], DATE);
      addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
      }); // MOMENTS

      var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING

      addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES

      addUnitAlias('dayOfYear', 'DDD'); // PRIORITY

      addUnitPriority('dayOfYear', 4); // PARSING

      addRegexToken('DDD', match1to3);
      addRegexToken('DDDD', match3);
      addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
      }); // HELPERS
      // MOMENTS

      function getSetDayOfYear(input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
      } // FORMATTING


      addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES

      addUnitAlias('minute', 'm'); // PRIORITY

      addUnitPriority('minute', 14); // PARSING

      addRegexToken('m', match1to2);
      addRegexToken('mm', match1to2, match2);
      addParseToken(['m', 'mm'], MINUTE); // MOMENTS

      var getSetMinute = makeGetSet('Minutes', false); // FORMATTING

      addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES

      addUnitAlias('second', 's'); // PRIORITY

      addUnitPriority('second', 15); // PARSING

      addRegexToken('s', match1to2);
      addRegexToken('ss', match1to2, match2);
      addParseToken(['s', 'ss'], SECOND); // MOMENTS

      var getSetSecond = makeGetSet('Seconds', false); // FORMATTING

      addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
      });
      addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
      });
      addFormatToken(0, ['SSS', 3], 0, 'millisecond');
      addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
      });
      addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
      });
      addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
      });
      addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
      });
      addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
      });
      addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
      }); // ALIASES

      addUnitAlias('millisecond', 'ms'); // PRIORITY

      addUnitPriority('millisecond', 16); // PARSING

      addRegexToken('S', match1to3, match1);
      addRegexToken('SS', match1to3, match2);
      addRegexToken('SSS', match1to3, match3);
      var token;

      for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
      }

      function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
      }

      for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
      } // MOMENTS


      var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING

      addFormatToken('z', 0, 0, 'zoneAbbr');
      addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS

      function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
      }

      function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
      }

      var proto = Moment.prototype;
      proto.add = add;
      proto.calendar = calendar$1;
      proto.clone = clone;
      proto.diff = diff;
      proto.endOf = endOf;
      proto.format = format;
      proto.from = from;
      proto.fromNow = fromNow;
      proto.to = to;
      proto.toNow = toNow;
      proto.get = stringGet;
      proto.invalidAt = invalidAt;
      proto.isAfter = isAfter;
      proto.isBefore = isBefore;
      proto.isBetween = isBetween;
      proto.isSame = isSame;
      proto.isSameOrAfter = isSameOrAfter;
      proto.isSameOrBefore = isSameOrBefore;
      proto.isValid = isValid$2;
      proto.lang = lang;
      proto.locale = locale;
      proto.localeData = localeData;
      proto.max = prototypeMax;
      proto.min = prototypeMin;
      proto.parsingFlags = parsingFlags;
      proto.set = stringSet;
      proto.startOf = startOf;
      proto.subtract = subtract;
      proto.toArray = toArray;
      proto.toObject = toObject;
      proto.toDate = toDate;
      proto.toISOString = toISOString;
      proto.inspect = inspect;
      proto.toJSON = toJSON;
      proto.toString = toString;
      proto.unix = unix;
      proto.valueOf = valueOf;
      proto.creationData = creationData;
      proto.year = getSetYear;
      proto.isLeapYear = getIsLeapYear;
      proto.weekYear = getSetWeekYear;
      proto.isoWeekYear = getSetISOWeekYear;
      proto.quarter = proto.quarters = getSetQuarter;
      proto.month = getSetMonth;
      proto.daysInMonth = getDaysInMonth;
      proto.week = proto.weeks = getSetWeek;
      proto.isoWeek = proto.isoWeeks = getSetISOWeek;
      proto.weeksInYear = getWeeksInYear;
      proto.isoWeeksInYear = getISOWeeksInYear;
      proto.date = getSetDayOfMonth;
      proto.day = proto.days = getSetDayOfWeek;
      proto.weekday = getSetLocaleDayOfWeek;
      proto.isoWeekday = getSetISODayOfWeek;
      proto.dayOfYear = getSetDayOfYear;
      proto.hour = proto.hours = getSetHour;
      proto.minute = proto.minutes = getSetMinute;
      proto.second = proto.seconds = getSetSecond;
      proto.millisecond = proto.milliseconds = getSetMillisecond;
      proto.utcOffset = getSetOffset;
      proto.utc = setOffsetToUTC;
      proto.local = setOffsetToLocal;
      proto.parseZone = setOffsetToParsedOffset;
      proto.hasAlignedHourOffset = hasAlignedHourOffset;
      proto.isDST = isDaylightSavingTime;
      proto.isLocal = isLocal;
      proto.isUtcOffset = isUtcOffset;
      proto.isUtc = isUtc;
      proto.isUTC = isUtc;
      proto.zoneAbbr = getZoneAbbr;
      proto.zoneName = getZoneName;
      proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
      proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
      proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
      proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
      proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

      function createUnix(input) {
        return createLocal(input * 1000);
      }

      function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
      }

      function preParsePostFormat(string) {
        return string;
      }

      var proto$1 = Locale.prototype;
      proto$1.calendar = calendar;
      proto$1.longDateFormat = longDateFormat;
      proto$1.invalidDate = invalidDate;
      proto$1.ordinal = ordinal;
      proto$1.preparse = preParsePostFormat;
      proto$1.postformat = preParsePostFormat;
      proto$1.relativeTime = relativeTime;
      proto$1.pastFuture = pastFuture;
      proto$1.set = set;
      proto$1.months = localeMonths;
      proto$1.monthsShort = localeMonthsShort;
      proto$1.monthsParse = localeMonthsParse;
      proto$1.monthsRegex = monthsRegex;
      proto$1.monthsShortRegex = monthsShortRegex;
      proto$1.week = localeWeek;
      proto$1.firstDayOfYear = localeFirstDayOfYear;
      proto$1.firstDayOfWeek = localeFirstDayOfWeek;
      proto$1.weekdays = localeWeekdays;
      proto$1.weekdaysMin = localeWeekdaysMin;
      proto$1.weekdaysShort = localeWeekdaysShort;
      proto$1.weekdaysParse = localeWeekdaysParse;
      proto$1.weekdaysRegex = weekdaysRegex;
      proto$1.weekdaysShortRegex = weekdaysShortRegex;
      proto$1.weekdaysMinRegex = weekdaysMinRegex;
      proto$1.isPM = localeIsPM;
      proto$1.meridiem = localeMeridiem;

      function get$1(format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
      }

      function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
          index = format;
          format = undefined;
        }

        format = format || '';

        if (index != null) {
          return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];

        for (i = 0; i < 12; i++) {
          out[i] = get$1(format, i, field, 'month');
        }

        return out;
      } // ()
      // (5)
      // (fmt, 5)
      // (fmt)
      // (true)
      // (true, 5)
      // (true, fmt, 5)
      // (true, fmt)


      function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
          if (isNumber(format)) {
            index = format;
            format = undefined;
          }

          format = format || '';
        } else {
          format = localeSorted;
          index = format;
          localeSorted = false;

          if (isNumber(format)) {
            index = format;
            format = undefined;
          }

          format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
          return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];

        for (i = 0; i < 7; i++) {
          out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }

        return out;
      }

      function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
      }

      function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
      }

      function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
      }

      function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
      }

      function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
      }

      getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
          var b = number % 10,
              output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
          return number + output;
        }
      }); // Side effect imports

      hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
      hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
      var mathAbs = Math.abs;

      function abs() {
        var data = this._data;
        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);
        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);
        return this;
      }

      function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);
        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;
        return duration._bubble();
      } // supports only 2.0-style add(1, 's') or add(duration)


      function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
      } // supports only 2.0-style subtract(1, 's') or subtract(duration)


      function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
      }

      function absCeil(number) {
        if (number < 0) {
          return Math.floor(number);
        } else {
          return Math.ceil(number);
        }
      }

      function bubble() {
        var milliseconds = this._milliseconds;
        var days = this._days;
        var months = this._months;
        var data = this._data;
        var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166

        if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {
          milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
          days = 0;
          months = 0;
        } // The following code bubbles up values, see the tests for
        // examples of what that means.


        data.milliseconds = milliseconds % 1000;
        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;
        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;
        hours = absFloor(minutes / 60);
        data.hours = hours % 24;
        days += absFloor(hours / 24); // convert days to months

        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year

        years = absFloor(months / 12);
        months %= 12;
        data.days = days;
        data.months = months;
        data.years = years;
        return this;
      }

      function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
      }

      function monthsToDays(months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
      }

      function as(units) {
        if (!this.isValid()) {
          return NaN;
        }

        var days;
        var months;
        var milliseconds = this._milliseconds;
        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
          days = this._days + milliseconds / 864e5;
          months = this._months + daysToMonths(days);

          switch (units) {
            case 'month':
              return months;

            case 'quarter':
              return months / 3;

            case 'year':
              return months / 12;
          }
        } else {
          // handle milliseconds separately because of floating point math errors (issue #1867)
          days = this._days + Math.round(monthsToDays(this._months));

          switch (units) {
            case 'week':
              return days / 7 + milliseconds / 6048e5;

            case 'day':
              return days + milliseconds / 864e5;

            case 'hour':
              return days * 24 + milliseconds / 36e5;

            case 'minute':
              return days * 1440 + milliseconds / 6e4;

            case 'second':
              return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here

            case 'millisecond':
              return Math.floor(days * 864e5) + milliseconds;

            default:
              throw new Error('Unknown unit ' + units);
          }
        }
      } // TODO: Use this.as('ms')?


      function valueOf$1() {
        if (!this.isValid()) {
          return NaN;
        }

        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
      }

      function makeAs(alias) {
        return function () {
          return this.as(alias);
        };
      }

      var asMilliseconds = makeAs('ms');
      var asSeconds = makeAs('s');
      var asMinutes = makeAs('m');
      var asHours = makeAs('h');
      var asDays = makeAs('d');
      var asWeeks = makeAs('w');
      var asMonths = makeAs('M');
      var asQuarters = makeAs('Q');
      var asYears = makeAs('y');

      function clone$1() {
        return createDuration(this);
      }

      function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
      }

      function makeGetter(name) {
        return function () {
          return this.isValid() ? this._data[name] : NaN;
        };
      }

      var milliseconds = makeGetter('milliseconds');
      var seconds = makeGetter('seconds');
      var minutes = makeGetter('minutes');
      var hours = makeGetter('hours');
      var days = makeGetter('days');
      var months = makeGetter('months');
      var years = makeGetter('years');

      function weeks() {
        return absFloor(this.days() / 7);
      }

      var round = Math.round;
      var thresholds = {
        ss: 44,
        // a few seconds to seconds
        s: 45,
        // seconds to minute
        m: 45,
        // minutes to hour
        h: 22,
        // hours to day
        d: 26,
        // days to month
        M: 11 // months to year

      }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize

      function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
      }

      function relativeTime$1(posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds = round(duration.as('s'));
        var minutes = round(duration.as('m'));
        var hours = round(duration.as('h'));
        var days = round(duration.as('d'));
        var months = round(duration.as('M'));
        var years = round(duration.as('y'));
        var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];
        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
      } // This function allows you to set the rounding function for relative time strings


      function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
          return round;
        }

        if (typeof roundingFunction === 'function') {
          round = roundingFunction;
          return true;
        }

        return false;
      } // This function allows you to set a threshold for relative time strings


      function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
          return false;
        }

        if (limit === undefined) {
          return thresholds[threshold];
        }

        thresholds[threshold] = limit;

        if (threshold === 's') {
          thresholds.ss = limit - 1;
        }

        return true;
      }

      function humanize(withSuffix) {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
          output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
      }

      var abs$1 = Math.abs;

      function sign(x) {
        return (x > 0) - (x < 0) || +x;
      }

      function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days = abs$1(this._days);
        var months = abs$1(this._months);
        var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour

        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60; // 12 months -> 1 year

        years = absFloor(months / 12);
        months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js

        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
          // this is the same as C#'s (Noda) and python (isodate)...
          // but not other JS (goog.date)
          return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
        return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');
      }

      var proto$2 = Duration.prototype;
      proto$2.isValid = isValid$1;
      proto$2.abs = abs;
      proto$2.add = add$1;
      proto$2.subtract = subtract$1;
      proto$2.as = as;
      proto$2.asMilliseconds = asMilliseconds;
      proto$2.asSeconds = asSeconds;
      proto$2.asMinutes = asMinutes;
      proto$2.asHours = asHours;
      proto$2.asDays = asDays;
      proto$2.asWeeks = asWeeks;
      proto$2.asMonths = asMonths;
      proto$2.asQuarters = asQuarters;
      proto$2.asYears = asYears;
      proto$2.valueOf = valueOf$1;
      proto$2._bubble = bubble;
      proto$2.clone = clone$1;
      proto$2.get = get$2;
      proto$2.milliseconds = milliseconds;
      proto$2.seconds = seconds;
      proto$2.minutes = minutes;
      proto$2.hours = hours;
      proto$2.days = days;
      proto$2.weeks = weeks;
      proto$2.months = months;
      proto$2.years = years;
      proto$2.humanize = humanize;
      proto$2.toISOString = toISOString$1;
      proto$2.toString = toISOString$1;
      proto$2.toJSON = toISOString$1;
      proto$2.locale = locale;
      proto$2.localeData = localeData;
      proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
      proto$2.lang = lang; // Side effect imports
      // FORMATTING

      addFormatToken('X', 0, 0, 'unix');
      addFormatToken('x', 0, 0, 'valueOf'); // PARSING

      addRegexToken('x', matchSigned);
      addRegexToken('X', matchTimestamp);
      addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
      });
      addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
      }); // Side effect imports

      hooks.version = '2.24.0';
      setHookCallback(createLocal);
      hooks.fn = proto;
      hooks.min = min;
      hooks.max = max;
      hooks.now = now;
      hooks.utc = createUTC;
      hooks.unix = createUnix;
      hooks.months = listMonths;
      hooks.isDate = isDate;
      hooks.locale = getSetGlobalLocale;
      hooks.invalid = createInvalid;
      hooks.duration = createDuration;
      hooks.isMoment = isMoment;
      hooks.weekdays = listWeekdays;
      hooks.parseZone = createInZone;
      hooks.localeData = getLocale;
      hooks.isDuration = isDuration;
      hooks.monthsShort = listMonthsShort;
      hooks.weekdaysMin = listWeekdaysMin;
      hooks.defineLocale = defineLocale;
      hooks.updateLocale = updateLocale;
      hooks.locales = listLocales;
      hooks.weekdaysShort = listWeekdaysShort;
      hooks.normalizeUnits = normalizeUnits;
      hooks.relativeTimeRounding = getSetRelativeTimeRounding;
      hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
      hooks.calendarFormat = getCalendarFormat;
      hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats

      hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
        // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
        // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
        // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',
        // <input type="date" />
        TIME: 'HH:mm',
        // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',
        // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',
        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',
        // <input type="week" />
        MONTH: 'YYYY-MM' // <input type="month" />

      };
      return hooks;
    });
  }); // Maps for number <-> hex string conversion

  var byteToHex$2$1 = [];

  for (var i$2$1 = 0; i$2$1 < 256; i$2$1++) {
    byteToHex$2$1[i$2$1] = (i$2$1 + 0x100).toString(16).substr(1);
  }
  /**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */


  var random$1$1 = function () {
    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {
      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
      // Moderately fast, high quality
      var _rnds8 = new Uint8Array(16);

      return function whatwgRNG() {
        crypto.getRandomValues(_rnds8);
        return _rnds8;
      };
    } // Math.random()-based (RNG)
    //
    // If all else fails, use Math.random().
    // It's fast, but is of unspecified quality.


    var _rnds = new Array(16);

    return function () {
      for (var i = 0, r; i < 16; i++) {
        if ((i & 0x03) === 0) {
          r = Math.random() * 0x100000000;
        }

        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
      }

      return _rnds;
    }; //     uuid.js
    //
    //     Copyright (c) 2010-2012 Robert Kieffer
    //     MIT License - http://opensource.org/licenses/mit-license.php
    // Unique ID creation requires a high quality random # generator.  We feature
    // detect to determine the best RNG source, normalizing to a function that
    // returns 128-bits of randomness, since that's what's usually required
    // return require('./rng');
  }();

  var byteToHex$1$1$1 = [];

  for (var i$1$1$1 = 0; i$1$1$1 < 256; i$1$1$1++) {
    byteToHex$1$1$1[i$1$1$1] = (i$1$1$1 + 0x100).toString(16).substr(1);
  } // **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq


  var seedBytes$1$1 = random$1$1(); // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)

  var defaultNodeId$1$1 = [seedBytes$1$1[0] | 0x01, seedBytes$1$1[1], seedBytes$1$1[2], seedBytes$1$1[3], seedBytes$1$1[4], seedBytes$1$1[5]]; // Per 4.2.2, randomize (14 bit) clockseq

  var defaultClockseq$1$1 = (seedBytes$1$1[6] << 8 | seedBytes$1$1[7]) & 0x3fff; // Previous uuid creation time
  // for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'
  // code from http://momentjs.com/

  var ASPDateRegex$1 = /^\/?Date\((-?\d+)/i; // Hex color

  /**
   * Hue, Saturation, Value.
   */

  /**
   * Test whether given object is a number
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if number, false otherwise.
   */

  function isNumber$1(value) {
    return value instanceof Number || typeof value === 'number';
  }
  /**
   * Test whether given object is a string
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if string, false otherwise.
   */


  function isString$1(value) {
    return value instanceof String || typeof value === 'string';
  }
  /**
   * Test whether given object is a Moment date.
   * @TODO: This is basically a workaround, if Moment was imported property it wouldn't necessary as moment.isMoment is a TS type guard.
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Moment instance, false otherwise.
   */


  function isMoment$1(value) {
    return moment$1.isMoment(value);
  }
  /**
   * Convert an object into another type
   *
   * @param object - Value of unknown type.
   * @param type - Name of the desired type.
   *
   * @returns Object in the desired type.
   * @throws Error
   */


  function convert$1(object, type) {
    var match;

    if (object === undefined) {
      return undefined;
    }

    if (object === null) {
      return null;
    }

    if (!type) {
      return object;
    }

    if (!(typeof type === 'string') && !(type instanceof String)) {
      throw new Error('Type must be a string');
    } //noinspection FallthroughInSwitchStatementJS


    switch (type) {
      case 'boolean':
      case 'Boolean':
        return Boolean(object);

      case 'number':
      case 'Number':
        if (isString$1(object) && !isNaN(Date.parse(object))) {
          return moment$1(object).valueOf();
        } else {
          // @TODO: I don't think that Number and String constructors are a good idea.
          // This could also fail if the object doesn't have valueOf method or if it's redefined.
          // For example: Object.create(null) or { valueOf: 7 }.
          return Number(object.valueOf());
        }

      case 'string':
      case 'String':
        return String(object);

      case 'Date':
        if (isNumber$1(object)) {
          return new Date(object);
        }

        if (object instanceof Date) {
          return new Date(object.valueOf());
        } else if (isMoment$1(object)) {
          return new Date(object.valueOf());
        }

        if (isString$1(object)) {
          match = ASPDateRegex$1.exec(object);

          if (match) {
            // object is an ASP date
            return new Date(Number(match[1])); // parse number
          } else {
            return moment$1(new Date(object)).toDate(); // parse string
          }
        } else {
          throw new Error('Cannot convert object of type ' + getType$1(object) + ' to type Date');
        }

      case 'Moment':
        if (isNumber$1(object)) {
          return moment$1(object);
        }

        if (object instanceof Date) {
          return moment$1(object.valueOf());
        } else if (isMoment$1(object)) {
          return moment$1(object);
        }

        if (isString$1(object)) {
          match = ASPDateRegex$1.exec(object);

          if (match) {
            // object is an ASP date
            return moment$1(Number(match[1])); // parse number
          } else {
            return moment$1(object); // parse string
          }
        } else {
          throw new Error('Cannot convert object of type ' + getType$1(object) + ' to type Date');
        }

      case 'ISODate':
        if (isNumber$1(object)) {
          return new Date(object);
        } else if (object instanceof Date) {
          return object.toISOString();
        } else if (isMoment$1(object)) {
          return object.toDate().toISOString();
        } else if (isString$1(object)) {
          match = ASPDateRegex$1.exec(object);

          if (match) {
            // object is an ASP date
            return new Date(Number(match[1])).toISOString(); // parse number
          } else {
            return moment$1(object).format(); // ISO 8601
          }
        } else {
          throw new Error('Cannot convert object of type ' + getType$1(object) + ' to type ISODate');
        }

      case 'ASPDate':
        if (isNumber$1(object)) {
          return '/Date(' + object + ')/';
        } else if (object instanceof Date) {
          return '/Date(' + object.valueOf() + ')/';
        } else if (isString$1(object)) {
          match = ASPDateRegex$1.exec(object);

          var _value;

          if (match) {
            // object is an ASP date
            _value = new Date(Number(match[1])).valueOf(); // parse number
          } else {
            _value = new Date(object).valueOf(); // parse string
          }

          return '/Date(' + _value + ')/';
        } else {
          throw new Error('Cannot convert object of type ' + getType$1(object) + ' to type ASPDate');
        }

      default:
        var never = type;
        throw new Error("Unknown type ".concat(never));
    }
  }
  /**
   * Get the type of an object, for example exports.getType([]) returns 'Array'
   *
   * @param object - Input value of unknown type.
   *
   * @returns Detected type.
   */


  function getType$1(object) {
    var type = _typeof(object);

    if (type === 'object') {
      if (object === null) {
        return 'null';
      }

      if (object instanceof Boolean) {
        return 'Boolean';
      }

      if (object instanceof Number) {
        return 'Number';
      }

      if (object instanceof String) {
        return 'String';
      }

      if (Array.isArray(object)) {
        return 'Array';
      }

      if (object instanceof Date) {
        return 'Date';
      }

      return 'Object';
    }

    if (type === 'number') {
      return 'Number';
    }

    if (type === 'boolean') {
      return 'Boolean';
    }

    if (type === 'string') {
      return 'String';
    }

    if (type === undefined) {
      return 'undefined';
    }

    return type;
  }
  /**
   * Determine whether a value can be used as an id.
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if the value is valid id, false otherwise.
   */


  function isId(value) {
    return typeof value === 'string' || typeof value === 'number';
  }
  /**
   * A queue.
   *
   * @typeParam T - The type of method names to be replaced by queued versions.
   */


  var Queue =
  /*#__PURE__*/
  function () {
    /**
     * Construct a new Queue.
     *
     * @param options - Queue configuration.
     */
    function Queue(options) {
      classCallCheck(this, Queue);
      this._queue = [];
      this._timeout = null;
      this._extended = null; // options

      this.delay = null;
      this.max = Infinity;
      this.setOptions(options);
    }
    /**
     * Update the configuration of the queue.
     *
     * @param options - Queue configuration.
     */


    createClass(Queue, [{
      key: "setOptions",
      value: function setOptions(options) {
        if (options && typeof options.delay !== 'undefined') {
          this.delay = options.delay;
        }

        if (options && typeof options.max !== 'undefined') {
          this.max = options.max;
        }

        this._flushIfNeeded();
      }
      /**
       * Extend an object with queuing functionality.
       * The object will be extended with a function flush, and the methods provided in options.replace will be replaced with queued ones.
       *
       * @param object - The object to be extended.
       * @param options - Additional options.
       *
       * @returns The created queue.
       */

    }, {
      key: "destroy",

      /**
       * Destroy the queue. The queue will first flush all queued actions, and in case it has extended an object, will restore the original object.
       */
      value: function destroy() {
        this.flush();

        if (this._extended) {
          var object = this._extended.object;
          var methods = this._extended.methods;

          for (var i = 0; i < methods.length; i++) {
            var method = methods[i];

            if (method.original) {
              object[method.name] = method.original;
            } else {
              // @TODO: better solution?
              delete object[method.name];
            }
          }

          this._extended = null;
        }
      }
      /**
       * Replace a method on an object with a queued version.
       *
       * @param object - Object having the method.
       * @param method - The method name.
       */

    }, {
      key: "replace",
      value: function replace(object, method) {
        var me = this;
        var original = object[method];

        if (!original) {
          throw new Error('Method ' + method + ' undefined');
        }

        object[method] = function () {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          } // add this call to the queue


          me.queue({
            args: args,
            fn: original,
            context: this
          });
        };
      }
      /**
       * Queue a call.
       *
       * @param entry - The function or entry to be queued.
       */

    }, {
      key: "queue",
      value: function queue(entry) {
        if (typeof entry === 'function') {
          this._queue.push({
            fn: entry
          });
        } else {
          this._queue.push(entry);
        }

        this._flushIfNeeded();
      }
      /**
       * Check whether the queue needs to be flushed.
       */

    }, {
      key: "_flushIfNeeded",
      value: function _flushIfNeeded() {
        var _this = this; // flush when the maximum is exceeded.


        if (this._queue.length > this.max) {
          this.flush();
        } // flush after a period of inactivity when a delay is configured


        if (this._timeout != null) {
          clearTimeout(this._timeout);
          this._timeout = null;
        }

        if (this.queue.length > 0 && typeof this.delay === 'number') {
          this._timeout = setTimeout(function () {
            _this.flush();
          }, this.delay);
        }
      }
      /**
       * Flush all queued calls
       */

    }, {
      key: "flush",
      value: function flush() {
        this._queue.splice(0).forEach(function (entry) {
          entry.fn.apply(entry.context || entry.fn, entry.args || []);
        });
      }
    }], [{
      key: "extend",
      value: function extend(object, options) {
        var queue = new Queue(options);

        if (object.flush !== undefined) {
          throw new Error('Target object already has a property flush');
        }

        object.flush = function () {
          queue.flush();
        };

        var methods = [{
          name: 'flush',
          original: undefined
        }];

        if (options && options.replace) {
          for (var i = 0; i < options.replace.length; i++) {
            var name = options.replace[i];
            methods.push({
              name: name,
              // @TODO: better solution?
              original: object[name]
            }); // @TODO: better solution?

            queue.replace(object, name);
          }
        }

        queue._extended = {
          object: object,
          methods: methods
        };
        return queue;
      }
    }]);
    return Queue;
  }();

  function _arrayWithoutHoles$1(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  var arrayWithoutHoles$1 = _arrayWithoutHoles$1;

  function _iterableToArray$1(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  var iterableToArray$1 = _iterableToArray$1;

  function _nonIterableSpread$1() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  var nonIterableSpread$1 = _nonIterableSpread$1;

  function _toConsumableArray$1(arr) {
    return arrayWithoutHoles$1(arr) || iterableToArray$1(arr) || nonIterableSpread$1();
  }

  var toConsumableArray$1 = _toConsumableArray$1;
  /**
   * [[DataSet]] code that can be reused in [[DataView]] or other similar implementations of [[DataInterface]].
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */

  var DataSetPart =
  /*#__PURE__*/
  function () {
    function DataSetPart() {
      classCallCheck(this, DataSetPart);
      this._subscribers = {
        '*': [],
        add: [],
        remove: [],
        update: []
      };
      /**
       * @deprecated Use on instead (PS: DataView.subscribe === DataView.on).
       */

      this.subscribe = DataSetPart.prototype.on;
      /**
       * @deprecated Use off instead (PS: DataView.unsubscribe === DataView.off).
       */

      this.unsubscribe = DataSetPart.prototype.off;
    }
    /**
     * Trigger an event
     *
     * @param event - Event name.
     * @param payload - Event payload.
     * @param senderId - Id of the sender.
     */


    createClass(DataSetPart, [{
      key: "_trigger",
      value: function _trigger(event, payload, senderId) {
        if (event === '*') {
          throw new Error('Cannot trigger event *');
        }

        var subscribers = [].concat(toConsumableArray$1(this._subscribers[event]), toConsumableArray$1(this._subscribers['*']));

        for (var i = 0, len = subscribers.length; i < len; i++) {
          var subscriber = subscribers[i];

          if (subscriber.callback) {
            subscriber.callback(event, payload, senderId != null ? senderId : null);
          }
        }
      }
      /**
       * Subscribe to an event, add an event listener.
       *
       * @param event - Event name.
       * @param callback - Callback method.
       */

    }, {
      key: "on",
      value: function on(event, callback) {
        this._subscribers[event].push({
          callback: callback
        });
      }
      /**
       * Unsubscribe from an event, remove an event listener.
       *
       * @remarks If the same callback was subscribed more than once **all** occurences will be removed.
       *
       * @param event - Event name.
       * @param callback - Callback method.
       */

    }, {
      key: "off",
      value: function off(event, callback) {
        this._subscribers[event] = this._subscribers[event].filter(function (listener) {
          return listener.callback !== callback;
        });
      }
    }]);
    return DataSetPart;
  }();

  function ownKeys$1(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      keys.push.apply(keys, Object.getOwnPropertySymbols(object));
    }

    if (enumerableOnly) keys = keys.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    return keys;
  }

  function _objectSpread$1(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys$1(source, true).forEach(function (key) {
          defineProperty$1(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$1(source).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }
  /**
   * # DataSet
   *
   * Vis.js comes with a flexible DataSet, which can be used to hold and manipulate unstructured data and listen for changes in the data. The DataSet is key/value based. Data items can be added, updated and removed from the DataSet, and one can subscribe to changes in the DataSet. The data in the DataSet can be filtered and ordered, and fields (like dates) can be converted to a specific type. Data can be normalized when appending it to the DataSet as well.
   *
   * ## Example
   *
   * The following example shows how to use a DataSet.
   *
   * ```javascript
   * // create a DataSet
   * var options = {};
   * var data = new vis.DataSet(options);
   *
   * // add items
   * // note that the data items can contain different properties and data formats
   * data.add([
   *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},
   *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},
   *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},
   *   {id: 4, text: 'item 4'}
   * ]);
   *
   * // subscribe to any change in the DataSet
   * data.on('*', function (event, properties, senderId) {
   *   console.log('event', event, properties);
   * });
   *
   * // update an existing item
   * data.update({id: 2, group: 1});
   *
   * // remove an item
   * data.remove(4);
   *
   * // get all ids
   * var ids = data.getIds();
   * console.log('ids', ids);
   *
   * // get a specific item
   * var item1 = data.get(1);
   * console.log('item1', item1);
   *
   * // retrieve a filtered subset of the data
   * var items = data.get({
   *   filter: function (item) {
   *     return item.group == 1;
   *   }
   * });
   * console.log('filtered items', items);
   *
   * // retrieve formatted items
   * var items = data.get({
   *   fields: ['id', 'date'],
   *   type: {
   *     date: 'ISODate'
   *   }
   * });
   * console.log('formatted items', items);
   * ```
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */


  var DataSet =
  /*#__PURE__*/
  function (_DataSetPart) {
    inherits(DataSet, _DataSetPart);
    /**
     * Construct a new DataSet.
     *
     * @param data - Initial data or options.
     * @param options - Options (type error if data is also options).
     */

    function DataSet(data, options) {
      var _this;

      classCallCheck(this, DataSet);
      _this = possibleConstructorReturn(this, getPrototypeOf(DataSet).call(this)); // correctly read optional arguments

      if (data && !Array.isArray(data)) {
        options = data;
        data = [];
      }

      _this._options = options || {};
      _this._data = Object.create({}); // map with data indexed by id

      _this.length = 0; // number of items in the DataSet

      _this._idProp = _this._options.fieldId || 'id'; // name of the field containing id

      _this._type = {}; // internal field types (NOTE: this can differ from this._options.type)
      // all variants of a Date are internally stored as Date, so we can convert
      // from everything to everything (also from ISODate to Number for example)

      if (_this._options.type) {
        var fields = Object.keys(_this._options.type);

        for (var i = 0, len = fields.length; i < len; i++) {
          var field = fields[i];
          var value = _this._options.type[field];

          if (value == 'Date' || value == 'ISODate' || value == 'ASPDate') {
            _this._type[field] = 'Date';
          } else {
            _this._type[field] = value;
          }
        }
      } // add initial data when provided


      if (data && data.length) {
        _this.add(data);
      }

      _this.setOptions(options);

      return _this;
    }
    /**
     * Set new options.
     *
     * @param options - The new options.
     */


    createClass(DataSet, [{
      key: "setOptions",
      value: function setOptions(options) {
        if (options && options.queue !== undefined) {
          if (options.queue === false) {
            // delete queue if loaded
            if (this._queue) {
              this._queue.destroy();

              delete this._queue;
            }
          } else {
            // create queue and update its options
            if (!this._queue) {
              this._queue = Queue.extend(this, {
                replace: ['add', 'update', 'remove']
              });
            }

            if (options.queue && _typeof_1$1(options.queue) === 'object') {
              this._queue.setOptions(options.queue);
            }
          }
        }
      }
      /**
       * Add a data item or an array with items.
       *
       * After the items are added to the DataSet, the DataSet will trigger an event `add`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       *
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet()
       *
       * // add items
       * const ids = data.add([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { text: 'item without an id' }
       * ])
       *
       * console.log(ids) // [1, 2, '<UUIDv4>']
       * ```
       *
       * @param data - Items to be added (ids will be generated if missing).
       * @param senderId - Sender id.
       *
       * @returns addedIds - Array with the ids (generated if not present) of the added items.
       *
       * @throws When an item with the same id as any of the added items already exists.
       */

    }, {
      key: "add",
      value: function add(data, senderId) {
        var addedIds = [];
        var id;

        if (Array.isArray(data)) {
          // Array
          for (var i = 0, len = data.length; i < len; i++) {
            id = this._addItem(data[i]);
            addedIds.push(id);
          }
        } else if (data && _typeof_1$1(data) === 'object') {
          // Single item
          id = this._addItem(data);
          addedIds.push(id);
        } else {
          throw new Error('Unknown dataType');
        }

        if (addedIds.length) {
          this._trigger('add', {
            items: addedIds
          }, senderId);
        }

        return addedIds;
      }
      /**
       * Update existing items. When an item does not exist, it will be created
       *
       * The provided properties will be merged in the existing item. When an item does not exist, it will be created.
       *
       * After the items are updated, the DataSet will trigger an event `add` for the added items, and an event `update`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       *
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { id: 3, text: 'item 3' }
       * ])
       *
       * // update items
       * const ids = data.update([
       *   { id: 2, text: 'item 2 (updated)' },
       *   { id: 4, text: 'item 4 (new)' }
       * ])
       *
       * console.log(ids) // [2, 4]
       * ```
       *
       * @param data - Items to be updated (if the id is already present) or added (if the id is missing).
       * @param senderId - Sender id.
       *
       * @returns updatedIds - The ids of the added (these may be newly generated if there was no id in the item from the data) or updated items.
       *
       * @throws When the supplied data is neither an item nor an array of items.
       */

    }, {
      key: "update",
      value: function update(data, senderId) {
        var _this2 = this;

        var addedIds = [];
        var updatedIds = [];
        var oldData = [];
        var updatedData = [];
        var idProp = this._idProp;

        var addOrUpdate = function addOrUpdate(item) {
          var origId = item[idProp];

          if (origId != null && _this2._data[origId]) {
            var fullItem = item; // it has an id, therefore it is a fullitem

            var oldItem = Object.assign({}, _this2._data[origId]); // update item

            var id = _this2._updateItem(fullItem);

            updatedIds.push(id);
            updatedData.push(fullItem);
            oldData.push(oldItem);
          } else {
            // add new item
            var _id = _this2._addItem(item);

            addedIds.push(_id);
          }
        };

        if (Array.isArray(data)) {
          // Array
          for (var i = 0, len = data.length; i < len; i++) {
            if (data[i] && _typeof_1$1(data[i]) === 'object') {
              addOrUpdate(data[i]);
            } else {
              console.warn('Ignoring input item, which is not an object at index ' + i);
            }
          }
        } else if (data && _typeof_1$1(data) === 'object') {
          // Single item
          addOrUpdate(data);
        } else {
          throw new Error('Unknown dataType');
        }

        if (addedIds.length) {
          this._trigger('add', {
            items: addedIds
          }, senderId);
        }

        if (updatedIds.length) {
          var props = {
            items: updatedIds,
            oldData: oldData,
            data: updatedData
          }; // TODO: remove deprecated property 'data' some day
          //Object.defineProperty(props, 'data', {
          //  'get': (function() {
          //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');
          //    return updatedData;
          //  }).bind(this)
          //});

          this._trigger('update', props, senderId);
        }

        return addedIds.concat(updatedIds);
      }
      /** @inheritdoc */

    }, {
      key: "get",
      value: function get(first, second) {
        // @TODO: Woudn't it be better to split this into multiple methods?
        // parse the arguments
        var id = undefined;
        var ids = undefined;
        var options = undefined;

        if (isId(first)) {
          // get(id [, options])
          id = first;
          options = second;
        } else if (Array.isArray(first)) {
          // get(ids [, options])
          ids = first;
          options = second;
        } else {
          // get([, options])
          options = first;
        } // determine the return type


        var returnType = options && options.returnType === 'Object' ? 'Object' : 'Array'; // @TODO: WTF is this? Or am I missing something?
        // var returnType
        // if (options && options.returnType) {
        //   var allowedValues = ['Array', 'Object']
        //   returnType =
        //     allowedValues.indexOf(options.returnType) == -1
        //       ? 'Array'
        //       : options.returnType
        // } else {
        //   returnType = 'Array'
        // }
        // build options

        var type = options && options.type || this._options.type;
        var filter = options && options.filter;
        var items = [];
        var item = null;
        var itemIds = null;
        var itemId = null; // convert items

        if (id != null) {
          // return a single item
          item = this._getItem(id, type);

          if (item && filter && !filter(item)) {
            item = null;
          }
        } else if (ids != null) {
          // return a subset of items
          for (var i = 0, len = ids.length; i < len; i++) {
            item = this._getItem(ids[i], type);

            if (item != null && (!filter || filter(item))) {
              items.push(item);
            }
          }
        } else {
          // return all items
          itemIds = Object.keys(this._data);

          for (var _i = 0, _len = itemIds.length; _i < _len; _i++) {
            itemId = itemIds[_i];
            item = this._getItem(itemId, type);

            if (item != null && (!filter || filter(item))) {
              items.push(item);
            }
          }
        } // order the results


        if (options && options.order && id == undefined) {
          this._sort(items, options.order);
        } // filter fields of the items


        if (options && options.fields) {
          var fields = options.fields;

          if (id != undefined && item != null) {
            item = this._filterFields(item, fields);
          } else {
            for (var _i2 = 0, _len2 = items.length; _i2 < _len2; _i2++) {
              items[_i2] = this._filterFields(items[_i2], fields);
            }
          }
        } // return the results


        if (returnType == 'Object') {
          var result = {};

          for (var _i3 = 0, _len3 = items.length; _i3 < _len3; _i3++) {
            var resultant = items[_i3]; // @TODO: Shoudn't this be this._fieldId?
            // result[resultant.id] = resultant

            var _id2 = resultant[this._idProp];
            result[_id2] = resultant;
          }

          return result;
        } else {
          if (id != null) {
            // a single item
            return item;
          } else {
            // just return our array
            return items;
          }
        }
      }
      /** @inheritdoc */

    }, {
      key: "getIds",
      value: function getIds(options) {
        var data = this._data;
        var filter = options && options.filter;
        var order = options && options.order;
        var type = options && options.type || this._options.type;
        var itemIds = Object.keys(data);
        var ids = [];
        var item;
        var items;

        if (filter) {
          // get filtered items
          if (order) {
            // create ordered list
            items = [];

            for (var i = 0, len = itemIds.length; i < len; i++) {
              var id = itemIds[i];
              item = this._getItem(id, type);

              if (filter(item)) {
                items.push(item);
              }
            }

            this._sort(items, order);

            for (var _i4 = 0, _len4 = items.length; _i4 < _len4; _i4++) {
              ids.push(items[_i4][this._idProp]);
            }
          } else {
            // create unordered list
            for (var _i5 = 0, _len5 = itemIds.length; _i5 < _len5; _i5++) {
              var _id3 = itemIds[_i5];
              item = this._getItem(_id3, type);

              if (filter(item)) {
                ids.push(item[this._idProp]);
              }
            }
          }
        } else {
          // get all items
          if (order) {
            // create an ordered list
            items = [];

            for (var _i6 = 0, _len6 = itemIds.length; _i6 < _len6; _i6++) {
              var _id4 = itemIds[_i6];
              items.push(data[_id4]);
            }

            this._sort(items, order);

            for (var _i7 = 0, _len7 = items.length; _i7 < _len7; _i7++) {
              ids.push(items[_i7][this._idProp]);
            }
          } else {
            // create unordered list
            for (var _i8 = 0, _len8 = itemIds.length; _i8 < _len8; _i8++) {
              var _id5 = itemIds[_i8];
              item = data[_id5];
              ids.push(item[this._idProp]);
            }
          }
        }

        return ids;
      }
      /** @inheritdoc */

    }, {
      key: "getDataSet",
      value: function getDataSet() {
        return this;
      }
      /** @inheritdoc */

    }, {
      key: "forEach",
      value: function forEach(callback, options) {
        var filter = options && options.filter;
        var type = options && options.type || this._options.type;
        var data = this._data;
        var itemIds = Object.keys(data);

        if (options && options.order) {
          // execute forEach on ordered list
          var items = this.get(options);

          for (var i = 0, len = items.length; i < len; i++) {
            var item = items[i];
            var id = item[this._idProp];
            callback(item, id);
          }
        } else {
          // unordered
          for (var _i9 = 0, _len9 = itemIds.length; _i9 < _len9; _i9++) {
            var _id6 = itemIds[_i9];

            var _item = this._getItem(_id6, type);

            if (!filter || filter(_item)) {
              callback(_item, _id6);
            }
          }
        }
      }
      /** @inheritdoc */

    }, {
      key: "map",
      value: function map(callback, options) {
        var filter = options && options.filter;
        var type = options && options.type || this._options.type;
        var mappedItems = [];
        var data = this._data;
        var itemIds = Object.keys(data); // convert and filter items

        for (var i = 0, len = itemIds.length; i < len; i++) {
          var id = itemIds[i];

          var item = this._getItem(id, type);

          if (!filter || filter(item)) {
            mappedItems.push(callback(item, id));
          }
        } // order items


        if (options && options.order) {
          this._sort(mappedItems, options.order);
        }

        return mappedItems;
      }
      /**
       * Filter the fields of an item.
       *
       * @param item - The item whose fields should be filtered.
       * @param fields - The names of the fields that will be kept.
       *
       * @typeParam K - Field name type.
       *
       * @returns The item without any additional fields.
       */

    }, {
      key: "_filterFields",
      value: function _filterFields(item, fields) {
        if (!item) {
          // item is null
          return item;
        }

        return (Array.isArray(fields) ? // Use the supplied array
        fields : // Use the keys of the supplied object
        Object.keys(fields)).reduce(function (filteredItem, field) {
          filteredItem[field] = item[field];
          return filteredItem;
        }, {});
      }
      /**
       * Sort the provided array with items.
       *
       * @param items - Items to be sorted in place.
       * @param order - A field name or custom sort function.
       *
       * @typeParam T - The type of the items in the items array.
       */

    }, {
      key: "_sort",
      value: function _sort(items, order) {
        if (typeof order === 'string') {
          // order by provided field name
          var name = order; // field name

          items.sort(function (a, b) {
            // @TODO: How to treat missing properties?
            var av = a[name];
            var bv = b[name];
            return av > bv ? 1 : av < bv ? -1 : 0;
          });
        } else if (typeof order === 'function') {
          // order by sort function
          items.sort(order);
        } else {
          // TODO: extend order by an Object {field:string, direction:string}
          //       where direction can be 'asc' or 'desc'
          throw new TypeError('Order must be a function or a string');
        }
      }
      /**
       * Remove an item or multiple items by “reference” (only the id is used) or by id.
       *
       * The method ignores removal of non-existing items, and returns an array containing the ids of the items which are actually removed from the DataSet.
       *
       * After the items are removed, the DataSet will trigger an event `remove` for the removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { id: 3, text: 'item 3' }
       * ])
       *
       * // remove items
       * const ids = data.remove([2, { id: 3 }, 4])
       *
       * console.log(ids) // [2, 3]
       * ```
       *
       * @param id - One or more items or ids of items to be removed.
       * @param senderId - Sender id.
       *
       * @returns The ids of the removed items.
       */

    }, {
      key: "remove",
      value: function remove(id, senderId) {
        var removedIds = [];
        var removedItems = []; // force everything to be an array for simplicity

        var ids = Array.isArray(id) ? id : [id];

        for (var i = 0, len = ids.length; i < len; i++) {
          var item = this._remove(ids[i]);

          if (item) {
            var itemId = item[this._idProp];

            if (itemId != null) {
              removedIds.push(itemId);
              removedItems.push(item);
            }
          }
        }

        if (removedIds.length) {
          this._trigger('remove', {
            items: removedIds,
            oldData: removedItems
          }, senderId);
        }

        return removedIds;
      }
      /**
       * Remove an item by its id or reference.
       *
       * @param id - Id of an item or the item itself.
       *
       * @returns The removed item if removed, null otherwise.
       */

    }, {
      key: "_remove",
      value: function _remove(id) {
        // @TODO: It origianlly returned the item although the docs say id.
        // The code expects the item, so probably an error in the docs.
        var ident; // confirm the id to use based on the args type

        if (isId(id)) {
          ident = id;
        } else if (id && _typeof_1$1(id) === 'object') {
          ident = id[this._idProp]; // look for the identifier field using ._idProp
        } // do the removing if the item is found


        if (ident != null && this._data[ident]) {
          var item = this._data[ident];
          delete this._data[ident];
          --this.length;
          return item;
        }

        return null;
      }
      /**
       * Clear the entire data set.
       *
       * After the items are removed, the [[DataSet]] will trigger an event `remove` for all removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * @param senderId - Sender id.
       *
       * @returns removedIds - The ids of all removed items.
       */

    }, {
      key: "clear",
      value: function clear(senderId) {
        var ids = Object.keys(this._data);
        var items = [];

        for (var i = 0, len = ids.length; i < len; i++) {
          items.push(this._data[ids[i]]);
        }

        this._data = {};
        this.length = 0;

        this._trigger('remove', {
          items: ids,
          oldData: items
        }, senderId);

        return ids;
      }
      /**
       * Find the item with maximum value of a specified field.
       *
       * @param field - Name of the property that should be searched for max value.
       *
       * @returns Item containing max value, or null if no items.
       */

    }, {
      key: "max",
      value: function max(field) {
        var data = this._data;
        var itemIds = Object.keys(data);
        var max = null;
        var maxField = null;

        for (var i = 0, len = itemIds.length; i < len; i++) {
          var id = itemIds[i];
          var item = data[id];
          var itemField = item[field];

          if (itemField != null && (maxField == null || itemField > maxField)) {
            max = item;
            maxField = itemField;
          }
        }

        return max;
      }
      /**
       * Find the item with minimum value of a specified field.
       *
       * @param field - Name of the property that should be searched for min value.
       *
       * @returns Item containing min value, or null if no items.
       */

    }, {
      key: "min",
      value: function min(field) {
        var data = this._data;
        var itemIds = Object.keys(data);
        var min = null;
        var minField = null;

        for (var i = 0, len = itemIds.length; i < len; i++) {
          var id = itemIds[i];
          var item = data[id];
          var itemField = item[field];

          if (itemField != null && (minField == null || itemField < minField)) {
            min = item;
            minField = itemField;
          }
        }

        return min;
      }
      /**
       * Find all distinct values of a specified field
       *
       * @param prop - The property name whose distinct values should be returned.
       *
       * @returns Unordered array containing all distinct values. Items without specified property are ignored.
       */

    }, {
      key: "distinct",
      value: function distinct(prop) {
        var data = this._data;
        var itemIds = Object.keys(data);
        var values = [];
        var fieldType = this._options.type && this._options.type[prop] || null;
        var count = 0;

        for (var i = 0, len = itemIds.length; i < len; i++) {
          var id = itemIds[i];
          var item = data[id];
          var value = item[prop];
          var exists = false;

          for (var j = 0; j < count; j++) {
            if (values[j] == value) {
              exists = true;
              break;
            }
          }

          if (!exists && value !== undefined) {
            values[count] = value;
            count++;
          }
        }

        if (fieldType) {
          for (var _i10 = 0, _len10 = values.length; _i10 < _len10; _i10++) {
            values[_i10] = convert$1(values[_i10], fieldType);
          }
        }

        return values;
      }
      /**
       * Add a single item. Will fail when an item with the same id already exists.
       *
       * @param item - A new item to be added.
       *
       * @returns Added item's id. An id is generated when it is not present in the item.
       */

    }, {
      key: "_addItem",
      value: function _addItem(item) {
        var id = item[this._idProp];

        if (id != null) {
          // check whether this id is already taken
          if (this._data[id]) {
            // item already exists
            throw new Error('Cannot add item: item with id ' + id + ' already exists');
          }
        } else {
          // generate an id
          id = uuid4$1();
          item[this._idProp] = id;
        }

        var d = {};
        var fields = Object.keys(item);

        for (var i = 0, len = fields.length; i < len; i++) {
          var field = fields[i];
          var fieldType = this._type[field]; // type may be undefined

          d[field] = convert$1(item[field], fieldType);
        }

        this._data[id] = d;
        this.length++;
        return id;
      }
      /**
       * Get an item. Fields can be converted to a specific type
       *
       * @param id - Id of the requested item.
       * @param types - Property name to type name object map of type converstions.
       *
       * @returns The item, optionally after type conversion.
       */

    }, {
      key: "_getItem",
      value: function _getItem(id, types) {
        // @TODO: I have no idea how to type this.
        // get the item from the dataset
        var raw = this._data[id];

        if (!raw) {
          return null;
        } // convert the items field types


        var converted;
        var fields = Object.keys(raw);

        if (types) {
          converted = {};

          for (var i = 0, len = fields.length; i < len; i++) {
            var field = fields[i];
            var value = raw[field];
            converted[field] = convert$1(value, types[field]);
          }
        } else {
          // no field types specified, no converting needed
          converted = _objectSpread$1({}, raw);
        }

        if (converted[this._idProp] == null) {
          converted[this._idProp] = raw.id;
        }

        return converted;
      }
      /**
       * Update a single item: merge with existing item.
       * Will fail when the item has no id, or when there does not exist an item with the same id.
       *
       * @param item - The new item
       *
       * @returns The id of the updated item.
       */

    }, {
      key: "_updateItem",
      value: function _updateItem(item) {
        var id = item[this._idProp];

        if (id == null) {
          throw new Error('Cannot update item: item has no id (item: ' + JSON.stringify(item) + ')');
        }

        var d = this._data[id];

        if (!d) {
          // item doesn't exist
          throw new Error('Cannot update item: no item with id ' + id + ' found');
        } // merge with current item


        var fields = Object.keys(item);

        for (var i = 0, len = fields.length; i < len; i++) {
          var field = fields[i];
          var fieldType = this._type[field] // type may be undefined
          ;
          d[field] = convert$1(item[field], fieldType);
        }

        return id;
      }
    }]);
    return DataSet;
  }(DataSetPart);
  /**
   * DataView
   *
   * A DataView offers a filtered and/or formatted view on a DataSet. One can subscribe to changes in a DataView, and easily get filtered or formatted data without having to specify filters and field types all the time.
   *
   * ## Example
   * ```javascript
   * // create a DataSet
   * var data = new vis.DataSet();
   * data.add([
   *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},
   *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},
   *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},
   *   {id: 4, text: 'item 4'}
   * ]);
   *
   * // create a DataView
   * // the view will only contain items having a property group with value 1,
   * // and will only output fields id, text, and date.
   * var view = new vis.DataView(data, {
   *   filter: function (item) {
   *     return (item.group == 1);
   *   },
   *   fields: ['id', 'text', 'date']
   * });
   *
   * // subscribe to any change in the DataView
   * view.on('*', function (event, properties, senderId) {
   *   console.log('event', event, properties);
   * });
   *
   * // update an item in the data set
   * data.update({id: 2, group: 1});
   *
   * // get all ids in the view
   * var ids = view.getIds();
   * console.log('ids', ids); // will output [1, 2]
   *
   * // get all items in the view
   * var items = view.get();
   * ```
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */


  var DataView =
  /*#__PURE__*/
  function (_DataSetPart) {
    inherits(DataView, _DataSetPart);
    /**
     * Create a DataView.
     *
     * @param data - The instance containing data (directly or indirectly).
     * @param options - Options to configure this data view.
     */

    function DataView(data, options) {
      var _this;

      classCallCheck(this, DataView);
      _this = possibleConstructorReturn(this, getPrototypeOf(DataView).call(this));
      /** @inheritdoc */

      _this.length = 0;
      _this._ids = {}; // ids of the items currently in memory (just contains a boolean true)

      _this._options = options || {};
      _this.listener = _this._onEvent.bind(assertThisInitialized(_this));

      _this.setData(data);

      return _this;
    } // TODO: implement a function .config() to dynamically update things like configured filter
    // and trigger changes accordingly

    /**
     * Set a data source for the view.
     *
     * @param data - The instance containing data (directly or indirectly).
     */


    createClass(DataView, [{
      key: "setData",
      value: function setData(data) {
        if (this._data) {
          // unsubscribe from current dataset
          if (this._data.off) {
            this._data.off('*', this.listener);
          } // trigger a remove of all items in memory


          var ids = this._data.getIds({
            filter: this._options.filter
          });

          var items = this._data.get(ids);

          this._ids = {};
          this.length = 0;

          this._trigger('remove', {
            items: ids,
            oldData: items
          });
        }

        if (data != null) {
          this._data = data; // trigger an add of all added items

          var _ids = this._data.getIds({
            filter: this._options.filter
          });

          for (var i = 0, len = _ids.length; i < len; i++) {
            var id = _ids[i];
            this._ids[id] = true;
          }

          this.length = _ids.length;

          this._trigger('add', {
            items: _ids
          });
        } else {
          this._data = new DataSet();
        } // subscribe to new dataset


        if (this._data.on) {
          this._data.on('*', this.listener);
        }
      }
      /**
       * Refresh the DataView.
       * Useful when the DataView has a filter function containing a variable parameter.
       */

    }, {
      key: "refresh",
      value: function refresh() {
        var ids = this._data.getIds({
          filter: this._options.filter
        });

        var oldIds = Object.keys(this._ids);
        var newIds = {};
        var addedIds = [];
        var removedIds = [];
        var removedItems = []; // check for additions

        for (var i = 0, len = ids.length; i < len; i++) {
          var id = ids[i];
          newIds[id] = true;

          if (!this._ids[id]) {
            addedIds.push(id);
            this._ids[id] = true;
          }
        } // check for removals


        for (var _i = 0, _len = oldIds.length; _i < _len; _i++) {
          var _id = oldIds[_i];

          var item = this._data.get(_id);

          if (item == null) {
            // @TODO: Investigate.
            // Doesn't happen during tests or examples.
            // Is it really impossible or could it eventually happen?
            // How to handle it if it does? The types guarantee non-nullable items.
            console.error('If you see this, report it please.');
          } else if (!newIds[_id]) {
            removedIds.push(_id);
            removedItems.push(item);
            delete this._ids[_id];
          }
        }

        this.length += addedIds.length - removedIds.length; // trigger events

        if (addedIds.length) {
          this._trigger('add', {
            items: addedIds
          });
        }

        if (removedIds.length) {
          this._trigger('remove', {
            items: removedIds,
            oldData: removedItems
          });
        }
      }
      /** @inheritdoc */

    }, {
      key: "get",
      value: function get(first, second) {
        if (this._data == null) {
          return null;
        } // parse the arguments


        var ids = null;
        var options;

        if (isId(first) || Array.isArray(first)) {
          ids = first;
          options = second;
        } else {
          options = first;
        } // extend the options with the default options and provided options


        var viewOptions = Object.assign({}, this._options, options); // create a combined filter method when needed

        var thisFilter = this._options.filter;
        var optionsFilter = options && options.filter;

        if (thisFilter && optionsFilter) {
          viewOptions.filter = function (item) {
            return thisFilter(item) && optionsFilter(item);
          };
        }

        if (ids == null) {
          return this._data.get(viewOptions);
        } else {
          return this._data.get(ids, viewOptions);
        }
      }
      /** @inheritdoc */

    }, {
      key: "getIds",
      value: function getIds(options) {
        if (this._data.length) {
          var defaultFilter = this._options.filter;
          var optionsFilter = options != null ? options.filter : null;
          var filter;

          if (optionsFilter) {
            if (defaultFilter) {
              filter = function filter(item) {
                return defaultFilter(item) && optionsFilter(item);
              };
            } else {
              filter = optionsFilter;
            }
          } else {
            filter = defaultFilter;
          }

          return this._data.getIds({
            filter: filter,
            order: options && options.order
          });
        } else {
          return [];
        }
      }
      /** @inheritdoc */

    }, {
      key: "forEach",
      value: function forEach(callback, options) {
        if (this._data) {
          var defaultFilter = this._options.filter;
          var optionsFilter = options && options.filter;
          var filter;

          if (optionsFilter) {
            if (defaultFilter) {
              filter = function filter(item) {
                return defaultFilter(item) && optionsFilter(item);
              };
            } else {
              filter = optionsFilter;
            }
          } else {
            filter = defaultFilter;
          }

          this._data.forEach(callback, {
            filter: filter,
            order: options && options.order
          });
        }
      }
      /** @inheritdoc */

    }, {
      key: "map",
      value: function map(callback, options) {
        if (this._data) {
          var defaultFilter = this._options.filter;
          var optionsFilter = options && options.filter;
          var filter;

          if (optionsFilter) {
            if (defaultFilter) {
              filter = function filter(item) {
                return defaultFilter(item) && optionsFilter(item);
              };
            } else {
              filter = optionsFilter;
            }
          } else {
            filter = defaultFilter;
          }

          return this._data.map(callback, {
            filter: filter,
            order: options && options.order
          });
        } else {
          return [];
        }
      }
      /** @inheritdoc */

    }, {
      key: "getDataSet",
      value: function getDataSet() {
        return this._data.getDataSet();
      }
      /**
       * Event listener. Will propagate all events from the connected data set to the subscribers of the DataView, but will filter the items and only trigger when there are changes in the filtered data set.
       *
       * @param event - The name of the event.
       * @param params - Parameters of the event.
       * @param senderId - Id supplied by the sender.
       */

    }, {
      key: "_onEvent",
      value: function _onEvent(event, params, senderId) {
        if (!params || !params.items || !this._data) {
          return;
        }

        var ids = params.items;
        var addedIds = [];
        var updatedIds = [];
        var removedIds = [];
        var oldItems = [];
        var updatedItems = [];
        var removedItems = [];

        switch (event) {
          case 'add':
            // filter the ids of the added items
            for (var i = 0, len = ids.length; i < len; i++) {
              var id = ids[i];
              var item = this.get(id);

              if (item) {
                this._ids[id] = true;
                addedIds.push(id);
              }
            }

            break;

          case 'update':
            // determine the event from the views viewpoint: an updated
            // item can be added, updated, or removed from this view.
            for (var _i2 = 0, _len2 = ids.length; _i2 < _len2; _i2++) {
              var _id2 = ids[_i2];

              var _item = this.get(_id2);

              if (_item) {
                if (this._ids[_id2]) {
                  updatedIds.push(_id2);
                  updatedItems.push(params.data[_i2]);
                  oldItems.push(params.oldData[_i2]);
                } else {
                  this._ids[_id2] = true;
                  addedIds.push(_id2);
                }
              } else {
                if (this._ids[_id2]) {
                  delete this._ids[_id2];
                  removedIds.push(_id2);
                  removedItems.push(params.oldData[_i2]);
                }
              }
            }

            break;

          case 'remove':
            // filter the ids of the removed items
            for (var _i3 = 0, _len3 = ids.length; _i3 < _len3; _i3++) {
              var _id3 = ids[_i3];

              if (this._ids[_id3]) {
                delete this._ids[_id3];
                removedIds.push(_id3);
                removedItems.push(params.oldData[_i3]);
              }
            }

            break;
        }

        this.length += addedIds.length - removedIds.length;

        if (addedIds.length) {
          this._trigger('add', {
            items: addedIds
          }, senderId);
        }

        if (updatedIds.length) {
          this._trigger('update', {
            items: updatedIds,
            oldData: oldItems,
            data: updatedItems
          }, senderId);
        }

        if (removedIds.length) {
          this._trigger('remove', {
            items: removedIds,
            oldData: removedItems
          }, senderId);
        }
      }
    }]);
    return DataView;
  }(DataSetPart);

  /**
   * vis-network - network
   * http://visjs.org/
   *
   * A dynamic, browser-based visualization library.
   *
   * @version 0.0.0-no-version
   * @date    2019-08-02T12:47:12Z
   *
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
   *
   * @license 
   * vis.js is dual licensed under both
   *
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   *   and
   *
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   *
   * vis.js may be distributed under either license.
   */function _defineProperty$2(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e;}var defineProperty$2=_defineProperty$2;function _arrayWithoutHoles$2(e){if(Array.isArray(e)){for(var t=0,o=Array(e.length);t<e.length;t++)o[t]=e[t];return o;}}var arrayWithoutHoles$2=_arrayWithoutHoles$2;function _iterableToArray$2(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e);}var iterableToArray$2=_iterableToArray$2;function _nonIterableSpread$2(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var nonIterableSpread$2=_nonIterableSpread$2;function _toConsumableArray$2(e){return arrayWithoutHoles$2(e)||iterableToArray$2(e)||nonIterableSpread$2();}var toConsumableArray$2=_toConsumableArray$2,commonjsGlobal$2="undefined"==typeof globalThis?"undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?{}:self:global:window:globalThis;function commonjsRequire$2(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs");}function createCommonjsModule$2(e,t){return t={exports:{}},e(t,t.exports),t.exports;}for(var _typeof_1$2=createCommonjsModule$2(function(e){function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e;}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e;},t(e);}function o(n){return e.exports="function"==typeof Symbol&&"symbol"===t(Symbol.iterator)?o=function(e){return t(e);}:o=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":t(e);},o(n);}e.exports=o;}),moment$2=createCommonjsModule$2(function(e){var t=Math.round,o=Math.pow,n=Math.max,a=Math.abs,d=Math.min,s=Math.floor,r=Math.ceil;(function(t,o){e.exports=o();})(commonjsGlobal$2,function(){function l(){return Zt.apply(null,arguments);}function u(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e);}function p(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e);}function h(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;for(var t in e)if(e.hasOwnProperty(t))return !1;return !0;}function m(e){return void 0===e;}function g(e){return "number"==typeof e||"[object Number]"===Object.prototype.toString.call(e);}function y(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e);}function f(e,t){var o=[],n;for(n=0;n<e.length;++n)o.push(t(e[n],n));return o;}function _(e,t){return Object.prototype.hasOwnProperty.call(e,t);}function v(e,t){for(var o in t)_(t,o)&&(e[o]=t[o]);return _(t,"toString")&&(e.toString=t.toString),_(t,"valueOf")&&(e.valueOf=t.valueOf),e;}function k(e,t,o,n){return it(e,t,o,n,!0).utc();}function w(){return {empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1};}function x(e){return null==e._pf&&(e._pf=w()),e._pf;}function S(e){if(null==e._isValid){var t=x(e),o=Xt.call(t.parsedDateParts,function(e){return null!=e;}),n=!isNaN(e._d.getTime())&&0>t.overflow&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&o);if(e._strict&&(n=n&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null==Object.isFrozen||!Object.isFrozen(e))e._isValid=n;else return n;}return e._isValid;}function O(e){var t=k(NaN);return null==e?x(t).userInvalidated=!0:v(x(t),e),t;}function D(e,t){var o,n,a;if(m(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),m(t._i)||(e._i=t._i),m(t._f)||(e._f=t._f),m(t._l)||(e._l=t._l),m(t._strict)||(e._strict=t._strict),m(t._tzm)||(e._tzm=t._tzm),m(t._isUTC)||(e._isUTC=t._isUTC),m(t._offset)||(e._offset=t._offset),m(t._pf)||(e._pf=x(t)),m(t._locale)||(e._locale=t._locale),0<Kt.length)for(o=0;o<Kt.length;o++)n=Kt[o],a=t[n],m(a)||(e[n]=a);return e;}function T(e){D(this,e),this._d=new Date(null==e._d?NaN:e._d.getTime()),this.isValid()||(this._d=new Date(NaN)),!1===Qt&&(Qt=!0,l.updateOffset(this),Qt=!1);}function C(e){return e instanceof T||null!=e&&null!=e._isAMomentObject;}function E(e){return 0>e?r(e)||0:s(e);}function M(e){var t=+e,o=0;return 0!=t&&isFinite(t)&&(o=E(t)),o;}function I(e,t,o){var n=d(e.length,t.length),s=a(e.length-t.length),r=0,l;for(l=0;l<n;l++)(o&&e[l]!==t[l]||!o&&M(e[l])!==M(t[l]))&&r++;return r+s;}function P(e){!1===l.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e);}function F(e,t){var o=!0;return v(function(){if(null!=l.deprecationHandler&&l.deprecationHandler(null,e),o){for(var n=[],a=0,d;a<arguments.length;a++){if(d="","object"==typeof arguments[a]){for(var s in d+="\n["+a+"] ",arguments[0])d+=s+": "+arguments[0][s]+", ";d=d.slice(0,-2);}else d=arguments[a];n.push(d);}P(e+"\nArguments: "+Array.prototype.slice.call(n).join("")+"\n"+new Error().stack),o=!1;}return t.apply(this,arguments);},t);}function Y(e,t){null!=l.deprecationHandler&&l.deprecationHandler(e,t),$t[e]||(P(t),$t[e]=!0);}function z(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e);}function N(e){var t,o;for(o in e)t=e[o],z(t)?this[o]=t:this["_"+o]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source);}function R(e,t){var o=v({},e),n;for(n in t)_(t,n)&&(p(e[n])&&p(t[n])?(o[n]={},v(o[n],e[n]),v(o[n],t[n])):null==t[n]?delete o[n]:o[n]=t[n]);for(n in e)_(e,n)&&!_(t,n)&&p(e[n])&&(o[n]=v({},o[n]));return o;}function B(e){null!=e&&this.set(e);}function H(e,t){var o=e.toLowerCase();to[o]=to[o+"s"]=to[t]=e;}function L(e){return "string"==typeof e?to[e]||to[e.toLowerCase()]:void 0;}function A(e){var t={},o,n;for(n in e)_(e,n)&&(o=L(n),o&&(t[o]=e[n]));return t;}function W(e,t){oo[e]=t;}function j(e){var t=[];for(var o in e)t.push({unit:o,priority:oo[o]});return t.sort(function(e,t){return e.priority-t.priority;}),t;}function U(e,t,i){var d=""+a(e),s=t-d.length;return (0<=e?i?"+":"":"-")+o(10,n(0,s)).toString().substr(1)+d;}function V(e,t,o,n){var i=n;"string"==typeof n&&(i=function(){return this[n]();}),e&&(so[e]=i),t&&(so[t[0]]=function(){return U(i.apply(this,arguments),t[1],t[2]);}),o&&(so[o]=function(){return this.localeData().ordinal(i.apply(this,arguments),e);});}function G(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"");}function q(e){var t=e.match(no),o,n;for(o=0,n=t.length;o<n;o++)t[o]=so[t[o]]?so[t[o]]:G(t[o]);return function(o){var a="",d;for(d=0;d<n;d++)a+=z(t[d])?t[d].call(o,e):t[d];return a;};}function Z(e,t){return e.isValid()?(t=X(t,e.localeData()),ao[t]=ao[t]||q(t),ao[t](e)):e.localeData().invalidDate();}function X(e,t){function o(e){return t.longDateFormat(e)||e;}var n=5;for(io.lastIndex=0;0<=n&&io.test(e);)e=e.replace(io,o),io.lastIndex=0,n-=1;return e;}function K(e,t,o){Oo[e]=z(t)?t:function(e){return e&&o?o:t;};}function Q(e,t){return _(Oo,e)?Oo[e](t._strict,t._locale):new RegExp($(e));}function $(e){return J(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,o,n,i){return t||o||n||i;}));}function J(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&");}function ee(e,t){var o=t,n;for("string"==typeof e&&(e=[e]),g(t)&&(o=function(e,o){o[t]=M(e);}),n=0;n<e.length;n++)Do[e[n]]=o;}function te(e,t){ee(e,function(e,o,n,i){n._w=n._w||{},t(e,n._w,n,i);});}function oe(e,t,o){null!=t&&_(Do,e)&&Do[e](t,o._a,o,e);}function ne(e){return ie(e)?366:365;}function ie(e){return 0==e%4&&0!=e%100||0==e%400;}function ae(e,t){return function(o){return null==o?de(this,e):(se(this,e,o),l.updateOffset(this,t),this);};}function de(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN;}function se(e,t,o){e.isValid()&&!isNaN(o)&&("FullYear"===t&&ie(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](o,e.month(),ce(o,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](o));}function re(e,t){if("object"==typeof e){e=A(e);for(var o=j(e),n=0;n<o.length;n++)this[o[n].unit](e[o[n].unit]);}else if(e=L(e),z(this[e]))return this[e](t);return this;}function le(e,t){return (e%t+t)%t;}function ce(e,t){if(isNaN(e)||isNaN(t))return NaN;var o=le(t,12);return e+=(t-o)/12,1===o?ie(e)?29:28:31-o%7%2;}function ue(e,t,o){var n=e.toLocaleLowerCase(),a,d,s;if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],a=0;12>a;++a)s=k([2e3,a]),this._shortMonthsParse[a]=this.monthsShort(s,"").toLocaleLowerCase(),this._longMonthsParse[a]=this.months(s,"").toLocaleLowerCase();return o?"MMM"===t?(d=Yo.call(this._shortMonthsParse,n),-1===d?null:d):(d=Yo.call(this._longMonthsParse,n),-1===d?null:d):"MMM"===t?(d=Yo.call(this._shortMonthsParse,n),-1!==d)?d:(d=Yo.call(this._longMonthsParse,n),-1===d?null:d):(d=Yo.call(this._longMonthsParse,n),-1!==d)?d:(d=Yo.call(this._shortMonthsParse,n),-1===d?null:d);}function pe(e,t,o){var n,a,d;if(this._monthsParseExact)return ue.call(this,e,t,o);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;12>n;n++){if(a=k([2e3,n]),o&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(a,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(a,"").replace(".","")+"$","i")),o||this._monthsParse[n]||(d="^"+this.months(a,"")+"|^"+this.monthsShort(a,""),this._monthsParse[n]=new RegExp(d.replace(".",""),"i")),o&&"MMMM"===t&&this._longMonthsParse[n].test(e))return n;if(o&&"MMM"===t&&this._shortMonthsParse[n].test(e))return n;if(!o&&this._monthsParse[n].test(e))return n;}}function he(e,t){var o;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=M(t);else if(t=e.localeData().monthsParse(t),!g(t))return e;return o=d(e.date(),ce(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,o),e;}function me(e){return null==e?de(this,"Month"):(he(this,e),l.updateOffset(this,!0),this);}function ge(){function e(e,t){return t.length-e.length;}var t=[],o=[],n=[],a,d;for(a=0;12>a;a++)d=k([2e3,a]),t.push(this.monthsShort(d,"")),o.push(this.months(d,"")),n.push(this.months(d,"")),n.push(this.monthsShort(d,""));for(t.sort(e),o.sort(e),n.sort(e),a=0;12>a;a++)t[a]=J(t[a]),o[a]=J(o[a]);for(a=0;24>a;a++)n[a]=J(n[a]);this._monthsRegex=new RegExp("^("+n.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+t.join("|")+")","i");}function ye(e,t,o,n,i,a,d){var s;return 100>e&&0<=e?(s=new Date(e+400,t,o,n,i,a,d),isFinite(s.getFullYear())&&s.setFullYear(e)):s=new Date(e,t,o,n,i,a,d),s;}function fe(e){var t;if(100>e&&0<=e){var o=Array.prototype.slice.call(arguments);o[0]=e+400,t=new Date(Date.UTC.apply(null,o)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e);}else t=new Date(Date.UTC.apply(null,arguments));return t;}function be(e,t,o){var n=7+t-o,i=(7+fe(e,0,n).getUTCDay()-t)%7;return -i+n-1;}function _e(e,t,o,n,i){var a=be(e,n,i),d=1+7*(t-1)+(7+o-n)%7+a,s,r;return 0>=d?(s=e-1,r=ne(s)+d):d>ne(e)?(s=e+1,r=d-ne(e)):(s=e,r=d),{year:s,dayOfYear:r};}function ve(e,t,o){var n=be(e.year(),t,o),i=s((e.dayOfYear()-n-1)/7)+1,a,d;return 1>i?(d=e.year()-1,a=i+ke(d,t,o)):i>ke(e.year(),t,o)?(a=i-ke(e.year(),t,o),d=e.year()+1):(d=e.year(),a=i),{week:a,year:d};}function ke(e,t,o){var n=be(e,t,o),i=be(e+1,t,o);return (ne(e)-n+i)/7;}function we(e,t){return "string"==typeof e?isNaN(e)?(e=t.weekdaysParse(e),"number"==typeof e?e:null):parseInt(e,10):e;}function xe(e,t){return "string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e;}function Se(e,t){return e.slice(t,7).concat(e.slice(0,t));}function Oe(e,t,o){var n=e.toLocaleLowerCase(),a,d,s;if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],a=0;7>a;++a)s=k([2e3,1]).day(a),this._minWeekdaysParse[a]=this.weekdaysMin(s,"").toLocaleLowerCase(),this._shortWeekdaysParse[a]=this.weekdaysShort(s,"").toLocaleLowerCase(),this._weekdaysParse[a]=this.weekdays(s,"").toLocaleLowerCase();return o?"dddd"===t?(d=Yo.call(this._weekdaysParse,n),-1===d?null:d):"ddd"===t?(d=Yo.call(this._shortWeekdaysParse,n),-1===d?null:d):(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):"dddd"===t?(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._shortWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):"ddd"===t?(d=Yo.call(this._shortWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):(d=Yo.call(this._minWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._shortWeekdaysParse,n),-1===d?null:d);}function De(e,t,o){var n,a,d;if(this._weekdaysParseExact)return Oe.call(this,e,t,o);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;7>n;n++){if(a=k([2e3,1]).day(n),o&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp("^"+this.weekdays(a,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[n]=new RegExp("^"+this.weekdaysShort(a,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[n]=new RegExp("^"+this.weekdaysMin(a,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[n]||(d="^"+this.weekdays(a,"")+"|^"+this.weekdaysShort(a,"")+"|^"+this.weekdaysMin(a,""),this._weekdaysParse[n]=new RegExp(d.replace(".",""),"i")),o&&"dddd"===t&&this._fullWeekdaysParse[n].test(e))return n;if(o&&"ddd"===t&&this._shortWeekdaysParse[n].test(e))return n;if(o&&"dd"===t&&this._minWeekdaysParse[n].test(e))return n;if(!o&&this._weekdaysParse[n].test(e))return n;}}function Te(){function e(e,t){return t.length-e.length;}var t=[],o=[],n=[],a=[],d,s,r,l,c;for(d=0;7>d;d++)s=k([2e3,1]).day(d),r=this.weekdaysMin(s,""),l=this.weekdaysShort(s,""),c=this.weekdays(s,""),t.push(r),o.push(l),n.push(c),a.push(r),a.push(l),a.push(c);for(t.sort(e),o.sort(e),n.sort(e),a.sort(e),d=0;7>d;d++)o[d]=J(o[d]),n[d]=J(n[d]),a[d]=J(a[d]);this._weekdaysRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+n.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+t.join("|")+")","i");}function Ce(){return this.hours()%12||12;}function Ee(e,t){V(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t);});}function Me(e,t){return t._meridiemParse;}function Ie(e){return e?e.toLowerCase().replace("_","-"):e;}function Pe(e){for(var t=0,o,n,a,d;t<e.length;){for(d=Ie(e[t]).split("-"),o=d.length,n=Ie(e[t+1]),n=n?n.split("-"):null;0<o;){if(a=Fe(d.slice(0,o).join("-")),a)return a;if(n&&n.length>=o&&I(d,n,!0)>=o-1)break;o--;}t++;}return Qo;}function Fe(t){var o=null;if(!Ao[t]&&!0&&e&&e.exports)try{o=Qo._abbr;commonjsRequire$2("./locale/"+t),Ye(o);}catch(t){}return Ao[t];}function Ye(e,t){var o;return e&&(o=m(t)?Ne(e):ze(e,t),o?Qo=o:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Qo._abbr;}function ze(e,t){if(null!==t){var o=Lo,n;if(t.abbr=e,null!=Ao[e])Y("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),o=Ao[e]._config;else if(null!=t.parentLocale)if(null!=Ao[t.parentLocale])o=Ao[t.parentLocale]._config;else if(n=Fe(t.parentLocale),null!=n)o=n._config;else return Wo[t.parentLocale]||(Wo[t.parentLocale]=[]),Wo[t.parentLocale].push({name:e,config:t}),null;return Ao[e]=new B(R(o,t)),Wo[e]&&Wo[e].forEach(function(e){ze(e.name,e.config);}),Ye(e),Ao[e];}return delete Ao[e],null;}function Ne(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Qo;if(!u(e)){if(t=Fe(e),t)return t;e=[e];}return Pe(e);}function Re(){return Jt(Ao);}function Be(e){var t=e._a,o;return t&&-2===x(e).overflow&&(o=0>t[1]||11<t[1]?1:1>t[2]||t[2]>ce(t[0],t[1])?2:0>t[3]||24<t[3]||24===t[3]&&(0!==t[4]||0!==t[5]||0!==t[6])?3:0>t[4]||59<t[4]?4:0>t[5]||59<t[5]?5:0>t[6]||999<t[6]?6:-1,x(e)._overflowDayOfYear&&(0>o||2<o)&&(o=2),x(e)._overflowWeeks&&-1===o&&(o=7),x(e)._overflowWeekday&&-1===o&&(o=8),x(e).overflow=o),e;}function He(e,t,o){return null==e?null==t?o:t:e;}function Le(e){var t=new Date(l.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()];}function Ae(e){var t=[],o,n,a,d,s;if(!e._d){for(a=Le(e),e._w&&null==e._a[2]&&null==e._a[1]&&We(e),null!=e._dayOfYear&&(s=He(e._a[0],a[0]),(e._dayOfYear>ne(s)||0===e._dayOfYear)&&(x(e)._overflowDayOfYear=!0),n=fe(s,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),o=0;3>o&&null==e._a[o];++o)e._a[o]=t[o]=a[o];for(;7>o;o++)e._a[o]=t[o]=null==e._a[o]?2===o?1:0:e._a[o];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?fe:ye).apply(null,t),d=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&"undefined"!=typeof e._w.d&&e._w.d!==d&&(x(e).weekdayMismatch=!0);}}function We(e){var t,o,n,i,a,d,s,r;if(t=e._w,null!=t.GG||null!=t.W||null!=t.E)a=1,d=4,o=He(t.GG,e._a[0],ve(at(),1,4).year),n=He(t.W,1),i=He(t.E,1),(1>i||7<i)&&(r=!0);else{a=e._locale._week.dow,d=e._locale._week.doy;var l=ve(at(),a,d);o=He(t.gg,e._a[0],l.year),n=He(t.w,l.week),null==t.d?null==t.e?i=a:(i=t.e+a,(0>t.e||6<t.e)&&(r=!0)):(i=t.d,(0>i||6<i)&&(r=!0));}1>n||n>ke(o,a,d)?x(e)._overflowWeeks=!0:null==r?(s=_e(o,n,i,a,d),e._a[0]=s.year,e._dayOfYear=s.dayOfYear):x(e)._overflowWeekday=!0;}function je(e){var t=e._i,o=jo.exec(t)||Uo.exec(t),n,a,d,s,r,c;if(o){for(x(e).iso=!0,n=0,a=Go.length;n<a;n++)if(Go[n][1].exec(o[1])){s=Go[n][0],d=!1!==Go[n][2];break;}if(null==s)return void(e._isValid=!1);if(o[3]){for(n=0,a=qo.length;n<a;n++)if(qo[n][1].exec(o[3])){r=(o[2]||" ")+qo[n][0];break;}if(null==r)return void(e._isValid=!1);}if(!d&&null!=r)return void(e._isValid=!1);if(o[4])if(Vo.exec(o[4]))c="Z";else return void(e._isValid=!1);e._f=s+(r||"")+(c||""),Qe(e);}else e._isValid=!1;}function Ue(e,t,o,n,i,a){var d=[Ve(e),No.indexOf(t),parseInt(o,10),parseInt(n,10),parseInt(i,10)];return a&&d.push(parseInt(a,10)),d;}function Ve(e){var t=parseInt(e,10);return 49>=t?2e3+t:999>=t?1900+t:t;}function Ge(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"");}function qe(e,t,o){if(e){var n=Ro.indexOf(e),i=new Date(t[0],t[1],t[2]).getDay();if(n!==i)return x(o).weekdayMismatch=!0,o._isValid=!1,!1;}return !0;}function Ze(e,t,o){if(e)return Ko[e];if(t)return 0;var n=parseInt(o,10),i=n%100;return 60*((n-i)/100)+i;}function Xe(e){var t=Xo.exec(Ge(e._i));if(t){var o=Ue(t[4],t[3],t[2],t[5],t[6],t[7]);if(!qe(t[1],o,e))return;e._a=o,e._tzm=Ze(t[8],t[9],t[10]),e._d=fe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),x(e).rfc2822=!0;}else e._isValid=!1;}function Ke(e){var t=Zo.exec(e._i);if(null!==t)return void(e._d=new Date(+t[1]));if(je(e),!1===e._isValid)delete e._isValid;else return;if(Xe(e),!1===e._isValid)delete e._isValid;else return;l.createFromInputFallback(e);}function Qe(e){if(e._f===l.ISO_8601)return void je(e);if(e._f===l.RFC_2822)return void Xe(e);e._a=[],x(e).empty=!0;var t=""+e._i,o=t.length,n=0,a,d,s,r,c;for(s=X(e._f,e._locale).match(no)||[],a=0;a<s.length;a++)r=s[a],d=(t.match(Q(r,e))||[])[0],d&&(c=t.substr(0,t.indexOf(d)),0<c.length&&x(e).unusedInput.push(c),t=t.slice(t.indexOf(d)+d.length),n+=d.length),so[r]?(d?x(e).empty=!1:x(e).unusedTokens.push(r),oe(r,d,e)):e._strict&&!d&&x(e).unusedTokens.push(r);x(e).charsLeftOver=o-n,0<t.length&&x(e).unusedInput.push(t),12>=e._a[3]&&!0===x(e).bigHour&&0<e._a[3]&&(x(e).bigHour=void 0),x(e).parsedDateParts=e._a.slice(0),x(e).meridiem=e._meridiem,e._a[3]=$e(e._locale,e._a[3],e._meridiem),Ae(e),Be(e);}function $e(e,t,o){var n;return null==o?t:null==e.meridiemHour?null==e.isPM?t:(n=e.isPM(o),n&&12>t&&(t+=12),n||12!==t||(t=0),t):e.meridiemHour(t,o);}function Je(e){var t,o,n,a,d;if(0===e._f.length)return x(e).invalidFormat=!0,void(e._d=new Date(NaN));for(a=0;a<e._f.length;a++)(d=0,t=D({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[a],Qe(t),!!S(t))&&(d+=x(t).charsLeftOver,d+=10*x(t).unusedTokens.length,x(t).score=d,(null==n||d<n)&&(n=d,o=t));v(e,o||t);}function et(e){if(!e._d){var t=A(e._i);e._a=f([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10);}),Ae(e);}}function tt(e){var t=new T(Be(ot(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t;}function ot(e){var t=e._i,o=e._f;return (e._locale=e._locale||Ne(e._l),null===t||void 0===o&&""===t)?O({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),C(t))?new T(Be(t)):(y(t)?e._d=t:u(o)?Je(e):o?Qe(e):nt(e),S(e)||(e._d=null),e);}function nt(e){var t=e._i;m(t)?e._d=new Date(l.now()):y(t)?e._d=new Date(t.valueOf()):"string"==typeof t?Ke(e):u(t)?(e._a=f(t.slice(0),function(e){return parseInt(e,10);}),Ae(e)):p(t)?et(e):g(t)?e._d=new Date(t):l.createFromInputFallback(e);}function it(e,t,o,n,i){var a={};return (!0===o||!1===o)&&(n=o,o=void 0),(p(e)&&h(e)||u(e)&&0===e.length)&&(e=void 0),a._isAMomentObject=!0,a._useUTC=a._isUTC=i,a._l=o,a._i=e,a._f=t,a._strict=n,tt(a);}function at(e,t,o,n){return it(e,t,o,n,!1);}function dt(e,t){var o,n;if(1===t.length&&u(t[0])&&(t=t[0]),!t.length)return at();for(o=t[0],n=1;n<t.length;++n)(!t[n].isValid()||t[n][e](o))&&(o=t[n]);return o;}function st(e){for(var t in e)if(-1===Yo.call(en,t)||null!=e[t]&&isNaN(e[t]))return !1;for(var o=!1,n=0;n<en.length;++n)if(e[en[n]]){if(o)return !1;parseFloat(e[en[n]])!==M(e[en[n]])&&(o=!0);}return !0;}function rt(e){var t=A(e),o=t.year||0,n=t.quarter||0,i=t.month||0,a=t.week||t.isoWeek||0,d=t.day||0,s=t.hour||0,r=t.minute||0,l=t.second||0,c=t.millisecond||0;this._isValid=st(t),this._milliseconds=+c+1e3*l+6e4*r+60*(60*(1e3*s)),this._days=+d+7*a,this._months=+i+3*n+12*o,this._data={},this._locale=Ne(),this._bubble();}function lt(e){return e instanceof rt;}function ct(e){return 0>e?-1*t(-1*e):t(e);}function ut(e,t){V(e,0,0,function(){var e=this.utcOffset(),o="+";return 0>e&&(e=-e,o="-"),o+U(~~(e/60),2)+t+U(~~e%60,2);});}function pt(e,t){var o=(t||"").match(e);if(null===o)return null;var n=o[o.length-1]||[],i=(n+"").match(tn)||["-",0,0],a=+(60*i[1])+M(i[2]);return 0===a?0:"+"===i[0]?a:-a;}function ht(e,t){var o,n;return t._isUTC?(o=t.clone(),n=(C(e)||y(e)?e.valueOf():at(e).valueOf())-o.valueOf(),o._d.setTime(o._d.valueOf()+n),l.updateOffset(o,!1),o):at(e).local();}function mt(e){return 15*-t(e._d.getTimezoneOffset()/15);}function gt(){if(!m(this._isDSTShifted))return this._isDSTShifted;var e={};if(D(e,this),e=ot(e),e._a){var t=e._isUTC?k(e._a):at(e._a);this._isDSTShifted=this.isValid()&&0<I(e._a,t.toArray());}else this._isDSTShifted=!1;return this._isDSTShifted;}function yt(){return !!this.isValid()&&this._isUTC&&0===this._offset;}function ft(e,t){var o=e,n=null,i,a,d;return lt(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:g(e)?(o={},t?o[t]=e:o.milliseconds=e):(n=on.exec(e))?(i="-"===n[1]?-1:1,o={y:0,d:M(n[2])*i,h:M(n[3])*i,m:M(n[4])*i,s:M(n[5])*i,ms:M(ct(1e3*n[6]))*i}):(n=nn.exec(e))?(i="-"===n[1]?-1:1,o={y:bt(n[2],i),M:bt(n[3],i),w:bt(n[4],i),d:bt(n[5],i),h:bt(n[6],i),m:bt(n[7],i),s:bt(n[8],i)}):null==o?o={}:"object"==typeof o&&(("from"in o)||("to"in o))&&(d=vt(at(o.from),at(o.to)),o={},o.ms=d.milliseconds,o.M=d.months),a=new rt(o),lt(e)&&_(e,"_locale")&&(a._locale=e._locale),a;}function bt(e,t){var o=e&&parseFloat(e.replace(",","."));return (isNaN(o)?0:o)*t;}function _t(e,t){var o={};return o.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(o.months,"M").isAfter(t)&&--o.months,o.milliseconds=+t-+e.clone().add(o.months,"M"),o;}function vt(e,t){var o;return e.isValid()&&t.isValid()?(t=ht(t,e),e.isBefore(t)?o=_t(e,t):(o=_t(t,e),o.milliseconds=-o.milliseconds,o.months=-o.months),o):{milliseconds:0,months:0};}function kt(e,t){return function(o,n){var i,a;return null===n||isNaN(+n)||(Y(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),a=o,o=n,n=a),o="string"==typeof o?+o:o,i=ft(o,n),wt(this,i,e),this;};}function wt(e,t,o,n){var i=t._milliseconds,a=ct(t._days),d=ct(t._months);e.isValid()&&(n=null==n||n,d&&he(e,de(e,"Month")+d*o),a&&se(e,"Date",de(e,"Date")+a*o),i&&e._d.setTime(e._d.valueOf()+i*o),n&&l.updateOffset(e,a||d));}function xt(e,t){var o=12*(t.year()-e.year())+(t.month()-e.month()),n=e.clone().add(o,"months"),i,a;return 0>t-n?(i=e.clone().add(o-1,"months"),a=(t-n)/(n-i)):(i=e.clone().add(o+1,"months"),a=(t-n)/(i-n)),-(o+a)||0;}function St(e){var t;return void 0===e?this._locale._abbr:(t=Ne(e),null!=t&&(this._locale=t),this);}function Ot(){return this._locale;}function Dt(e,t){return (e%t+t)%t;}function Tt(e,t,o){return 100>e&&0<=e?new Date(e+400,t,o)-12622780800000:new Date(e,t,o).valueOf();}function Ct(e,t,o){return 100>e&&0<=e?Date.UTC(e+400,t,o)-12622780800000:Date.UTC(e,t,o);}function Et(e,t){V(0,[e,e.length],0,t);}function Mt(e,t,o,n,i){var a;return null==e?ve(this,n,i).year:(a=ke(e,n,i),t>a&&(t=a),It.call(this,e,t,o,n,i));}function It(e,t,o,n,i){var a=_e(e,t,o,n,i),d=fe(a.year,0,a.dayOfYear);return this.year(d.getUTCFullYear()),this.month(d.getUTCMonth()),this.date(d.getUTCDate()),this;}function Pt(e,t){t[6]=M(1e3*("0."+e));}function Ft(e){return e;}function Yt(e,t,o,n){var i=Ne(),a=k().set(n,t);return i[o](a,e);}function zt(e,t,o){if(g(e)&&(t=e,e=void 0),e=e||"",null!=t)return Yt(e,t,o,"month");var n=[],a;for(a=0;12>a;a++)n[a]=Yt(e,a,o,"month");return n;}function Nt(e,t,o,n){"boolean"==typeof e?(g(t)&&(o=t,t=void 0),t=t||""):(t=e,o=t,e=!1,g(t)&&(o=t,t=void 0),t=t||"");var a=Ne(),d=e?a._week.dow:0;if(null!=o)return Yt(t,(o+d)%7,n,"day");var s=[],r;for(r=0;7>r;r++)s[r]=Yt(t,(r+d)%7,n,"day");return s;}function Rt(e,t,o,n){var i=ft(t,o);return e._milliseconds+=n*i._milliseconds,e._days+=n*i._days,e._months+=n*i._months,e._bubble();}function Bt(e){return 0>e?s(e):r(e);}function Ht(e){return 4800*e/146097;}function Lt(e){return 146097*e/4800;}function At(e){return function(){return this.as(e);};}function Wt(e){return function(){return this.isValid()?this._data[e]:NaN;};}function jt(e,t,o,n,i){return i.relativeTime(t||1,!!o,e,n);}function Ut(e,t,o){var n=ft(e).abs(),i=Pn(n.as("s")),d=Pn(n.as("m")),s=Pn(n.as("h")),r=Pn(n.as("d")),l=Pn(n.as("M")),c=Pn(n.as("y")),u=i<=Fn.ss&&["s",i]||i<Fn.s&&["ss",i]||1>=d&&["m"]||d<Fn.m&&["mm",d]||1>=s&&["h"]||s<Fn.h&&["hh",s]||1>=r&&["d"]||r<Fn.d&&["dd",r]||1>=l&&["M"]||l<Fn.M&&["MM",l]||1>=c&&["y"]||["yy",c];return u[2]=t,u[3]=0<+e,u[4]=o,jt.apply(null,u);}function Vt(e){return void 0===e?Pn:"function"==typeof e&&(Pn=e,!0);}function Gt(e){return (0<e)-(0>e)||+e;}function qt(){if(!this.isValid())return this.localeData().invalidDate();var e=Yn(this._milliseconds)/1e3,t=Yn(this._days),o=Yn(this._months),n,i,a;n=E(e/60),i=E(n/60),e%=60,n%=60,a=E(o/12),o%=12;var d=a,r=o,l=t,c=i,u=n,p=e?e.toFixed(3).replace(/\.?0+$/,""):"",s=this.asSeconds();if(!s)return "P0D";var h=0>s?"-":"",m=Gt(this._months)===Gt(s)?"":"-",g=Gt(this._days)===Gt(s)?"":"-",y=Gt(this._milliseconds)===Gt(s)?"":"-";return h+"P"+(d?m+d+"Y":"")+(r?m+r+"M":"")+(l?g+l+"D":"")+(c||u||p?"T":"")+(c?y+c+"H":"")+(u?y+u+"M":"")+(p?y+p+"S":"");}var Zt,Xt;Xt=Array.prototype.some?Array.prototype.some:function(e){for(var o=Object(this),t=o.length>>>0,n=0;n<t;n++)if((n in o)&&e.call(this,o[n],n,o))return !0;return !1;};var Kt=l.momentProperties=[],Qt=!1,$t={};l.suppressDeprecationWarnings=!1,l.deprecationHandler=null;var Jt=Object.keys?Object.keys:function(e){var t=[],o;for(o in e)_(e,o)&&t.push(o);return t;};var eo=/\d{1,2}/,to={},oo={},no=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,io=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,ao={},so={},ro=/\d/,lo=/\d\d/,co=/\d{3}/,uo=/\d{4}/,po=/[+-]?\d{6}/,ho=/\d\d?/,mo=/\d\d\d\d?/,go=/\d\d\d\d\d\d?/,yo=/\d{1,3}/,fo=/\d{1,4}/,bo=/[+-]?\d{1,6}/,_o=/\d+/,vo=/[+-]?\d+/,ko=/Z|[+-]\d\d:?\d\d/gi,wo=/Z|[+-]\d\d(?::?\d\d)?/gi,xo=/[+-]?\d+(\.\d{1,3})?/,So=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Oo={},Do={},To=0,Co=1,Eo=2,Mo=3,Io=4,Po=5;V("Y",0,0,function(){var e=this.year();return 9999>=e?""+e:"+"+e;}),V(0,["YY",2],0,function(){return this.year()%100;}),V(0,["YYYY",4],0,"year"),V(0,["YYYYY",5],0,"year"),V(0,["YYYYYY",6,!0],0,"year"),H("year","y"),W("year",1),K("Y",vo),K("YY",ho,lo),K("YYYY",fo,uo),K("YYYYY",bo,po),K("YYYYYY",bo,po),ee(["YYYYY","YYYYYY"],To),ee("YYYY",function(e,t){t[To]=2===e.length?l.parseTwoDigitYear(e):M(e);}),ee("YY",function(e,t){t[To]=l.parseTwoDigitYear(e);}),ee("Y",function(e,t){t[To]=parseInt(e,10);}),l.parseTwoDigitYear=function(e){return M(e)+(68<M(e)?1900:2e3);};var Fo=ae("FullYear",!0),Yo;Yo=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return -1;},V("M",["MM",2],"Mo",function(){return this.month()+1;}),V("MMM",0,0,function(e){return this.localeData().monthsShort(this,e);}),V("MMMM",0,0,function(e){return this.localeData().months(this,e);}),H("month","M"),W("month",8),K("M",ho),K("MM",ho,lo),K("MMM",function(e,t){return t.monthsShortRegex(e);}),K("MMMM",function(e,t){return t.monthsRegex(e);}),ee(["M","MM"],function(e,t){t[Co]=M(e)-1;}),ee(["MMM","MMMM"],function(e,t,o,n){var i=o._locale.monthsParse(e,n,o._strict);null==i?x(o).invalidMonth=e:t[Co]=i;});var zo=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,No=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];V("w",["ww",2],"wo","week"),V("W",["WW",2],"Wo","isoWeek"),H("week","w"),H("isoWeek","W"),W("week",5),W("isoWeek",5),K("w",ho),K("ww",ho,lo),K("W",ho),K("WW",ho,lo),te(["w","ww","W","WW"],function(e,t,o,n){t[n.substr(0,1)]=M(e);});V("d",0,"do","day"),V("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e);}),V("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e);}),V("dddd",0,0,function(e){return this.localeData().weekdays(this,e);}),V("e",0,0,"weekday"),V("E",0,0,"isoWeekday"),H("day","d"),H("weekday","e"),H("isoWeekday","E"),W("day",11),W("weekday",11),W("isoWeekday",11),K("d",ho),K("e",ho),K("E",ho),K("dd",function(e,t){return t.weekdaysMinRegex(e);}),K("ddd",function(e,t){return t.weekdaysShortRegex(e);}),K("dddd",function(e,t){return t.weekdaysRegex(e);}),te(["dd","ddd","dddd"],function(e,t,o,n){var i=o._locale.weekdaysParse(e,n,o._strict);null==i?x(o).invalidWeekday=e:t.d=i;}),te(["d","e","E"],function(e,t,o,n){t[n]=M(e);});var Ro=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];V("H",["HH",2],0,"hour"),V("h",["hh",2],0,Ce),V("k",["kk",2],0,function(){return this.hours()||24;}),V("hmm",0,0,function(){return ""+Ce.apply(this)+U(this.minutes(),2);}),V("hmmss",0,0,function(){return ""+Ce.apply(this)+U(this.minutes(),2)+U(this.seconds(),2);}),V("Hmm",0,0,function(){return ""+this.hours()+U(this.minutes(),2);}),V("Hmmss",0,0,function(){return ""+this.hours()+U(this.minutes(),2)+U(this.seconds(),2);}),Ee("a",!0),Ee("A",!1),H("hour","h"),W("hour",13),K("a",Me),K("A",Me),K("H",ho),K("h",ho),K("k",ho),K("HH",ho,lo),K("hh",ho,lo),K("kk",ho,lo),K("hmm",mo),K("hmmss",go),K("Hmm",mo),K("Hmmss",go),ee(["H","HH"],Mo),ee(["k","kk"],function(e,t){var o=M(e);t[Mo]=24===o?0:o;}),ee(["a","A"],function(e,t,o){o._isPm=o._locale.isPM(e),o._meridiem=e;}),ee(["h","hh"],function(e,t,o){t[Mo]=M(e),x(o).bigHour=!0;}),ee("hmm",function(e,t,o){var n=e.length-2;t[Mo]=M(e.substr(0,n)),t[Io]=M(e.substr(n)),x(o).bigHour=!0;}),ee("hmmss",function(e,t,o){var n=e.length-4,i=e.length-2;t[Mo]=M(e.substr(0,n)),t[Io]=M(e.substr(n,2)),t[Po]=M(e.substr(i)),x(o).bigHour=!0;}),ee("Hmm",function(e,t){var o=e.length-2;t[Mo]=M(e.substr(0,o)),t[Io]=M(e.substr(o));}),ee("Hmmss",function(e,t){var o=e.length-4,n=e.length-2;t[Mo]=M(e.substr(0,o)),t[Io]=M(e.substr(o,2)),t[Po]=M(e.substr(n));});var Bo=/[ap]\.?m?\.?/i,Ho=ae("Hours",!0),Lo={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:eo,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:No,week:{dow:0,doy:6},weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekdaysShort:Ro,meridiemParse:Bo},Ao={},Wo={},jo=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Uo=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Vo=/Z|[+-]\d\d(?::?\d\d)?/,Go=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],qo=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Zo=/^\/?Date\((\-?\d+)/i,Xo=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,Ko={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480},Qo;l.createFromInputFallback=F("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""));}),l.ISO_8601=function(){},l.RFC_2822=function(){};var $o=F("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=at.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:O();}),Jo=F("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=at.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:O();}),en=["year","quarter","month","week","day","hour","minute","second","millisecond"];ut("Z",":"),ut("ZZ",""),K("Z",wo),K("ZZ",wo),ee(["Z","ZZ"],function(e,t,o){o._useUTC=!0,o._tzm=pt(wo,e);});var tn=/([\+\-]|\d\d)/gi;l.updateOffset=function(){};var on=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,nn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;ft.fn=rt.prototype,ft.invalid=function(){return ft(NaN);};var an=kt(1,"add"),dn=kt(-1,"subtract");l.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",l.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var sn=F("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e);});V(0,["gg",2],0,function(){return this.weekYear()%100;}),V(0,["GG",2],0,function(){return this.isoWeekYear()%100;}),Et("gggg","weekYear"),Et("ggggg","weekYear"),Et("GGGG","isoWeekYear"),Et("GGGGG","isoWeekYear"),H("weekYear","gg"),H("isoWeekYear","GG"),W("weekYear",1),W("isoWeekYear",1),K("G",vo),K("g",vo),K("GG",ho,lo),K("gg",ho,lo),K("GGGG",fo,uo),K("gggg",fo,uo),K("GGGGG",bo,po),K("ggggg",bo,po),te(["gggg","ggggg","GGGG","GGGGG"],function(e,t,o,n){t[n.substr(0,2)]=M(e);}),te(["gg","GG"],function(e,t,o,n){t[n]=l.parseTwoDigitYear(e);}),V("Q",0,"Qo","quarter"),H("quarter","Q"),W("quarter",7),K("Q",ro),ee("Q",function(e,t){t[Co]=3*(M(e)-1);}),V("D",["DD",2],"Do","date"),H("date","D"),W("date",9),K("D",ho),K("DD",ho,lo),K("Do",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient;}),ee(["D","DD"],Eo),ee("Do",function(e,t){t[Eo]=M(e.match(ho)[0]);});var rn=ae("Date",!0);V("DDD",["DDDD",3],"DDDo","dayOfYear"),H("dayOfYear","DDD"),W("dayOfYear",4),K("DDD",yo),K("DDDD",co),ee(["DDD","DDDD"],function(e,t,o){o._dayOfYear=M(e);}),V("m",["mm",2],0,"minute"),H("minute","m"),W("minute",14),K("m",ho),K("mm",ho,lo),ee(["m","mm"],Io);var ln=ae("Minutes",!1);V("s",["ss",2],0,"second"),H("second","s"),W("second",15),K("s",ho),K("ss",ho,lo),ee(["s","ss"],Po);var cn=ae("Seconds",!1);V("S",0,0,function(){return ~~(this.millisecond()/100);}),V(0,["SS",2],0,function(){return ~~(this.millisecond()/10);}),V(0,["SSS",3],0,"millisecond"),V(0,["SSSS",4],0,function(){return 10*this.millisecond();}),V(0,["SSSSS",5],0,function(){return 100*this.millisecond();}),V(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond();}),V(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond();}),V(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond();}),V(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond();}),H("millisecond","ms"),W("millisecond",16),K("S",yo,ro),K("SS",yo,lo),K("SSS",yo,co);var un;for(un="SSSS";9>=un.length;un+="S")K(un,_o);for(un="S";9>=un.length;un+="S")ee(un,Pt);var pn=ae("Milliseconds",!1);V("z",0,0,"zoneAbbr"),V("zz",0,0,"zoneName");var hn=T.prototype;hn.add=an,hn.calendar=function(e,t){var o=e||at(),n=ht(o,this).startOf("day"),i=l.calendarFormat(this,n)||"sameElse",a=t&&(z(t[i])?t[i].call(this,o):t[i]);return this.format(a||this.localeData().calendar(i,this,at(o)));},hn.clone=function(){return new T(this);},hn.diff=function(e,t,o){var n,i,a;return this.isValid()?(n=ht(e,this),!n.isValid())?NaN:(i=6e4*(n.utcOffset()-this.utcOffset()),t=L(t),(a="year"===t?xt(this,n)/12:"month"===t?xt(this,n):"quarter"===t?xt(this,n)/3:"second"===t?(this-n)/1e3:"minute"===t?(this-n)/6e4:"hour"===t?(this-n)/36e5:"day"===t?(this-n-i)/864e5:"week"===t?(this-n-i)/6048e5:this-n,o?a:E(a))):NaN;},hn.endOf=function(e){var t;if(e=L(e),void 0===e||"millisecond"===e||!this.isValid())return this;var o=this._isUTC?Ct:Tt;return "year"===e?t=o(this.year()+1,0,1)-1:"quarter"===e?t=o(this.year(),this.month()-this.month()%3+3,1)-1:"month"===e?t=o(this.year(),this.month()+1,1)-1:"week"===e?t=o(this.year(),this.month(),this.date()-this.weekday()+7)-1:"isoWeek"===e?t=o(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1:"day"===e||"date"===e?t=o(this.year(),this.month(),this.date()+1)-1:"hour"===e?(t=this._d.valueOf(),t+=3600000-Dt(t+(this._isUTC?0:60000*this.utcOffset()),3600000)-1):"minute"===e?(t=this._d.valueOf(),t+=60000-Dt(t,60000)-1):"second"===e?(t=this._d.valueOf(),t+=1000-Dt(t,1000)-1):void 0,this._d.setTime(t),l.updateOffset(this,!0),this;},hn.format=function(e){e||(e=this.isUtc()?l.defaultFormatUtc:l.defaultFormat);var t=Z(this,e);return this.localeData().postformat(t);},hn.from=function(e,t){return this.isValid()&&(C(e)&&e.isValid()||at(e).isValid())?ft({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate();},hn.fromNow=function(e){return this.from(at(),e);},hn.to=function(e,t){return this.isValid()&&(C(e)&&e.isValid()||at(e).isValid())?ft({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate();},hn.toNow=function(e){return this.to(at(),e);},hn.get=function(e){return e=L(e),z(this[e])?this[e]():this;},hn.invalidAt=function(){return x(this).overflow;},hn.isAfter=function(e,t){var o=C(e)?e:at(e);return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()>o.valueOf():o.valueOf()<this.clone().startOf(t).valueOf());},hn.isBefore=function(e,t){var o=C(e)?e:at(e);return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()<o.valueOf():this.clone().endOf(t).valueOf()<o.valueOf());},hn.isBetween=function(e,t,o,n){var i=C(e)?e:at(e),a=C(t)?t:at(t);return !!(this.isValid()&&i.isValid()&&a.isValid())&&(n=n||"()",("("===n[0]?this.isAfter(i,o):!this.isBefore(i,o))&&(")"===n[1]?this.isBefore(a,o):!this.isAfter(a,o)));},hn.isSame=function(e,t){var o=C(e)?e:at(e),n;return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()===o.valueOf():(n=o.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()));},hn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t);},hn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t);},hn.isValid=function(){return S(this);},hn.lang=sn,hn.locale=St,hn.localeData=Ot,hn.max=Jo,hn.min=$o,hn.parsingFlags=function(){return v({},x(this));},hn.set=re,hn.startOf=function(e){var t;if(e=L(e),void 0===e||"millisecond"===e||!this.isValid())return this;var o=this._isUTC?Ct:Tt;return "year"===e?t=o(this.year(),0,1):"quarter"===e?t=o(this.year(),this.month()-this.month()%3,1):"month"===e?t=o(this.year(),this.month(),1):"week"===e?t=o(this.year(),this.month(),this.date()-this.weekday()):"isoWeek"===e?t=o(this.year(),this.month(),this.date()-(this.isoWeekday()-1)):"day"===e||"date"===e?t=o(this.year(),this.month(),this.date()):"hour"===e?(t=this._d.valueOf(),t-=Dt(t+(this._isUTC?0:60000*this.utcOffset()),3600000)):"minute"===e?(t=this._d.valueOf(),t-=Dt(t,60000)):"second"===e?(t=this._d.valueOf(),t-=Dt(t,1000)):void 0,this._d.setTime(t),l.updateOffset(this,!0),this;},hn.subtract=dn,hn.toArray=function(){var e=this;return [e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()];},hn.toObject=function(){var e=this;return {years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()};},hn.toDate=function(){return new Date(this.valueOf());},hn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,o=t?this.clone().utc():this;return 0>o.year()||9999<o.year()?Z(o,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):z(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+1e3*(60*this.utcOffset())).toISOString().replace("Z",Z(o,"Z")):Z(o,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ");},hn.inspect=function(){if(!this.isValid())return "moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var o="["+e+"(\"]",n=0<=this.year()&&9999>=this.year()?"YYYY":"YYYYYY",i=t+"[\")]";return this.format(o+n+"-MM-DD[T]HH:mm:ss.SSS"+i);},hn.toJSON=function(){return this.isValid()?this.toISOString():null;},hn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");},hn.unix=function(){return s(this.valueOf()/1e3);},hn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0);},hn.creationData=function(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};},hn.year=Fo,hn.isLeapYear=function(){return ie(this.year());},hn.weekYear=function(e){return Mt.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);},hn.isoWeekYear=function(e){return Mt.call(this,e,this.isoWeek(),this.isoWeekday(),1,4);},hn.quarter=hn.quarters=function(e){return null==e?r((this.month()+1)/3):this.month(3*(e-1)+this.month()%3);},hn.month=me,hn.daysInMonth=function(){return ce(this.year(),this.month());},hn.week=hn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d");},hn.isoWeek=hn.isoWeeks=function(e){var t=ve(this,1,4).week;return null==e?t:this.add(7*(e-t),"d");},hn.weeksInYear=function(){var e=this.localeData()._week;return ke(this.year(),e.dow,e.doy);},hn.isoWeeksInYear=function(){return ke(this.year(),1,4);},hn.date=rn,hn.day=hn.days=function(e){if(!this.isValid())return null==e?NaN:this;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null==e?t:(e=we(e,this.localeData()),this.add(e-t,"d"));},hn.weekday=function(e){if(!this.isValid())return null==e?NaN:this;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d");},hn.isoWeekday=function(e){if(!this.isValid())return null==e?NaN:this;if(null!=e){var t=xe(e,this.localeData());return this.day(this.day()%7?t:t-7);}return this.day()||7;},hn.dayOfYear=function(e){var o=t((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?o:this.add(e-o,"d");},hn.hour=hn.hours=Ho,hn.minute=hn.minutes=ln,hn.second=hn.seconds=cn,hn.millisecond=hn.milliseconds=pn,hn.utcOffset=function(e,t,o){var n=this._offset||0,i;if(!this.isValid())return null==e?NaN:this;if(null!=e){if("string"!=typeof e)16>a(e)&&!o&&(e*=60);else if(e=pt(wo,e),null===e)return this;return !this._isUTC&&t&&(i=mt(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,"m"),n!==e&&(!t||this._changeInProgress?wt(this,ft(e-n,"m"),1,!1):!this._changeInProgress&&(this._changeInProgress=!0,l.updateOffset(this,!0),this._changeInProgress=null)),this;}return this._isUTC?n:mt(this);},hn.utc=function(e){return this.utcOffset(0,e);},hn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(mt(this),"m")),this;},hn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=pt(ko,this._i);null==e?this.utcOffset(0,!0):this.utcOffset(e);}return this;},hn.hasAlignedHourOffset=function(e){return !!this.isValid()&&(e=e?at(e).utcOffset():0,0==(this.utcOffset()-e)%60);},hn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();},hn.isLocal=function(){return !!this.isValid()&&!this._isUTC;},hn.isUtcOffset=function(){return !!this.isValid()&&this._isUTC;},hn.isUtc=yt,hn.isUTC=yt,hn.zoneAbbr=function(){return this._isUTC?"UTC":"";},hn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":"";},hn.dates=F("dates accessor is deprecated. Use date instead.",rn),hn.months=F("months accessor is deprecated. Use month instead",me),hn.years=F("years accessor is deprecated. Use year instead",Fo),hn.zone=F("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",function(e,t){return null==e?-this.utcOffset():("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this);}),hn.isDSTShifted=F("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",gt);var mn=B.prototype;mn.calendar=function(e,t,o){var n=this._calendar[e]||this._calendar.sameElse;return z(n)?n.call(t,o):n;},mn.longDateFormat=function(e){var t=this._longDateFormat[e],o=this._longDateFormat[e.toUpperCase()];return t||!o?t:(this._longDateFormat[e]=o.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1);}),this._longDateFormat[e]);},mn.invalidDate=function(){return this._invalidDate;},mn.ordinal=function(e){return this._ordinal.replace("%d",e);},mn.preparse=Ft,mn.postformat=Ft,mn.relativeTime=function(e,t,o,n){var i=this._relativeTime[o];return z(i)?i(e,t,o,n):i.replace(/%d/i,e);},mn.pastFuture=function(e,t){var o=this._relativeTime[0<e?"future":"past"];return z(o)?o(t):o.replace(/%s/i,t);},mn.set=N,mn.months=function(e,t){return e?u(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||zo).test(t)?"format":"standalone"][e.month()]:u(this._months)?this._months:this._months.standalone;},mn.monthsShort=function(e,t){return e?u(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[zo.test(t)?"format":"standalone"][e.month()]:u(this._monthsShort)?this._monthsShort:this._monthsShort.standalone;},mn.monthsParse=pe,mn.monthsRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||ge.call(this),e?this._monthsStrictRegex:this._monthsRegex):(_(this,"_monthsRegex")||(this._monthsRegex=So),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex);},mn.monthsShortRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||ge.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(_(this,"_monthsShortRegex")||(this._monthsShortRegex=So),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex);},mn.week=function(e){return ve(e,this._week.dow,this._week.doy).week;},mn.firstDayOfYear=function(){return this._week.doy;},mn.firstDayOfWeek=function(){return this._week.dow;},mn.weekdays=function(e,t){var o=u(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return !0===e?Se(o,this._week.dow):e?o[e.day()]:o;},mn.weekdaysMin=function(e){return !0===e?Se(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin;},mn.weekdaysShort=function(e){return !0===e?Se(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort;},mn.weekdaysParse=De,mn.weekdaysRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(_(this,"_weekdaysRegex")||(this._weekdaysRegex=So),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex);},mn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(_(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=So),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex);},mn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(_(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=So),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex);},mn.isPM=function(e){return "p"===(e+"").toLowerCase().charAt(0);},mn.meridiem=function(e,t,o){return 11<e?o?"pm":"PM":o?"am":"AM";},Ye("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10,o=1===M(e%100/10)?"th":1==t?"st":2==t?"nd":3==t?"rd":"th";return e+o;}}),l.lang=F("moment.lang is deprecated. Use moment.locale instead.",Ye),l.langData=F("moment.langData is deprecated. Use moment.localeData instead.",Ne);var gn=a,yn=At("ms"),fn=At("s"),bn=At("m"),_n=At("h"),vn=At("d"),kn=At("w"),wn=At("M"),xn=At("Q"),Sn=At("y"),On=Wt("milliseconds"),Dn=Wt("seconds"),Tn=Wt("minutes"),Cn=Wt("hours"),En=Wt("days"),Mn=Wt("months"),In=Wt("years"),Pn=t,Fn={ss:44,s:45,m:45,h:22,d:26,M:11},Yn=a,zn=rt.prototype;return zn.isValid=function(){return this._isValid;},zn.abs=function(){var e=this._data;return this._milliseconds=gn(this._milliseconds),this._days=gn(this._days),this._months=gn(this._months),e.milliseconds=gn(e.milliseconds),e.seconds=gn(e.seconds),e.minutes=gn(e.minutes),e.hours=gn(e.hours),e.months=gn(e.months),e.years=gn(e.years),this;},zn.add=function(e,t){return Rt(this,e,t,1);},zn.subtract=function(e,t){return Rt(this,e,t,-1);},zn.as=function(e){if(!this.isValid())return NaN;var o=this._milliseconds,n,i;if(e=L(e),"month"===e||"quarter"===e||"year"===e)switch(n=this._days+o/864e5,i=this._months+Ht(n),e){case"month":return i;case"quarter":return i/3;case"year":return i/12;}else switch(n=this._days+t(Lt(this._months)),e){case"week":return n/7+o/6048e5;case"day":return n+o/864e5;case"hour":return 24*n+o/36e5;case"minute":return 1440*n+o/6e4;case"second":return 86400*n+o/1e3;case"millisecond":return s(864e5*n)+o;default:throw new Error("Unknown unit "+e);}},zn.asMilliseconds=yn,zn.asSeconds=fn,zn.asMinutes=bn,zn.asHours=_n,zn.asDays=vn,zn.asWeeks=kn,zn.asMonths=wn,zn.asQuarters=xn,zn.asYears=Sn,zn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+2592e6*(this._months%12)+31536e6*M(this._months/12):NaN;},zn._bubble=function(){var e=this._milliseconds,t=this._days,o=this._months,n=this._data,i,a,d,s,r;return 0<=e&&0<=t&&0<=o||0>=e&&0>=t&&0>=o||(e+=864e5*Bt(Lt(o)+t),t=0,o=0),n.milliseconds=e%1e3,i=E(e/1e3),n.seconds=i%60,a=E(i/60),n.minutes=a%60,d=E(a/60),n.hours=d%24,t+=E(d/24),r=E(Ht(t)),o+=r,t-=Bt(Lt(r)),s=E(o/12),o%=12,n.days=t,n.months=o,n.years=s,this;},zn.clone=function(){return ft(this);},zn.get=function(e){return e=L(e),this.isValid()?this[e+"s"]():NaN;},zn.milliseconds=On,zn.seconds=Dn,zn.minutes=Tn,zn.hours=Cn,zn.days=En,zn.weeks=function(){return E(this.days()/7);},zn.months=Mn,zn.years=In,zn.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),o=Ut(this,!e,t);return e&&(o=t.pastFuture(+this,o)),t.postformat(o);},zn.toISOString=qt,zn.toString=qt,zn.toJSON=qt,zn.locale=St,zn.localeData=Ot,zn.toIsoString=F("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",qt),zn.lang=sn,V("X",0,0,"unix"),V("x",0,0,"valueOf"),K("x",vo),K("X",xo),ee("X",function(e,t,o){o._d=new Date(1e3*parseFloat(e,10));}),ee("x",function(e,t,o){o._d=new Date(M(e));}),l.version="2.24.0",function(e){Zt=e;}(at),l.fn=hn,l.min=function(){var e=[].slice.call(arguments,0);return dt("isBefore",e);},l.max=function(){var e=[].slice.call(arguments,0);return dt("isAfter",e);},l.now=function(){return Date.now?Date.now():+new Date();},l.utc=k,l.unix=function(e){return at(1e3*e);},l.months=function(e,t){return zt(e,t,"months");},l.isDate=y,l.locale=Ye,l.invalid=O,l.duration=ft,l.isMoment=C,l.weekdays=function(e,t,o){return Nt(e,t,o,"weekdays");},l.parseZone=function(){return at.apply(null,arguments).parseZone();},l.localeData=Ne,l.isDuration=lt,l.monthsShort=function(e,t){return zt(e,t,"monthsShort");},l.weekdaysMin=function(e,t,o){return Nt(e,t,o,"weekdaysMin");},l.defineLocale=ze,l.updateLocale=function(e,t){if(null!=t){var o=Lo,n,i;i=Fe(e),null!=i&&(o=i._config),t=R(o,t),n=new B(t),n.parentLocale=Ao[e],Ao[e]=n,Ye(e);}else null!=Ao[e]&&(null==Ao[e].parentLocale?null!=Ao[e]&&delete Ao[e]:Ao[e]=Ao[e].parentLocale);return Ao[e];},l.locales=Re,l.weekdaysShort=function(e,t,o){return Nt(e,t,o,"weekdaysShort");},l.normalizeUnits=L,l.relativeTimeRounding=Vt,l.relativeTimeThreshold=function(e,t){return void 0!==Fn[e]&&(void 0===t?Fn[e]:(Fn[e]=t,"s"===e&&(Fn.ss=t-1),!0));},l.calendarFormat=function(e,t){var o=e.diff(t,"days",!0);return -6>o?"sameElse":-1>o?"lastWeek":0>o?"lastDay":1>o?"sameDay":2>o?"nextDay":7>o?"nextWeek":"sameElse";},l.prototype=hn,l.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},l;});}),byteToHex$3=[],i$3=0;256>i$3;i$3++)byteToHex$3[i$3]=(i$3+256).toString(16).substr(1);function stringifyUUID$2(e,t){var o=t||0,n=byteToHex$3;return n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]];}for(var random$2=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e;};}var t=Array(16);return function(){for(var e=0,o;16>e;e++)0==(3&e)&&(o=4294967296*Math.random()),t[e]=255&o>>>((3&e)<<3);return t;};}(),byteToHex$1$2=[],i$1$2=0;256>i$1$2;i$1$2++)byteToHex$1$2[i$1$2]=(i$1$2+256).toString(16).substr(1);var seedBytes$2=random$2(),defaultNodeId$2=[1|seedBytes$2[0],seedBytes$2[1],seedBytes$2[2],seedBytes$2[3],seedBytes$2[4],seedBytes$2[5]],defaultClockseq$2=16383&(seedBytes$2[6]<<8|seedBytes$2[7]);function uuid4$2(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=1<arguments.length?arguments[1]:void 0,o=2<arguments.length?arguments[2]:void 0,n=t&&o||0;"string"==typeof e&&(t="binary"===e?Array(16):void 0,e={});var i=e.random||(e.rng||random$2)();if(i[6]=64|15&i[6],i[8]=128|63&i[8],t)for(var a=0;16>a;a++)t[n+a]=i[a];return t||stringifyUUID$2(i);}function ownKeys$2(e,t){var o=Object.keys(e);return Object.getOwnPropertySymbols&&o.push.apply(o,Object.getOwnPropertySymbols(e)),t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable;})),o;}function _objectSpread$2(e){for(var t=1,o;t<arguments.length;t++)o=null==arguments[t]?{}:arguments[t],t%2?ownKeys$2(o,!0).forEach(function(t){defineProperty$2(e,t,o[t]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):ownKeys$2(o).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t));});return e;}var ASPDateRegex$2=/^\/?Date\((-?\d+)/i,fullHexRE$1=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,shortHexRE$1=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;function isNumber$2(e){return e instanceof Number||"number"==typeof e;}function recursiveDOMDelete$1(e){if(e)for(;!0===e.hasChildNodes();){var t=e.firstChild;t&&(recursiveDOMDelete$1(t),e.removeChild(t));}}function isString$2(e){return e instanceof String||"string"==typeof e;}function isObject$1(e){return "object"===_typeof_1$2(e)&&null!==e;}function isDate$1(e){if(e instanceof Date)return !0;if(isString$2(e)){var t=ASPDateRegex$2.exec(e);if(t)return !0;if(!isNaN(Date.parse(e)))return !0;}return !1;}function isMoment$2(e){return moment$2.isMoment(e);}function copyOrDelete$1(e,t,o,n){var i=!1;!0===n&&(i=null===t[o]&&e[o]!==void 0),i?delete e[o]:e[o]=t[o];}function fillIfDefined$1(e,t){var o=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2];for(var n in e)if(t[n]!==void 0)if(null===t[n]||"object"!==_typeof_1$2(t[n]))copyOrDelete$1(e,t,n,o);else{var i=e[n],a=t[n];isObject$1(i)&&isObject$1(a)&&fillIfDefined$1(i,a,o);}}var extend$1=Object.assign;function selectiveExtend$1(e,t){if(!Array.isArray(e))throw new Error("Array with property names expected as first argument");for(var o=arguments.length,n=Array(2<o?o-2:0),i=2;i<o;i++)n[i-2]=arguments[i];for(var a=0,d=n,s;a<d.length;a++){s=d[a];for(var r=0,l;r<e.length;r++)l=e[r],s&&Object.prototype.hasOwnProperty.call(s,l)&&(t[l]=s[l]);}return t;}function selectiveDeepExtend$1(e,t,o){var n=!!(3<arguments.length&&arguments[3]!==void 0)&&arguments[3];if(Array.isArray(o))throw new TypeError("Arrays are not supported by deepExtend");for(var i=0,a;i<e.length;i++)if(a=e[i],Object.prototype.hasOwnProperty.call(o,a))if(o[a]&&o[a].constructor===Object)void 0===t[a]&&(t[a]={}),t[a].constructor===Object?deepExtend$1(t[a],o[a],!1,n):copyOrDelete$1(t,o,a,n);else if(Array.isArray(o[a]))throw new TypeError("Arrays are not supported by deepExtend");else copyOrDelete$1(t,o,a,n);return t;}function selectiveNotDeepExtend$1(e,t,o){var n=!!(3<arguments.length&&arguments[3]!==void 0)&&arguments[3];if(Array.isArray(o))throw new TypeError("Arrays are not supported by deepExtend");for(var a in o)if(Object.prototype.hasOwnProperty.call(o,a)&&-1===e.indexOf(a))if(o[a]&&o[a].constructor===Object)void 0===t[a]&&(t[a]={}),t[a].constructor===Object?deepExtend$1(t[a],o[a]):copyOrDelete$1(t,o,a,n);else if(Array.isArray(o[a])){t[a]=[];for(var d=0;d<o[a].length;d++)t[a].push(o[a][d]);}else copyOrDelete$1(t,o,a,n);return t;}function deepExtend$1(e,t){var o=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2],n=!!(3<arguments.length&&arguments[3]!==void 0)&&arguments[3];for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)||!0===o)if(t[a]&&t[a].constructor===Object)void 0===e[a]&&(e[a]={}),e[a].constructor===Object?deepExtend$1(e[a],t[a],o):copyOrDelete$1(e,t,a,n);else if(Array.isArray(t[a])){e[a]=[];for(var d=0;d<t[a].length;d++)e[a].push(t[a][d]);}else copyOrDelete$1(e,t,a,n);return e;}function equalArray$1(e,t){if(e.length!==t.length)return !1;for(var o=0,n=e.length;o<n;o++)if(e[o]!=t[o])return !1;return !0;}function convert$2(e,t){var o;if(void 0!==e){if(null===e)return null;if(!t)return e;if("string"!=typeof t&&!(t instanceof String))throw new Error("Type must be a string");switch(t){case"boolean":case"Boolean":return !!e;case"number":case"Number":return isString$2(e)&&!isNaN(Date.parse(e))?moment$2(e).valueOf():+e.valueOf();case"string":case"String":return e+"";case"Date":if(isNumber$2(e))return new Date(e);if(e instanceof Date)return new Date(e.valueOf());if(isMoment$2(e))return new Date(e.valueOf());if(isString$2(e))return o=ASPDateRegex$2.exec(e),o?new Date(+o[1]):moment$2(new Date(e)).toDate();throw new Error("Cannot convert object of type "+getType$2(e)+" to type Date");case"Moment":if(isNumber$2(e))return moment$2(e);if(e instanceof Date)return moment$2(e.valueOf());if(isMoment$2(e))return moment$2(e);if(isString$2(e))return o=ASPDateRegex$2.exec(e),o?moment$2(+o[1]):moment$2(e);throw new Error("Cannot convert object of type "+getType$2(e)+" to type Date");case"ISODate":if(isNumber$2(e))return new Date(e);if(e instanceof Date)return e.toISOString();if(isMoment$2(e))return e.toDate().toISOString();if(isString$2(e))return o=ASPDateRegex$2.exec(e),o?new Date(+o[1]).toISOString():moment$2(e).format();throw new Error("Cannot convert object of type "+getType$2(e)+" to type ISODate");case"ASPDate":if(isNumber$2(e))return "/Date("+e+")/";if(e instanceof Date||isMoment$2(e))return "/Date("+e.valueOf()+")/";if(isString$2(e)){o=ASPDateRegex$2.exec(e);var n;return n=o?new Date(+o[1]).valueOf():new Date(e).valueOf(),"/Date("+n+")/";}throw new Error("Cannot convert object of type "+getType$2(e)+" to type ASPDate");default:throw new Error("Unknown type ".concat(t));}}}function getType$2(e){var t=_typeof_1$2(e);return "object"===t?null===e?"null":e instanceof Boolean?"Boolean":e instanceof Number?"Number":e instanceof String?"String":Array.isArray(e)?"Array":e instanceof Date?"Date":"Object":"number"===t?"Number":"boolean"===t?"Boolean":"string"===t?"String":void 0===t?"undefined":t;}function copyAndExtendArray$1(e,t){return [].concat(toConsumableArray$2(e),[t]);}function copyArray$1(e){return e.slice();}function getAbsoluteLeft$1(e){return e.getBoundingClientRect().left;}function getAbsoluteRight$1(e){return e.getBoundingClientRect().right;}function getAbsoluteTop$1(e){return e.getBoundingClientRect().top;}function addClassName$1(e,t){var o=e.className.split(" "),n=t.split(" ");o=o.concat(n.filter(function(e){return 0>o.indexOf(e);})),e.className=o.join(" ");}function removeClassName$1(e,t){var o=e.className.split(" "),n=t.split(" ");o=o.filter(function(e){return 0>n.indexOf(e);}),e.className=o.join(" ");}function forEach$1(e,t){if(Array.isArray(e))for(var o=e.length,n=0;n<o;n++)t(e[n],n,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t(e[a],a,e);}var toArray$1=Object.values;function updateProperty$1(e,t,o){return e[t]!==o&&(e[t]=o,!0);}function throttle$1(e){var t=!1;return function(){t||(t=!0,requestAnimationFrame(function(){t=!1,e();}));};}function addEventListener$1(e,t,o,n){e.addEventListener?(n===void 0&&(n=!1),"mousewheel"===t&&0<=navigator.userAgent.indexOf("Firefox")&&(t="DOMMouseScroll"),e.addEventListener(t,o,n)):e.attachEvent("on"+t,o);}function removeEventListener$1(e,t,o,n){e.removeEventListener?(n===void 0&&(n=!1),"mousewheel"===t&&0<=navigator.userAgent.indexOf("Firefox")&&(t="DOMMouseScroll"),e.removeEventListener(t,o,n)):e.detachEvent("on"+t,o);}function preventDefault$1(e){if(e||(e=window.event),!e);else e.preventDefault?e.preventDefault():e.returnValue=!1;}function getTarget$1(){var e=0<arguments.length&&arguments[0]!==void 0?arguments[0]:window.event,t=null;if(!e);else e.target?t=e.target:e.srcElement&&(t=e.srcElement);return t instanceof Element?null!=t.nodeType&&3==t.nodeType&&(t=t.parentNode,!(t instanceof Element))?null:t:null;}function hasParent$1(e,t){for(var o=e;o;){if(o===t)return !0;if(o.parentNode)o=o.parentNode;else return !1;}return !1;}var option$1={asBoolean:function(e,t){return "function"==typeof e&&(e=e()),null==e?t||null:!1!=e;},asNumber:function(e,t){return "function"==typeof e&&(e=e()),null==e?t||null:+e||t||null;},asString:function(e,t){return "function"==typeof e&&(e=e()),null==e?t||null:e+"";},asSize:function(e,t){return "function"==typeof e&&(e=e()),isString$2(e)?e:isNumber$2(e)?e+"px":t||null;},asElement:function(e,t){return "function"==typeof e&&(e=e()),e||t||null;}};function hexToRGB$1(e){var t;switch(e.length){case 3:case 4:return t=shortHexRE$1.exec(e),t?{r:parseInt(t[1]+t[1],16),g:parseInt(t[2]+t[2],16),b:parseInt(t[3]+t[3],16)}:null;case 6:case 7:return t=fullHexRE$1.exec(e),t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null;default:return null;}}function overrideOpacity$1(e,t){if(-1!==e.indexOf("rgba"))return e;if(-1!==e.indexOf("rgb")){var o=e.substr(e.indexOf("(")+1).replace(")","").split(",");return "rgba("+o[0]+","+o[1]+","+o[2]+","+t+")";}var n=hexToRGB$1(e);return null==n?e:"rgba("+n.r+","+n.g+","+n.b+","+t+")";}function RGBToHex$1(e,t,o){return "#"+(16777216+(e<<16)+(t<<8)+o).toString(16).slice(1);}function parseColor$1(e,t){var o=Math.min;if(isString$2(e)){var n=e;if(isValidRGB$1(n)){var i=n.substr(4).substr(0,n.length-5).split(",").map(function(e){return parseInt(e);});n=RGBToHex$1(i[0],i[1],i[2]);}if(!0===isValidHex$1(n)){var a=hexToHSV$1(n),d={h:a.h,s:.8*a.s,v:o(1,1.02*a.v)},s={h:a.h,s:o(1,1.25*a.s),v:.8*a.v},r=HSVToHex$1(s.h,s.s,s.v),l=HSVToHex$1(d.h,d.s,d.v);return {background:n,border:r,highlight:{background:l,border:r},hover:{background:l,border:r}};}return {background:n,border:n,highlight:{background:n,border:n},hover:{background:n,border:n}};}if(t){var c={background:e.background||t.background,border:e.border||t.border,highlight:isString$2(e.highlight)?{border:e.highlight,background:e.highlight}:{background:e.highlight&&e.highlight.background||t.highlight.background,border:e.highlight&&e.highlight.border||t.highlight.border},hover:isString$2(e.hover)?{border:e.hover,background:e.hover}:{border:e.hover&&e.hover.border||t.hover.border,background:e.hover&&e.hover.background||t.hover.background}};return c;}var u={background:e.background||void 0,border:e.border||void 0,highlight:isString$2(e.highlight)?{border:e.highlight,background:e.highlight}:{background:e.highlight&&e.highlight.background||void 0,border:e.highlight&&e.highlight.border||void 0},hover:isString$2(e.hover)?{border:e.hover,background:e.hover}:{border:e.hover&&e.hover.border||void 0,background:e.hover&&e.hover.background||void 0}};return u;}function RGBToHSV$1(e,t,o){var n=Math.max,i=Math.min;e/=255,t/=255,o/=255;var a=i(e,i(t,o)),s=n(e,n(t,o));if(a===s)return {h:0,s:0,v:a};var r=e===a?t-o:o===a?e-t:o-e,d=e===a?3:o===a?1:5;return {h:60*(d-r/(s-a))/360,s:(s-a)/s,v:s};}var cssUtil$1={split:function(e){var t={};return e.split(";").forEach(function(e){if(""!=e.trim()){var o=e.split(":"),n=o[0].trim(),i=o[1].trim();t[n]=i;}}),t;},join:function(e){return Object.keys(e).map(function(t){return t+": "+e[t];}).join("; ");}};function addCssText$1(e,t){var o=cssUtil$1.split(e.style.cssText),n=cssUtil$1.split(t),i=_objectSpread$2({},o,{},n);e.style.cssText=cssUtil$1.join(i);}function removeCssText$1(e,t){var o=cssUtil$1.split(e.style.cssText),n=cssUtil$1.split(t);for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&delete o[i];e.style.cssText=cssUtil$1.join(o);}function HSVToRGB$1(e,o,n){var a=Math.floor,d=a(6*e),i=6*e-d,s=n*(1-o),l=n*(1-i*o),c=n*(1-(1-i)*o),t,u,p;switch(d%6){case 0:t=n,u=c,p=s;break;case 1:t=l,u=n,p=s;break;case 2:t=s,u=n,p=c;break;case 3:t=s,u=l,p=n;break;case 4:t=c,u=s,p=n;break;case 5:t=n,u=s,p=l;}return {r:a(255*t),g:a(255*u),b:a(255*p)};}function HSVToHex$1(e,t,o){var n=HSVToRGB$1(e,t,o);return RGBToHex$1(n.r,n.g,n.b);}function hexToHSV$1(e){var t=hexToRGB$1(e);if(!t)throw new TypeError("'".concat(e,"' is not a valid color."));return RGBToHSV$1(t.r,t.g,t.b);}function isValidHex$1(e){var t=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e);return t;}function isValidRGB$1(e){e=e.replace(" ","");var t=/rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/i.test(e);return t;}function isValidRGBA$1(e){e=e.replace(" ","");var t=/rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),(0?.{1,3})\)/i.test(e);return t;}function selectiveBridgeObject$1(e,t){if(null!==t&&"object"===_typeof_1$2(t)){for(var o=Object.create(t),n=0;n<e.length;n++)Object.prototype.hasOwnProperty.call(t,e[n])&&"object"==_typeof_1$2(t[e[n]])&&(o[e[n]]=bridgeObject$1(t[e[n]]));return o;}return null;}function bridgeObject$1(e){if(null===e||"object"!==_typeof_1$2(e))return null;if(e instanceof Element)return e;var t=Object.create(e);for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&"object"==_typeof_1$2(e[o])&&(t[o]=bridgeObject$1(e[o]));return t;}function insertSort$1(e,t){for(var o=0;o<e.length;o++){var n=e[o],a=void 0;for(a=o;0<a&&0>t(n,e[a-1]);a--)e[a]=e[a-1];e[a]=n;}return e;}function mergeOptions$1(e,t,o){var n=3<arguments.length&&arguments[3]!==void 0?arguments[3]:{},i=function(e){return null!==e&&e!==void 0;},a=function(e){return null!==e&&"object"===_typeof_1$2(e);};if(!a(e))throw new Error("Parameter mergeTarget must be an object");if(!a(t))throw new Error("Parameter options must be an object");if(!i(o))throw new Error("Parameter option must have a value");if(!a(n))throw new Error("Parameter globalOptions must be an object");var d=function(e,t,o){a(e[o])||(e[o]={});var n=t[o],i=e[o];for(var d in n)Object.prototype.hasOwnProperty.call(n,d)&&(i[d]=n[d]);},s=t[o],r=a(n)&&!function(e){for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))return !1;return !0;}(n),l=r?n[o]:void 0,c=l?l.enabled:void 0;if(void 0!==s){if("boolean"==typeof s)return a(e[o])||(e[o]={}),void(e[o].enabled=s);if(null===s&&!a(e[o]))if(i(l))e[o]=Object.create(l);else return;if(a(s)){var u=!0;void 0===s.enabled?void 0!==c&&(u=l.enabled):u=s.enabled,d(e,t,o),e[o].enabled=u;}}}function binarySearchCustom$1(e,t,o,n){for(var i=0,a=0,d=e.length-1;a<=d&&i<1e4;){var s=Math.floor((a+d)/2),r=e[s],l=n===void 0?r[o]:r[o][n],c=t(l);if(0==c)return s;-1==c?a=s+1:d=s-1;i++;}return -1;}function binarySearchValue$1(e,t,o,n,i){var a=Math.max,d=Math.min,s=Math.floor,r=0,l=0,c=e.length-1,u,p,h,m;for(i=null==i?function(e,t){return e==t?0:e<t?-1:1;}:i;l<=c&&10000>r;){if(m=s(.5*(c+l)),u=e[a(0,m-1)][o],p=e[m][o],h=e[d(e.length-1,m+1)][o],0==i(p,t))return m;if(0>i(u,t)&&0<i(p,t))return "before"==n?a(0,m-1):m;if(0>i(p,t)&&0<i(h,t))return "before"==n?m:d(e.length-1,m+1);0>i(p,t)?l=m+1:c=m-1,r++;}return -1;}var easingFunctions$1={linear:function(e){return e;},easeInQuad:function(e){return e*e;},easeOutQuad:function(e){return e*(2-e);},easeInOutQuad:function(e){return .5>e?2*e*e:-1+(4-2*e)*e;},easeInCubic:function(e){return e*e*e;},easeOutCubic:function(e){return --e*e*e+1;},easeInOutCubic:function(e){return .5>e?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1;},easeInQuart:function(e){return e*e*e*e;},easeOutQuart:function(e){return 1- --e*e*e*e;},easeInOutQuart:function(e){return .5>e?8*e*e*e*e:1-8*--e*e*e*e;},easeInQuint:function(e){return e*e*e*e*e;},easeOutQuint:function(e){return 1+--e*e*e*e*e;},easeInOutQuint:function(e){return .5>e?16*e*e*e*e*e:1+16*--e*e*e*e*e;}};function getScrollBarWidth$1(){var e=document.createElement("p");e.style.width="100%",e.style.height="200px";var t=document.createElement("div");t.style.position="absolute",t.style.top="0px",t.style.left="0px",t.style.visibility="hidden",t.style.width="200px",t.style.height="150px",t.style.overflow="hidden",t.appendChild(e),document.body.appendChild(t);var o=e.offsetWidth;t.style.overflow="scroll";var n=e.offsetWidth;return o==n&&(n=t.clientWidth),document.body.removeChild(t),o-n;}function topMost$1(e,t){var o;Array.isArray(t)||(t=[t]);var n=!0,a=!1,d=void 0;try{for(var s=e[Symbol.iterator](),r,l;!(n=(r=s.next()).done);n=!0)if(l=r.value,l){o=l[t[0]];for(var c=1;c<t.length;c++)o&&(o=o[t[c]]);if("undefined"!=typeof o)break;}}catch(e){a=!0,d=e;}finally{try{n||null==s.return||s.return();}finally{if(a)throw d;}}return o;}var util$2=Object.freeze({isNumber:isNumber$2,recursiveDOMDelete:recursiveDOMDelete$1,isString:isString$2,isObject:isObject$1,isDate:isDate$1,isMoment:isMoment$2,fillIfDefined:fillIfDefined$1,extend:extend$1,selectiveExtend:selectiveExtend$1,selectiveDeepExtend:selectiveDeepExtend$1,selectiveNotDeepExtend:selectiveNotDeepExtend$1,deepExtend:deepExtend$1,equalArray:equalArray$1,convert:convert$2,getType:getType$2,copyAndExtendArray:copyAndExtendArray$1,copyArray:copyArray$1,getAbsoluteLeft:getAbsoluteLeft$1,getAbsoluteRight:getAbsoluteRight$1,getAbsoluteTop:getAbsoluteTop$1,addClassName:addClassName$1,removeClassName:removeClassName$1,forEach:forEach$1,toArray:toArray$1,updateProperty:updateProperty$1,throttle:throttle$1,addEventListener:addEventListener$1,removeEventListener:removeEventListener$1,preventDefault:preventDefault$1,getTarget:getTarget$1,hasParent:hasParent$1,option:option$1,hexToRGB:hexToRGB$1,overrideOpacity:overrideOpacity$1,RGBToHex:RGBToHex$1,parseColor:parseColor$1,RGBToHSV:RGBToHSV$1,addCssText:addCssText$1,removeCssText:removeCssText$1,HSVToRGB:HSVToRGB$1,HSVToHex:HSVToHex$1,hexToHSV:hexToHSV$1,isValidHex:isValidHex$1,isValidRGB:isValidRGB$1,isValidRGBA:isValidRGBA$1,selectiveBridgeObject:selectiveBridgeObject$1,bridgeObject:bridgeObject$1,insertSort:insertSort$1,mergeOptions:mergeOptions$1,binarySearchCustom:binarySearchCustom$1,binarySearchValue:binarySearchValue$1,easingFunctions:easingFunctions$1,getScrollBarWidth:getScrollBarWidth$1,topMost:topMost$1,randomUUID:uuid4$2}),esm=Object.freeze({default:util$2,HSVToHex:HSVToHex$1,HSVToRGB:HSVToRGB$1,RGBToHSV:RGBToHSV$1,RGBToHex:RGBToHex$1,addClassName:addClassName$1,addCssText:addCssText$1,addEventListener:addEventListener$1,binarySearchCustom:binarySearchCustom$1,binarySearchValue:binarySearchValue$1,bridgeObject:bridgeObject$1,convert:convert$2,copyAndExtendArray:copyAndExtendArray$1,copyArray:copyArray$1,deepExtend:deepExtend$1,easingFunctions:easingFunctions$1,equalArray:equalArray$1,extend:extend$1,fillIfDefined:fillIfDefined$1,forEach:forEach$1,getAbsoluteLeft:getAbsoluteLeft$1,getAbsoluteRight:getAbsoluteRight$1,getAbsoluteTop:getAbsoluteTop$1,getScrollBarWidth:getScrollBarWidth$1,getTarget:getTarget$1,getType:getType$2,hasParent:hasParent$1,hexToHSV:hexToHSV$1,hexToRGB:hexToRGB$1,insertSort:insertSort$1,isDate:isDate$1,isMoment:isMoment$2,isNumber:isNumber$2,isObject:isObject$1,isString:isString$2,isValidHex:isValidHex$1,isValidRGB:isValidRGB$1,isValidRGBA:isValidRGBA$1,mergeOptions:mergeOptions$1,option:option$1,overrideOpacity:overrideOpacity$1,parseColor:parseColor$1,preventDefault:preventDefault$1,randomUUID:uuid4$2,recursiveDOMDelete:recursiveDOMDelete$1,removeClassName:removeClassName$1,removeCssText:removeCssText$1,removeEventListener:removeEventListener$1,selectiveBridgeObject:selectiveBridgeObject$1,selectiveDeepExtend:selectiveDeepExtend$1,selectiveExtend:selectiveExtend$1,selectiveNotDeepExtend:selectiveNotDeepExtend$1,throttle:throttle$1,toArray:toArray$1,topMost:topMost$1,updateProperty:updateProperty$1});function _defineProperty$1$1(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e;}var defineProperty$1$1=_defineProperty$1$1;function createCommonjsModule$1$2(e,t){return t={exports:{}},e(t,t.exports),t.exports;}var _typeof_1$1$1=createCommonjsModule$1$2(function(e){function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e;}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e;},t(e);}function o(n){return e.exports="function"==typeof Symbol&&"symbol"===t(Symbol.iterator)?o=function(e){return t(e);}:o=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":t(e);},o(n);}e.exports=o;});function _classCallCheck$1(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function");}var classCallCheck$1=_classCallCheck$1;function _defineProperties$1(e,t){for(var o=0,n;o<t.length;o++)n=t[o],n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}function _createClass$1(e,t,o){return t&&_defineProperties$1(e.prototype,t),o&&_defineProperties$1(e,o),e;}var createClass$1=_createClass$1;function _assertThisInitialized$1(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;}var assertThisInitialized$1=_assertThisInitialized$1;function _possibleConstructorReturn$1(e,t){return t&&("object"===_typeof_1$1$1(t)||"function"==typeof t)?t:assertThisInitialized$1(e);}var possibleConstructorReturn$1=_possibleConstructorReturn$1,getPrototypeOf$1=createCommonjsModule$1$2(function(e){function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e);},t(n);}e.exports=t;}),setPrototypeOf$1=createCommonjsModule$1$2(function(e){function t(n,o){return e.exports=t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e;},t(n,o);}e.exports=t;});function _inherits$1(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&setPrototypeOf$1(e,t);}for(var inherits$1=_inherits$1,byteToHex$2$2=[],i$2$2=0;256>i$2$2;i$2$2++)byteToHex$2$2[i$2$2]=(i$2$2+256).toString(16).substr(1);function stringifyUUID$1$1(e,t){var o=t||0,n=byteToHex$2$2;return n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+"-"+n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]]+n[e[o++]];}for(var random$1$2=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e;};}var t=Array(16);return function(){for(var e=0,o;16>e;e++)0==(3&e)&&(o=4294967296*Math.random()),t[e]=255&o>>>((3&e)<<3);return t;};}(),byteToHex$1$1$2=[],i$1$1$2=0;256>i$1$1$2;i$1$1$2++)byteToHex$1$1$2[i$1$1$2]=(i$1$1$2+256).toString(16).substr(1);var seedBytes$1$2=random$1$2(),defaultNodeId$1$2=[1|seedBytes$1$2[0],seedBytes$1$2[1],seedBytes$1$2[2],seedBytes$1$2[3],seedBytes$1$2[4],seedBytes$1$2[5]],defaultClockseq$1$2=16383&(seedBytes$1$2[6]<<8|seedBytes$1$2[7]);function uuid4$1$1(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=1<arguments.length?arguments[1]:void 0,o=2<arguments.length?arguments[2]:void 0,n=t&&o||0;"string"==typeof e&&(t="binary"===e?Array(16):void 0,e={});var i=e.random||(e.rng||random$1$2)();if(i[6]=64|15&i[6],i[8]=128|63&i[8],t)for(var a=0;16>a;a++)t[n+a]=i[a];return t||stringifyUUID$1$1(i);}function _typeof$1(e){return _typeof$1="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e;}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e;},_typeof$1(e);}var commonjsGlobal$1$1="undefined"==typeof globalThis?"undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?{}:self:global:window:globalThis;function commonjsRequire$1$1(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs");}function createCommonjsModule$1$1$1(e,t){return t={exports:{}},e(t,t.exports),t.exports;}for(var moment$1$1=createCommonjsModule$1$1$1(function(e){var t=Math.round,o=Math.pow,n=Math.max,a=Math.abs,d=Math.min,s=Math.floor,r=Math.ceil;(function(t,o){e.exports=o();})(commonjsGlobal$1$1,function(){function l(){return Zt.apply(null,arguments);}function u(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e);}function p(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e);}function h(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;for(var t in e)if(e.hasOwnProperty(t))return !1;return !0;}function m(e){return void 0===e;}function g(e){return "number"==typeof e||"[object Number]"===Object.prototype.toString.call(e);}function y(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e);}function f(e,t){var o=[],n;for(n=0;n<e.length;++n)o.push(t(e[n],n));return o;}function _(e,t){return Object.prototype.hasOwnProperty.call(e,t);}function v(e,t){for(var o in t)_(t,o)&&(e[o]=t[o]);return _(t,"toString")&&(e.toString=t.toString),_(t,"valueOf")&&(e.valueOf=t.valueOf),e;}function k(e,t,o,n){return it(e,t,o,n,!0).utc();}function w(){return {empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1};}function x(e){return null==e._pf&&(e._pf=w()),e._pf;}function S(e){if(null==e._isValid){var t=x(e),o=Xt.call(t.parsedDateParts,function(e){return null!=e;}),n=!isNaN(e._d.getTime())&&0>t.overflow&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&o);if(e._strict&&(n=n&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null==Object.isFrozen||!Object.isFrozen(e))e._isValid=n;else return n;}return e._isValid;}function O(e){var t=k(NaN);return null==e?x(t).userInvalidated=!0:v(x(t),e),t;}function D(e,t){var o,n,a;if(m(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),m(t._i)||(e._i=t._i),m(t._f)||(e._f=t._f),m(t._l)||(e._l=t._l),m(t._strict)||(e._strict=t._strict),m(t._tzm)||(e._tzm=t._tzm),m(t._isUTC)||(e._isUTC=t._isUTC),m(t._offset)||(e._offset=t._offset),m(t._pf)||(e._pf=x(t)),m(t._locale)||(e._locale=t._locale),0<Kt.length)for(o=0;o<Kt.length;o++)n=Kt[o],a=t[n],m(a)||(e[n]=a);return e;}function T(e){D(this,e),this._d=new Date(null==e._d?NaN:e._d.getTime()),this.isValid()||(this._d=new Date(NaN)),!1===Qt&&(Qt=!0,l.updateOffset(this),Qt=!1);}function C(e){return e instanceof T||null!=e&&null!=e._isAMomentObject;}function E(e){return 0>e?r(e)||0:s(e);}function M(e){var t=+e,o=0;return 0!=t&&isFinite(t)&&(o=E(t)),o;}function I(e,t,o){var n=d(e.length,t.length),s=a(e.length-t.length),r=0,l;for(l=0;l<n;l++)(o&&e[l]!==t[l]||!o&&M(e[l])!==M(t[l]))&&r++;return r+s;}function P(e){!1===l.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e);}function F(e,t){var o=!0;return v(function(){if(null!=l.deprecationHandler&&l.deprecationHandler(null,e),o){for(var n=[],a=0,d;a<arguments.length;a++){if(d="","object"==typeof arguments[a]){for(var s in d+="\n["+a+"] ",arguments[0])d+=s+": "+arguments[0][s]+", ";d=d.slice(0,-2);}else d=arguments[a];n.push(d);}P(e+"\nArguments: "+Array.prototype.slice.call(n).join("")+"\n"+new Error().stack),o=!1;}return t.apply(this,arguments);},t);}function Y(e,t){null!=l.deprecationHandler&&l.deprecationHandler(e,t),$t[e]||(P(t),$t[e]=!0);}function z(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e);}function N(e){var t,o;for(o in e)t=e[o],z(t)?this[o]=t:this["_"+o]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source);}function R(e,t){var o=v({},e),n;for(n in t)_(t,n)&&(p(e[n])&&p(t[n])?(o[n]={},v(o[n],e[n]),v(o[n],t[n])):null==t[n]?delete o[n]:o[n]=t[n]);for(n in e)_(e,n)&&!_(t,n)&&p(e[n])&&(o[n]=v({},o[n]));return o;}function B(e){null!=e&&this.set(e);}function H(e,t){var o=e.toLowerCase();to[o]=to[o+"s"]=to[t]=e;}function L(e){return "string"==typeof e?to[e]||to[e.toLowerCase()]:void 0;}function A(e){var t={},o,n;for(n in e)_(e,n)&&(o=L(n),o&&(t[o]=e[n]));return t;}function W(e,t){oo[e]=t;}function j(e){var t=[];for(var o in e)t.push({unit:o,priority:oo[o]});return t.sort(function(e,t){return e.priority-t.priority;}),t;}function U(e,t,i){var d=""+a(e),s=t-d.length;return (0<=e?i?"+":"":"-")+o(10,n(0,s)).toString().substr(1)+d;}function V(e,t,o,n){var i=n;"string"==typeof n&&(i=function(){return this[n]();}),e&&(so[e]=i),t&&(so[t[0]]=function(){return U(i.apply(this,arguments),t[1],t[2]);}),o&&(so[o]=function(){return this.localeData().ordinal(i.apply(this,arguments),e);});}function G(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"");}function q(e){var t=e.match(no),o,n;for(o=0,n=t.length;o<n;o++)t[o]=so[t[o]]?so[t[o]]:G(t[o]);return function(o){var a="",d;for(d=0;d<n;d++)a+=z(t[d])?t[d].call(o,e):t[d];return a;};}function Z(e,t){return e.isValid()?(t=X(t,e.localeData()),ao[t]=ao[t]||q(t),ao[t](e)):e.localeData().invalidDate();}function X(e,t){function o(e){return t.longDateFormat(e)||e;}var n=5;for(io.lastIndex=0;0<=n&&io.test(e);)e=e.replace(io,o),io.lastIndex=0,n-=1;return e;}function K(e,t,o){Oo[e]=z(t)?t:function(e){return e&&o?o:t;};}function Q(e,t){return _(Oo,e)?Oo[e](t._strict,t._locale):new RegExp($(e));}function $(e){return J(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,o,n,i){return t||o||n||i;}));}function J(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&");}function ee(e,t){var o=t,n;for("string"==typeof e&&(e=[e]),g(t)&&(o=function(e,o){o[t]=M(e);}),n=0;n<e.length;n++)Do[e[n]]=o;}function te(e,t){ee(e,function(e,o,n,i){n._w=n._w||{},t(e,n._w,n,i);});}function oe(e,t,o){null!=t&&_(Do,e)&&Do[e](t,o._a,o,e);}function ne(e){return ie(e)?366:365;}function ie(e){return 0==e%4&&0!=e%100||0==e%400;}function ae(e,t){return function(o){return null==o?de(this,e):(se(this,e,o),l.updateOffset(this,t),this);};}function de(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN;}function se(e,t,o){e.isValid()&&!isNaN(o)&&("FullYear"===t&&ie(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](o,e.month(),ce(o,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](o));}function re(e,t){if("object"==typeof e){e=A(e);for(var o=j(e),n=0;n<o.length;n++)this[o[n].unit](e[o[n].unit]);}else if(e=L(e),z(this[e]))return this[e](t);return this;}function le(e,t){return (e%t+t)%t;}function ce(e,t){if(isNaN(e)||isNaN(t))return NaN;var o=le(t,12);return e+=(t-o)/12,1===o?ie(e)?29:28:31-o%7%2;}function ue(e,t,o){var n=e.toLocaleLowerCase(),a,d,s;if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],a=0;12>a;++a)s=k([2e3,a]),this._shortMonthsParse[a]=this.monthsShort(s,"").toLocaleLowerCase(),this._longMonthsParse[a]=this.months(s,"").toLocaleLowerCase();return o?"MMM"===t?(d=Yo.call(this._shortMonthsParse,n),-1===d?null:d):(d=Yo.call(this._longMonthsParse,n),-1===d?null:d):"MMM"===t?(d=Yo.call(this._shortMonthsParse,n),-1!==d)?d:(d=Yo.call(this._longMonthsParse,n),-1===d?null:d):(d=Yo.call(this._longMonthsParse,n),-1!==d)?d:(d=Yo.call(this._shortMonthsParse,n),-1===d?null:d);}function pe(e,t,o){var n,a,d;if(this._monthsParseExact)return ue.call(this,e,t,o);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;12>n;n++){if(a=k([2e3,n]),o&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(a,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(a,"").replace(".","")+"$","i")),o||this._monthsParse[n]||(d="^"+this.months(a,"")+"|^"+this.monthsShort(a,""),this._monthsParse[n]=new RegExp(d.replace(".",""),"i")),o&&"MMMM"===t&&this._longMonthsParse[n].test(e))return n;if(o&&"MMM"===t&&this._shortMonthsParse[n].test(e))return n;if(!o&&this._monthsParse[n].test(e))return n;}}function he(e,t){var o;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=M(t);else if(t=e.localeData().monthsParse(t),!g(t))return e;return o=d(e.date(),ce(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,o),e;}function me(e){return null==e?de(this,"Month"):(he(this,e),l.updateOffset(this,!0),this);}function ge(){function e(e,t){return t.length-e.length;}var t=[],o=[],n=[],a,d;for(a=0;12>a;a++)d=k([2e3,a]),t.push(this.monthsShort(d,"")),o.push(this.months(d,"")),n.push(this.months(d,"")),n.push(this.monthsShort(d,""));for(t.sort(e),o.sort(e),n.sort(e),a=0;12>a;a++)t[a]=J(t[a]),o[a]=J(o[a]);for(a=0;24>a;a++)n[a]=J(n[a]);this._monthsRegex=new RegExp("^("+n.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+t.join("|")+")","i");}function ye(e,t,o,n,i,a,d){var s;return 100>e&&0<=e?(s=new Date(e+400,t,o,n,i,a,d),isFinite(s.getFullYear())&&s.setFullYear(e)):s=new Date(e,t,o,n,i,a,d),s;}function fe(e){var t;if(100>e&&0<=e){var o=Array.prototype.slice.call(arguments);o[0]=e+400,t=new Date(Date.UTC.apply(null,o)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e);}else t=new Date(Date.UTC.apply(null,arguments));return t;}function be(e,t,o){var n=7+t-o,i=(7+fe(e,0,n).getUTCDay()-t)%7;return -i+n-1;}function _e(e,t,o,n,i){var a=be(e,n,i),d=1+7*(t-1)+(7+o-n)%7+a,s,r;return 0>=d?(s=e-1,r=ne(s)+d):d>ne(e)?(s=e+1,r=d-ne(e)):(s=e,r=d),{year:s,dayOfYear:r};}function ve(e,t,o){var n=be(e.year(),t,o),i=s((e.dayOfYear()-n-1)/7)+1,a,d;return 1>i?(d=e.year()-1,a=i+ke(d,t,o)):i>ke(e.year(),t,o)?(a=i-ke(e.year(),t,o),d=e.year()+1):(d=e.year(),a=i),{week:a,year:d};}function ke(e,t,o){var n=be(e,t,o),i=be(e+1,t,o);return (ne(e)-n+i)/7;}function we(e,t){return "string"==typeof e?isNaN(e)?(e=t.weekdaysParse(e),"number"==typeof e?e:null):parseInt(e,10):e;}function xe(e,t){return "string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e;}function Se(e,t){return e.slice(t,7).concat(e.slice(0,t));}function Oe(e,t,o){var n=e.toLocaleLowerCase(),a,d,s;if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],a=0;7>a;++a)s=k([2e3,1]).day(a),this._minWeekdaysParse[a]=this.weekdaysMin(s,"").toLocaleLowerCase(),this._shortWeekdaysParse[a]=this.weekdaysShort(s,"").toLocaleLowerCase(),this._weekdaysParse[a]=this.weekdays(s,"").toLocaleLowerCase();return o?"dddd"===t?(d=Yo.call(this._weekdaysParse,n),-1===d?null:d):"ddd"===t?(d=Yo.call(this._shortWeekdaysParse,n),-1===d?null:d):(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):"dddd"===t?(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._shortWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):"ddd"===t?(d=Yo.call(this._shortWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):(d=Yo.call(this._minWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._shortWeekdaysParse,n),-1===d?null:d);}function De(e,t,o){var n,a,d;if(this._weekdaysParseExact)return Oe.call(this,e,t,o);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;7>n;n++){if(a=k([2e3,1]).day(n),o&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp("^"+this.weekdays(a,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[n]=new RegExp("^"+this.weekdaysShort(a,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[n]=new RegExp("^"+this.weekdaysMin(a,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[n]||(d="^"+this.weekdays(a,"")+"|^"+this.weekdaysShort(a,"")+"|^"+this.weekdaysMin(a,""),this._weekdaysParse[n]=new RegExp(d.replace(".",""),"i")),o&&"dddd"===t&&this._fullWeekdaysParse[n].test(e))return n;if(o&&"ddd"===t&&this._shortWeekdaysParse[n].test(e))return n;if(o&&"dd"===t&&this._minWeekdaysParse[n].test(e))return n;if(!o&&this._weekdaysParse[n].test(e))return n;}}function Te(){function e(e,t){return t.length-e.length;}var t=[],o=[],n=[],a=[],d,s,r,l,c;for(d=0;7>d;d++)s=k([2e3,1]).day(d),r=this.weekdaysMin(s,""),l=this.weekdaysShort(s,""),c=this.weekdays(s,""),t.push(r),o.push(l),n.push(c),a.push(r),a.push(l),a.push(c);for(t.sort(e),o.sort(e),n.sort(e),a.sort(e),d=0;7>d;d++)o[d]=J(o[d]),n[d]=J(n[d]),a[d]=J(a[d]);this._weekdaysRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+n.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+t.join("|")+")","i");}function Ce(){return this.hours()%12||12;}function Ee(e,t){V(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t);});}function Me(e,t){return t._meridiemParse;}function Ie(e){return e?e.toLowerCase().replace("_","-"):e;}function Pe(e){for(var t=0,o,n,a,d;t<e.length;){for(d=Ie(e[t]).split("-"),o=d.length,n=Ie(e[t+1]),n=n?n.split("-"):null;0<o;){if(a=Fe(d.slice(0,o).join("-")),a)return a;if(n&&n.length>=o&&I(d,n,!0)>=o-1)break;o--;}t++;}return Qo;}function Fe(t){var o=null;if(!Ao[t]&&!0&&e&&e.exports)try{o=Qo._abbr;commonjsRequire$1$1("./locale/"+t),Ye(o);}catch(t){}return Ao[t];}function Ye(e,t){var o;return e&&(o=m(t)?Ne(e):ze(e,t),o?Qo=o:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Qo._abbr;}function ze(e,t){if(null!==t){var o=Lo,n;if(t.abbr=e,null!=Ao[e])Y("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),o=Ao[e]._config;else if(null!=t.parentLocale)if(null!=Ao[t.parentLocale])o=Ao[t.parentLocale]._config;else if(n=Fe(t.parentLocale),null!=n)o=n._config;else return Wo[t.parentLocale]||(Wo[t.parentLocale]=[]),Wo[t.parentLocale].push({name:e,config:t}),null;return Ao[e]=new B(R(o,t)),Wo[e]&&Wo[e].forEach(function(e){ze(e.name,e.config);}),Ye(e),Ao[e];}return delete Ao[e],null;}function Ne(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Qo;if(!u(e)){if(t=Fe(e),t)return t;e=[e];}return Pe(e);}function Re(){return Jt(Ao);}function Be(e){var t=e._a,o;return t&&-2===x(e).overflow&&(o=0>t[1]||11<t[1]?1:1>t[2]||t[2]>ce(t[0],t[1])?2:0>t[3]||24<t[3]||24===t[3]&&(0!==t[4]||0!==t[5]||0!==t[6])?3:0>t[4]||59<t[4]?4:0>t[5]||59<t[5]?5:0>t[6]||999<t[6]?6:-1,x(e)._overflowDayOfYear&&(0>o||2<o)&&(o=2),x(e)._overflowWeeks&&-1===o&&(o=7),x(e)._overflowWeekday&&-1===o&&(o=8),x(e).overflow=o),e;}function He(e,t,o){return null==e?null==t?o:t:e;}function Le(e){var t=new Date(l.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()];}function Ae(e){var t=[],o,n,a,d,s;if(!e._d){for(a=Le(e),e._w&&null==e._a[2]&&null==e._a[1]&&We(e),null!=e._dayOfYear&&(s=He(e._a[0],a[0]),(e._dayOfYear>ne(s)||0===e._dayOfYear)&&(x(e)._overflowDayOfYear=!0),n=fe(s,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),o=0;3>o&&null==e._a[o];++o)e._a[o]=t[o]=a[o];for(;7>o;o++)e._a[o]=t[o]=null==e._a[o]?2===o?1:0:e._a[o];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?fe:ye).apply(null,t),d=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&"undefined"!=typeof e._w.d&&e._w.d!==d&&(x(e).weekdayMismatch=!0);}}function We(e){var t,o,n,i,a,d,s,r;if(t=e._w,null!=t.GG||null!=t.W||null!=t.E)a=1,d=4,o=He(t.GG,e._a[0],ve(at(),1,4).year),n=He(t.W,1),i=He(t.E,1),(1>i||7<i)&&(r=!0);else{a=e._locale._week.dow,d=e._locale._week.doy;var l=ve(at(),a,d);o=He(t.gg,e._a[0],l.year),n=He(t.w,l.week),null==t.d?null==t.e?i=a:(i=t.e+a,(0>t.e||6<t.e)&&(r=!0)):(i=t.d,(0>i||6<i)&&(r=!0));}1>n||n>ke(o,a,d)?x(e)._overflowWeeks=!0:null==r?(s=_e(o,n,i,a,d),e._a[0]=s.year,e._dayOfYear=s.dayOfYear):x(e)._overflowWeekday=!0;}function je(e){var t=e._i,o=jo.exec(t)||Uo.exec(t),n,a,d,s,r,c;if(o){for(x(e).iso=!0,n=0,a=Go.length;n<a;n++)if(Go[n][1].exec(o[1])){s=Go[n][0],d=!1!==Go[n][2];break;}if(null==s)return void(e._isValid=!1);if(o[3]){for(n=0,a=qo.length;n<a;n++)if(qo[n][1].exec(o[3])){r=(o[2]||" ")+qo[n][0];break;}if(null==r)return void(e._isValid=!1);}if(!d&&null!=r)return void(e._isValid=!1);if(o[4])if(Vo.exec(o[4]))c="Z";else return void(e._isValid=!1);e._f=s+(r||"")+(c||""),Qe(e);}else e._isValid=!1;}function Ue(e,t,o,n,i,a){var d=[Ve(e),No.indexOf(t),parseInt(o,10),parseInt(n,10),parseInt(i,10)];return a&&d.push(parseInt(a,10)),d;}function Ve(e){var t=parseInt(e,10);return 49>=t?2e3+t:999>=t?1900+t:t;}function Ge(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"");}function qe(e,t,o){if(e){var n=Ro.indexOf(e),i=new Date(t[0],t[1],t[2]).getDay();if(n!==i)return x(o).weekdayMismatch=!0,o._isValid=!1,!1;}return !0;}function Ze(e,t,o){if(e)return Ko[e];if(t)return 0;var n=parseInt(o,10),i=n%100;return 60*((n-i)/100)+i;}function Xe(e){var t=Xo.exec(Ge(e._i));if(t){var o=Ue(t[4],t[3],t[2],t[5],t[6],t[7]);if(!qe(t[1],o,e))return;e._a=o,e._tzm=Ze(t[8],t[9],t[10]),e._d=fe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),x(e).rfc2822=!0;}else e._isValid=!1;}function Ke(e){var t=Zo.exec(e._i);if(null!==t)return void(e._d=new Date(+t[1]));if(je(e),!1===e._isValid)delete e._isValid;else return;if(Xe(e),!1===e._isValid)delete e._isValid;else return;l.createFromInputFallback(e);}function Qe(e){if(e._f===l.ISO_8601)return void je(e);if(e._f===l.RFC_2822)return void Xe(e);e._a=[],x(e).empty=!0;var t=""+e._i,o=t.length,n=0,a,d,s,r,c;for(s=X(e._f,e._locale).match(no)||[],a=0;a<s.length;a++)r=s[a],d=(t.match(Q(r,e))||[])[0],d&&(c=t.substr(0,t.indexOf(d)),0<c.length&&x(e).unusedInput.push(c),t=t.slice(t.indexOf(d)+d.length),n+=d.length),so[r]?(d?x(e).empty=!1:x(e).unusedTokens.push(r),oe(r,d,e)):e._strict&&!d&&x(e).unusedTokens.push(r);x(e).charsLeftOver=o-n,0<t.length&&x(e).unusedInput.push(t),12>=e._a[3]&&!0===x(e).bigHour&&0<e._a[3]&&(x(e).bigHour=void 0),x(e).parsedDateParts=e._a.slice(0),x(e).meridiem=e._meridiem,e._a[3]=$e(e._locale,e._a[3],e._meridiem),Ae(e),Be(e);}function $e(e,t,o){var n;return null==o?t:null==e.meridiemHour?null==e.isPM?t:(n=e.isPM(o),n&&12>t&&(t+=12),n||12!==t||(t=0),t):e.meridiemHour(t,o);}function Je(e){var t,o,n,a,d;if(0===e._f.length)return x(e).invalidFormat=!0,void(e._d=new Date(NaN));for(a=0;a<e._f.length;a++)(d=0,t=D({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[a],Qe(t),!!S(t))&&(d+=x(t).charsLeftOver,d+=10*x(t).unusedTokens.length,x(t).score=d,(null==n||d<n)&&(n=d,o=t));v(e,o||t);}function et(e){if(!e._d){var t=A(e._i);e._a=f([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10);}),Ae(e);}}function tt(e){var t=new T(Be(ot(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t;}function ot(e){var t=e._i,o=e._f;return (e._locale=e._locale||Ne(e._l),null===t||void 0===o&&""===t)?O({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),C(t))?new T(Be(t)):(y(t)?e._d=t:u(o)?Je(e):o?Qe(e):nt(e),S(e)||(e._d=null),e);}function nt(e){var t=e._i;m(t)?e._d=new Date(l.now()):y(t)?e._d=new Date(t.valueOf()):"string"==typeof t?Ke(e):u(t)?(e._a=f(t.slice(0),function(e){return parseInt(e,10);}),Ae(e)):p(t)?et(e):g(t)?e._d=new Date(t):l.createFromInputFallback(e);}function it(e,t,o,n,i){var a={};return (!0===o||!1===o)&&(n=o,o=void 0),(p(e)&&h(e)||u(e)&&0===e.length)&&(e=void 0),a._isAMomentObject=!0,a._useUTC=a._isUTC=i,a._l=o,a._i=e,a._f=t,a._strict=n,tt(a);}function at(e,t,o,n){return it(e,t,o,n,!1);}function dt(e,t){var o,n;if(1===t.length&&u(t[0])&&(t=t[0]),!t.length)return at();for(o=t[0],n=1;n<t.length;++n)(!t[n].isValid()||t[n][e](o))&&(o=t[n]);return o;}function st(e){for(var t in e)if(-1===Yo.call(en,t)||null!=e[t]&&isNaN(e[t]))return !1;for(var o=!1,n=0;n<en.length;++n)if(e[en[n]]){if(o)return !1;parseFloat(e[en[n]])!==M(e[en[n]])&&(o=!0);}return !0;}function rt(e){var t=A(e),o=t.year||0,n=t.quarter||0,i=t.month||0,a=t.week||t.isoWeek||0,d=t.day||0,s=t.hour||0,r=t.minute||0,l=t.second||0,c=t.millisecond||0;this._isValid=st(t),this._milliseconds=+c+1e3*l+6e4*r+60*(60*(1e3*s)),this._days=+d+7*a,this._months=+i+3*n+12*o,this._data={},this._locale=Ne(),this._bubble();}function lt(e){return e instanceof rt;}function ct(e){return 0>e?-1*t(-1*e):t(e);}function ut(e,t){V(e,0,0,function(){var e=this.utcOffset(),o="+";return 0>e&&(e=-e,o="-"),o+U(~~(e/60),2)+t+U(~~e%60,2);});}function pt(e,t){var o=(t||"").match(e);if(null===o)return null;var n=o[o.length-1]||[],i=(n+"").match(tn)||["-",0,0],a=+(60*i[1])+M(i[2]);return 0===a?0:"+"===i[0]?a:-a;}function ht(e,t){var o,n;return t._isUTC?(o=t.clone(),n=(C(e)||y(e)?e.valueOf():at(e).valueOf())-o.valueOf(),o._d.setTime(o._d.valueOf()+n),l.updateOffset(o,!1),o):at(e).local();}function mt(e){return 15*-t(e._d.getTimezoneOffset()/15);}function gt(){if(!m(this._isDSTShifted))return this._isDSTShifted;var e={};if(D(e,this),e=ot(e),e._a){var t=e._isUTC?k(e._a):at(e._a);this._isDSTShifted=this.isValid()&&0<I(e._a,t.toArray());}else this._isDSTShifted=!1;return this._isDSTShifted;}function yt(){return !!this.isValid()&&this._isUTC&&0===this._offset;}function ft(e,t){var o=e,n=null,i,a,d;return lt(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:g(e)?(o={},t?o[t]=e:o.milliseconds=e):(n=on.exec(e))?(i="-"===n[1]?-1:1,o={y:0,d:M(n[2])*i,h:M(n[3])*i,m:M(n[4])*i,s:M(n[5])*i,ms:M(ct(1e3*n[6]))*i}):(n=nn.exec(e))?(i="-"===n[1]?-1:1,o={y:bt(n[2],i),M:bt(n[3],i),w:bt(n[4],i),d:bt(n[5],i),h:bt(n[6],i),m:bt(n[7],i),s:bt(n[8],i)}):null==o?o={}:"object"==typeof o&&(("from"in o)||("to"in o))&&(d=vt(at(o.from),at(o.to)),o={},o.ms=d.milliseconds,o.M=d.months),a=new rt(o),lt(e)&&_(e,"_locale")&&(a._locale=e._locale),a;}function bt(e,t){var o=e&&parseFloat(e.replace(",","."));return (isNaN(o)?0:o)*t;}function _t(e,t){var o={};return o.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(o.months,"M").isAfter(t)&&--o.months,o.milliseconds=+t-+e.clone().add(o.months,"M"),o;}function vt(e,t){var o;return e.isValid()&&t.isValid()?(t=ht(t,e),e.isBefore(t)?o=_t(e,t):(o=_t(t,e),o.milliseconds=-o.milliseconds,o.months=-o.months),o):{milliseconds:0,months:0};}function kt(e,t){return function(o,n){var i,a;return null===n||isNaN(+n)||(Y(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),a=o,o=n,n=a),o="string"==typeof o?+o:o,i=ft(o,n),wt(this,i,e),this;};}function wt(e,t,o,n){var i=t._milliseconds,a=ct(t._days),d=ct(t._months);e.isValid()&&(n=null==n||n,d&&he(e,de(e,"Month")+d*o),a&&se(e,"Date",de(e,"Date")+a*o),i&&e._d.setTime(e._d.valueOf()+i*o),n&&l.updateOffset(e,a||d));}function xt(e,t){var o=12*(t.year()-e.year())+(t.month()-e.month()),n=e.clone().add(o,"months"),i,a;return 0>t-n?(i=e.clone().add(o-1,"months"),a=(t-n)/(n-i)):(i=e.clone().add(o+1,"months"),a=(t-n)/(i-n)),-(o+a)||0;}function St(e){var t;return void 0===e?this._locale._abbr:(t=Ne(e),null!=t&&(this._locale=t),this);}function Ot(){return this._locale;}function Dt(e,t){return (e%t+t)%t;}function Tt(e,t,o){return 100>e&&0<=e?new Date(e+400,t,o)-12622780800000:new Date(e,t,o).valueOf();}function Ct(e,t,o){return 100>e&&0<=e?Date.UTC(e+400,t,o)-12622780800000:Date.UTC(e,t,o);}function Et(e,t){V(0,[e,e.length],0,t);}function Mt(e,t,o,n,i){var a;return null==e?ve(this,n,i).year:(a=ke(e,n,i),t>a&&(t=a),It.call(this,e,t,o,n,i));}function It(e,t,o,n,i){var a=_e(e,t,o,n,i),d=fe(a.year,0,a.dayOfYear);return this.year(d.getUTCFullYear()),this.month(d.getUTCMonth()),this.date(d.getUTCDate()),this;}function Pt(e,t){t[6]=M(1e3*("0."+e));}function Ft(e){return e;}function Yt(e,t,o,n){var i=Ne(),a=k().set(n,t);return i[o](a,e);}function zt(e,t,o){if(g(e)&&(t=e,e=void 0),e=e||"",null!=t)return Yt(e,t,o,"month");var n=[],a;for(a=0;12>a;a++)n[a]=Yt(e,a,o,"month");return n;}function Nt(e,t,o,n){"boolean"==typeof e?(g(t)&&(o=t,t=void 0),t=t||""):(t=e,o=t,e=!1,g(t)&&(o=t,t=void 0),t=t||"");var a=Ne(),d=e?a._week.dow:0;if(null!=o)return Yt(t,(o+d)%7,n,"day");var s=[],r;for(r=0;7>r;r++)s[r]=Yt(t,(r+d)%7,n,"day");return s;}function Rt(e,t,o,n){var i=ft(t,o);return e._milliseconds+=n*i._milliseconds,e._days+=n*i._days,e._months+=n*i._months,e._bubble();}function Bt(e){return 0>e?s(e):r(e);}function Ht(e){return 4800*e/146097;}function Lt(e){return 146097*e/4800;}function At(e){return function(){return this.as(e);};}function Wt(e){return function(){return this.isValid()?this._data[e]:NaN;};}function jt(e,t,o,n,i){return i.relativeTime(t||1,!!o,e,n);}function Ut(e,t,o){var n=ft(e).abs(),i=Pn(n.as("s")),d=Pn(n.as("m")),s=Pn(n.as("h")),r=Pn(n.as("d")),l=Pn(n.as("M")),c=Pn(n.as("y")),u=i<=Fn.ss&&["s",i]||i<Fn.s&&["ss",i]||1>=d&&["m"]||d<Fn.m&&["mm",d]||1>=s&&["h"]||s<Fn.h&&["hh",s]||1>=r&&["d"]||r<Fn.d&&["dd",r]||1>=l&&["M"]||l<Fn.M&&["MM",l]||1>=c&&["y"]||["yy",c];return u[2]=t,u[3]=0<+e,u[4]=o,jt.apply(null,u);}function Vt(e){return void 0===e?Pn:"function"==typeof e&&(Pn=e,!0);}function Gt(e){return (0<e)-(0>e)||+e;}function qt(){if(!this.isValid())return this.localeData().invalidDate();var e=Yn(this._milliseconds)/1e3,t=Yn(this._days),o=Yn(this._months),n,i,a;n=E(e/60),i=E(n/60),e%=60,n%=60,a=E(o/12),o%=12;var d=a,r=o,l=t,c=i,u=n,p=e?e.toFixed(3).replace(/\.?0+$/,""):"",s=this.asSeconds();if(!s)return "P0D";var h=0>s?"-":"",m=Gt(this._months)===Gt(s)?"":"-",g=Gt(this._days)===Gt(s)?"":"-",y=Gt(this._milliseconds)===Gt(s)?"":"-";return h+"P"+(d?m+d+"Y":"")+(r?m+r+"M":"")+(l?g+l+"D":"")+(c||u||p?"T":"")+(c?y+c+"H":"")+(u?y+u+"M":"")+(p?y+p+"S":"");}var Zt,Xt;Xt=Array.prototype.some?Array.prototype.some:function(e){for(var o=Object(this),t=o.length>>>0,n=0;n<t;n++)if((n in o)&&e.call(this,o[n],n,o))return !0;return !1;};var Kt=l.momentProperties=[],Qt=!1,$t={};l.suppressDeprecationWarnings=!1,l.deprecationHandler=null;var Jt=Object.keys?Object.keys:function(e){var t=[],o;for(o in e)_(e,o)&&t.push(o);return t;};var eo=/\d{1,2}/,to={},oo={},no=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,io=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,ao={},so={},ro=/\d/,lo=/\d\d/,co=/\d{3}/,uo=/\d{4}/,po=/[+-]?\d{6}/,ho=/\d\d?/,mo=/\d\d\d\d?/,go=/\d\d\d\d\d\d?/,yo=/\d{1,3}/,fo=/\d{1,4}/,bo=/[+-]?\d{1,6}/,_o=/\d+/,vo=/[+-]?\d+/,ko=/Z|[+-]\d\d:?\d\d/gi,wo=/Z|[+-]\d\d(?::?\d\d)?/gi,xo=/[+-]?\d+(\.\d{1,3})?/,So=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Oo={},Do={},To=0,Co=1,Eo=2,Mo=3,Io=4,Po=5;V("Y",0,0,function(){var e=this.year();return 9999>=e?""+e:"+"+e;}),V(0,["YY",2],0,function(){return this.year()%100;}),V(0,["YYYY",4],0,"year"),V(0,["YYYYY",5],0,"year"),V(0,["YYYYYY",6,!0],0,"year"),H("year","y"),W("year",1),K("Y",vo),K("YY",ho,lo),K("YYYY",fo,uo),K("YYYYY",bo,po),K("YYYYYY",bo,po),ee(["YYYYY","YYYYYY"],To),ee("YYYY",function(e,t){t[To]=2===e.length?l.parseTwoDigitYear(e):M(e);}),ee("YY",function(e,t){t[To]=l.parseTwoDigitYear(e);}),ee("Y",function(e,t){t[To]=parseInt(e,10);}),l.parseTwoDigitYear=function(e){return M(e)+(68<M(e)?1900:2e3);};var Fo=ae("FullYear",!0),Yo;Yo=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return -1;},V("M",["MM",2],"Mo",function(){return this.month()+1;}),V("MMM",0,0,function(e){return this.localeData().monthsShort(this,e);}),V("MMMM",0,0,function(e){return this.localeData().months(this,e);}),H("month","M"),W("month",8),K("M",ho),K("MM",ho,lo),K("MMM",function(e,t){return t.monthsShortRegex(e);}),K("MMMM",function(e,t){return t.monthsRegex(e);}),ee(["M","MM"],function(e,t){t[Co]=M(e)-1;}),ee(["MMM","MMMM"],function(e,t,o,n){var i=o._locale.monthsParse(e,n,o._strict);null==i?x(o).invalidMonth=e:t[Co]=i;});var zo=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,No=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];V("w",["ww",2],"wo","week"),V("W",["WW",2],"Wo","isoWeek"),H("week","w"),H("isoWeek","W"),W("week",5),W("isoWeek",5),K("w",ho),K("ww",ho,lo),K("W",ho),K("WW",ho,lo),te(["w","ww","W","WW"],function(e,t,o,n){t[n.substr(0,1)]=M(e);});V("d",0,"do","day"),V("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e);}),V("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e);}),V("dddd",0,0,function(e){return this.localeData().weekdays(this,e);}),V("e",0,0,"weekday"),V("E",0,0,"isoWeekday"),H("day","d"),H("weekday","e"),H("isoWeekday","E"),W("day",11),W("weekday",11),W("isoWeekday",11),K("d",ho),K("e",ho),K("E",ho),K("dd",function(e,t){return t.weekdaysMinRegex(e);}),K("ddd",function(e,t){return t.weekdaysShortRegex(e);}),K("dddd",function(e,t){return t.weekdaysRegex(e);}),te(["dd","ddd","dddd"],function(e,t,o,n){var i=o._locale.weekdaysParse(e,n,o._strict);null==i?x(o).invalidWeekday=e:t.d=i;}),te(["d","e","E"],function(e,t,o,n){t[n]=M(e);});var Ro=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];V("H",["HH",2],0,"hour"),V("h",["hh",2],0,Ce),V("k",["kk",2],0,function(){return this.hours()||24;}),V("hmm",0,0,function(){return ""+Ce.apply(this)+U(this.minutes(),2);}),V("hmmss",0,0,function(){return ""+Ce.apply(this)+U(this.minutes(),2)+U(this.seconds(),2);}),V("Hmm",0,0,function(){return ""+this.hours()+U(this.minutes(),2);}),V("Hmmss",0,0,function(){return ""+this.hours()+U(this.minutes(),2)+U(this.seconds(),2);}),Ee("a",!0),Ee("A",!1),H("hour","h"),W("hour",13),K("a",Me),K("A",Me),K("H",ho),K("h",ho),K("k",ho),K("HH",ho,lo),K("hh",ho,lo),K("kk",ho,lo),K("hmm",mo),K("hmmss",go),K("Hmm",mo),K("Hmmss",go),ee(["H","HH"],Mo),ee(["k","kk"],function(e,t){var o=M(e);t[Mo]=24===o?0:o;}),ee(["a","A"],function(e,t,o){o._isPm=o._locale.isPM(e),o._meridiem=e;}),ee(["h","hh"],function(e,t,o){t[Mo]=M(e),x(o).bigHour=!0;}),ee("hmm",function(e,t,o){var n=e.length-2;t[Mo]=M(e.substr(0,n)),t[Io]=M(e.substr(n)),x(o).bigHour=!0;}),ee("hmmss",function(e,t,o){var n=e.length-4,i=e.length-2;t[Mo]=M(e.substr(0,n)),t[Io]=M(e.substr(n,2)),t[Po]=M(e.substr(i)),x(o).bigHour=!0;}),ee("Hmm",function(e,t){var o=e.length-2;t[Mo]=M(e.substr(0,o)),t[Io]=M(e.substr(o));}),ee("Hmmss",function(e,t){var o=e.length-4,n=e.length-2;t[Mo]=M(e.substr(0,o)),t[Io]=M(e.substr(o,2)),t[Po]=M(e.substr(n));});var Bo=/[ap]\.?m?\.?/i,Ho=ae("Hours",!0),Lo={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:eo,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:No,week:{dow:0,doy:6},weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekdaysShort:Ro,meridiemParse:Bo},Ao={},Wo={},jo=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Uo=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Vo=/Z|[+-]\d\d(?::?\d\d)?/,Go=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],qo=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Zo=/^\/?Date\((\-?\d+)/i,Xo=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,Ko={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480},Qo;l.createFromInputFallback=F("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""));}),l.ISO_8601=function(){},l.RFC_2822=function(){};var $o=F("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=at.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:O();}),Jo=F("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=at.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:O();}),en=["year","quarter","month","week","day","hour","minute","second","millisecond"];ut("Z",":"),ut("ZZ",""),K("Z",wo),K("ZZ",wo),ee(["Z","ZZ"],function(e,t,o){o._useUTC=!0,o._tzm=pt(wo,e);});var tn=/([\+\-]|\d\d)/gi;l.updateOffset=function(){};var on=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,nn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;ft.fn=rt.prototype,ft.invalid=function(){return ft(NaN);};var an=kt(1,"add"),dn=kt(-1,"subtract");l.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",l.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var sn=F("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e);});V(0,["gg",2],0,function(){return this.weekYear()%100;}),V(0,["GG",2],0,function(){return this.isoWeekYear()%100;}),Et("gggg","weekYear"),Et("ggggg","weekYear"),Et("GGGG","isoWeekYear"),Et("GGGGG","isoWeekYear"),H("weekYear","gg"),H("isoWeekYear","GG"),W("weekYear",1),W("isoWeekYear",1),K("G",vo),K("g",vo),K("GG",ho,lo),K("gg",ho,lo),K("GGGG",fo,uo),K("gggg",fo,uo),K("GGGGG",bo,po),K("ggggg",bo,po),te(["gggg","ggggg","GGGG","GGGGG"],function(e,t,o,n){t[n.substr(0,2)]=M(e);}),te(["gg","GG"],function(e,t,o,n){t[n]=l.parseTwoDigitYear(e);}),V("Q",0,"Qo","quarter"),H("quarter","Q"),W("quarter",7),K("Q",ro),ee("Q",function(e,t){t[Co]=3*(M(e)-1);}),V("D",["DD",2],"Do","date"),H("date","D"),W("date",9),K("D",ho),K("DD",ho,lo),K("Do",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient;}),ee(["D","DD"],Eo),ee("Do",function(e,t){t[Eo]=M(e.match(ho)[0]);});var rn=ae("Date",!0);V("DDD",["DDDD",3],"DDDo","dayOfYear"),H("dayOfYear","DDD"),W("dayOfYear",4),K("DDD",yo),K("DDDD",co),ee(["DDD","DDDD"],function(e,t,o){o._dayOfYear=M(e);}),V("m",["mm",2],0,"minute"),H("minute","m"),W("minute",14),K("m",ho),K("mm",ho,lo),ee(["m","mm"],Io);var ln=ae("Minutes",!1);V("s",["ss",2],0,"second"),H("second","s"),W("second",15),K("s",ho),K("ss",ho,lo),ee(["s","ss"],Po);var cn=ae("Seconds",!1);V("S",0,0,function(){return ~~(this.millisecond()/100);}),V(0,["SS",2],0,function(){return ~~(this.millisecond()/10);}),V(0,["SSS",3],0,"millisecond"),V(0,["SSSS",4],0,function(){return 10*this.millisecond();}),V(0,["SSSSS",5],0,function(){return 100*this.millisecond();}),V(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond();}),V(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond();}),V(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond();}),V(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond();}),H("millisecond","ms"),W("millisecond",16),K("S",yo,ro),K("SS",yo,lo),K("SSS",yo,co);var un;for(un="SSSS";9>=un.length;un+="S")K(un,_o);for(un="S";9>=un.length;un+="S")ee(un,Pt);var pn=ae("Milliseconds",!1);V("z",0,0,"zoneAbbr"),V("zz",0,0,"zoneName");var hn=T.prototype;hn.add=an,hn.calendar=function(e,t){var o=e||at(),n=ht(o,this).startOf("day"),i=l.calendarFormat(this,n)||"sameElse",a=t&&(z(t[i])?t[i].call(this,o):t[i]);return this.format(a||this.localeData().calendar(i,this,at(o)));},hn.clone=function(){return new T(this);},hn.diff=function(e,t,o){var n,i,a;return this.isValid()?(n=ht(e,this),!n.isValid())?NaN:(i=6e4*(n.utcOffset()-this.utcOffset()),t=L(t),(a="year"===t?xt(this,n)/12:"month"===t?xt(this,n):"quarter"===t?xt(this,n)/3:"second"===t?(this-n)/1e3:"minute"===t?(this-n)/6e4:"hour"===t?(this-n)/36e5:"day"===t?(this-n-i)/864e5:"week"===t?(this-n-i)/6048e5:this-n,o?a:E(a))):NaN;},hn.endOf=function(e){var t;if(e=L(e),void 0===e||"millisecond"===e||!this.isValid())return this;var o=this._isUTC?Ct:Tt;return "year"===e?t=o(this.year()+1,0,1)-1:"quarter"===e?t=o(this.year(),this.month()-this.month()%3+3,1)-1:"month"===e?t=o(this.year(),this.month()+1,1)-1:"week"===e?t=o(this.year(),this.month(),this.date()-this.weekday()+7)-1:"isoWeek"===e?t=o(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1:"day"===e||"date"===e?t=o(this.year(),this.month(),this.date()+1)-1:"hour"===e?(t=this._d.valueOf(),t+=3600000-Dt(t+(this._isUTC?0:60000*this.utcOffset()),3600000)-1):"minute"===e?(t=this._d.valueOf(),t+=60000-Dt(t,60000)-1):"second"===e?(t=this._d.valueOf(),t+=1000-Dt(t,1000)-1):void 0,this._d.setTime(t),l.updateOffset(this,!0),this;},hn.format=function(e){e||(e=this.isUtc()?l.defaultFormatUtc:l.defaultFormat);var t=Z(this,e);return this.localeData().postformat(t);},hn.from=function(e,t){return this.isValid()&&(C(e)&&e.isValid()||at(e).isValid())?ft({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate();},hn.fromNow=function(e){return this.from(at(),e);},hn.to=function(e,t){return this.isValid()&&(C(e)&&e.isValid()||at(e).isValid())?ft({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate();},hn.toNow=function(e){return this.to(at(),e);},hn.get=function(e){return e=L(e),z(this[e])?this[e]():this;},hn.invalidAt=function(){return x(this).overflow;},hn.isAfter=function(e,t){var o=C(e)?e:at(e);return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()>o.valueOf():o.valueOf()<this.clone().startOf(t).valueOf());},hn.isBefore=function(e,t){var o=C(e)?e:at(e);return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()<o.valueOf():this.clone().endOf(t).valueOf()<o.valueOf());},hn.isBetween=function(e,t,o,n){var i=C(e)?e:at(e),a=C(t)?t:at(t);return !!(this.isValid()&&i.isValid()&&a.isValid())&&(n=n||"()",("("===n[0]?this.isAfter(i,o):!this.isBefore(i,o))&&(")"===n[1]?this.isBefore(a,o):!this.isAfter(a,o)));},hn.isSame=function(e,t){var o=C(e)?e:at(e),n;return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()===o.valueOf():(n=o.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()));},hn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t);},hn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t);},hn.isValid=function(){return S(this);},hn.lang=sn,hn.locale=St,hn.localeData=Ot,hn.max=Jo,hn.min=$o,hn.parsingFlags=function(){return v({},x(this));},hn.set=re,hn.startOf=function(e){var t;if(e=L(e),void 0===e||"millisecond"===e||!this.isValid())return this;var o=this._isUTC?Ct:Tt;return "year"===e?t=o(this.year(),0,1):"quarter"===e?t=o(this.year(),this.month()-this.month()%3,1):"month"===e?t=o(this.year(),this.month(),1):"week"===e?t=o(this.year(),this.month(),this.date()-this.weekday()):"isoWeek"===e?t=o(this.year(),this.month(),this.date()-(this.isoWeekday()-1)):"day"===e||"date"===e?t=o(this.year(),this.month(),this.date()):"hour"===e?(t=this._d.valueOf(),t-=Dt(t+(this._isUTC?0:60000*this.utcOffset()),3600000)):"minute"===e?(t=this._d.valueOf(),t-=Dt(t,60000)):"second"===e?(t=this._d.valueOf(),t-=Dt(t,1000)):void 0,this._d.setTime(t),l.updateOffset(this,!0),this;},hn.subtract=dn,hn.toArray=function(){var e=this;return [e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()];},hn.toObject=function(){var e=this;return {years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()};},hn.toDate=function(){return new Date(this.valueOf());},hn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,o=t?this.clone().utc():this;return 0>o.year()||9999<o.year()?Z(o,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):z(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+1e3*(60*this.utcOffset())).toISOString().replace("Z",Z(o,"Z")):Z(o,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ");},hn.inspect=function(){if(!this.isValid())return "moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var o="["+e+"(\"]",n=0<=this.year()&&9999>=this.year()?"YYYY":"YYYYYY",i=t+"[\")]";return this.format(o+n+"-MM-DD[T]HH:mm:ss.SSS"+i);},hn.toJSON=function(){return this.isValid()?this.toISOString():null;},hn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");},hn.unix=function(){return s(this.valueOf()/1e3);},hn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0);},hn.creationData=function(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};},hn.year=Fo,hn.isLeapYear=function(){return ie(this.year());},hn.weekYear=function(e){return Mt.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);},hn.isoWeekYear=function(e){return Mt.call(this,e,this.isoWeek(),this.isoWeekday(),1,4);},hn.quarter=hn.quarters=function(e){return null==e?r((this.month()+1)/3):this.month(3*(e-1)+this.month()%3);},hn.month=me,hn.daysInMonth=function(){return ce(this.year(),this.month());},hn.week=hn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d");},hn.isoWeek=hn.isoWeeks=function(e){var t=ve(this,1,4).week;return null==e?t:this.add(7*(e-t),"d");},hn.weeksInYear=function(){var e=this.localeData()._week;return ke(this.year(),e.dow,e.doy);},hn.isoWeeksInYear=function(){return ke(this.year(),1,4);},hn.date=rn,hn.day=hn.days=function(e){if(!this.isValid())return null==e?NaN:this;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null==e?t:(e=we(e,this.localeData()),this.add(e-t,"d"));},hn.weekday=function(e){if(!this.isValid())return null==e?NaN:this;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d");},hn.isoWeekday=function(e){if(!this.isValid())return null==e?NaN:this;if(null!=e){var t=xe(e,this.localeData());return this.day(this.day()%7?t:t-7);}return this.day()||7;},hn.dayOfYear=function(e){var o=t((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?o:this.add(e-o,"d");},hn.hour=hn.hours=Ho,hn.minute=hn.minutes=ln,hn.second=hn.seconds=cn,hn.millisecond=hn.milliseconds=pn,hn.utcOffset=function(e,t,o){var n=this._offset||0,i;if(!this.isValid())return null==e?NaN:this;if(null!=e){if("string"!=typeof e)16>a(e)&&!o&&(e*=60);else if(e=pt(wo,e),null===e)return this;return !this._isUTC&&t&&(i=mt(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,"m"),n!==e&&(!t||this._changeInProgress?wt(this,ft(e-n,"m"),1,!1):!this._changeInProgress&&(this._changeInProgress=!0,l.updateOffset(this,!0),this._changeInProgress=null)),this;}return this._isUTC?n:mt(this);},hn.utc=function(e){return this.utcOffset(0,e);},hn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(mt(this),"m")),this;},hn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=pt(ko,this._i);null==e?this.utcOffset(0,!0):this.utcOffset(e);}return this;},hn.hasAlignedHourOffset=function(e){return !!this.isValid()&&(e=e?at(e).utcOffset():0,0==(this.utcOffset()-e)%60);},hn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();},hn.isLocal=function(){return !!this.isValid()&&!this._isUTC;},hn.isUtcOffset=function(){return !!this.isValid()&&this._isUTC;},hn.isUtc=yt,hn.isUTC=yt,hn.zoneAbbr=function(){return this._isUTC?"UTC":"";},hn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":"";},hn.dates=F("dates accessor is deprecated. Use date instead.",rn),hn.months=F("months accessor is deprecated. Use month instead",me),hn.years=F("years accessor is deprecated. Use year instead",Fo),hn.zone=F("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",function(e,t){return null==e?-this.utcOffset():("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this);}),hn.isDSTShifted=F("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",gt);var mn=B.prototype;mn.calendar=function(e,t,o){var n=this._calendar[e]||this._calendar.sameElse;return z(n)?n.call(t,o):n;},mn.longDateFormat=function(e){var t=this._longDateFormat[e],o=this._longDateFormat[e.toUpperCase()];return t||!o?t:(this._longDateFormat[e]=o.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1);}),this._longDateFormat[e]);},mn.invalidDate=function(){return this._invalidDate;},mn.ordinal=function(e){return this._ordinal.replace("%d",e);},mn.preparse=Ft,mn.postformat=Ft,mn.relativeTime=function(e,t,o,n){var i=this._relativeTime[o];return z(i)?i(e,t,o,n):i.replace(/%d/i,e);},mn.pastFuture=function(e,t){var o=this._relativeTime[0<e?"future":"past"];return z(o)?o(t):o.replace(/%s/i,t);},mn.set=N,mn.months=function(e,t){return e?u(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||zo).test(t)?"format":"standalone"][e.month()]:u(this._months)?this._months:this._months.standalone;},mn.monthsShort=function(e,t){return e?u(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[zo.test(t)?"format":"standalone"][e.month()]:u(this._monthsShort)?this._monthsShort:this._monthsShort.standalone;},mn.monthsParse=pe,mn.monthsRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||ge.call(this),e?this._monthsStrictRegex:this._monthsRegex):(_(this,"_monthsRegex")||(this._monthsRegex=So),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex);},mn.monthsShortRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||ge.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(_(this,"_monthsShortRegex")||(this._monthsShortRegex=So),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex);},mn.week=function(e){return ve(e,this._week.dow,this._week.doy).week;},mn.firstDayOfYear=function(){return this._week.doy;},mn.firstDayOfWeek=function(){return this._week.dow;},mn.weekdays=function(e,t){var o=u(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return !0===e?Se(o,this._week.dow):e?o[e.day()]:o;},mn.weekdaysMin=function(e){return !0===e?Se(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin;},mn.weekdaysShort=function(e){return !0===e?Se(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort;},mn.weekdaysParse=De,mn.weekdaysRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(_(this,"_weekdaysRegex")||(this._weekdaysRegex=So),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex);},mn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(_(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=So),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex);},mn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(_(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=So),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex);},mn.isPM=function(e){return "p"===(e+"").toLowerCase().charAt(0);},mn.meridiem=function(e,t,o){return 11<e?o?"pm":"PM":o?"am":"AM";},Ye("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10,o=1===M(e%100/10)?"th":1==t?"st":2==t?"nd":3==t?"rd":"th";return e+o;}}),l.lang=F("moment.lang is deprecated. Use moment.locale instead.",Ye),l.langData=F("moment.langData is deprecated. Use moment.localeData instead.",Ne);var gn=a,yn=At("ms"),fn=At("s"),bn=At("m"),_n=At("h"),vn=At("d"),kn=At("w"),wn=At("M"),xn=At("Q"),Sn=At("y"),On=Wt("milliseconds"),Dn=Wt("seconds"),Tn=Wt("minutes"),Cn=Wt("hours"),En=Wt("days"),Mn=Wt("months"),In=Wt("years"),Pn=t,Fn={ss:44,s:45,m:45,h:22,d:26,M:11},Yn=a,zn=rt.prototype;return zn.isValid=function(){return this._isValid;},zn.abs=function(){var e=this._data;return this._milliseconds=gn(this._milliseconds),this._days=gn(this._days),this._months=gn(this._months),e.milliseconds=gn(e.milliseconds),e.seconds=gn(e.seconds),e.minutes=gn(e.minutes),e.hours=gn(e.hours),e.months=gn(e.months),e.years=gn(e.years),this;},zn.add=function(e,t){return Rt(this,e,t,1);},zn.subtract=function(e,t){return Rt(this,e,t,-1);},zn.as=function(e){if(!this.isValid())return NaN;var o=this._milliseconds,n,i;if(e=L(e),"month"===e||"quarter"===e||"year"===e)switch(n=this._days+o/864e5,i=this._months+Ht(n),e){case"month":return i;case"quarter":return i/3;case"year":return i/12;}else switch(n=this._days+t(Lt(this._months)),e){case"week":return n/7+o/6048e5;case"day":return n+o/864e5;case"hour":return 24*n+o/36e5;case"minute":return 1440*n+o/6e4;case"second":return 86400*n+o/1e3;case"millisecond":return s(864e5*n)+o;default:throw new Error("Unknown unit "+e);}},zn.asMilliseconds=yn,zn.asSeconds=fn,zn.asMinutes=bn,zn.asHours=_n,zn.asDays=vn,zn.asWeeks=kn,zn.asMonths=wn,zn.asQuarters=xn,zn.asYears=Sn,zn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+2592e6*(this._months%12)+31536e6*M(this._months/12):NaN;},zn._bubble=function(){var e=this._milliseconds,t=this._days,o=this._months,n=this._data,i,a,d,s,r;return 0<=e&&0<=t&&0<=o||0>=e&&0>=t&&0>=o||(e+=864e5*Bt(Lt(o)+t),t=0,o=0),n.milliseconds=e%1e3,i=E(e/1e3),n.seconds=i%60,a=E(i/60),n.minutes=a%60,d=E(a/60),n.hours=d%24,t+=E(d/24),r=E(Ht(t)),o+=r,t-=Bt(Lt(r)),s=E(o/12),o%=12,n.days=t,n.months=o,n.years=s,this;},zn.clone=function(){return ft(this);},zn.get=function(e){return e=L(e),this.isValid()?this[e+"s"]():NaN;},zn.milliseconds=On,zn.seconds=Dn,zn.minutes=Tn,zn.hours=Cn,zn.days=En,zn.weeks=function(){return E(this.days()/7);},zn.months=Mn,zn.years=In,zn.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),o=Ut(this,!e,t);return e&&(o=t.pastFuture(+this,o)),t.postformat(o);},zn.toISOString=qt,zn.toString=qt,zn.toJSON=qt,zn.locale=St,zn.localeData=Ot,zn.toIsoString=F("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",qt),zn.lang=sn,V("X",0,0,"unix"),V("x",0,0,"valueOf"),K("x",vo),K("X",xo),ee("X",function(e,t,o){o._d=new Date(1e3*parseFloat(e,10));}),ee("x",function(e,t,o){o._d=new Date(M(e));}),l.version="2.24.0",function(e){Zt=e;}(at),l.fn=hn,l.min=function(){var e=[].slice.call(arguments,0);return dt("isBefore",e);},l.max=function(){var e=[].slice.call(arguments,0);return dt("isAfter",e);},l.now=function(){return Date.now?Date.now():+new Date();},l.utc=k,l.unix=function(e){return at(1e3*e);},l.months=function(e,t){return zt(e,t,"months");},l.isDate=y,l.locale=Ye,l.invalid=O,l.duration=ft,l.isMoment=C,l.weekdays=function(e,t,o){return Nt(e,t,o,"weekdays");},l.parseZone=function(){return at.apply(null,arguments).parseZone();},l.localeData=Ne,l.isDuration=lt,l.monthsShort=function(e,t){return zt(e,t,"monthsShort");},l.weekdaysMin=function(e,t,o){return Nt(e,t,o,"weekdaysMin");},l.defineLocale=ze,l.updateLocale=function(e,t){if(null!=t){var o=Lo,n,i;i=Fe(e),null!=i&&(o=i._config),t=R(o,t),n=new B(t),n.parentLocale=Ao[e],Ao[e]=n,Ye(e);}else null!=Ao[e]&&(null==Ao[e].parentLocale?null!=Ao[e]&&delete Ao[e]:Ao[e]=Ao[e].parentLocale);return Ao[e];},l.locales=Re,l.weekdaysShort=function(e,t,o){return Nt(e,t,o,"weekdaysShort");},l.normalizeUnits=L,l.relativeTimeRounding=Vt,l.relativeTimeThreshold=function(e,t){return void 0!==Fn[e]&&(void 0===t?Fn[e]:(Fn[e]=t,"s"===e&&(Fn.ss=t-1),!0));},l.calendarFormat=function(e,t){var o=e.diff(t,"days",!0);return -6>o?"sameElse":-1>o?"lastWeek":0>o?"lastDay":1>o?"sameDay":2>o?"nextDay":7>o?"nextWeek":"sameElse";},l.prototype=hn,l.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},l;});}),byteToHex$2$1$1=[],i$2$1$1=0;256>i$2$1$1;i$2$1$1++)byteToHex$2$1$1[i$2$1$1]=(i$2$1$1+256).toString(16).substr(1);for(var random$1$1$1=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e;};}var t=Array(16);return function(){for(var e=0,o;16>e;e++)0==(3&e)&&(o=4294967296*Math.random()),t[e]=255&o>>>((3&e)<<3);return t;};}(),byteToHex$1$1$1$1=[],i$1$1$1$1=0;256>i$1$1$1$1;i$1$1$1$1++)byteToHex$1$1$1$1[i$1$1$1$1]=(i$1$1$1$1+256).toString(16).substr(1);var seedBytes$1$1$1=random$1$1$1(),defaultNodeId$1$1$1=[1|seedBytes$1$1$1[0],seedBytes$1$1$1[1],seedBytes$1$1$1[2],seedBytes$1$1$1[3],seedBytes$1$1$1[4],seedBytes$1$1$1[5]],defaultClockseq$1$1$1=16383&(seedBytes$1$1$1[6]<<8|seedBytes$1$1$1[7]),ASPDateRegex$1$1=/^\/?Date\((-?\d+)/i;function isNumber$1$1(e){return e instanceof Number||"number"==typeof e;}function isString$1$1(e){return e instanceof String||"string"==typeof e;}function isMoment$1$1(e){return moment$1$1.isMoment(e);}function convert$1$1(e,t){var o;if(void 0!==e){if(null===e)return null;if(!t)return e;if("string"!=typeof t&&!(t instanceof String))throw new Error("Type must be a string");switch(t){case"boolean":case"Boolean":return !!e;case"number":case"Number":return isString$1$1(e)&&!isNaN(Date.parse(e))?moment$1$1(e).valueOf():+e.valueOf();case"string":case"String":return e+"";case"Date":if(isNumber$1$1(e))return new Date(e);if(e instanceof Date)return new Date(e.valueOf());if(isMoment$1$1(e))return new Date(e.valueOf());if(isString$1$1(e))return o=ASPDateRegex$1$1.exec(e),o?new Date(+o[1]):moment$1$1(new Date(e)).toDate();throw new Error("Cannot convert object of type "+getType$1$1(e)+" to type Date");case"Moment":if(isNumber$1$1(e))return moment$1$1(e);if(e instanceof Date)return moment$1$1(e.valueOf());if(isMoment$1$1(e))return moment$1$1(e);if(isString$1$1(e))return o=ASPDateRegex$1$1.exec(e),o?moment$1$1(+o[1]):moment$1$1(e);throw new Error("Cannot convert object of type "+getType$1$1(e)+" to type Date");case"ISODate":if(isNumber$1$1(e))return new Date(e);if(e instanceof Date)return e.toISOString();if(isMoment$1$1(e))return e.toDate().toISOString();if(isString$1$1(e))return o=ASPDateRegex$1$1.exec(e),o?new Date(+o[1]).toISOString():moment$1$1(e).format();throw new Error("Cannot convert object of type "+getType$1$1(e)+" to type ISODate");case"ASPDate":if(isNumber$1$1(e))return "/Date("+e+")/";if(e instanceof Date)return "/Date("+e.valueOf()+")/";if(isString$1$1(e)){o=ASPDateRegex$1$1.exec(e);var n;return n=o?new Date(+o[1]).valueOf():new Date(e).valueOf(),"/Date("+n+")/";}throw new Error("Cannot convert object of type "+getType$1$1(e)+" to type ASPDate");default:throw new Error("Unknown type ".concat(t));}}}function getType$1$1(e){var t=_typeof$1(e);return "object"===t?null===e?"null":e instanceof Boolean?"Boolean":e instanceof Number?"Number":e instanceof String?"String":Array.isArray(e)?"Array":e instanceof Date?"Date":"Object":"number"===t?"Number":"boolean"===t?"Boolean":"string"===t?"String":void 0===t?"undefined":t;}function isId$1(e){return "string"==typeof e||"number"==typeof e;}var Queue$1=function(){function e(t){classCallCheck$1(this,e),this._queue=[],this._timeout=null,this._extended=null,this.delay=null,this.max=1/0,this.setOptions(t);}return createClass$1(e,[{key:"setOptions",value:function(e){e&&"undefined"!=typeof e.delay&&(this.delay=e.delay),e&&"undefined"!=typeof e.max&&(this.max=e.max),this._flushIfNeeded();}},{key:"destroy",value:function(){if(this.flush(),this._extended){for(var e=this._extended.object,t=this._extended.methods,o=0,n;o<t.length;o++)n=t[o],n.original?e[n.name]=n.original:delete e[n.name];this._extended=null;}}},{key:"replace",value:function(e,t){var o=this,n=e[t];if(!n)throw new Error("Method "+t+" undefined");e[t]=function(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];o.queue({args:t,fn:n,context:this});};}},{key:"queue",value:function(e){"function"==typeof e?this._queue.push({fn:e}):this._queue.push(e),this._flushIfNeeded();}},{key:"_flushIfNeeded",value:function(){var e=this;this._queue.length>this.max&&this.flush(),null!=this._timeout&&(clearTimeout(this._timeout),this._timeout=null),0<this.queue.length&&"number"==typeof this.delay&&(this._timeout=setTimeout(function(){e.flush();},this.delay));}},{key:"flush",value:function(){this._queue.splice(0).forEach(function(e){e.fn.apply(e.context||e.fn,e.args||[]);});}}],[{key:"extend",value:function(t,o){var n=new e(o);if(void 0!==t.flush)throw new Error("Target object already has a property flush");t.flush=function(){n.flush();};var a=[{name:"flush",original:void 0}];if(o&&o.replace)for(var d=0,s;d<o.replace.length;d++)s=o.replace[d],a.push({name:s,original:t[s]}),n.replace(t,s);return n._extended={object:t,methods:a},n;}}]),e;}();function _arrayWithoutHoles$1$1(e){if(Array.isArray(e)){for(var t=0,o=Array(e.length);t<e.length;t++)o[t]=e[t];return o;}}var arrayWithoutHoles$1$1=_arrayWithoutHoles$1$1;function _iterableToArray$1$1(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e);}var iterableToArray$1$1=_iterableToArray$1$1;function _nonIterableSpread$1$1(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var nonIterableSpread$1$1=_nonIterableSpread$1$1;function _toConsumableArray$1$1(e){return arrayWithoutHoles$1$1(e)||iterableToArray$1$1(e)||nonIterableSpread$1$1();}var toConsumableArray$1$1=_toConsumableArray$1$1,DataSetPart$1=function(){function e(){classCallCheck$1(this,e),this._subscribers={"*":[],add:[],remove:[],update:[]},this.subscribe=e.prototype.on,this.unsubscribe=e.prototype.off;}return createClass$1(e,[{key:"_trigger",value:function(e,t,o){if("*"===e)throw new Error("Cannot trigger event *");for(var n=[].concat(toConsumableArray$1$1(this._subscribers[e]),toConsumableArray$1$1(this._subscribers["*"])),a=0,d=n.length,s;a<d;a++)s=n[a],s.callback&&s.callback(e,t,null==o?null:o);}},{key:"on",value:function(e,t){this._subscribers[e].push({callback:t});}},{key:"off",value:function(e,t){this._subscribers[e]=this._subscribers[e].filter(function(e){return e.callback!==t;});}}]),e;}();function ownKeys$1$1(e,t){var o=Object.keys(e);return Object.getOwnPropertySymbols&&o.push.apply(o,Object.getOwnPropertySymbols(e)),t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable;})),o;}function _objectSpread$1$1(e){for(var t=1,o;t<arguments.length;t++)o=null==arguments[t]?{}:arguments[t],t%2?ownKeys$1$1(o,!0).forEach(function(t){defineProperty$1$1(e,t,o[t]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):ownKeys$1$1(o).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t));});return e;}var DataSet$1=function(e){function t(e,o){var n;if(classCallCheck$1(this,t),n=possibleConstructorReturn$1(this,getPrototypeOf$1(t).call(this)),e&&!Array.isArray(e)&&(o=e,e=[]),n._options=o||{},n._data=Object.create({}),n.length=0,n._idProp=n._options.fieldId||"id",n._type={},n._options.type)for(var a=Object.keys(n._options.type),d=0,s=a.length;d<s;d++){var r=a[d],l=n._options.type[r];n._type[r]="Date"==l||"ISODate"==l||"ASPDate"==l?"Date":l;}return e&&e.length&&n.add(e),n.setOptions(o),n;}return inherits$1(t,e),createClass$1(t,[{key:"setOptions",value:function(e){e&&void 0!==e.queue&&(!1===e.queue?this._queue&&(this._queue.destroy(),delete this._queue):(!this._queue&&(this._queue=Queue$1.extend(this,{replace:["add","update","remove"]})),e.queue&&"object"===_typeof_1$1$1(e.queue)&&this._queue.setOptions(e.queue)));}},{key:"add",value:function(e,t){var o=[],n;if(Array.isArray(e))for(var a=0,d=e.length;a<d;a++)n=this._addItem(e[a]),o.push(n);else if(e&&"object"===_typeof_1$1$1(e))n=this._addItem(e),o.push(n);else throw new Error("Unknown dataType");return o.length&&this._trigger("add",{items:o},t),o;}},{key:"update",value:function(e,t){var o=this,n=[],a=[],d=[],s=[],r=this._idProp,l=function(e){var t=e[r];if(null!=t&&o._data[t]){var i=e,l=Object.assign({},o._data[t]),c=o._updateItem(i);a.push(c),s.push(i),d.push(l);}else{var u=o._addItem(e);n.push(u);}};if(Array.isArray(e))for(var c=0,u=e.length;c<u;c++)e[c]&&"object"===_typeof_1$1$1(e[c])?l(e[c]):console.warn("Ignoring input item, which is not an object at index "+c);else if(e&&"object"===_typeof_1$1$1(e))l(e);else throw new Error("Unknown dataType");if(n.length&&this._trigger("add",{items:n},t),a.length){this._trigger("update",{items:a,oldData:d,data:s},t);}return n.concat(a);}},{key:"get",value:function(e,t){var o=void 0,n=void 0,a=void 0;isId$1(e)?(o=e,a=t):Array.isArray(e)?(n=e,a=t):a=e;var d=a&&"Object"===a.returnType?"Object":"Array",s=a&&a.type||this._options.type,r=a&&a.filter,l=[],c=null,u=null,p=null;if(null!=o)c=this._getItem(o,s),c&&r&&!r(c)&&(c=null);else if(null!=n)for(var h=0,m=n.length;h<m;h++)c=this._getItem(n[h],s),null!=c&&(!r||r(c))&&l.push(c);else{u=Object.keys(this._data);for(var g=0,y=u.length;g<y;g++)p=u[g],c=this._getItem(p,s),null!=c&&(!r||r(c))&&l.push(c);}if(a&&a.order&&null==o&&this._sort(l,a.order),a&&a.fields){var f=a.fields;if(null!=o&&null!=c)c=this._filterFields(c,f);else for(var b=0,_=l.length;b<_;b++)l[b]=this._filterFields(l[b],f);}if("Object"==d){for(var v={},k=0,w=l.length;k<w;k++){var x=l[k],S=x[this._idProp];v[S]=x;}return v;}return null==o?l:c;}},{key:"getIds",value:function(e){var t=this._data,o=e&&e.filter,n=e&&e.order,a=e&&e.type||this._options.type,d=Object.keys(t),s=[],r,l;if(o){if(n){l=[];for(var c=0,u=d.length,p;c<u;c++)p=d[c],r=this._getItem(p,a),o(r)&&l.push(r);this._sort(l,n);for(var h=0,m=l.length;h<m;h++)s.push(l[h][this._idProp]);}else for(var g=0,y=d.length,f;g<y;g++)f=d[g],r=this._getItem(f,a),o(r)&&s.push(r[this._idProp]);}else if(n){l=[];for(var b=0,_=d.length,v;b<_;b++)v=d[b],l.push(t[v]);this._sort(l,n);for(var k=0,w=l.length;k<w;k++)s.push(l[k][this._idProp]);}else for(var x=0,S=d.length,O;x<S;x++)O=d[x],r=t[O],s.push(r[this._idProp]);return s;}},{key:"getDataSet",value:function(){return this;}},{key:"forEach",value:function(e,t){var o=t&&t.filter,n=t&&t.type||this._options.type,a=this._data,d=Object.keys(a);if(t&&t.order)for(var s=this.get(t),r=0,l=s.length;r<l;r++){var c=s[r],u=c[this._idProp];e(c,u);}else for(var p=0,h=d.length;p<h;p++){var m=d[p],g=this._getItem(m,n);(!o||o(g))&&e(g,m);}}},{key:"map",value:function(e,t){for(var o=t&&t.filter,n=t&&t.type||this._options.type,a=[],d=this._data,s=Object.keys(d),r=0,l=s.length;r<l;r++){var c=s[r],u=this._getItem(c,n);(!o||o(u))&&a.push(e(u,c));}return t&&t.order&&this._sort(a,t.order),a;}},{key:"_filterFields",value:function(e,t){return e?(Array.isArray(t)?t:Object.keys(t)).reduce(function(t,o){return t[o]=e[o],t;},{}):e;}},{key:"_sort",value:function(e,t){if("string"==typeof t){var o=t;e.sort(function(e,t){var n=e[o],i=t[o];return n>i?1:n<i?-1:0;});}else if("function"==typeof t)e.sort(t);else throw new TypeError("Order must be a function or a string");}},{key:"remove",value:function(e,t){for(var o=[],n=[],a=Array.isArray(e)?e:[e],d=0,s=a.length,r;d<s;d++)if(r=this._remove(a[d]),r){var l=r[this._idProp];null!=l&&(o.push(l),n.push(r));}return o.length&&this._trigger("remove",{items:o,oldData:n},t),o;}},{key:"_remove",value:function(e){var t;if(isId$1(e)?t=e:e&&"object"===_typeof_1$1$1(e)&&(t=e[this._idProp]),null!=t&&this._data[t]){var o=this._data[t];return delete this._data[t],--this.length,o;}return null;}},{key:"clear",value:function(e){for(var t=Object.keys(this._data),o=[],n=0,a=t.length;n<a;n++)o.push(this._data[t[n]]);return this._data={},this.length=0,this._trigger("remove",{items:t,oldData:o},e),t;}},{key:"max",value:function e(t){for(var o=this._data,n=Object.keys(o),e=null,a=null,d=0,s=n.length;d<s;d++){var r=n[d],l=o[r],c=l[t];null!=c&&(null==a||c>a)&&(e=l,a=c);}return e;}},{key:"min",value:function e(t){for(var o=this._data,n=Object.keys(o),e=null,a=null,d=0,s=n.length;d<s;d++){var r=n[d],l=o[r],c=l[t];null!=c&&(null==a||c<a)&&(e=l,a=c);}return e;}},{key:"distinct",value:function(e){for(var t=this._data,o=Object.keys(t),n=[],a=this._options.type&&this._options.type[e]||null,d=0,s=0,r=o.length;s<r;s++){for(var l=o[s],c=t[l],u=c[e],p=!1,h=0;h<d;h++)if(n[h]==u){p=!0;break;}p||void 0===u||(n[d]=u,d++);}if(a)for(var m=0,g=n.length;m<g;m++)n[m]=convert$1$1(n[m],a);return n;}},{key:"_addItem",value:function(e){var t=e[this._idProp];if(null==t)t=uuid4$1$1(),e[this._idProp]=t;else if(this._data[t])throw new Error("Cannot add item: item with id "+t+" already exists");for(var o={},n=Object.keys(e),a=0,d=n.length;a<d;a++){var s=n[a],r=this._type[s];o[s]=convert$1$1(e[s],r);}return this._data[t]=o,this.length++,t;}},{key:"_getItem",value:function(e,t){var o=this._data[e];if(!o)return null;var n=Object.keys(o),a;if(t){a={};for(var d=0,s=n.length;d<s;d++){var r=n[d],l=o[r];a[r]=convert$1$1(l,t[r]);}}else a=_objectSpread$1$1({},o);return null==a[this._idProp]&&(a[this._idProp]=o.id),a;}},{key:"_updateItem",value:function(e){var t=e[this._idProp];if(null==t)throw new Error("Cannot update item: item has no id (item: "+JSON.stringify(e)+")");var o=this._data[t];if(!o)throw new Error("Cannot update item: no item with id "+t+" found");for(var n=Object.keys(e),a=0,d=n.length;a<d;a++){var s=n[a],r=this._type[s];o[s]=convert$1$1(e[s],r);}return t;}}]),t;}(DataSetPart$1),DataView$1=function(e){function t(e,o){var n;return classCallCheck$1(this,t),n=possibleConstructorReturn$1(this,getPrototypeOf$1(t).call(this)),n.length=0,n._ids={},n._options=o||{},n.listener=n._onEvent.bind(assertThisInitialized$1(n)),n.setData(e),n;}return inherits$1(t,e),createClass$1(t,[{key:"setData",value:function(e){if(this._data){this._data.off&&this._data.off("*",this.listener);var t=this._data.getIds({filter:this._options.filter}),o=this._data.get(t);this._ids={},this.length=0,this._trigger("remove",{items:t,oldData:o});}if(null!=e){this._data=e;for(var n=this._data.getIds({filter:this._options.filter}),a=0,d=n.length,s;a<d;a++)s=n[a],this._ids[s]=!0;this.length=n.length,this._trigger("add",{items:n});}else this._data=new DataSet$1();this._data.on&&this._data.on("*",this.listener);}},{key:"refresh",value:function(){for(var e=this._data.getIds({filter:this._options.filter}),t=Object.keys(this._ids),o={},n=[],a=[],d=[],s=0,r=e.length,l;s<r;s++)l=e[s],o[l]=!0,this._ids[l]||(n.push(l),this._ids[l]=!0);for(var c=0,u=t.length;c<u;c++){var p=t[c],h=this._data.get(p);null==h?console.error("If you see this, report it please."):!o[p]&&(a.push(p),d.push(h),delete this._ids[p]);}this.length+=n.length-a.length,n.length&&this._trigger("add",{items:n}),a.length&&this._trigger("remove",{items:a,oldData:d});}},{key:"get",value:function(e,t){if(null==this._data)return null;var o=null,n;isId$1(e)||Array.isArray(e)?(o=e,n=t):n=e;var i=Object.assign({},this._options,n),a=this._options.filter,d=n&&n.filter;return a&&d&&(i.filter=function(e){return a(e)&&d(e);}),null==o?this._data.get(i):this._data.get(o,i);}},{key:"getIds",value:function(e){if(this._data.length){var t=this._options.filter,o=null==e?null:e.filter,n;return n=o?t?function(e){return t(e)&&o(e);}:o:t,this._data.getIds({filter:n,order:e&&e.order});}return [];}},{key:"forEach",value:function(e,t){if(this._data){var o=this._options.filter,n=t&&t.filter,i;i=n?o?function(e){return o(e)&&n(e);}:n:o,this._data.forEach(e,{filter:i,order:t&&t.order});}}},{key:"map",value:function(e,t){if(this._data){var o=this._options.filter,n=t&&t.filter,i;return i=n?o?function(e){return o(e)&&n(e);}:n:o,this._data.map(e,{filter:i,order:t&&t.order});}return [];}},{key:"getDataSet",value:function(){return this._data.getDataSet();}},{key:"_onEvent",value:function(e,t,o){if(t&&t.items&&this._data){var n=t.items,a=[],d=[],s=[],r=[],l=[],c=[];switch(e){case"add":for(var u=0,p=n.length;u<p;u++){var h=n[u],m=this.get(h);m&&(this._ids[h]=!0,a.push(h));}break;case"update":for(var g=0,y=n.length;g<y;g++){var f=n[g],b=this.get(f);b?this._ids[f]?(d.push(f),l.push(t.data[g]),r.push(t.oldData[g])):(this._ids[f]=!0,a.push(f)):this._ids[f]&&(delete this._ids[f],s.push(f),c.push(t.oldData[g]));}break;case"remove":for(var _=0,v=n.length,k;_<v;_++)k=n[_],this._ids[k]&&(delete this._ids[k],s.push(k),c.push(t.oldData[_]));}this.length+=a.length-s.length,a.length&&this._trigger("add",{items:a},o),d.length&&this._trigger("update",{items:d,oldData:r,data:l},o),s.length&&this._trigger("remove",{items:s,oldData:c},o);}}}]),t;}(DataSetPart$1),index={DataSet:DataSet$1,DataView:DataView$1,Queue:Queue$1},esm$1=Object.freeze({default:index,DataSet:DataSet$1,DataView:DataView$1,Queue:Queue$1});"undefined"!=typeof CanvasRenderingContext2D&&(CanvasRenderingContext2D.prototype.circle=function(e,t,o){this.beginPath(),this.arc(e,t,o,0,2*Math.PI,!1),this.closePath();},CanvasRenderingContext2D.prototype.square=function(e,t,o){this.beginPath(),this.rect(e-o,t-o,2*o,2*o),this.closePath();},CanvasRenderingContext2D.prototype.triangle=function(e,t,o){var n=Math.sqrt;this.beginPath(),o*=1.15,t+=.275*o;var i=2*o,a=i/2,d=n(3)/6*i,s=n(i*i-a*a);this.moveTo(e,t-(s-d)),this.lineTo(e+a,t+d),this.lineTo(e-a,t+d),this.lineTo(e,t-(s-d)),this.closePath();},CanvasRenderingContext2D.prototype.triangleDown=function(e,t,o){var n=Math.sqrt;this.beginPath(),o*=1.15,t-=.275*o;var i=2*o,a=i/2,d=n(3)/6*i,s=n(i*i-a*a);this.moveTo(e,t+(s-d)),this.lineTo(e+a,t-d),this.lineTo(e-a,t-d),this.lineTo(e,t+(s-d)),this.closePath();},CanvasRenderingContext2D.prototype.star=function(e,t,o){var i=Math.cos,a=Math.sin,d=Math.PI;this.beginPath(),o*=.82,t+=.1*o;for(var s=0,l;10>s;s++)l=0==s%2?1.3*o:.5*o,this.lineTo(e+l*a(2*s*d/10),t-l*i(2*s*d/10));this.closePath();},CanvasRenderingContext2D.prototype.diamond=function(e,t,o){this.beginPath(),this.lineTo(e,t+o),this.lineTo(e+o,t),this.lineTo(e,t-o),this.lineTo(e-o,t),this.closePath();},CanvasRenderingContext2D.prototype.roundRect=function(e,t,o,n,i){var a=Math.PI/180;0>o-2*i&&(i=o/2),0>n-2*i&&(i=n/2),this.beginPath(),this.moveTo(e+i,t),this.lineTo(e+o-i,t),this.arc(e+o-i,t+i,i,270*a,360*a,!1),this.lineTo(e+o,t+n-i),this.arc(e+o-i,t+n-i,i,0,90*a,!1),this.lineTo(e+i,t+n),this.arc(e+i,t+n-i,i,90*a,180*a,!1),this.lineTo(e,t+i),this.arc(e+i,t+i,i,180*a,270*a,!1),this.closePath();},CanvasRenderingContext2D.prototype.ellipse_vis=function(e,t,o,n){var i=.5522848,a=o/2*i,d=n/2*i,s=e+o,r=t+n,l=e+o/2,c=t+n/2;this.beginPath(),this.moveTo(e,c),this.bezierCurveTo(e,c-d,l-a,t,l,t),this.bezierCurveTo(l+a,t,s,c-d,s,c),this.bezierCurveTo(s,c+d,l+a,r,l,r),this.bezierCurveTo(l-a,r,e,c+d,e,c),this.closePath();},CanvasRenderingContext2D.prototype.database=function(e,t,o,n){var i=o,a=n*(1/3),d=.5522848,s=i/2*d,r=a/2*d,l=e+i,c=t+a,u=e+i/2,p=t+a/2,h=t+(n-a/2),m=t+n;this.beginPath(),this.moveTo(l,p),this.bezierCurveTo(l,p+r,u+s,c,u,c),this.bezierCurveTo(u-s,c,e,p+r,e,p),this.bezierCurveTo(e,p-r,u-s,t,u,t),this.bezierCurveTo(u+s,t,l,p-r,l,p),this.lineTo(l,h),this.bezierCurveTo(l,h+r,u+s,m,u,m),this.bezierCurveTo(u-s,m,e,h+r,e,h),this.lineTo(e,p);},CanvasRenderingContext2D.prototype.dashedLine=function(e,t,o,n,i){var a=Math.sqrt;this.beginPath(),this.moveTo(e,t);for(var d=i.length,s=o-e,r=n-t,l=r/s,c=a(s*s+r*r),u=0,p=!0,h=0,m=i[0];.1<=c;)m=i[u++%d],m>c&&(m=c),h=a(m*m/(1+l*l)),h=0>s?-h:h,e+=h,t+=l*h,!0===p?this.lineTo(e,t):this.moveTo(e,t),c-=m,p=!p;},CanvasRenderingContext2D.prototype.hexagon=function(e,t,o){this.beginPath();var n=2*Math.PI/6;this.moveTo(e+o,t);for(var a=1;a<6;a++)this.lineTo(e+o*Math.cos(n*a),t+o*Math.sin(n*a));this.closePath();});var commonjsGlobal$2$1="undefined"==typeof globalThis?"undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?{}:self:global:window:globalThis;function commonjsRequire$2$1(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs");}function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e["default"]:e;}function createCommonjsModule$2$1(e,t){return t={exports:{}},e(t,t.exports),t.exports;}var componentEmitter=createCommonjsModule$2$1(function(e){function t(e){if(e)return o(e);}function o(e){for(var o in t.prototype)e[o]=t.prototype[o];return e;}e.exports=t,t.prototype.on=t.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this;},t.prototype.once=function(e,t){function o(){this.off(e,o),t.apply(this,arguments);}return o.fn=t,this.on(e,o),this;},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var o=this._callbacks["$"+e];if(!o)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var n=0,a;n<o.length;n++)if(a=o[n],a===t||a.fn===t){o.splice(n,1);break;}return 0===o.length&&delete this._callbacks["$"+e],this;},t.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=Array(arguments.length-1),o=this._callbacks["$"+e],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(o){o=o.slice(0);for(var n=0,a=o.length;n<a;++n)o[n].apply(this,t);}return this;},t.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[];},t.prototype.hasListeners=function(e){return !!this.listeners(e).length;};});function parseDOT(e){return dot=e,parseGraph();}var NODE_ATTR_MAPPING={fontsize:"font.size",fontcolor:"font.color",labelfontcolor:"font.color",fontname:"font.face",color:["color.border","color.background"],fillcolor:"color.background",tooltip:"title",labeltooltip:"title"},EDGE_ATTR_MAPPING=Object.create(NODE_ATTR_MAPPING);EDGE_ATTR_MAPPING.color="color.color",EDGE_ATTR_MAPPING.style="dashes";var TOKENTYPE={NULL:0,DELIMITER:1,IDENTIFIER:2,UNKNOWN:3},DELIMITERS={"{":!0,"}":!0,"[":!0,"]":!0,";":!0,"=":!0,",":!0,"->":!0,"--":!0},dot="",index$1=0,c="",token="",tokenType=TOKENTYPE.NULL;function first(){index$1=0,c=dot.charAt(0);}function next(){index$1++,c=dot.charAt(index$1);}function nextPreview(){return dot.charAt(index$1+1);}var regexAlphaNumeric=/[a-zA-Z_0-9.:#]/;function isAlphaNumeric(e){return regexAlphaNumeric.test(e);}function merge(e,t){if(e||(e={}),t)for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o]);return e;}function setValue(e,t,n){for(var i=t.split("."),a=e;i.length;){var d=i.shift();i.length?(!a[d]&&(a[d]={}),a=a[d]):a[d]=n;}}function addNode(e,t){for(var o=null,n=[e],a=e,d,s;a.parent;)n.push(a.parent),a=a.parent;if(a.nodes)for(d=0,s=a.nodes.length;d<s;d++)if(t.id===a.nodes[d].id){o=a.nodes[d];break;}for(o||(o={id:t.id},e.node&&(o.attr=merge(o.attr,e.node))),d=n.length-1;0<=d;d--){var r=n[d];r.nodes||(r.nodes=[]),-1===r.nodes.indexOf(o)&&r.nodes.push(o);}t.attr&&(o.attr=merge(o.attr,t.attr));}function addEdge(e,t){if(e.edges||(e.edges=[]),e.edges.push(t),e.edge){var o=merge({},e.edge);t.attr=merge(o,t.attr);}}function createEdge(e,t,o,n,i){var a={from:t,to:o,type:n};return e.edge&&(a.attr=merge({},e.edge)),a.attr=merge(a.attr||{},i),null!=i&&i.hasOwnProperty("arrows")&&null!=i.arrows&&(a.arrows={to:{enabled:!0,type:i.arrows.type}},i.arrows=null),a;}function getToken(){for(tokenType=TOKENTYPE.NULL,token="";" "===c||"\t"===c||"\n"===c||"\r"===c;)next();do{var e=!1;if("#"===c){for(var t=index$1-1;" "===dot.charAt(t)||"\t"===dot.charAt(t);)t--;if("\n"===dot.charAt(t)||""===dot.charAt(t)){for(;""!=c&&"\n"!=c;)next();e=!0;}}if("/"===c&&"/"===nextPreview()){for(;""!=c&&"\n"!=c;)next();e=!0;}if("/"===c&&"*"===nextPreview()){for(;""!=c;)if("*"===c&&"/"===nextPreview()){next(),next();break;}else next();e=!0;}for(;" "===c||"\t"===c||"\n"===c||"\r"===c;)next();}while(e);if(""===c)return void(tokenType=TOKENTYPE.DELIMITER);var o=c+nextPreview();if(DELIMITERS[o])return tokenType=TOKENTYPE.DELIMITER,token=o,next(),void next();if(DELIMITERS[c])return tokenType=TOKENTYPE.DELIMITER,token=c,void next();if(isAlphaNumeric(c)||"-"===c){for(token+=c,next();isAlphaNumeric(c);)token+=c,next();return "false"===token?token=!1:"true"===token?token=!0:!isNaN(+token)&&(token=+token),void(tokenType=TOKENTYPE.IDENTIFIER);}if("\""===c){for(next();""!=c&&("\""!=c||"\""===c&&"\""===nextPreview());)"\""===c?(token+=c,next()):"\\"===c&&"n"===nextPreview()?(token+="\n",next()):token+=c,next();if("\""!=c)throw newSyntaxError("End of string \" expected");return next(),void(tokenType=TOKENTYPE.IDENTIFIER);}for(tokenType=TOKENTYPE.UNKNOWN;""!=c;)token+=c,next();throw new SyntaxError("Syntax error in part \""+chop(token,30)+"\"");}function parseGraph(){var e={};if(first(),getToken(),"strict"===token&&(e.strict=!0,getToken()),("graph"===token||"digraph"===token)&&(e.type=token,getToken()),tokenType===TOKENTYPE.IDENTIFIER&&(e.id=token,getToken()),"{"!=token)throw newSyntaxError("Angle bracket { expected");if(getToken(),parseStatements(e),"}"!=token)throw newSyntaxError("Angle bracket } expected");if(getToken(),""!==token)throw newSyntaxError("End of file expected");return getToken(),delete e.node,delete e.edge,delete e.graph,e;}function parseStatements(e){for(;""!==token&&"}"!=token;)parseStatement(e),";"===token&&getToken();}function parseStatement(e){var t=parseSubgraph(e);if(t)return void parseEdge(e,t);var o=parseAttributeStatement(e);if(!o){if(tokenType!=TOKENTYPE.IDENTIFIER)throw newSyntaxError("Identifier expected");var n=token;if(getToken(),"="===token){if(getToken(),tokenType!=TOKENTYPE.IDENTIFIER)throw newSyntaxError("Identifier expected");e[n]=token,getToken();}else parseNodeStatement(e,n);}}function parseSubgraph(e){var t=null;if("subgraph"===token&&(t={},t.type="subgraph",getToken(),tokenType===TOKENTYPE.IDENTIFIER&&(t.id=token,getToken())),"{"===token){if(getToken(),t||(t={}),t.parent=e,t.node=e.node,t.edge=e.edge,t.graph=e.graph,parseStatements(t),"}"!=token)throw newSyntaxError("Angle bracket } expected");getToken(),delete t.node,delete t.edge,delete t.graph,delete t.parent,e.subgraphs||(e.subgraphs=[]),e.subgraphs.push(t);}return t;}function parseAttributeStatement(e){return "node"===token?(getToken(),e.node=parseAttributeList(),"node"):"edge"===token?(getToken(),e.edge=parseAttributeList(),"edge"):"graph"===token?(getToken(),e.graph=parseAttributeList(),"graph"):null;}function parseNodeStatement(e,t){var o={id:t},n=parseAttributeList();n&&(o.attr=n),addNode(e,o),parseEdge(e,t);}function parseEdge(e,t){for(;"->"===token||"--"===token;){var o=token,n;getToken();var i=parseSubgraph(e);if(i)n=i;else{if(tokenType!=TOKENTYPE.IDENTIFIER)throw newSyntaxError("Identifier or subgraph expected");n=token,addNode(e,{id:n}),getToken();}var a=parseAttributeList(),d=createEdge(e,t,n,o,a);addEdge(e,d),t=n;}}function parseAttributeList(){for(var e=null,t={dashed:!0,solid:!1,dotted:[1,5]},o={dot:"circle",box:"box",crow:"crow",curve:"curve",icurve:"inv_curve",normal:"triangle",inv:"inv_triangle",diamond:"diamond",tee:"bar",vee:"vee"},n=[],a=[],d;"["===token;){for(getToken(),e={};""!==token&&"]"!=token;){if(tokenType!=TOKENTYPE.IDENTIFIER)throw newSyntaxError("Attribute name expected");var s=token;if(getToken(),"="!=token)throw newSyntaxError("Equal sign = expected");if(getToken(),tokenType!=TOKENTYPE.IDENTIFIER)throw newSyntaxError("Attribute value expected");var r=token;"style"===s&&(r=t[r]);var l;"arrowhead"===s&&(l=o[r],s="arrows",r={to:{enabled:!0,type:l}}),"arrowtail"===s&&(l=o[r],s="arrows",r={from:{enabled:!0,type:l}}),n.push({attr:e,name:s,value:r}),a.push(s),getToken(),","==token&&getToken();}if("]"!=token)throw newSyntaxError("Bracket ] expected");getToken();}if(a.includes("dir")){var c={arrows:{}};for(d=0;d<n.length;d++)if(!("arrows"===n[d].name))"dir"===n[d].name&&(c.dir=d);else if(null!=n[d].value.to)c.arrows.to=d;else if(null!=n[d].value.from)c.arrows.from=d;else throw newSyntaxError("Invalid value of arrows");var u=n[c.dir].value;if(!a.includes("arrows"))if("both"===u)n.push({attr:n[c.dir].attr,name:"arrows",value:{to:{enabled:!0}}}),c.arrows.to=n.length-1,n.push({attr:n[c.dir].attr,name:"arrows",value:{from:{enabled:!0}}}),c.arrows.from=n.length-1;else if("forward"===u)n.push({attr:n[c.dir].attr,name:"arrows",value:{to:{enabled:!0}}}),c.arrows.to=n.length-1;else if("back"===u)n.push({attr:n[c.dir].attr,name:"arrows",value:{from:{enabled:!0}}}),c.arrows.from=n.length-1;else if("none"===u)n.push({attr:n[c.dir].attr,name:"arrows",value:""}),c.arrows.to=n.length-1;else throw newSyntaxError("Invalid dir type \""+u+"\"");var p,h;if("both"===u)c.arrows.to&&c.arrows.from?(h=n[c.arrows.to].value.to.type,p=n[c.arrows.from].value.from.type,n[c.arrows.to]={attr:n[c.arrows.to].attr,name:n[c.arrows.to].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}},n.splice(c.arrows.from,1)):c.arrows.to?(h=n[c.arrows.to].value.to.type,p="arrow",n[c.arrows.to]={attr:n[c.arrows.to].attr,name:n[c.arrows.to].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}}):c.arrows.from&&(h="arrow",p=n[c.arrows.from].value.from.type,n[c.arrows.from]={attr:n[c.arrows.from].attr,name:n[c.arrows.from].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}});else if("back"===u)c.arrows.to&&c.arrows.from?(h="",p=n[c.arrows.from].value.from.type,n[c.arrows.from]={attr:n[c.arrows.from].attr,name:n[c.arrows.from].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}}):c.arrows.to?(h="",p="arrow",c.arrows.from=c.arrows.to,n[c.arrows.from]={attr:n[c.arrows.from].attr,name:n[c.arrows.from].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}}):c.arrows.from&&(h="",p=n[c.arrows.from].value.from.type,n[c.arrows.to]={attr:n[c.arrows.from].attr,name:n[c.arrows.from].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}}),n[c.arrows.from]={attr:n[c.arrows.from].attr,name:n[c.arrows.from].name,value:{from:{enabled:!0,type:n[c.arrows.from].value.from.type}}};else if("none"===u){var m;m=c.arrows.to?c.arrows.to:c.arrows.from,n[m]={attr:n[m].attr,name:n[m].name,value:""};}else if("forward"===u)c.arrows.to&&c.arrows.from?(h=n[c.arrows.to].value.to.type,p="",n[c.arrows.to]={attr:n[c.arrows.to].attr,name:n[c.arrows.to].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}}):c.arrows.to?(h=n[c.arrows.to].value.to.type,p="",n[c.arrows.to]={attr:n[c.arrows.to].attr,name:n[c.arrows.to].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}}):c.arrows.from&&(h="arrow",p="",c.arrows.to=c.arrows.from,n[c.arrows.to]={attr:n[c.arrows.to].attr,name:n[c.arrows.to].name,value:{to:{enabled:!0,type:h},from:{enabled:!0,type:p}}}),n[c.arrows.to]={attr:n[c.arrows.to].attr,name:n[c.arrows.to].name,value:{to:{enabled:!0,type:n[c.arrows.to].value.to.type}}};else throw newSyntaxError("Invalid dir type \""+u+"\"");n.splice(c.dir,1);}var g;if(a.includes("penwidth")){var y=[];for(g=n.length,d=0;d<g;d++)"width"!==n[d].name&&("penwidth"===n[d].name&&(n[d].name="width"),y.push(n[d]));n=y;}for(g=n.length,d=0;d<g;d++)setValue(n[d].attr,n[d].name,n[d].value);return e;}function newSyntaxError(e){return new SyntaxError(e+", got \""+chop(token,30)+"\" (char "+index$1+")");}function chop(e,t){return e.length<=t?e:e.substr(0,27)+"...";}function forEach2(e,t,o){Array.isArray(e)?e.forEach(function(e){Array.isArray(t)?t.forEach(function(t){o(e,t);}):o(e,t);}):Array.isArray(t)?t.forEach(function(t){o(e,t);}):o(e,t);}function setProp(e,t,o){for(var n=t.split("."),a=n.pop(),d=e,s=0,r;s<n.length;s++)r=n[s],r in d||(d[r]={}),d=d[r];return d[a]=o,e;}function convertAttr(e,t){var o={};for(var n in e)if(e.hasOwnProperty(n)){var i=t[n];Array.isArray(i)?i.forEach(function(t){setProp(o,t,e[n]);}):"string"==typeof i?setProp(o,i,e[n]):setProp(o,n,e[n]);}return o;}function DOTToGraph(e){var t=parseDOT(e),o={nodes:[],edges:[],options:{}};if(t.nodes&&t.nodes.forEach(function(e){var t={id:e.id,label:(e.label||e.id)+""};merge(t,convertAttr(e.attr,NODE_ATTR_MAPPING)),t.image&&(t.shape="image"),o.nodes.push(t);}),t.edges){var n=function(e){var t={from:e.from,to:e.to};return merge(t,convertAttr(e.attr,EDGE_ATTR_MAPPING)),null==t.arrows&&"->"===e.type&&(t.arrows="to"),t;};t.edges.forEach(function(e){var t,i;t=e.from instanceof Object?e.from.nodes:{id:e.from},i=e.to instanceof Object?e.to.nodes:{id:e.to},e.from instanceof Object&&e.from.edges&&e.from.edges.forEach(function(e){var t=n(e);o.edges.push(t);}),forEach2(t,i,function(t,i){var a=createEdge(o,t.id,i.id,e.type,e.attr),d=n(a);o.edges.push(d);}),e.to instanceof Object&&e.to.edges&&e.to.edges.forEach(function(e){var t=n(e);o.edges.push(t);});});}return t.attr&&(o.options=t.attr),o;}var parseDOT_1=parseDOT,DOTToGraph_1=DOTToGraph,dotparser={parseDOT:parseDOT_1,DOTToGraph:DOTToGraph_1},dotparser$1=Object.freeze({default:dotparser,__moduleExports:dotparser,parseDOT:parseDOT_1,DOTToGraph:DOTToGraph_1});function parseGephi(e,t){var o={edges:{inheritColor:!1},nodes:{fixed:!1,parseColor:!1}};null!=t&&(null!=t.fixed&&(o.nodes.fixed=t.fixed),null!=t.parseColor&&(o.nodes.parseColor=t.parseColor),null!=t.inheritColor&&(o.edges.inheritColor=t.inheritColor));var n=e.edges,i=n.map(function(e){var t={from:e.source,id:e.id,to:e.target};return null!=e.attributes&&(t.attributes=e.attributes),null!=e.label&&(t.label=e.label),null!=e.attributes&&null!=e.attributes.title&&(t.title=e.attributes.title),"Directed"===e.type&&(t.arrows="to"),e.color&&!1===o.edges.inheritColor&&(t.color=e.color),t;}),a=e.nodes.map(function(e){var t={id:e.id,fixed:o.nodes.fixed&&null!=e.x&&null!=e.y};return null!=e.attributes&&(t.attributes=e.attributes),null!=e.label&&(t.label=e.label),null!=e.size&&(t.size=e.size),null!=e.attributes&&null!=e.attributes.title&&(t.title=e.attributes.title),null!=e.title&&(t.title=e.title),null!=e.x&&(t.x=e.x),null!=e.y&&(t.y=e.y),null!=e.color&&(!0===o.nodes.parseColor?t.color=e.color:t.color={background:e.color,border:e.color,highlight:{background:e.color,border:e.color},hover:{background:e.color,border:e.color}}),t;});return {nodes:a,edges:i};}var gephiParser=Object.freeze({parseGephi:parseGephi}),keycharm=createCommonjsModule$2$1(function(e){(function(t,o){e.exports=o();})(commonjsGlobal$2$1,function(){function e(e){var t=String.fromCharCode,o=e&&e.preventDefault||!1,n=e&&e.container||window,a={},d={keydown:{},keyup:{}},s={},r;for(r=97;122>=r;r++)s[t(r)]={code:65+(r-97),shift:!1};for(r=65;90>=r;r++)s[t(r)]={code:r,shift:!0};for(r=0;9>=r;r++)s[""+r]={code:48+r,shift:!1};for(r=1;12>=r;r++)s["F"+r]={code:111+r,shift:!1};for(r=0;9>=r;r++)s["num"+r]={code:96+r,shift:!1};s["num*"]={code:106,shift:!1},s["num+"]={code:107,shift:!1},s["num-"]={code:109,shift:!1},s["num/"]={code:111,shift:!1},s["num."]={code:110,shift:!1},s.left={code:37,shift:!1},s.up={code:38,shift:!1},s.right={code:39,shift:!1},s.down={code:40,shift:!1},s.space={code:32,shift:!1},s.enter={code:13,shift:!1},s.shift={code:16,shift:void 0},s.esc={code:27,shift:!1},s.backspace={code:8,shift:!1},s.tab={code:9,shift:!1},s.ctrl={code:17,shift:!1},s.alt={code:18,shift:!1},s["delete"]={code:46,shift:!1},s.pageup={code:33,shift:!1},s.pagedown={code:34,shift:!1},s["="]={code:187,shift:!1},s["-"]={code:189,shift:!1},s["]"]={code:221,shift:!1},s["["]={code:219,shift:!1};var l=function(e){u(e,"keydown");},c=function(e){u(e,"keyup");},u=function(e,t){if(void 0!==d[t][e.keyCode]){for(var n=d[t][e.keyCode],a=0;a<n.length;a++)void 0===n[a].shift?n[a].fn(e):!0==n[a].shift&&!0==e.shiftKey?n[a].fn(e):!1==n[a].shift&&!1==e.shiftKey&&n[a].fn(e);!0==o&&e.preventDefault();}};return a.bind=function(e,t,o){if(void 0===o&&(o="keydown"),void 0===s[e])throw new Error("unsupported key: "+e);void 0===d[o][s[e].code]&&(d[o][s[e].code]=[]),d[o][s[e].code].push({fn:t,shift:s[e].shift});},a.bindAll=function(e,t){for(var o in void 0===t&&(t="keydown"),s)s.hasOwnProperty(o)&&a.bind(o,e,t);},a.getKey=function(e){for(var t in s)if(s.hasOwnProperty(t)){if(!0==e.shiftKey&&!0==s[t].shift&&e.keyCode==s[t].code)return t;if(!1==e.shiftKey&&!1==s[t].shift&&e.keyCode==s[t].code)return t;if(e.keyCode==s[t].code&&"shift"==t)return t;}return "unknown key, currently not supported";},a.unbind=function(e,t,o){if(void 0===o&&(o="keydown"),void 0===s[e])throw new Error("unsupported key: "+e);if(void 0!==t){var n=[],a=d[o][s[e].code];if(void 0!==a)for(var r=0;r<a.length;r++)(a[r].fn!=t||a[r].shift!=s[e].shift)&&n.push(d[o][s[e].code][r]);d[o][s[e].code]=n;}else d[o][s[e].code]=[];},a.reset=function(){d={keydown:{},keyup:{}};},a.destroy=function(){d={keydown:{},keyup:{}},n.removeEventListener("keydown",l,!0),n.removeEventListener("keyup",c,!0);},n.addEventListener("keydown",l,!0),n.addEventListener("keyup",c,!0),a;}return e;});}),keycharm$1=Object.freeze({default:keycharm,__moduleExports:keycharm});function _extends(){return _extends=Object.assign||function(e){for(var t=1,o;t<arguments.length;t++)for(var n in o=arguments[t],o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n]);return e;},_extends.apply(this,arguments);}function _inheritsLoose(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t;}function _assertThisInitialized$1$1(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;}var assign="function"==typeof Object.assign?Object.assign:function(e){if(void 0===e||null===e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),o=1,n;o<arguments.length;o++)if(n=arguments[o],void 0!==n&&null!==n)for(var i in n)n.hasOwnProperty(i)&&(t[i]=n[i]);return t;};var assign$1=assign,VENDOR_PREFIXES=["","webkit","Moz","MS","ms","o"],TEST_ELEMENT="undefined"==typeof document?{style:{}}:document.createElement("div"),TYPE_FUNCTION="function",round=Math.round,abs=Math.abs,now=Date.now;function prefixed(e,t){for(var o=t[0].toUpperCase()+t.slice(1),n=0,a,d;n<VENDOR_PREFIXES.length;){if(a=VENDOR_PREFIXES[n],d=a?a+o:t,d in e)return d;n++;}}var win="undefined"==typeof window?{}:window;var PREFIXED_TOUCH_ACTION=prefixed(TEST_ELEMENT.style,"touchAction"),NATIVE_TOUCH_ACTION=PREFIXED_TOUCH_ACTION!==void 0;function getTouchActionProps(){if(!NATIVE_TOUCH_ACTION)return !1;var e={},t=win.CSS&&win.CSS.supports;return ["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach(function(o){return e[o]=!t||win.CSS.supports("touch-action",o);}),e;}var TOUCH_ACTION_COMPUTE="compute",TOUCH_ACTION_AUTO="auto",TOUCH_ACTION_MANIPULATION="manipulation",TOUCH_ACTION_NONE="none",TOUCH_ACTION_PAN_X="pan-x",TOUCH_ACTION_PAN_Y="pan-y",TOUCH_ACTION_MAP=getTouchActionProps(),MOBILE_REGEX=/mobile|tablet|ip(ad|hone|od)|android/i,SUPPORT_TOUCH="ontouchstart"in win,SUPPORT_POINTER_EVENTS=prefixed(win,"PointerEvent")!==void 0,SUPPORT_ONLY_TOUCH=SUPPORT_TOUCH&&MOBILE_REGEX.test(navigator.userAgent),INPUT_TYPE_TOUCH="touch",INPUT_TYPE_PEN="pen",INPUT_TYPE_MOUSE="mouse",INPUT_TYPE_KINECT="kinect",COMPUTE_INTERVAL=25,INPUT_START=1,INPUT_MOVE=2,INPUT_END=4,INPUT_CANCEL=8,DIRECTION_NONE=1,DIRECTION_LEFT=2,DIRECTION_RIGHT=4,DIRECTION_UP=8,DIRECTION_DOWN=16,DIRECTION_HORIZONTAL=DIRECTION_LEFT|DIRECTION_RIGHT,DIRECTION_VERTICAL=DIRECTION_UP|DIRECTION_DOWN,DIRECTION_ALL=DIRECTION_HORIZONTAL|DIRECTION_VERTICAL,PROPS_XY=["x","y"],PROPS_CLIENT_XY=["clientX","clientY"];function each(e,t,o){if(e)if(e.forEach)e.forEach(t,o);else if(void 0!==e.length)for(n=0;n<e.length;)t.call(o,e[n],n,e),n++;else for(var n in e)e.hasOwnProperty(n)&&t.call(o,e[n],n,e);}function boolOrFn(e,t){return typeof e===TYPE_FUNCTION?e.apply(t?t[0]||void 0:void 0,t):e;}function inStr(e,t){return -1<e.indexOf(t);}function cleanTouchActions(e){if(inStr(e,TOUCH_ACTION_NONE))return TOUCH_ACTION_NONE;var t=inStr(e,TOUCH_ACTION_PAN_X),o=inStr(e,TOUCH_ACTION_PAN_Y);return t&&o?TOUCH_ACTION_NONE:t||o?t?TOUCH_ACTION_PAN_X:TOUCH_ACTION_PAN_Y:inStr(e,TOUCH_ACTION_MANIPULATION)?TOUCH_ACTION_MANIPULATION:TOUCH_ACTION_AUTO;}var TouchAction=function(){function e(e,t){this.manager=e,this.set(t);}var t=e.prototype;return t.set=function(e){e===TOUCH_ACTION_COMPUTE&&(e=this.compute()),NATIVE_TOUCH_ACTION&&this.manager.element.style&&TOUCH_ACTION_MAP[e]&&(this.manager.element.style[PREFIXED_TOUCH_ACTION]=e),this.actions=e.toLowerCase().trim();},t.update=function(){this.set(this.manager.options.touchAction);},t.compute=function(){var e=[];return each(this.manager.recognizers,function(t){boolOrFn(t.options.enable,[t])&&(e=e.concat(t.getTouchAction()));}),cleanTouchActions(e.join(" "));},t.preventDefaults=function(e){var t=e.srcEvent,o=e.offsetDirection;if(this.manager.session.prevented)return void t.preventDefault();var n=this.actions,i=inStr(n,TOUCH_ACTION_NONE)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_NONE],a=inStr(n,TOUCH_ACTION_PAN_Y)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y],d=inStr(n,TOUCH_ACTION_PAN_X)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];if(i){var s=1===e.pointers.length,r=2>e.distance,l=250>e.deltaTime;if(s&&r&&l)return;}return d&&a?void 0:i||a&&o&DIRECTION_HORIZONTAL||d&&o&DIRECTION_VERTICAL?this.preventSrc(t):void 0;},t.preventSrc=function(e){this.manager.session.prevented=!0,e.preventDefault();},e;}();function hasParent$1$1(e,t){for(;e;){if(e===t)return !0;e=e.parentNode;}return !1;}function getCenter(e){var t=e.length;if(1===t)return {x:round(e[0].clientX),y:round(e[0].clientY)};for(var o=0,n=0,a=0;a<t;)o+=e[a].clientX,n+=e[a].clientY,a++;return {x:round(o/t),y:round(n/t)};}function simpleCloneInputData(e){for(var t=[],o=0;o<e.pointers.length;)t[o]={clientX:round(e.pointers[o].clientX),clientY:round(e.pointers[o].clientY)},o++;return {timeStamp:now(),pointers:t,center:getCenter(t),deltaX:e.deltaX,deltaY:e.deltaY};}function getDistance(e,t,o){o||(o=PROPS_XY);var n=t[o[0]]-e[o[0]],i=t[o[1]]-e[o[1]];return Math.sqrt(n*n+i*i);}function getAngle(e,t,o){o||(o=PROPS_XY);var n=t[o[0]]-e[o[0]],i=t[o[1]]-e[o[1]];return 180*Math.atan2(i,n)/Math.PI;}function getDirection(e,t){return e===t?DIRECTION_NONE:abs(e)>=abs(t)?0>e?DIRECTION_LEFT:DIRECTION_RIGHT:0>t?DIRECTION_UP:DIRECTION_DOWN;}function computeDeltaXY(e,t){var o=t.center,n=e.offsetDelta||{},i=e.prevDelta||{},a=e.prevInput||{};(t.eventType===INPUT_START||a.eventType===INPUT_END)&&(i=e.prevDelta={x:a.deltaX||0,y:a.deltaY||0},n=e.offsetDelta={x:o.x,y:o.y}),t.deltaX=i.x+(o.x-n.x),t.deltaY=i.y+(o.y-n.y);}function getVelocity(e,t,o){return {x:t/e||0,y:o/e||0};}function getScale(e,t){return getDistance(t[0],t[1],PROPS_CLIENT_XY)/getDistance(e[0],e[1],PROPS_CLIENT_XY);}function getRotation(e,t){return getAngle(t[1],t[0],PROPS_CLIENT_XY)+getAngle(e[1],e[0],PROPS_CLIENT_XY);}function computeIntervalInputData(e,t){var o=e.lastInterval||t,n=t.timeStamp-o.timeStamp,i,a,d,s;if(t.eventType!==INPUT_CANCEL&&(n>COMPUTE_INTERVAL||o.velocity===void 0)){var r=t.deltaX-o.deltaX,l=t.deltaY-o.deltaY,c=getVelocity(n,r,l);a=c.x,d=c.y,i=abs(c.x)>abs(c.y)?c.x:c.y,s=getDirection(r,l),e.lastInterval=t;}else i=o.velocity,a=o.velocityX,d=o.velocityY,s=o.direction;t.velocity=i,t.velocityX=a,t.velocityY=d,t.direction=s;}function computeInputData(e,t){var o=e.session,n=t.pointers,i=n.length;o.firstInput||(o.firstInput=simpleCloneInputData(t)),1<i&&!o.firstMultiple?o.firstMultiple=simpleCloneInputData(t):1===i&&(o.firstMultiple=!1);var a=o.firstInput,d=o.firstMultiple,s=d?d.center:a.center,r=t.center=getCenter(n);t.timeStamp=now(),t.deltaTime=t.timeStamp-a.timeStamp,t.angle=getAngle(s,r),t.distance=getDistance(s,r),computeDeltaXY(o,t),t.offsetDirection=getDirection(t.deltaX,t.deltaY);var l=getVelocity(t.deltaTime,t.deltaX,t.deltaY);t.overallVelocityX=l.x,t.overallVelocityY=l.y,t.overallVelocity=abs(l.x)>abs(l.y)?l.x:l.y,t.scale=d?getScale(d.pointers,n):1,t.rotation=d?getRotation(d.pointers,n):0,t.maxPointers=o.prevInput?t.pointers.length>o.prevInput.maxPointers?t.pointers.length:o.prevInput.maxPointers:t.pointers.length,computeIntervalInputData(o,t);var c=e.element;hasParent$1$1(t.srcEvent.target,c)&&(c=t.srcEvent.target),t.target=c;}function inputHandler(e,t,o){var n=o.pointers.length,i=o.changedPointers.length,a=t&INPUT_START&&0==n-i;o.isFirst=!!a,o.isFinal=!!(t&(INPUT_END|INPUT_CANCEL)&&0==n-i),a&&(e.session={}),o.eventType=t,computeInputData(e,o),e.emit("hammer.input",o),e.recognize(o),e.session.prevInput=o;}function splitStr(e){return e.trim().split(/\s+/g);}function addEventListeners(e,t,o){each(splitStr(t),function(t){e.addEventListener(t,o,!1);});}function removeEventListeners(e,t,o){each(splitStr(t),function(t){e.removeEventListener(t,o,!1);});}function getWindowForElement(e){var t=e.ownerDocument||e;return t.defaultView||t.parentWindow||window;}var Input=function(){function e(e,t){var o=this;this.manager=e,this.callback=t,this.element=e.element,this.target=e.options.inputTarget,this.domHandler=function(t){boolOrFn(e.options.enable,[e])&&o.handler(t);},this.init();}var t=e.prototype;return t.handler=function(){},t.init=function(){this.evEl&&addEventListeners(this.element,this.evEl,this.domHandler),this.evTarget&&addEventListeners(this.target,this.evTarget,this.domHandler),this.evWin&&addEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler);},t.destroy=function(){this.evEl&&removeEventListeners(this.element,this.evEl,this.domHandler),this.evTarget&&removeEventListeners(this.target,this.evTarget,this.domHandler),this.evWin&&removeEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler);},e;}();function inArray(e,t,o){if(e.indexOf&&!o)return e.indexOf(t);for(var n=0;n<e.length;){if(o&&e[n][o]==t||!o&&e[n]===t)return n;n++;}return -1;}var POINTER_INPUT_MAP={pointerdown:INPUT_START,pointermove:INPUT_MOVE,pointerup:INPUT_END,pointercancel:INPUT_CANCEL,pointerout:INPUT_CANCEL},IE10_POINTER_TYPE_ENUM={2:INPUT_TYPE_TOUCH,3:INPUT_TYPE_PEN,4:INPUT_TYPE_MOUSE,5:INPUT_TYPE_KINECT},POINTER_ELEMENT_EVENTS="pointerdown",POINTER_WINDOW_EVENTS="pointermove pointerup pointercancel";win.MSPointerEvent&&!win.PointerEvent&&(POINTER_ELEMENT_EVENTS="MSPointerDown",POINTER_WINDOW_EVENTS="MSPointerMove MSPointerUp MSPointerCancel");var PointerEventInput=function(e){function t(){var o=t.prototype,n;return o.evEl=POINTER_ELEMENT_EVENTS,o.evWin=POINTER_WINDOW_EVENTS,n=e.apply(this,arguments)||this,n.store=n.manager.session.pointerEvents=[],n;}_inheritsLoose(t,e);var o=t.prototype;return o.handler=function(e){var t=this.store,o=!1,n=e.type.toLowerCase().replace("ms",""),i=POINTER_INPUT_MAP[n],a=IE10_POINTER_TYPE_ENUM[e.pointerType]||e.pointerType,d=inArray(t,e.pointerId,"pointerId");i&INPUT_START&&(0===e.button||a===INPUT_TYPE_TOUCH)?0>d&&(t.push(e),d=t.length-1):i&(INPUT_END|INPUT_CANCEL)&&(o=!0),0>d||(t[d]=e,this.callback(this.manager,i,{pointers:t,changedPointers:[e],pointerType:a,srcEvent:e}),o&&t.splice(d,1));},t;}(Input);function toArray$1$1(e){return Array.prototype.slice.call(e,0);}function uniqueArray(e,t,o){for(var n=[],a=[],d=0,s;d<e.length;)s=t?e[d][t]:e[d],0>inArray(a,s)&&n.push(e[d]),a[d]=s,d++;return o&&(t?n=n.sort(function(e,o){return e[t]>o[t];}):n=n.sort()),n;}var TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:INPUT_MOVE,touchend:INPUT_END,touchcancel:INPUT_CANCEL},TOUCH_TARGET_EVENTS="touchstart touchmove touchend touchcancel",TouchInput=function(e){function t(){var o;return t.prototype.evTarget=TOUCH_TARGET_EVENTS,o=e.apply(this,arguments)||this,o.targetIds={},o;}_inheritsLoose(t,e);var o=t.prototype;return o.handler=function(e){var t=TOUCH_INPUT_MAP[e.type],o=getTouches.call(this,e,t);o&&this.callback(this.manager,t,{pointers:o[0],changedPointers:o[1],pointerType:INPUT_TYPE_TOUCH,srcEvent:e});},t;}(Input);function getTouches(e,t){var o=toArray$1$1(e.touches),n=this.targetIds;if(t&(INPUT_START|INPUT_MOVE)&&1===o.length)return n[o[0].identifier]=!0,[o,o];var a=toArray$1$1(e.changedTouches),d=[],s=this.target,r,l;if(l=o.filter(function(e){return hasParent$1$1(e.target,s);}),t===INPUT_START)for(r=0;r<l.length;)n[l[r].identifier]=!0,r++;for(r=0;r<a.length;)n[a[r].identifier]&&d.push(a[r]),t&(INPUT_END|INPUT_CANCEL)&&delete n[a[r].identifier],r++;return d.length?[uniqueArray(l.concat(d),"identifier",!0),d]:void 0;}var MOUSE_INPUT_MAP={mousedown:INPUT_START,mousemove:INPUT_MOVE,mouseup:INPUT_END},MOUSE_ELEMENT_EVENTS="mousedown",MOUSE_WINDOW_EVENTS="mousemove mouseup",MouseInput=function(e){function t(){var o=t.prototype,n;return o.evEl=MOUSE_ELEMENT_EVENTS,o.evWin=MOUSE_WINDOW_EVENTS,n=e.apply(this,arguments)||this,n.pressed=!1,n;}_inheritsLoose(t,e);var o=t.prototype;return o.handler=function(e){var t=MOUSE_INPUT_MAP[e.type];t&INPUT_START&&0===e.button&&(this.pressed=!0),t&INPUT_MOVE&&1!==e.which&&(t=INPUT_END),this.pressed&&(t&INPUT_END&&(this.pressed=!1),this.callback(this.manager,t,{pointers:[e],changedPointers:[e],pointerType:INPUT_TYPE_MOUSE,srcEvent:e}));},t;}(Input),DEDUP_TIMEOUT=2500,DEDUP_DISTANCE=25;function setLastTouch(e){var t=e.changedPointers,o=t[0];if(o.identifier===this.primaryTouch){var n={x:o.clientX,y:o.clientY},a=this.lastTouches;this.lastTouches.push(n);var d=function(){var e=a.indexOf(n);-1<e&&a.splice(e,1);};setTimeout(d,DEDUP_TIMEOUT);}}function recordTouches(e,t){e&INPUT_START?(this.primaryTouch=t.changedPointers[0].identifier,setLastTouch.call(this,t)):e&(INPUT_END|INPUT_CANCEL)&&setLastTouch.call(this,t);}function isSyntheticEvent(e){for(var o=Math.abs,n=e.srcEvent.clientX,a=e.srcEvent.clientY,d=0;d<this.lastTouches.length;d++){var s=this.lastTouches[d],t=o(n-s.x),r=o(a-s.y);if(t<=DEDUP_DISTANCE&&r<=DEDUP_DISTANCE)return !0;}return !1;}var TouchMouseInput=function(){var e=function(e){function t(t,o){var n;return n=e.call(this,t,o)||this,n.handler=function(e,t,o){var i=o.pointerType===INPUT_TYPE_TOUCH,a=o.pointerType===INPUT_TYPE_MOUSE;if(!(a&&o.sourceCapabilities&&o.sourceCapabilities.firesTouchEvents)){if(i)recordTouches.call(_assertThisInitialized$1$1(_assertThisInitialized$1$1(n)),t,o);else if(a&&isSyntheticEvent.call(_assertThisInitialized$1$1(_assertThisInitialized$1$1(n)),o))return;n.callback(e,t,o);}},n.touch=new TouchInput(n.manager,n.handler),n.mouse=new MouseInput(n.manager,n.handler),n.primaryTouch=null,n.lastTouches=[],n;}_inheritsLoose(t,e);var o=t.prototype;return o.destroy=function(){this.touch.destroy(),this.mouse.destroy();},t;}(Input);return e;}();function createInputInstance(e){var t=e.options.inputClass,o;return o=t?t:SUPPORT_POINTER_EVENTS?PointerEventInput:SUPPORT_ONLY_TOUCH?TouchInput:SUPPORT_TOUCH?TouchMouseInput:MouseInput,new o(e,inputHandler);}function invokeArrayArg(e,t,o){return !!Array.isArray(e)&&(each(e,o[t],o),!0);}var STATE_POSSIBLE=1,STATE_BEGAN=2,STATE_CHANGED=4,STATE_ENDED=8,STATE_RECOGNIZED=STATE_ENDED,STATE_CANCELLED=16,STATE_FAILED=32,_uniqueId=1;function uniqueId(){return _uniqueId++;}function getRecognizerByNameIfManager(e,t){var o=t.manager;return o?o.get(e):e;}function stateStr(e){if(e&STATE_CANCELLED)return "cancel";return e&STATE_ENDED?"end":e&STATE_CHANGED?"move":e&STATE_BEGAN?"start":"";}var Recognizer=function(){function e(e){void 0===e&&(e={}),this.options=_extends({enable:!0},e),this.id=uniqueId(),this.manager=null,this.state=STATE_POSSIBLE,this.simultaneous={},this.requireFail=[];}var t=e.prototype;return t.set=function(e){return assign$1(this.options,e),this.manager&&this.manager.touchAction.update(),this;},t.recognizeWith=function(e){if(invokeArrayArg(e,"recognizeWith",this))return this;var t=this.simultaneous;return e=getRecognizerByNameIfManager(e,this),t[e.id]||(t[e.id]=e,e.recognizeWith(this)),this;},t.dropRecognizeWith=function(e){return invokeArrayArg(e,"dropRecognizeWith",this)?this:(e=getRecognizerByNameIfManager(e,this),delete this.simultaneous[e.id],this);},t.requireFailure=function(e){if(invokeArrayArg(e,"requireFailure",this))return this;var t=this.requireFail;return e=getRecognizerByNameIfManager(e,this),-1===inArray(t,e)&&(t.push(e),e.requireFailure(this)),this;},t.dropRequireFailure=function(e){if(invokeArrayArg(e,"dropRequireFailure",this))return this;e=getRecognizerByNameIfManager(e,this);var t=inArray(this.requireFail,e);return -1<t&&this.requireFail.splice(t,1),this;},t.hasRequireFailures=function(){return 0<this.requireFail.length;},t.canRecognizeWith=function(e){return !!this.simultaneous[e.id];},t.emit=function e(t){function e(n){o.manager.emit(n,t);}var o=this,n=this.state;n<STATE_ENDED&&e(o.options.event+stateStr(n)),e(o.options.event),t.additionalEvent&&e(t.additionalEvent),n>=STATE_ENDED&&e(o.options.event+stateStr(n));},t.tryEmit=function(e){return this.canEmit()?this.emit(e):void(this.state=STATE_FAILED);},t.canEmit=function(){for(var e=0;e<this.requireFail.length;){if(!(this.requireFail[e].state&(STATE_FAILED|STATE_POSSIBLE)))return !1;e++;}return !0;},t.recognize=function(e){var t=assign$1({},e);return boolOrFn(this.options.enable,[this,t])?void(this.state&(STATE_RECOGNIZED|STATE_CANCELLED|STATE_FAILED)&&(this.state=STATE_POSSIBLE),this.state=this.process(t),this.state&(STATE_BEGAN|STATE_CHANGED|STATE_ENDED|STATE_CANCELLED)&&this.tryEmit(t)):(this.reset(),void(this.state=STATE_FAILED));},t.process=function(){},t.getTouchAction=function(){},t.reset=function(){},e;}(),defaults={domEvents:!1,touchAction:"compute",enable:!0,inputTarget:null,inputClass:null,preset:[],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}},STOP=1,FORCED_STOP=2;function toggleCssProps(e,t){var o=e.element;if(o.style){var n;each(e.options.cssProps,function(i,a){n=prefixed(o.style,a),t?(e.oldCssProps[n]=o.style[n],o.style[n]=i):o.style[n]=e.oldCssProps[n]||"";}),t||(e.oldCssProps={});}}function triggerDomEvent(e,t){var o=document.createEvent("Event");o.initEvent(e,!0,!0),o.gesture=t,t.target.dispatchEvent(o);}var Manager=function(){function e(e,t){var o=this;this.options=assign$1({},defaults,t||{}),this.options.inputTarget=this.options.inputTarget||e,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=e,this.input=createInputInstance(this),this.touchAction=new TouchAction(this,this.options.touchAction),toggleCssProps(this,!0),each(this.options.recognizers,function(e){var t=o.add(new e[0](e[1]));e[2]&&t.recognizeWith(e[2]),e[3]&&t.requireFailure(e[3]);},this);}var t=e.prototype;return t.set=function(e){return assign$1(this.options,e),e.touchAction&&this.touchAction.update(),e.inputTarget&&(this.input.destroy(),this.input.target=e.inputTarget,this.input.init()),this;},t.stop=function(e){this.session.stopped=e?FORCED_STOP:STOP;},t.recognize=function(e){var t=this.session;if(!t.stopped){this.touchAction.preventDefaults(e);var o=this.recognizers,n=t.curRecognizer,a;(!n||n&&n.state&STATE_RECOGNIZED)&&(t.curRecognizer=null,n=null);for(var d=0;d<o.length;)a=o[d],t.stopped!==FORCED_STOP&&(!n||a===n||a.canRecognizeWith(n))?a.recognize(e):a.reset(),!n&&a.state&(STATE_BEGAN|STATE_CHANGED|STATE_ENDED)&&(t.curRecognizer=a,n=a),d++;}},t.get=function(e){if(e instanceof Recognizer)return e;for(var t=this.recognizers,o=0;o<t.length;o++)if(t[o].options.event===e)return t[o];return null;},t.add=function(e){if(invokeArrayArg(e,"add",this))return this;var t=this.get(e.options.event);return t&&this.remove(t),this.recognizers.push(e),e.manager=this,this.touchAction.update(),e;},t.remove=function(e){if(invokeArrayArg(e,"remove",this))return this;var t=this.get(e);if(e){var o=this.recognizers,n=inArray(o,t);-1!==n&&(o.splice(n,1),this.touchAction.update());}return this;},t.on=function(e,t){if(void 0===e||void 0===t)return this;var o=this.handlers;return each(splitStr(e),function(e){o[e]=o[e]||[],o[e].push(t);}),this;},t.off=function(e,t){if(void 0===e)return this;var o=this.handlers;return each(splitStr(e),function(e){t?o[e]&&o[e].splice(inArray(o[e],t),1):delete o[e];}),this;},t.emit=function(e,t){this.options.domEvents&&triggerDomEvent(e,t);var o=this.handlers[e]&&this.handlers[e].slice();if(o&&o.length){t.type=e,t.preventDefault=function(){t.srcEvent.preventDefault();};for(var n=0;n<o.length;)o[n](t),n++;}},t.destroy=function(){this.element&&toggleCssProps(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null;},e;}(),SINGLE_TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:INPUT_MOVE,touchend:INPUT_END,touchcancel:INPUT_CANCEL},SINGLE_TOUCH_TARGET_EVENTS="touchstart",SINGLE_TOUCH_WINDOW_EVENTS="touchstart touchmove touchend touchcancel",SingleTouchInput=function(e){function t(){var o=t.prototype,n;return o.evTarget=SINGLE_TOUCH_TARGET_EVENTS,o.evWin=SINGLE_TOUCH_WINDOW_EVENTS,n=e.apply(this,arguments)||this,n.started=!1,n;}_inheritsLoose(t,e);var o=t.prototype;return o.handler=function(e){var t=SINGLE_TOUCH_INPUT_MAP[e.type];if(t===INPUT_START&&(this.started=!0),!!this.started){var o=normalizeSingleTouches.call(this,e,t);t&(INPUT_END|INPUT_CANCEL)&&0==o[0].length-o[1].length&&(this.started=!1),this.callback(this.manager,t,{pointers:o[0],changedPointers:o[1],pointerType:INPUT_TYPE_TOUCH,srcEvent:e});}},t;}(Input);function normalizeSingleTouches(e,t){var o=toArray$1$1(e.touches),n=toArray$1$1(e.changedTouches);return t&(INPUT_END|INPUT_CANCEL)&&(o=uniqueArray(o.concat(n),"identifier",!0)),[o,n];}var AttrRecognizer=function(e){function t(t){return void 0===t&&(t={}),e.call(this,_extends({pointers:1},t))||this;}_inheritsLoose(t,e);var o=t.prototype;return o.attrTest=function(e){var t=this.options.pointers;return 0===t||e.pointers.length===t;},o.process=function(e){var t=this.state,o=e.eventType,n=t&(STATE_BEGAN|STATE_CHANGED),i=this.attrTest(e);return n&&(o&INPUT_CANCEL||!i)?t|STATE_CANCELLED:n||i?o&INPUT_END?t|STATE_ENDED:t&STATE_BEGAN?t|STATE_CHANGED:STATE_BEGAN:STATE_FAILED;},t;}(Recognizer),TapRecognizer=function(e){function t(t){var o;return void 0===t&&(t={}),o=e.call(this,_extends({event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},t))||this,o.pTime=!1,o.pCenter=!1,o._timer=null,o._input=null,o.count=0,o;}_inheritsLoose(t,e);var o=t.prototype;return o.getTouchAction=function(){return [TOUCH_ACTION_MANIPULATION];},o.process=function(e){var t=this,o=this.options,n=e.pointers.length===o.pointers,i=e.distance<o.threshold,a=e.deltaTime<o.time;if(this.reset(),e.eventType&INPUT_START&&0===this.count)return this.failTimeout();if(i&&a&&n){if(e.eventType!==INPUT_END)return this.failTimeout();var d=!this.pTime||e.timeStamp-this.pTime<o.interval,s=!this.pCenter||getDistance(this.pCenter,e.center)<o.posThreshold;this.pTime=e.timeStamp,this.pCenter=e.center,s&&d?this.count+=1:this.count=1,this._input=e;var r=this.count%o.taps;if(0==r)return this.hasRequireFailures()?(this._timer=setTimeout(function(){t.state=STATE_RECOGNIZED,t.tryEmit();},o.interval),STATE_BEGAN):STATE_RECOGNIZED;}return STATE_FAILED;},o.failTimeout=function(){var e=this;return this._timer=setTimeout(function(){e.state=STATE_FAILED;},this.options.interval),STATE_FAILED;},o.reset=function(){clearTimeout(this._timer);},o.emit=function(){this.state===STATE_RECOGNIZED&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input));},t;}(Recognizer);function directionStr(e){if(e===DIRECTION_DOWN)return "down";return e===DIRECTION_UP?"up":e===DIRECTION_LEFT?"left":e===DIRECTION_RIGHT?"right":"";}var PanRecognizer=function(e){var o=Math.abs;function t(t){var o;return void 0===t&&(t={}),o=e.call(this,_extends({event:"pan",threshold:10,pointers:1,direction:DIRECTION_ALL},t))||this,o.pX=null,o.pY=null,o;}_inheritsLoose(t,e);var n=t.prototype;return n.getTouchAction=function(){var e=this.options.direction,t=[];return e&DIRECTION_HORIZONTAL&&t.push(TOUCH_ACTION_PAN_Y),e&DIRECTION_VERTICAL&&t.push(TOUCH_ACTION_PAN_X),t;},n.directionTest=function(e){var t=this.options,n=!0,i=e.distance,a=e.direction,d=e.deltaX,s=e.deltaY;return a&t.direction||(t.direction&DIRECTION_HORIZONTAL?(a=0===d?DIRECTION_NONE:0>d?DIRECTION_LEFT:DIRECTION_RIGHT,n=d!==this.pX,i=o(e.deltaX)):(a=0===s?DIRECTION_NONE:0>s?DIRECTION_UP:DIRECTION_DOWN,n=s!==this.pY,i=o(e.deltaY))),e.direction=a,n&&i>t.threshold&&a&t.direction;},n.attrTest=function(e){return AttrRecognizer.prototype.attrTest.call(this,e)&&(this.state&STATE_BEGAN||!(this.state&STATE_BEGAN)&&this.directionTest(e));},n.emit=function(t){this.pX=t.deltaX,this.pY=t.deltaY;var o=directionStr(t.direction);o&&(t.additionalEvent=this.options.event+o),e.prototype.emit.call(this,t);},t;}(AttrRecognizer),SwipeRecognizer=function(e){function t(t){return void 0===t&&(t={}),e.call(this,_extends({event:"swipe",threshold:10,velocity:.3,direction:DIRECTION_HORIZONTAL|DIRECTION_VERTICAL,pointers:1},t))||this;}_inheritsLoose(t,e);var o=t.prototype;return o.getTouchAction=function(){return PanRecognizer.prototype.getTouchAction.call(this);},o.attrTest=function(t){var o=this.options.direction,n;return o&(DIRECTION_HORIZONTAL|DIRECTION_VERTICAL)?n=t.overallVelocity:o&DIRECTION_HORIZONTAL?n=t.overallVelocityX:o&DIRECTION_VERTICAL&&(n=t.overallVelocityY),e.prototype.attrTest.call(this,t)&&o&t.offsetDirection&&t.distance>this.options.threshold&&t.maxPointers===this.options.pointers&&abs(n)>this.options.velocity&&t.eventType&INPUT_END;},o.emit=function(e){var t=directionStr(e.offsetDirection);t&&this.manager.emit(this.options.event+t,e),this.manager.emit(this.options.event,e);},t;}(AttrRecognizer),PinchRecognizer=function(e){var o=Math.abs;function t(t){return void 0===t&&(t={}),e.call(this,_extends({event:"pinch",threshold:0,pointers:2},t))||this;}_inheritsLoose(t,e);var n=t.prototype;return n.getTouchAction=function(){return [TOUCH_ACTION_NONE];},n.attrTest=function(t){return e.prototype.attrTest.call(this,t)&&(o(t.scale-1)>this.options.threshold||this.state&STATE_BEGAN);},n.emit=function(t){if(1!==t.scale){var o=1>t.scale?"in":"out";t.additionalEvent=this.options.event+o;}e.prototype.emit.call(this,t);},t;}(AttrRecognizer),RotateRecognizer=function(e){var o=Math.abs;function t(t){return void 0===t&&(t={}),e.call(this,_extends({event:"rotate",threshold:0,pointers:2},t))||this;}_inheritsLoose(t,e);var n=t.prototype;return n.getTouchAction=function(){return [TOUCH_ACTION_NONE];},n.attrTest=function(t){return e.prototype.attrTest.call(this,t)&&(o(t.rotation)>this.options.threshold||this.state&STATE_BEGAN);},t;}(AttrRecognizer),PressRecognizer=function(e){function t(t){var o;return void 0===t&&(t={}),o=e.call(this,_extends({event:"press",pointers:1,time:251,threshold:9},t))||this,o._timer=null,o._input=null,o;}_inheritsLoose(t,e);var o=t.prototype;return o.getTouchAction=function(){return [TOUCH_ACTION_AUTO];},o.process=function(e){var t=this,o=this.options,n=e.pointers.length===o.pointers,i=e.distance<o.threshold,a=e.deltaTime>o.time;if(this._input=e,!i||!n||e.eventType&(INPUT_END|INPUT_CANCEL)&&!a)this.reset();else if(e.eventType&INPUT_START)this.reset(),this._timer=setTimeout(function(){t.state=STATE_RECOGNIZED,t.tryEmit();},o.time);else if(e.eventType&INPUT_END)return STATE_RECOGNIZED;return STATE_FAILED;},o.reset=function(){clearTimeout(this._timer);},o.emit=function(e){this.state!==STATE_RECOGNIZED||(e&&e.eventType&INPUT_END?this.manager.emit(this.options.event+"up",e):(this._input.timeStamp=now(),this.manager.emit(this.options.event,this._input)));},t;}(Recognizer);function deprecate(t,o,n){return function(){var i=new Error("get-stack-trace"),e=i&&i.stack?i.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",a=window.console&&(window.console.warn||window.console.log);return a&&a.call(window.console,"DEPRECATED METHOD: "+o+"\n"+n+" AT \n",e),t.apply(this,arguments);};}var extend$1$1=deprecate(function(e,t,o){for(var n=Object.keys(t),a=0;a<n.length;)(!o||o&&void 0===e[n[a]])&&(e[n[a]]=t[n[a]]),a++;return e;},"extend","Use `assign`."),merge$1=deprecate(function(e,t){return extend$1$1(e,t,!0);},"merge","Use `assign`.");function inherit(e,t,o){var n=t.prototype,i;i=e.prototype=Object.create(n),i.constructor=e,i._super=n,o&&assign$1(i,o);}function bindFn(e,t){return function(){return e.apply(t,arguments);};}var Hammer=function(){var e=function(e,t){return void 0===t&&(t={}),new Manager(e,_extends({recognizers:[[RotateRecognizer,{enable:!1}],[PinchRecognizer,{enable:!1},["rotate"]],[SwipeRecognizer,{direction:DIRECTION_HORIZONTAL}],[PanRecognizer,{direction:DIRECTION_HORIZONTAL},["swipe"]],[TapRecognizer],[TapRecognizer,{event:"doubletap",taps:2},["tap"]],[PressRecognizer]]},t));};return e.VERSION="2.0.15",e.DIRECTION_ALL=DIRECTION_ALL,e.DIRECTION_DOWN=DIRECTION_DOWN,e.DIRECTION_LEFT=DIRECTION_LEFT,e.DIRECTION_RIGHT=DIRECTION_RIGHT,e.DIRECTION_UP=DIRECTION_UP,e.DIRECTION_HORIZONTAL=DIRECTION_HORIZONTAL,e.DIRECTION_VERTICAL=DIRECTION_VERTICAL,e.DIRECTION_NONE=DIRECTION_NONE,e.DIRECTION_DOWN=DIRECTION_DOWN,e.INPUT_START=INPUT_START,e.INPUT_MOVE=INPUT_MOVE,e.INPUT_END=INPUT_END,e.INPUT_CANCEL=INPUT_CANCEL,e.STATE_POSSIBLE=STATE_POSSIBLE,e.STATE_BEGAN=STATE_BEGAN,e.STATE_CHANGED=STATE_CHANGED,e.STATE_ENDED=STATE_ENDED,e.STATE_RECOGNIZED=STATE_RECOGNIZED,e.STATE_CANCELLED=STATE_CANCELLED,e.STATE_FAILED=STATE_FAILED,e.Manager=Manager,e.Input=Input,e.TouchAction=TouchAction,e.TouchInput=TouchInput,e.MouseInput=MouseInput,e.PointerEventInput=PointerEventInput,e.TouchMouseInput=TouchMouseInput,e.SingleTouchInput=SingleTouchInput,e.Recognizer=Recognizer,e.AttrRecognizer=AttrRecognizer,e.Tap=TapRecognizer,e.Pan=PanRecognizer,e.Swipe=SwipeRecognizer,e.Pinch=PinchRecognizer,e.Rotate=RotateRecognizer,e.Press=PressRecognizer,e.on=addEventListeners,e.off=removeEventListeners,e.each=each,e.merge=merge$1,e.extend=extend$1$1,e.bindFn=bindFn,e.assign=assign$1,e.inherit=inherit,e.bindFn=bindFn,e.prefixed=prefixed,e.toArray=toArray$1$1,e.inArray=inArray,e.uniqueArray=uniqueArray,e.splitStr=splitStr,e.boolOrFn=boolOrFn,e.hasParent=hasParent$1$1,e.addEventListeners=addEventListeners,e.removeEventListeners=removeEventListeners,e.defaults=defaults,e;}(),hammer=createCommonjsModule$2$1(function(e){function t(){var e=function(){};return {on:e,off:e,destroy:e,emit:e,get:function(){return {set:e};}};}if("undefined"!=typeof window){var o=window.Hammer||Hammer;e.exports=o;}else e.exports=function(){return t();};}),hammer$1=Object.freeze({default:hammer,__moduleExports:hammer});function Activator(e){this.active=!1,this.dom={container:e},this.dom.overlay=document.createElement("div"),this.dom.overlay.className="vis-overlay",this.dom.container.appendChild(this.dom.overlay),this.hammer=hammer(this.dom.overlay),this.hammer.on("tap",this._onTapOverlay.bind(this));var t=this;["tap","doubletap","press","pinch","pan","panstart","panmove","panend"].forEach(function(e){t.hammer.on(e,function(e){e.stopPropagation();});}),document&&document.body&&(this.onClick=function(o){_hasParent(o.target,e)||t.deactivate();},document.body.addEventListener("click",this.onClick)),this.keycharm!==void 0&&this.keycharm.destroy(),this.keycharm=keycharm(),this.escListener=this.deactivate.bind(this);}componentEmitter(Activator.prototype),Activator.current=null,Activator.prototype.destroy=function(){this.deactivate(),this.dom.overlay.parentNode.removeChild(this.dom.overlay),this.onClick&&document.body.removeEventListener("click",this.onClick),this.keycharm!==void 0&&this.keycharm.destroy(),this.keycharm=null,this.hammer.destroy(),this.hammer=null;},Activator.prototype.activate=function(){Activator.current&&Activator.current.deactivate(),Activator.current=this,this.active=!0,this.dom.overlay.style.display="none",util$2.addClassName(this.dom.container,"vis-active"),this.emit("change"),this.emit("activate"),this.keycharm.bind("esc",this.escListener);},Activator.prototype.deactivate=function(){this.active=!1,this.dom.overlay.style.display="",util$2.removeClassName(this.dom.container,"vis-active"),this.keycharm.unbind("esc",this.escListener),this.emit("change"),this.emit("deactivate");},Activator.prototype._onTapOverlay=function(e){this.activate(),e.stopPropagation();};function _hasParent(e,t){for(;e;){if(e===t)return !0;e=e.parentNode;}return !1;}var Activator_1=Activator,locales=createCommonjsModule$2$1(function(e,t){t.en={edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Node",addEdge:"Add Edge",editNode:"Edit Node",editEdge:"Edit Edge",addDescription:"Click in an empty space to place a new node.",edgeDescription:"Click on a node and drag the edge to another node to connect them.",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."},t.en_EN=t.en,t.en_US=t.en,t.de={edit:"Editieren",del:"L\xF6sche Auswahl",back:"Zur\xFCck",addNode:"Knoten hinzuf\xFCgen",addEdge:"Kante hinzuf\xFCgen",editNode:"Knoten editieren",editEdge:"Kante editieren",addDescription:"Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.",edgeDescription:"Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.",editEdgeDescription:"Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.",createEdgeError:"Es ist nicht m\xF6glich, Kanten mit Clustern zu verbinden.",deleteClusterError:"Cluster k\xF6nnen nicht gel\xF6scht werden.",editClusterError:"Cluster k\xF6nnen nicht editiert werden."},t.de_DE=t.de,t.es={edit:"Editar",del:"Eliminar selecci\xF3n",back:"Atr\xE1s",addNode:"A\xF1adir nodo",addEdge:"A\xF1adir arista",editNode:"Editar nodo",editEdge:"Editar arista",addDescription:"Haga clic en un lugar vac\xEDo para colocar un nuevo nodo.",edgeDescription:"Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.",editEdgeDescription:"Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.",createEdgeError:"No se puede conectar una arista a un grupo.",deleteClusterError:"No es posible eliminar grupos.",editClusterError:"No es posible editar grupos."},t.es_ES=t.es,t.it={edit:"Modifica",del:"Cancella la selezione",back:"Indietro",addNode:"Aggiungi un nodo",addEdge:"Aggiungi un vertice",editNode:"Modifica il nodo",editEdge:"Modifica il vertice",addDescription:"Clicca per aggiungere un nuovo nodo",edgeDescription:"Clicca su un nodo e trascinalo ad un altro nodo per connetterli.",editEdgeDescription:"Clicca sui Punti di controllo e trascinali ad un nodo per connetterli.",createEdgeError:"Non si possono collegare vertici ad un cluster",deleteClusterError:"I cluster non possono essere cancellati",editClusterError:"I clusters non possono essere modificati."},t.it_IT=t.it,t.nl={edit:"Wijzigen",del:"Selectie verwijderen",back:"Terug",addNode:"Node toevoegen",addEdge:"Link toevoegen",editNode:"Node wijzigen",editEdge:"Link wijzigen",addDescription:"Klik op een leeg gebied om een nieuwe node te maken.",edgeDescription:"Klik op een node en sleep de link naar een andere node om ze te verbinden.",editEdgeDescription:"Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.",createEdgeError:"Kan geen link maken naar een cluster.",deleteClusterError:"Clusters kunnen niet worden verwijderd.",editClusterError:"Clusters kunnen niet worden aangepast."},t.nl_NL=t.nl,t.nl_BE=t.nl,t["pt-br"]={edit:"Editar",del:"Remover selecionado",back:"Voltar",addNode:"Adicionar n\xF3",addEdge:"Adicionar aresta",editNode:"Editar n\xF3",editEdge:"Editar aresta",addDescription:"Clique em um espa\xE7o em branco para adicionar um novo n\xF3",edgeDescription:"Clique em um n\xF3 e arraste a aresta at\xE9 outro n\xF3 para conect\xE1-los",editEdgeDescription:"Clique nos pontos de controle e os arraste para um n\xF3 para conect\xE1-los",createEdgeError:"N\xE3o foi poss\xEDvel linkar arestas a um cluster.",deleteClusterError:"Clusters n\xE3o puderam ser removidos.",editClusterError:"Clusters n\xE3o puderam ser editados."},t["pt-BR"]=t["pt-br"],t.pt_BR=t["pt-br"],t.pt_br=t["pt-br"],t.ru={edit:"\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C",del:"\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u043E\u0435",back:"\u041D\u0430\u0437\u0430\u0434",addNode:"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0443\u0437\u0435\u043B",addEdge:"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0440\u0435\u0431\u0440\u043E",editNode:"\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0443\u0437\u0435\u043B",editEdge:"\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0440\u0435\u0431\u0440\u043E",addDescription:"\u041A\u043B\u0438\u043A\u043D\u0438\u0442\u0435 \u0432 \u0441\u0432\u043E\u0431\u043E\u0434\u043D\u043E\u0435 \u043C\u0435\u0441\u0442\u043E, \u0447\u0442\u043E\u0431\u044B \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043D\u043E\u0432\u044B\u0439 \u0443\u0437\u0435\u043B.",edgeDescription:"\u041A\u043B\u0438\u043A\u043D\u0438\u0442\u0435 \u043D\u0430 \u0443\u0437\u0435\u043B \u0438 \u043F\u0440\u043E\u0442\u044F\u043D\u0438\u0442\u0435 \u0440\u0435\u0431\u0440\u043E \u043A \u0434\u0440\u0443\u0433\u043E\u043C\u0443 \u0443\u0437\u043B\u0443, \u0447\u0442\u043E\u0431\u044B \u0441\u043E\u0435\u0434\u0438\u043D\u0438\u0442\u044C \u0438\u0445.",editEdgeDescription:"\u041A\u043B\u0438\u043A\u043D\u0438\u0442\u0435 \u043D\u0430 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C\u043D\u044B\u0435 \u0442\u043E\u0447\u043A\u0438 \u0438 \u043F\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u0438\u0445 \u0432 \u0443\u0437\u0435\u043B, \u0447\u0442\u043E\u0431\u044B \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u044C\u0441\u044F \u043A \u043D\u0435\u043C\u0443.",createEdgeError:"\u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0441\u043E\u0435\u0434\u0438\u043D\u0438\u0442\u044C \u0440\u0435\u0431\u0440\u0430 \u0432 \u043A\u043B\u0430\u0441\u0442\u0435\u0440.",deleteClusterError:"\u041A\u043B\u0430\u0441\u0442\u0435\u0440\u044B \u043D\u0435 \u043C\u043E\u0433\u0443\u0442 \u0431\u044B\u0442\u044C \u0443\u0434\u0430\u043B\u0435\u043D\u044B",editClusterError:"\u041A\u043B\u0430\u0441\u0442\u0435\u0440\u044B \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B \u0434\u043B\u044F \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F."},t.ru_RU=t.ru,t.cn={edit:"\u7F16\u8F91",del:"\u5220\u9664\u9009\u5B9A",back:"\u8FD4\u56DE",addNode:"\u6DFB\u52A0\u8282\u70B9",addEdge:"\u6DFB\u52A0\u8FDE\u63A5\u7EBF",editNode:"\u7F16\u8F91\u8282\u70B9",editEdge:"\u7F16\u8F91\u8FDE\u63A5\u7EBF",addDescription:"\u5355\u51FB\u7A7A\u767D\u5904\u653E\u7F6E\u65B0\u8282\u70B9\u3002",edgeDescription:"\u5355\u51FB\u67D0\u4E2A\u8282\u70B9\u5E76\u5C06\u8BE5\u8FDE\u63A5\u7EBF\u62D6\u52A8\u5230\u53E6\u4E00\u4E2A\u8282\u70B9\u4EE5\u8FDE\u63A5\u5B83\u4EEC\u3002",editEdgeDescription:"\u5355\u51FB\u63A7\u5236\u8282\u70B9\u5E76\u5C06\u5B83\u4EEC\u62D6\u5230\u8282\u70B9\u4E0A\u8FDE\u63A5\u3002",createEdgeError:"\u65E0\u6CD5\u5C06\u8FDE\u63A5\u7EBF\u8FDE\u63A5\u5230\u7FA4\u96C6\u3002",deleteClusterError:"\u65E0\u6CD5\u5220\u9664\u7FA4\u96C6\u3002",editClusterError:"\u65E0\u6CD5\u7F16\u8F91\u7FA4\u96C6\u3002"},t.zh_CN=t.cn,t.uk={edit:"\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438",del:"\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u043E\u0431\u0440\u0430\u043D\u0435",back:"\u041D\u0430\u0437\u0430\u0434",addNode:"\u0414\u043E\u0434\u0430\u0442\u0438 \u0432\u0443\u0437\u043E\u043B",addEdge:"\u0414\u043E\u0434\u0430\u0442\u0438 \u043A\u0440\u0430\u0439",editNode:"\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u0432\u0443\u0437\u043E\u043B",editEdge:"\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u043A\u0440\u0430\u0439",addDescription:"K\u043B\u0456\u043A\u043D\u0456\u0442\u044C \u043D\u0430 \u0432\u0456\u043B\u044C\u043D\u0435 \u043C\u0456\u0441\u0446\u0435, \u0449\u043E\u0431 \u0434\u043E\u0434\u0430\u0442\u0438 \u043D\u043E\u0432\u0438\u0439 \u0432\u0443\u0437\u043E\u043B.",edgeDescription:"\u041A\u043B\u0456\u043A\u043D\u0456\u0442\u044C \u043D\u0430 \u0432\u0443\u0437\u043E\u043B \u0456 \u043F\u0435\u0440\u0435\u0442\u044F\u0433\u043D\u0456\u0442\u044C \u043A\u0440\u0430\u0439 \u0434\u043E \u0456\u043D\u0448\u043E\u0433\u043E \u0432\u0443\u0437\u043B\u0430, \u0449\u043E\u0431 \u0457\u0445 \u0437'\u0454\u0434\u043D\u0430\u0442\u0438.",editEdgeDescription:"\u041A\u043B\u0456\u043A\u043D\u0456\u0442\u044C \u043D\u0430 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C\u043D\u0456 \u0442\u043E\u0447\u043A\u0438 \u0456 \u043F\u0435\u0440\u0435\u0442\u044F\u0433\u043D\u0456\u0442\u044C \u0457\u0445 \u0443 \u0432\u0443\u0437\u043E\u043B, \u0449\u043E\u0431 \u043F\u0456\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u0438\u0441\u044F \u0434\u043E \u043D\u044C\u043E\u0433\u043E.",createEdgeError:"\u041D\u0435 \u043C\u043E\u0436\u043B\u0438\u0432\u043E \u043E\u0431'\u0454\u0434\u043D\u0430\u0442\u0438 \u043A\u0440\u0430\u0457 \u0432 \u0433\u0440\u0443\u043F\u0443.",deleteClusterError:"\u0413\u0440\u0443\u043F\u0438 \u043D\u0435 \u043C\u043E\u0436\u0443\u0442\u044C \u0431\u0443\u0442\u0438 \u0432\u0438\u0434\u0430\u043B\u0435\u043D\u0456.",editClusterError:"\u0413\u0440\u0443\u043F\u0438 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0456 \u0434\u043B\u044F \u0440\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u043D\u043D\u044F."},t.uk_UA=t.uk,t.fr={edit:"Editer",del:"Effacer la selection",back:"Retour",addNode:"Ajouter un noeud",addEdge:"Ajouter un lien",editNode:"Editer le noeud",editEdge:"Editer le lien",addDescription:"Cliquez dans un endroit vide pour placer un noeud.",edgeDescription:"Cliquez sur un noeud et glissez le lien vers un autre noeud pour les connecter.",editEdgeDescription:"Cliquez sur les points de contr\xF4le et glissez-les pour connecter un noeud.",createEdgeError:"Impossible de cr\xE9er un lien vers un cluster.",deleteClusterError:"Les clusters ne peuvent pas \xEAtre \xE9ffac\xE9s.",editClusterError:"Les clusters ne peuvent pas \xEAtre \xE9dites."},t.fr_FR=t.fr,t.cs={edit:"Upravit",del:"Smazat v\xFDb\u011Br",back:"Zp\u011Bt",addNode:"P\u0159idat vrchol",addEdge:"P\u0159idat hranu",editNode:"Upravit vrchol",editEdge:"Upravit hranu",addDescription:"Kluknut\xEDm do pr\xE1zdn\xE9ho prostoru m\u016F\u017Eete p\u0159idat nov\xFD vrchol.",edgeDescription:"P\u0159eta\u017Een\xEDm z jednoho vrcholu do druh\xE9ho m\u016F\u017Eete spojit tyto vrcholy novou hranou.",editEdgeDescription:"P\u0159eta\u017Een\xEDm kontroln\xEDho vrcholu hrany ji m\u016F\u017Eete p\u0159ipojit k jin\xE9mu vrcholu.",createEdgeError:"Nelze p\u0159ipojit hranu ke shluku.",deleteClusterError:"Nelze mazat shluky.",editClusterError:"Nelze upravovat shluky."},t.cs_CZ=t.cs;});function _classCallCheck$1$1(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function");}var classCallCheck$1$1=_classCallCheck$1$1;function _defineProperties$1$1(e,t){for(var o=0,n;o<t.length;o++)n=t[o],n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}function _createClass$1$1(e,t,o){return t&&_defineProperties$1$1(e.prototype,t),o&&_defineProperties$1$1(e,o),e;}var createClass$1$1=_createClass$1$1,CachedImage=function(){var t=Math.floor;function e(){classCallCheck$1$1(this,e),this.NUM_ITERATIONS=4,this.image=new Image(),this.canvas=document.createElement("canvas");}return createClass$1$1(e,[{key:"init",value:function(){if(!this.initialized()){this.src=this.image.src;var e=this.image.width,o=this.image.height;this.width=e,this.height=o;var n=t(o/2),i=t(o/4),a=t(o/8),d=t(o/16),s=t(e/2),r=t(e/4),l=t(e/8),c=t(e/16);this.canvas.width=3*r,this.canvas.height=n,this.coordinates=[[0,0,s,n],[s,0,r,i],[s,i,l,a],[5*l,i,c,d]],this._fillMipMap();}}},{key:"initialized",value:function(){return void 0!==this.coordinates;}},{key:"_fillMipMap",value:function(){var e=this.canvas.getContext("2d"),t=this.coordinates[0];e.drawImage(this.image,t[0],t[1],t[2],t[3]);for(var o=1;o<this.NUM_ITERATIONS;o++){var n=this.coordinates[o-1],i=this.coordinates[o];e.drawImage(this.canvas,n[0],n[1],n[2],n[3],i[0],i[1],i[2],i[3]);}}},{key:"drawImageAtPosition",value:function(e,t,o,n,i,a){if(this.initialized())if(2<t){t*=.5;for(var d=0;2<t&&d<this.NUM_ITERATIONS;)t*=.5,d+=1;d>=this.NUM_ITERATIONS&&(d=this.NUM_ITERATIONS-1);var s=this.coordinates[d];e.drawImage(this.canvas,s[0],s[1],s[2],s[3],o,n,i,a);}else e.drawImage(this.image,o,n,i,a);}}]),e;}(),Images=function(){function e(t){classCallCheck$1$1(this,e),this.images={},this.imageBroken={},this.callback=t;}return createClass$1$1(e,[{key:"_tryloadBrokenUrl",value:function(e,t,o){return void 0===e||void 0===o?void 0:void 0===t?void console.warn("No broken url image defined"):void(o.image.onerror=function(){console.error("Could not load brokenImage:",t);},o.image.src=t);}},{key:"_redrawWithImage",value:function(e){this.callback&&this.callback(e);}},{key:"load",value:function(e,t){var o=this,n=this.images[e];if(n)return n;var i=new CachedImage();return this.images[e]=i,i.image.onload=function(){o._fixImageCoordinates(i.image),i.init(),o._redrawWithImage(i);},i.image.onerror=function(){console.error("Could not load image:",e),o._tryloadBrokenUrl(e,t,i);},i.image.src=e,i;}},{key:"_fixImageCoordinates",value:function(e){0===e.width&&(document.body.appendChild(e),e.width=e.offsetWidth,e.height=e.offsetHeight,document.body.removeChild(e));}}]),e;}(),Groups=function(){function e(){classCallCheck$1$1(this,e),this.clear(),this.defaultIndex=0,this.groupsArray=[],this.groupIndex=0,this.defaultGroups=[{border:"#2B7CE9",background:"#97C2FC",highlight:{border:"#2B7CE9",background:"#D2E5FF"},hover:{border:"#2B7CE9",background:"#D2E5FF"}},{border:"#FFA500",background:"#FFFF00",highlight:{border:"#FFA500",background:"#FFFFA3"},hover:{border:"#FFA500",background:"#FFFFA3"}},{border:"#FA0A10",background:"#FB7E81",highlight:{border:"#FA0A10",background:"#FFAFB1"},hover:{border:"#FA0A10",background:"#FFAFB1"}},{border:"#41A906",background:"#7BE141",highlight:{border:"#41A906",background:"#A1EC76"},hover:{border:"#41A906",background:"#A1EC76"}},{border:"#E129F0",background:"#EB7DF4",highlight:{border:"#E129F0",background:"#F0B3F5"},hover:{border:"#E129F0",background:"#F0B3F5"}},{border:"#7C29F0",background:"#AD85E4",highlight:{border:"#7C29F0",background:"#D3BDF0"},hover:{border:"#7C29F0",background:"#D3BDF0"}},{border:"#C37F00",background:"#FFA807",highlight:{border:"#C37F00",background:"#FFCA66"},hover:{border:"#C37F00",background:"#FFCA66"}},{border:"#4220FB",background:"#6E6EFD",highlight:{border:"#4220FB",background:"#9B9BFD"},hover:{border:"#4220FB",background:"#9B9BFD"}},{border:"#FD5A77",background:"#FFC0CB",highlight:{border:"#FD5A77",background:"#FFD1D9"},hover:{border:"#FD5A77",background:"#FFD1D9"}},{border:"#4AD63A",background:"#C2FABC",highlight:{border:"#4AD63A",background:"#E6FFE3"},hover:{border:"#4AD63A",background:"#E6FFE3"}},{border:"#990000",background:"#EE0000",highlight:{border:"#BB0000",background:"#FF3333"},hover:{border:"#BB0000",background:"#FF3333"}},{border:"#FF6000",background:"#FF6000",highlight:{border:"#FF6000",background:"#FF6000"},hover:{border:"#FF6000",background:"#FF6000"}},{border:"#97C2FC",background:"#2B7CE9",highlight:{border:"#D2E5FF",background:"#2B7CE9"},hover:{border:"#D2E5FF",background:"#2B7CE9"}},{border:"#399605",background:"#255C03",highlight:{border:"#399605",background:"#255C03"},hover:{border:"#399605",background:"#255C03"}},{border:"#B70054",background:"#FF007E",highlight:{border:"#B70054",background:"#FF007E"},hover:{border:"#B70054",background:"#FF007E"}},{border:"#AD85E4",background:"#7C29F0",highlight:{border:"#D3BDF0",background:"#7C29F0"},hover:{border:"#D3BDF0",background:"#7C29F0"}},{border:"#4557FA",background:"#000EA1",highlight:{border:"#6E6EFD",background:"#000EA1"},hover:{border:"#6E6EFD",background:"#000EA1"}},{border:"#FFC0CB",background:"#FD5A77",highlight:{border:"#FFD1D9",background:"#FD5A77"},hover:{border:"#FFD1D9",background:"#FD5A77"}},{border:"#C2FABC",background:"#74D66A",highlight:{border:"#E6FFE3",background:"#74D66A"},hover:{border:"#E6FFE3",background:"#74D66A"}},{border:"#EE0000",background:"#990000",highlight:{border:"#FF3333",background:"#BB0000"},hover:{border:"#FF3333",background:"#BB0000"}}],this.options={},this.defaultOptions={useDefaultGroups:!0},util$2.extend(this.options,this.defaultOptions);}return createClass$1$1(e,[{key:"setOptions",value:function(e){var t=["useDefaultGroups"];if(void 0!==e)for(var o in e)if(e.hasOwnProperty(o)&&-1===t.indexOf(o)){var n=e[o];this.add(o,n);}}},{key:"clear",value:function(){this.groups={},this.groupsArray=[];}},{key:"get",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],o=this.groups[e];if(void 0===o&&t)if(!1===this.options.useDefaultGroups&&0<this.groupsArray.length){var n=this.groupIndex%this.groupsArray.length;this.groupIndex++,o={},o.color=this.groups[this.groupsArray[n]],this.groups[e]=o;}else{var i=this.defaultIndex%this.defaultGroups.length;this.defaultIndex++,o={},o.color=this.defaultGroups[i],this.groups[e]=o;}return o;}},{key:"add",value:function(e,t){return this.groups[e]=t,this.groupsArray.push(e),t;}}]),e;}();function _arrayWithHoles(e){if(Array.isArray(e))return e;}var arrayWithHoles=_arrayWithHoles;function _iterableToArrayLimit(e,t){var o=[],n=!0,i=!1,a=void 0;try{for(var d=e[Symbol.iterator](),s;!(n=(s=d.next()).done)&&(o.push(s.value),!(t&&o.length===t));n=!0);}catch(e){i=!0,a=e;}finally{try{n||null==d["return"]||d["return"]();}finally{if(i)throw a;}}return o;}var iterableToArrayLimit=_iterableToArrayLimit;function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance");}var nonIterableRest=_nonIterableRest;function _slicedToArray(e,t){return arrayWithHoles(e)||iterableToArrayLimit(e,t)||nonIterableRest();}var slicedToArray=_slicedToArray,_typeof_1$2$1=createCommonjsModule$2$1(function(e){function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e;}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e;},t(e);}function o(n){return e.exports="function"==typeof Symbol&&"symbol"===t(Symbol.iterator)?o=function(e){return t(e);}:o=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":t(e);},o(n);}e.exports=o;}),ComponentUtil=function(){var t=Math.cos,o=Math.sin;function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"choosify",value:function(e,t){var o=["node","edge","label"],n=!0,i=util$2.topMost(t,"chosen");if("boolean"==typeof i)n=i;else if("object"===_typeof_1$2$1(i)){if(-1===o.indexOf(e))throw new Error("choosify: subOption '"+e+"' should be one of '"+o.join("', '")+"'");var a=util$2.topMost(t,["chosen",e]);("boolean"==typeof a||"function"==typeof a)&&(n=a);}return n;}},{key:"pointInRect",value:function(e,n,i){if(0>=e.width||0>=e.height)return !1;if(void 0!==i){var a={x:n.x-i.x,y:n.y-i.y};if(0!==i.angle){var d=-i.angle,s={x:t(d)*a.x-o(d)*a.y,y:o(d)*a.x+t(d)*a.y};n=s;}else n=a;}var r=e.x+e.width,l=e.y+e.width;return e.left<n.x&&r>n.x&&e.top<n.y&&l>n.y;}},{key:"isValidLabel",value:function(e){return "string"==typeof e&&""!==e;}}]),e;}(),LabelAccumulator=function(){function e(t){classCallCheck$1$1(this,e),this.measureText=t,this.current=0,this.width=0,this.height=0,this.lines=[];}return createClass$1$1(e,[{key:"_add",value:function(e,t){var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"normal";void 0===this.lines[e]&&(this.lines[e]={width:0,height:0,blocks:[]});var n=t;(void 0===t||""===t)&&(n=" ");var i=this.measureText(n,o),a=Object.assign({},i.values);a.text=t,a.width=i.width,a.mod=o,(void 0===t||""===t)&&(a.width=0),this.lines[e].blocks.push(a),this.lines[e].width+=a.width;}},{key:"curWidth",value:function(){var e=this.lines[this.current];return void 0===e?0:e.width;}},{key:"append",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"normal";this._add(this.current,e,t);}},{key:"newLine",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"normal";this._add(this.current,e,t),this.current++;}},{key:"determineLineHeights",value:function(){for(var e=0;e<this.lines.length;e++){var t=this.lines[e],o=0;if(void 0!==t.blocks)for(var n=0,i;n<t.blocks.length;n++)i=t.blocks[n],o<i.height&&(o=i.height);t.height=o;}}},{key:"determineLabelSize",value:function(){for(var e=0,t=0,o=0,n;o<this.lines.length;o++)n=this.lines[o],n.width>e&&(e=n.width),t+=n.height;this.width=e,this.height=t;}},{key:"removeEmptyBlocks",value:function(){for(var e=[],t=0,o;t<this.lines.length;t++)if(o=this.lines[t],0!==o.blocks.length){if(t==this.lines.length-1&&0===o.width)continue;var n={};Object.assign(n,o),n.blocks=[];for(var i=void 0,a=[],d=0,s;d<o.blocks.length;d++)s=o.blocks[d],0===s.width?void 0===i&&(i=s):a.push(s);0===a.length&&void 0!==i&&a.push(i),n.blocks=a,e.push(n);}return e;}},{key:"finalize",value:function(){this.determineLineHeights(),this.determineLabelSize();var e=this.removeEmptyBlocks();return {width:this.width,height:this.height,lines:e};}}]),e;}(),tagPattern={"<b>":/<b>/,"<i>":/<i>/,"<code>":/<code>/,"</b>":/<\/b>/,"</i>":/<\/i>/,"</code>":/<\/code>/,"*":/\*/,_:/\_/,"`":/`/,afterBold:/[^\*]/,afterItal:/[^_]/,afterMono:/[^`]/},MarkupAccumulator=function(){function e(t){classCallCheck$1$1(this,e),this.text=t,this.bold=!1,this.ital=!1,this.mono=!1,this.spacing=!1,this.position=0,this.buffer="",this.modStack=[],this.blocks=[];}return createClass$1$1(e,[{key:"mod",value:function(){return 0===this.modStack.length?"normal":this.modStack[0];}},{key:"modName",value:function(){return 0===this.modStack.length?"normal":"mono"===this.modStack[0]?"mono":this.bold&&this.ital?"boldital":this.bold?"bold":this.ital?"ital":void 0;}},{key:"emitBlock",value:function(){this.spacing&&(this.add(" "),this.spacing=!1),0<this.buffer.length&&(this.blocks.push({text:this.buffer,mod:this.modName()}),this.buffer="");}},{key:"add",value:function(e){" "===e&&(this.spacing=!0),this.spacing&&(this.buffer+=" ",this.spacing=!1)," "!=e&&(this.buffer+=e);}},{key:"parseWS",value:function(e){return !!/[ \t]/.test(e)&&(this.mono?this.add(e):this.spacing=!0,!0);}},{key:"setTag",value:function(e){this.emitBlock(),this[e]=!0,this.modStack.unshift(e);}},{key:"unsetTag",value:function(e){this.emitBlock(),this[e]=!1,this.modStack.shift();}},{key:"parseStartTag",value:function(e,t){return !(this.mono||this[e]||!this.match(t))&&(this.setTag(e),!0);}},{key:"match",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],o=this.prepareRegExp(e),n=slicedToArray(o,2),i=n[0],a=n[1],d=i.test(this.text.substr(this.position,a));return d&&t&&(this.position+=a-1),d;}},{key:"parseEndTag",value:function(e,t,o){var n=this.mod()===e;return n="mono"===e?n&&this.mono:n&&!this.mono,!!(n&&this.match(t))&&(void 0===o?this.unsetTag(e):(this.position===this.text.length-1||this.match(o,!1))&&this.unsetTag(e),!0);}},{key:"replace",value:function(e,t){return !!this.match(e)&&(this.add(t),this.position+=length-1,!0);}},{key:"prepareRegExp",value:function(e){var t,o;if(e instanceof RegExp)o=e,t=1;else{var n=tagPattern[e];o=void 0===n?new RegExp(e):n,t=e.length;}return [o,t];}}]),e;}(),LabelSplitter=function(){function e(t,o,n,i){var a=this;classCallCheck$1$1(this,e),this.ctx=t,this.parent=o,this.selected=n,this.hover=i;this.lines=new LabelAccumulator(function(e,o){if(void 0===e)return 0;var d=a.parent.getFormattingValues(t,n,i,o),s=0;if(""!==e){var r=a.ctx.measureText(e);s=r.width;}return {width:s,values:d};});}return createClass$1$1(e,[{key:"process",value:function(e){if(!ComponentUtil.isValidLabel(e))return this.lines.finalize();var t=this.parent.fontOptions;e=e.replace(/\r\n/g,"\n"),e=e.replace(/\r/g,"\n");var o=(e+"").split("\n"),n=o.length;if(t.multi){for(var a=0,d;a<n;a++)if(d=this.splitBlocks(o[a],t.multi),void 0!==d){if(0===d.length){this.lines.newLine("");continue;}if(0<t.maxWdt)for(var s=0;s<d.length;s++){var r=d[s].mod,l=d[s].text;this.splitStringIntoLines(l,r,!0);}else for(var c=0;c<d.length;c++){var u=d[c].mod,p=d[c].text;this.lines.append(p,u);}this.lines.newLine();}}else if(0<t.maxWdt)for(var h=0;h<n;h++)this.splitStringIntoLines(o[h]);else for(var m=0;m<n;m++)this.lines.newLine(o[m]);return this.lines.finalize();}},{key:"decodeMarkupSystem",value:function(e){var t="none";return "markdown"===e||"md"===e?t="markdown":(!0===e||"html"===e)&&(t="html"),t;}},{key:"splitHtmlBlocks",value:function(e){for(var t=new MarkupAccumulator(e),o=function(e){if(/&/.test(e)){var o=t.replace(t.text,"&lt;","<")||t.replace(t.text,"&amp;","&");return o||t.add("&"),!0;}return !1;};t.position<t.text.length;){var n=t.text.charAt(t.position),i=t.parseWS(n)||/</.test(n)&&(t.parseStartTag("bold","<b>")||t.parseStartTag("ital","<i>")||t.parseStartTag("mono","<code>")||t.parseEndTag("bold","</b>")||t.parseEndTag("ital","</i>")||t.parseEndTag("mono","</code>"))||o(n);i||t.add(n),t.position++;}return t.emitBlock(),t.blocks;}},{key:"splitMarkdownBlocks",value:function(e){for(var t=this,o=new MarkupAccumulator(e),n=!0,i=function(e){return !!/\\/.test(e)&&(o.position<t.text.length+1&&(o.position++,e=t.text.charAt(o.position),/ \t/.test(e)?o.spacing=!0:(o.add(e),n=!1)),!0);};o.position<o.text.length;){var a=o.text.charAt(o.position),d=o.parseWS(a)||i(a)||(n||o.spacing)&&(o.parseStartTag("bold","*")||o.parseStartTag("ital","_")||o.parseStartTag("mono","`"))||o.parseEndTag("bold","*","afterBold")||o.parseEndTag("ital","_","afterItal")||o.parseEndTag("mono","`","afterMono");d||(o.add(a),n=!1),o.position++;}return o.emitBlock(),o.blocks;}},{key:"splitBlocks",value:function(e,t){var o=this.decodeMarkupSystem(t);return "none"===o?[{text:e,mod:"normal"}]:"markdown"===o?this.splitMarkdownBlocks(e):"html"===o?this.splitHtmlBlocks(e):void 0;}},{key:"overMaxWidth",value:function(e){var t=this.ctx.measureText(e).width;return this.lines.curWidth()+t>this.parent.fontOptions.maxWdt;}},{key:"getLongestFit",value:function(e){for(var t="",o=0;o<e.length;){var n=""===t?"":" ",i=t+n+e[o];if(this.overMaxWidth(i))break;t=i,o++;}return o;}},{key:"getLongestFitWord",value:function(e){for(var t=0;t<e.length&&!this.overMaxWidth(e.slice(0,t));)t++;return t;}},{key:"splitStringIntoLines",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"normal",o=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];this.parent.getFormattingValues(this.ctx,this.selected,this.hover,t),e=e.replace(/^( +)/g,"$1\r"),e=e.replace(/([^\r][^ ]*)( +)/g,"$1\r$2\r");for(var n=e.split("\r"),i;0<n.length;)if(i=this.getLongestFit(n),0===i){var a=n[0],d=this.getLongestFitWord(a);this.lines.newLine(a.slice(0,d),t),n[0]=a.slice(d);}else{var s=i;" "===n[i-1]?i--:" "===n[s]&&s++;var r=n.slice(0,i).join("");i==n.length&&o?this.lines.append(r,t):this.lines.newLine(r,t),n=n.slice(s);}}}]),e;}(),multiFontStyle=["bold","ital","boldital","mono"],Label=function(){var t=Math.max,o=Math.min;function e(t,o){var n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];classCallCheck$1$1(this,e),this.body=t,this.pointToSelf=!1,this.baseSize=void 0,this.fontOptions={},this.setOptions(o),this.size={top:0,left:0,width:0,height:0,yLine:0},this.isEdgeLabel=n;}return createClass$1$1(e,[{key:"setOptions",value:function(e){if(this.elementOptions=e,this.initFontOptions(e.font),ComponentUtil.isValidLabel(e.label)?this.labelDirty=!0:e.label=void 0,void 0!==e.font&&null!==e.font)if("string"==typeof e.font)this.baseSize=this.fontOptions.size;else if("object"===_typeof_1$2$1(e.font)){var t=e.font.size;void 0!==t&&(this.baseSize=t);}}},{key:"initFontOptions",value:function(t){var o=this;return util$2.forEach(multiFontStyle,function(e){o.fontOptions[e]={};}),e.parseFontString(this.fontOptions,t)?void(this.fontOptions.vadjust=0):void util$2.forEach(t,function(e,t){void 0!==e&&null!==e&&"object"!==_typeof_1$2$1(e)&&(o.fontOptions[t]=e);});}},{key:"constrain",value:function(e){var t={constrainWidth:!1,maxWdt:-1,minWdt:-1,constrainHeight:!1,minHgt:-1,valign:"middle"},o=util$2.topMost(e,"widthConstraint");if("number"==typeof o)t.maxWdt=+o,t.minWdt=+o;else if("object"===_typeof_1$2$1(o)){var n=util$2.topMost(e,["widthConstraint","maximum"]);"number"==typeof n&&(t.maxWdt=+n);var i=util$2.topMost(e,["widthConstraint","minimum"]);"number"==typeof i&&(t.minWdt=+i);}var a=util$2.topMost(e,"heightConstraint");if("number"==typeof a)t.minHgt=+a;else if("object"===_typeof_1$2$1(a)){var d=util$2.topMost(e,["heightConstraint","minimum"]);"number"==typeof d&&(t.minHgt=+d);var s=util$2.topMost(e,["heightConstraint","valign"]);"string"==typeof s&&("top"===s||"bottom"===s)&&(t.valign=s);}return t;}},{key:"update",value:function(e,t){this.setOptions(e,!0),this.propagateFonts(t),util$2.deepExtend(this.fontOptions,this.constrain(t)),this.fontOptions.chooser=ComponentUtil.choosify("label",t);}},{key:"adjustSizes",value:function(e){var t=e?e.right+e.left:0;this.fontOptions.constrainWidth&&(this.fontOptions.maxWdt-=t,this.fontOptions.minWdt-=t);var o=e?e.top+e.bottom:0;this.fontOptions.constrainHeight&&(this.fontOptions.minHgt-=o);}},{key:"addFontOptionsToPile",value:function(e,t){for(var o=0;o<t.length;++o)this.addFontToPile(e,t[o]);}},{key:"addFontToPile",value:function(e,t){if(void 0!==t&&void 0!==t.font&&null!==t.font){var o=t.font;e.push(o);}}},{key:"getBasicOptions",value:function(t){for(var o={},i=0;i<t.length;++i){var a=t[i],d={};e.parseFontString(d,a)&&(a=d),util$2.forEach(a,function(e,t){void 0===e||o.hasOwnProperty(t)||(-1===multiFontStyle.indexOf(t)?o[t]=e:o[t]={});});}return o;}},{key:"getFontOption",value:function(t,o,i){for(var a=0,d,s;a<t.length;++a)if(s=t[a],s.hasOwnProperty(o)){if(d=s[o],void 0===d||null===d)continue;var r={};if(e.parseFontString(r,d)&&(d=r),d.hasOwnProperty(i))return d[i];}if(this.fontOptions.hasOwnProperty(i))return this.fontOptions[i];throw new Error("Did not find value for multi-font for property: '"+i+"'");}},{key:"getFontOptions",value:function(e,t){for(var o={},n=["color","size","face","mod","vadjust"],a=0,d;a<n.length;++a)d=n[a],o[d]=this.getFontOption(e,t,d);return o;}},{key:"propagateFonts",value:function(e){var t=this,o=[];this.addFontOptionsToPile(o,e),this.fontOptions=this.getBasicOptions(o);for(var n=function(e){var n=multiFontStyle[e],i=t.fontOptions[n],a=t.getFontOptions(o,n);util$2.forEach(a,function(e,t){i[t]=e;}),i.size=+i.size,i.vadjust=+i.vadjust;},a=0;a<multiFontStyle.length;++a)n(a);}},{key:"draw",value:function(e,t,o,n,i){var a=5<arguments.length&&void 0!==arguments[5]?arguments[5]:"middle";if(void 0!==this.elementOptions.label){var d=this.fontOptions.size*this.body.view.scale;this.elementOptions.label&&d<this.elementOptions.scaling.label.drawThreshold-1||(d>=this.elementOptions.scaling.label.maxVisible&&(d=+this.elementOptions.scaling.label.maxVisible/this.body.view.scale),this.calculateLabelSize(e,n,i,t,o,a),this._drawBackground(e),this._drawText(e,t,this.size.yLine,a,d));}}},{key:"_drawBackground",value:function(e){if(void 0!==this.fontOptions.background&&"none"!==this.fontOptions.background){e.fillStyle=this.fontOptions.background;var t=this.getSize();e.fillRect(t.left,t.top,t.width,t.height);}}},{key:"_drawText",value:function(e,t,o){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"middle",a=4<arguments.length?arguments[4]:void 0,d=this._setAlignment(e,t,o,n),s=slicedToArray(d,2);t=s[0],o=s[1],e.textAlign="left",t-=this.size.width/2,this.fontOptions.valign&&this.size.height>this.size.labelHeight&&("top"===this.fontOptions.valign&&(o-=(this.size.height-this.size.labelHeight)/2),"bottom"===this.fontOptions.valign&&(o+=(this.size.height-this.size.labelHeight)/2));for(var r=0,l;r<this.lineCount;r++)if(l=this.lines[r],l&&l.blocks){var c=0;this.isEdgeLabel||"center"===this.fontOptions.align?c+=(this.size.width-l.width)/2:"right"===this.fontOptions.align&&(c+=this.size.width-l.width);for(var u=0,p;u<l.blocks.length;u++){p=l.blocks[u],e.font=p.font;var h=this._getColor(p.color,a,p.strokeColor),m=slicedToArray(h,2),g=m[0],f=m[1];0<p.strokeWidth&&(e.lineWidth=p.strokeWidth,e.strokeStyle=f,e.lineJoin="round"),e.fillStyle=g,0<p.strokeWidth&&e.strokeText(p.text,t+c,o+p.vadjust),e.fillText(p.text,t+c,o+p.vadjust),c+=p.width;}o+=l.height;}}},{key:"_setAlignment",value:function(e,t,o,n){if(this.isEdgeLabel&&"horizontal"!==this.fontOptions.align&&!1===this.pointToSelf){t=0,o=0;"top"===this.fontOptions.align?(e.textBaseline="alphabetic",o-=4):"bottom"===this.fontOptions.align?(e.textBaseline="hanging",o+=4):e.textBaseline="middle";}else e.textBaseline=n;return [t,o];}},{key:"_getColor",value:function(e,n,i){var a=e||"#000000",d=i||"#ffffff";if(n<=this.elementOptions.scaling.label.drawThreshold){var s=t(0,o(1,1-(this.elementOptions.scaling.label.drawThreshold-n)));a=util$2.overrideOpacity(a,s),d=util$2.overrideOpacity(d,s);}return [a,d];}},{key:"getTextSize",value:function(e){var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],o=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];return this._processLabel(e,t,o),{width:this.size.width,height:this.size.height,lineCount:this.lineCount};}},{key:"getSize",value:function(){var e=this.size.left,t=this.size.top-1;if(this.isEdgeLabel){var o=.5*-this.size.width;switch(this.fontOptions.align){case"middle":e=o,t=.5*-this.size.height;break;case"top":e=o,t=-(this.size.height+2);break;case"bottom":e=o,t=2;}}var n={left:e,top:t,width:this.size.width,height:this.size.height};return n;}},{key:"calculateLabelSize",value:function(e,t,o){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0,i=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=5<arguments.length&&void 0!==arguments[5]?arguments[5]:"middle";this._processLabel(e,t,o),this.size.left=n-.5*this.size.width,this.size.top=i-.5*this.size.height,this.size.yLine=i+.5*(1-this.lineCount)*this.fontOptions.size,"hanging"===a&&(this.size.top+=.5*this.fontOptions.size,this.size.top+=4,this.size.yLine+=4);}},{key:"getFormattingValues",value:function(e,t,o,n){var i=function(e,t,o){return "normal"===t?"mod"===o?"":e[o]:void 0===e[t][o]?e[o]:e[t][o];},a={color:i(this.fontOptions,n,"color"),size:i(this.fontOptions,n,"size"),face:i(this.fontOptions,n,"face"),mod:i(this.fontOptions,n,"mod"),vadjust:i(this.fontOptions,n,"vadjust"),strokeWidth:this.fontOptions.strokeWidth,strokeColor:this.fontOptions.strokeColor};(t||o)&&("normal"===n&&!0===this.fontOptions.chooser&&this.elementOptions.labelHighlightBold?a.mod="bold":"function"==typeof this.fontOptions.chooser&&this.fontOptions.chooser(a,this.elementOptions.id,t,o));var d="";return void 0!==a.mod&&""!==a.mod&&(d+=a.mod+" "),d+=a.size+"px "+a.face,e.font=d.replace(/"/g,""),a.font=e.font,a.height=a.size,a;}},{key:"differentState",value:function(e,t){return e!==this.selectedState||t!==this.hoverState;}},{key:"_processLabelText",value:function(e,t,o,n){var i=new LabelSplitter(e,this,t,o);return i.process(n);}},{key:"_processLabel",value:function(e,t,o){if(!1!==this.labelDirty||this.differentState(t,o)){var n=this._processLabelText(e,t,o,this.elementOptions.label);0<this.fontOptions.minWdt&&n.width<this.fontOptions.minWdt&&(n.width=this.fontOptions.minWdt),this.size.labelHeight=n.height,0<this.fontOptions.minHgt&&n.height<this.fontOptions.minHgt&&(n.height=this.fontOptions.minHgt),this.lines=n.lines,this.lineCount=n.lines.length,this.size.width=n.width,this.size.height=n.height,this.selectedState=t,this.hoverState=o,this.labelDirty=!1;}}},{key:"visible",value:function(){if(0===this.size.width||0===this.size.height||void 0===this.elementOptions.label)return !1;var e=this.fontOptions.size*this.body.view.scale;return !(e<this.elementOptions.scaling.label.drawThreshold-1);}}],[{key:"parseFontString",value:function(e,t){if(!t||"string"!=typeof t)return !1;var o=t.split(" ");return e.size=o[0].replace("px",""),e.face=o[1],e.color=o[2],!0;}}]),e;}();function _assertThisInitialized$2(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;}var assertThisInitialized$1$1=_assertThisInitialized$2;function _possibleConstructorReturn$1$1(e,t){return t&&("object"===_typeof_1$2$1(t)||"function"==typeof t)?t:assertThisInitialized$1$1(e);}var possibleConstructorReturn$1$1=_possibleConstructorReturn$1$1,getPrototypeOf$1$1=createCommonjsModule$2$1(function(e){function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e);},t(n);}e.exports=t;}),setPrototypeOf$1$1=createCommonjsModule$2$1(function(e){function t(n,o){return e.exports=t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e;},t(n,o);}e.exports=t;});function _inherits$1$1(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&setPrototypeOf$1$1(e,t);}var inherits$1$1=_inherits$1$1,NodeBase=function(){var t=Math.cos,o=Math.sin,n=Math.abs,i=Math.min;function e(t,o,n){classCallCheck$1$1(this,e),this.body=o,this.labelModule=n,this.setOptions(t),this.top=void 0,this.left=void 0,this.height=void 0,this.width=void 0,this.radius=void 0,this.margin=void 0,this.refreshNeeded=!0,this.boundingBox={top:0,left:0,right:0,bottom:0};}return createClass$1$1(e,[{key:"setOptions",value:function(e){this.options=e;}},{key:"_setMargins",value:function(e){this.margin={},this.options.margin&&("object"==_typeof_1$2$1(this.options.margin)?(this.margin.top=this.options.margin.top,this.margin.right=this.options.margin.right,this.margin.bottom=this.options.margin.bottom,this.margin.left=this.options.margin.left):(this.margin.top=this.options.margin,this.margin.right=this.options.margin,this.margin.bottom=this.options.margin,this.margin.left=this.options.margin)),e.adjustSizes(this.margin);}},{key:"_distanceToBorder",value:function(e,a){var d=this.options.borderWidth;return this.resize(e),i(n(this.width/2/t(a)),n(this.height/2/o(a)))+d;}},{key:"enableShadow",value:function(e,t){t.shadow&&(e.shadowColor=t.shadowColor,e.shadowBlur=t.shadowSize,e.shadowOffsetX=t.shadowX,e.shadowOffsetY=t.shadowY);}},{key:"disableShadow",value:function(e,t){t.shadow&&(e.shadowColor="rgba(0,0,0,0)",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0);}},{key:"enableBorderDashes",value:function(e,t){if(!1!==t.borderDashes)if(void 0!==e.setLineDash){var o=t.borderDashes;!0===o&&(o=[5,15]),e.setLineDash(o);}else console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."),this.options.shapeProperties.borderDashes=!1,t.borderDashes=!1;}},{key:"disableBorderDashes",value:function(e,t){!1!==t.borderDashes&&(void 0===e.setLineDash?(console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."),this.options.shapeProperties.borderDashes=!1,t.borderDashes=!1):e.setLineDash([0]));}},{key:"needsRefresh",value:function(e,t){return !0===this.refreshNeeded?(this.refreshNeeded=!1,!0):void 0===this.width||this.labelModule.differentState(e,t);}},{key:"initContextForDraw",value:function(e,t){var o=t.borderWidth/this.body.view.scale;e.lineWidth=i(this.width,o),e.strokeStyle=t.borderColor,e.fillStyle=t.color;}},{key:"performStroke",value:function(e,t){var o=t.borderWidth/this.body.view.scale;e.save(),0<o&&(this.enableBorderDashes(e,t),e.stroke(),this.disableBorderDashes(e,t)),e.restore();}},{key:"performFill",value:function(e,t){this.enableShadow(e,t),e.fill(),this.disableShadow(e,t),this.performStroke(e,t);}},{key:"_addBoundingBoxMargin",value:function(e){this.boundingBox.left-=e,this.boundingBox.top-=e,this.boundingBox.bottom+=e,this.boundingBox.right+=e;}},{key:"_updateBoundingBox",value:function(e,t,o,n,i){void 0!==o&&this.resize(o,n,i),this.left=e-this.width/2,this.top=t-this.height/2,this.boundingBox.left=this.left,this.boundingBox.top=this.top,this.boundingBox.bottom=this.top+this.height,this.boundingBox.right=this.left+this.width;}},{key:"updateBoundingBox",value:function(e,t,o,n,i){this._updateBoundingBox(e,t,o,n,i);}},{key:"getDimensionsFromLabel",value:function(e,t,o){this.textSize=this.labelModule.getTextSize(e,t,o);var n=this.textSize.width,i=this.textSize.height,a=14;return 0===n&&(n=a,i=a),{width:n,height:i};}}]),e;}(),Box=function(e){var o=Math.cos,n=Math.sin,i=Math.abs,a=Math.min;function t(e,o,n){var i;return classCallCheck$1$1(this,t),i=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),i._setMargins(n),i;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,o)){var n=this.getDimensionsFromLabel(e,t,o);this.width=n.width+this.margin.right+this.margin.left,this.height=n.height+this.margin.top+this.margin.bottom,this.radius=this.width/2;}}},{key:"draw",value:function(e,t,o,n,i,a){this.resize(e,n,i),this.left=t-this.width/2,this.top=o-this.height/2,this.initContextForDraw(e,a),e.roundRect(this.left,this.top,this.width,this.height,a.borderRadius),this.performFill(e,a),this.updateBoundingBox(t,o,e,n,i),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,n,i);}},{key:"updateBoundingBox",value:function(e,t,o,n,i){this._updateBoundingBox(e,t,o,n,i);var a=this.options.shapeProperties.borderRadius;this._addBoundingBoxMargin(a);}},{key:"distanceToBorder",value:function(e,t){this.resize(e);var d=this.options.borderWidth;return a(i(this.width/2/o(t)),i(this.height/2/n(t)))+d;}}]),t;}(NodeBase),CircleImageBase=function(e){function t(e,o,n){var i;return classCallCheck$1$1(this,t),i=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),i.labelOffset=0,i.selected=!1,i;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"setOptions",value:function(e,t,o){this.options=e,void 0===t&&void 0===o||this.setImages(t,o);}},{key:"setImages",value:function(e,t){t&&this.selected?(this.imageObj=t,this.imageObjAlt=e):(this.imageObj=e,this.imageObjAlt=t);}},{key:"switchImages",value:function(e){var t=e&&!this.selected||!e&&this.selected;if(this.selected=e,void 0!==this.imageObjAlt&&t){var o=this.imageObj;this.imageObj=this.imageObjAlt,this.imageObjAlt=o;}}},{key:"_resizeImage",value:function(){var e,t;if(!1===this.options.shapeProperties.useImageSize){var o=1,n=1;this.imageObj.width&&this.imageObj.height&&(this.imageObj.width>this.imageObj.height?o=this.imageObj.width/this.imageObj.height:n=this.imageObj.height/this.imageObj.width),e=2*this.options.size*o,t=2*this.options.size*n;}else e=this.imageObj.width,t=this.imageObj.height;this.width=e,this.height=t,this.radius=.5*this.width;}},{key:"_drawRawCircle",value:function(e,t,o,n){this.initContextForDraw(e,n),e.circle(t,o,n.size),this.performFill(e,n);}},{key:"_drawImageAtPosition",value:function(e,t){if(0!=this.imageObj.width){e.globalAlpha=1,this.enableShadow(e,t);var o=1;!0===this.options.shapeProperties.interpolation&&(o=this.imageObj.width/this.width/this.body.view.scale),this.imageObj.drawImageAtPosition(e,o,this.left,this.top,this.width,this.height),this.disableShadow(e,t);}}},{key:"_drawImageLabel",value:function(e,t,o,n,i){var a=0,d;if(void 0!==this.height){a=.5*this.height;var s=this.labelModule.getTextSize(e,n,i);1<=s.lineCount&&(a+=s.height/2);}d=o+a,this.options.label&&(this.labelOffset=a),this.labelModule.draw(e,t,d,n,i,"hanging");}}]),t;}(NodeBase),Circle=function(e){var o=Math.max;function t(e,o,n){var i;return classCallCheck$1$1(this,t),i=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),i._setMargins(n),i;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n),a=o(i.width+this.margin.right+this.margin.left,i.height+this.margin.top+this.margin.bottom);this.options.size=a/2,this.width=a,this.height=a,this.radius=this.width/2;}}},{key:"draw",value:function(e,t,o,n,i,a){this.resize(e,n,i),this.left=t-this.width/2,this.top=o-this.height/2,this._drawRawCircle(e,t,o,a),this.updateBoundingBox(t,o),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,o,n,i);}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=t+this.options.size;}},{key:"distanceToBorder",value:function(e){return this.resize(e),.5*this.width;}}]),t;}(CircleImageBase),CircularImage=function(e){var o=Math.max,n=Math.min;function t(e,o,n,i,a){var d;return classCallCheck$1$1(this,t),d=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),d.setImages(i,a),d;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover,o=void 0===this.imageObj.src||void 0===this.imageObj.width||void 0===this.imageObj.height;if(o){var n=2*this.options.size;return this.width=n,this.height=n,void(this.radius=.5*this.width);}this.needsRefresh(e,t)&&this._resizeImage();}},{key:"draw",value:function(e,t,o,n,i,a){this.switchImages(n),this.resize(),this.left=t-this.width/2,this.top=o-this.height/2,this._drawRawCircle(e,t,o,a),e.save(),e.clip(),this._drawImageAtPosition(e,a),e.restore(),this._drawImageLabel(e,t,o,n,i),this.updateBoundingBox(t,o);}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=t+this.options.size,this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=o(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=o(this.boundingBox.bottom,this.boundingBox.bottom+this.labelOffset);}},{key:"distanceToBorder",value:function(e){return this.resize(e),.5*this.width;}}]),t;}(CircleImageBase),Database=function(e){function t(e,o,n){var i;return classCallCheck$1$1(this,t),i=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),i._setMargins(n),i;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(e,t,o){if(this.needsRefresh(t,o)){var n=this.getDimensionsFromLabel(e,t,o),i=n.width+this.margin.right+this.margin.left;this.width=i,this.height=i,this.radius=this.width/2;}}},{key:"draw",value:function(e,t,o,n,i,a){this.resize(e,n,i),this.left=t-this.width/2,this.top=o-this.height/2,this.initContextForDraw(e,a),e.database(t-this.width/2,o-this.height/2,this.width,this.height),this.performFill(e,a),this.updateBoundingBox(t,o,e,n,i),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,n,i);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(NodeBase),ShapeBase=function(e){var o=Math.max,n=Math.min;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover,n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{size:this.options.size};if(this.needsRefresh(t,o)){this.labelModule.getTextSize(e,t,o);var i=2*n.size;this.width=i,this.height=i,this.radius=.5*this.width;}}},{key:"_drawShape",value:function(e,t,o,n,i,a,d,s){if(this.resize(e,a,d,s),this.left=n-this.width/2,this.top=i-this.height/2,this.initContextForDraw(e,s),e[t](n,i,s.size),this.performFill(e,s),void 0!==this.options.icon&&void 0!==this.options.icon.code&&(e.font=(a?"bold ":"")+this.height/2+"px "+(this.options.icon.face||"FontAwesome"),e.fillStyle=this.options.icon.color||"black",e.textAlign="center",e.textBaseline="middle",e.fillText(this.options.icon.code,n,i)),void 0!==this.options.label){this.labelModule.calculateLabelSize(e,a,d,n,i,"hanging");var r=i+.5*this.height+.5*this.labelModule.size.height;this.labelModule.draw(e,n,r,a,d,"hanging");}this.updateBoundingBox(n,i);}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=t+this.options.size,void 0!==this.options.label&&0<this.labelModule.size.width&&(this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=o(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=o(this.boundingBox.bottom,this.boundingBox.bottom+this.labelModule.size.height));}}]),t;}(NodeBase),Diamond=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"draw",value:function(e,t,o,n,i,a){this._drawShape(e,"diamond",4,t,o,n,i,a);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(ShapeBase),Dot=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"draw",value:function(e,t,o,n,i,a){this._drawShape(e,"circle",2,t,o,n,i,a);}},{key:"distanceToBorder",value:function(e){return this.resize(e),this.options.size;}}]),t;}(ShapeBase),Ellipse=function(e){var o=Math.cos,n=Math.sin,i=Math.sqrt;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,o)){var n=this.getDimensionsFromLabel(e,t,o);this.height=2*n.height,this.width=n.width+n.height,this.radius=.5*this.width;}}},{key:"draw",value:function(e,t,o,n,i,a){this.resize(e,n,i),this.left=t-.5*this.width,this.top=o-.5*this.height,this.initContextForDraw(e,a),e.ellipse_vis(this.left,this.top,this.width,this.height),this.performFill(e,a),this.updateBoundingBox(t,o,e,n,i),this.labelModule.draw(e,t,o,n,i);}},{key:"distanceToBorder",value:function(e,t){this.resize(e);var d=.5*this.width,a=.5*this.height,s=n(t)*d,r=o(t)*a;return d*a/i(s*s+r*r);}}]),t;}(NodeBase),Icon=function(e){var o=Math.max,n=Math.min;function t(e,o,n){var i;return classCallCheck$1$1(this,t),i=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),i._setMargins(n),i;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(e,t,o){this.needsRefresh(t,o)&&(this.iconSize={width:+this.options.icon.size,height:+this.options.icon.size},this.width=this.iconSize.width+this.margin.right+this.margin.left,this.height=this.iconSize.height+this.margin.top+this.margin.bottom,this.radius=.5*this.width);}},{key:"draw",value:function(e,t,o,n,i,a){if(this.resize(e,n,i),this.options.icon.size=this.options.icon.size||50,this.left=t-this.width/2,this.top=o-this.height/2,this._icon(e,t,o,n,i,a),void 0!==this.options.label){this.labelModule.draw(e,this.left+this.iconSize.width/2+this.margin.left,o+this.height/2+5,n);}this.updateBoundingBox(t,o);}},{key:"updateBoundingBox",value:function(e,t){if(this.boundingBox.top=t-.5*this.options.icon.size,this.boundingBox.left=e-.5*this.options.icon.size,this.boundingBox.right=e+.5*this.options.icon.size,this.boundingBox.bottom=t+.5*this.options.icon.size,void 0!==this.options.label&&0<this.labelModule.size.width){this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=o(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=o(this.boundingBox.bottom,this.boundingBox.bottom+this.labelModule.size.height+5);}}},{key:"_icon",value:function(e,t,o,n,i,a){var d=+this.options.icon.size;void 0===this.options.icon.code?console.error("When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally."):(e.font=(n?"bold ":"")+d+"px "+this.options.icon.face,e.fillStyle=this.options.icon.color||"black",e.textAlign="center",e.textBaseline="middle",this.enableShadow(e,a),e.fillText(this.options.icon.code,t,o),this.disableShadow(e,a));}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(NodeBase),Image$1=function(e){var o=Math.max,n=Math.min;function t(e,o,n,i,a){var d;return classCallCheck$1$1(this,t),d=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),d.setImages(i,a),d;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover,o=void 0===this.imageObj.src||void 0===this.imageObj.width||void 0===this.imageObj.height;if(o){var n=2*this.options.size;return this.width=n,void(this.height=n);}this.needsRefresh(e,t)&&this._resizeImage();}},{key:"draw",value:function(e,t,o,i,a,d){if(this.switchImages(i),this.resize(),this.left=t-this.width/2,this.top=o-this.height/2,!0===this.options.shapeProperties.useBorderWithImage){var s=this.options.borderWidth,r=this.options.borderWidthSelected||2*this.options.borderWidth,l=(i?r:s)/this.body.view.scale;e.lineWidth=n(this.width,l),e.beginPath(),e.strokeStyle=i?this.options.color.highlight.border:a?this.options.color.hover.border:this.options.color.border,e.fillStyle=i?this.options.color.highlight.background:a?this.options.color.hover.background:this.options.color.background,e.rect(this.left-.5*e.lineWidth,this.top-.5*e.lineWidth,this.width+e.lineWidth,this.height+e.lineWidth),e.fill(),this.performStroke(e,d),e.closePath();}this._drawImageAtPosition(e,d),this._drawImageLabel(e,t,o,i,a),this.updateBoundingBox(t,o);}},{key:"updateBoundingBox",value:function(e,t){this.resize(),this._updateBoundingBox(e,t),void 0!==this.options.label&&0<this.labelModule.size.width&&(this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=o(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=o(this.boundingBox.bottom,this.boundingBox.bottom+this.labelOffset));}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(CircleImageBase),Square=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"draw",value:function(e,t,o,n,i,a){this._drawShape(e,"square",2,t,o,n,i,a);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(ShapeBase),Hexagon=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"draw",value:function(e,t,o,n,i,a){this._drawShape(e,"hexagon",4,t,o,n,i,a);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(ShapeBase),Star=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"draw",value:function(e,t,o,n,i,a){this._drawShape(e,"star",4,t,o,n,i,a);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(ShapeBase),Text=function(e){function t(e,o,n){var i;return classCallCheck$1$1(this,t),i=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),i._setMargins(n),i;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"resize",value:function(e,t,o){this.needsRefresh(t,o)&&(this.textSize=this.labelModule.getTextSize(e,t,o),this.width=this.textSize.width+this.margin.right+this.margin.left,this.height=this.textSize.height+this.margin.top+this.margin.bottom,this.radius=.5*this.width);}},{key:"draw",value:function(e,t,o,n,i,a){this.resize(e,n,i),this.left=t-this.width/2,this.top=o-this.height/2,this.enableShadow(e,a),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,n,i),this.disableShadow(e,a),this.updateBoundingBox(t,o,e,n,i);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(NodeBase),Triangle=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"draw",value:function(e,t,o,n,i,a){this._drawShape(e,"triangle",3,t,o,n,i,a);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(ShapeBase),TriangleDown=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"draw",value:function(e,t,o,n,i,a){this._drawShape(e,"triangleDown",3,t,o,n,i,a);}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t);}}]),t;}(ShapeBase),errorFound=!1,printStyle="background: #FFeeee; color: #dd0000",Validator=function(){var t=Math.min;function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"validate",value:function(t,o,n){errorFound=!1,allOptions=o;var i=o;return void 0!==n&&(i=o[n]),e.parse(t,i,[]),errorFound;}},{key:"parse",value:function(t,o,n){for(var i in t)t.hasOwnProperty(i)&&e.check(i,t,o,n);}},{key:"check",value:function(t,o,n,i){if(void 0===n[t]&&void 0===n.__any__)return void e.getSuggestion(t,n,i);var a=t,d=!0;void 0===n[t]&&void 0!==n.__any__&&(a="__any__",d="object"===e.getType(o[t]));var s=n[a];d&&void 0!==s.__type__&&(s=s.__type__),e.checkFields(t,o,n,a,s,i);}},{key:"checkFields",value:function(t,o,n,i,a,d){var s=function(o){console.log("%c"+o+e.printLocation(d,t),printStyle);},r=e.getType(o[t]),l=a[r];void 0===l?void 0===a.any&&(s("Invalid type received for \""+t+"\". Expected: "+e.print(Object.keys(a))+". Received ["+r+"] \""+o[t]+"\""),errorFound=!0):"array"===e.getType(l)&&-1===l.indexOf(o[t])?(s("Invalid option detected in \""+t+"\". Allowed values are:"+e.print(l)+" not \""+o[t]+"\". "),errorFound=!0):"object"===r&&"__any__"!==i&&(d=util$2.copyAndExtendArray(d,t),e.parse(o[t],n[i],d));}},{key:"getType",value:function(e){var t=_typeof_1$2$1(e);return "object"===t?null===e?"null":e instanceof Boolean?"boolean":e instanceof Number?"number":e instanceof String?"string":Array.isArray(e)?"array":e instanceof Date?"date":void 0===e.nodeType?!0===e._isAMomentObject?"moment":"object":"dom":"number"===t?"number":"boolean"===t?"boolean":"string"===t?"string":void 0===t?"undefined":t;}},{key:"getSuggestion",value:function(t,o,n){var i=e.findInOptions(t,o,n,!1),a=e.findInOptions(t,allOptions,[],!0),d;d=void 0===i.indexMatch?a.distance<=4&&i.distance>a.distance?" in "+e.printLocation(i.path,t,"")+"Perhaps it was misplaced? Matching option found at: "+e.printLocation(a.path,a.closestMatch,""):i.distance<=8?". Did you mean \""+i.closestMatch+"\"?"+e.printLocation(i.path,t):". Did you mean one of these: "+e.print(Object.keys(o))+e.printLocation(n,t):" in "+e.printLocation(i.path,t,"")+"Perhaps it was incomplete? Did you mean: \""+i.indexMatch+"\"?\n\n",console.log("%cUnknown option detected: \""+t+"\""+d,printStyle),errorFound=!0;}},{key:"findInOptions",value:function(t,o,n){var i=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3],a=1e9,d="",s=[],r=t.toLowerCase(),l=void 0;for(var c in o){var u=void 0;if(void 0!==o[c].__type__&&!0===i){var p=e.findInOptions(t,o[c],util$2.copyAndExtendArray(n,c));a>p.distance&&(d=p.closestMatch,s=p.path,a=p.distance,l=p.indexMatch);}else-1!==c.toLowerCase().indexOf(r)&&(l=c),u=e.levenshteinDistance(t,c),a>u&&(d=c,s=util$2.copyArray(n),a=u);}return {closestMatch:d,path:s,distance:a,indexMatch:l};}},{key:"printLocation",value:function(e,t){for(var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"Problem value found at: \n",n="\n\n"+o+"options = {\n",a=0;a<e.length;a++){for(var d=0;d<a+1;d++)n+="  ";n+=e[a]+": {\n";}for(var s=0;s<e.length+1;s++)n+="  ";n+=t+"\n";for(var r=0;r<e.length+1;r++){for(var l=0;l<e.length-r;l++)n+="  ";n+="}\n";}return n+"\n\n";}},{key:"print",value:function(e){return JSON.stringify(e).replace(/(\")|(\[)|(\])|(,"__type__")/g,"").replace(/(\,)/g,", ");}},{key:"levenshteinDistance",value:function(e,o){if(0===e.length)return o.length;if(0===o.length)return e.length;var n=[],a;for(a=0;a<=o.length;a++)n[a]=[a];var d;for(d=0;d<=e.length;d++)n[0][d]=d;for(a=1;a<=o.length;a++)for(d=1;d<=e.length;d++)n[a][d]=o.charAt(a-1)==e.charAt(d-1)?n[a-1][d-1]:t(n[a-1][d-1]+1,t(n[a][d-1]+1,n[a-1][d]+1));return n[o.length][e.length];}}]),e;}(),Node=function(){function e(t,o,n,i,a,d){classCallCheck$1$1(this,e),this.options=util$2.bridgeObject(a),this.globalOptions=a,this.defaultOptions=d,this.body=o,this.edges=[],this.id=void 0,this.imagelist=n,this.grouplist=i,this.x=void 0,this.y=void 0,this.baseSize=this.options.size,this.baseFontSize=this.options.font.size,this.predefinedPosition=!1,this.selected=!1,this.hover=!1,this.labelModule=new Label(this.body,this.options,!1),this.setOptions(t);}return createClass$1$1(e,[{key:"attachEdge",value:function(e){-1===this.edges.indexOf(e)&&this.edges.push(e);}},{key:"detachEdge",value:function(e){var t=this.edges.indexOf(e);-1!=t&&this.edges.splice(t,1);}},{key:"setOptions",value:function(t){var o=this.options.shape;if(t){if(void 0!==t.id&&(this.id=t.id),void 0===this.id)throw new Error("Node must have an id");e.checkMass(t,this.id),void 0!==t.x&&(null===t.x?(this.x=void 0,this.predefinedPosition=!1):(this.x=parseInt(t.x),this.predefinedPosition=!0)),void 0!==t.y&&(null===t.y?(this.y=void 0,this.predefinedPosition=!1):(this.y=parseInt(t.y),this.predefinedPosition=!0)),void 0!==t.size&&(this.baseSize=t.size),void 0!==t.value&&(t.value=parseFloat(t.value)),e.parseOptions(this.options,t,!0,this.globalOptions,this.grouplist);var n=[t,this.options,this.defaultOptions];return this.chooser=ComponentUtil.choosify("node",n),this._load_images(),this.updateLabelModule(t),this.updateShape(o),void 0!==t.hidden||void 0!==t.physics;}}},{key:"_load_images",value:function(){if(("circularImage"===this.options.shape||"image"===this.options.shape)&&void 0===this.options.image)throw new Error("Option image must be defined for node type '"+this.options.shape+"'");if(void 0!==this.options.image){if(void 0===this.imagelist)throw new Error("Internal Error: No images provided");if("string"==typeof this.options.image)this.imageObj=this.imagelist.load(this.options.image,this.options.brokenImage,this.id);else{if(void 0===this.options.image.unselected)throw new Error("No unselected image provided");this.imageObj=this.imagelist.load(this.options.image.unselected,this.options.brokenImage,this.id),this.imageObjAlt=void 0===this.options.image.selected?void 0:this.imagelist.load(this.options.image.selected,this.options.brokenImage,this.id);}}}},{key:"getFormattingValues",value:function(){var e={color:this.options.color.background,borderWidth:this.options.borderWidth,borderColor:this.options.color.border,size:this.options.size,borderDashes:this.options.shapeProperties.borderDashes,borderRadius:this.options.shapeProperties.borderRadius,shadow:this.options.shadow.enabled,shadowColor:this.options.shadow.color,shadowSize:this.options.shadow.size,shadowX:this.options.shadow.x,shadowY:this.options.shadow.y};return this.selected||this.hover?!0===this.chooser?this.selected?(e.borderWidth*=2,e.color=this.options.color.highlight.background,e.borderColor=this.options.color.highlight.border,e.shadow=this.options.shadow.enabled):this.hover&&(e.color=this.options.color.hover.background,e.borderColor=this.options.color.hover.border,e.shadow=this.options.shadow.enabled):"function"==typeof this.chooser&&(this.chooser(e,this.options.id,this.selected,this.hover),!1===e.shadow&&(e.shadowColor!==this.options.shadow.color||e.shadowSize!==this.options.shadow.size||e.shadowX!==this.options.shadow.x||e.shadowY!==this.options.shadow.y)&&(e.shadow=!0)):e.shadow=this.options.shadow.enabled,e;}},{key:"updateLabelModule",value:function(t){(void 0===this.options.label||null===this.options.label)&&(this.options.label=""),e.updateGroupOptions(this.options,t,this.grouplist);var o=this.grouplist.get(this.options.group,!1),n=[t,this.options,o,this.globalOptions,this.defaultOptions];this.labelModule.update(this.options,n),void 0!==this.labelModule.baseSize&&(this.baseFontSize=this.labelModule.baseSize);}},{key:"updateShape",value:function(e){if(e===this.options.shape&&this.shape)this.shape.setOptions(this.options,this.imageObj,this.imageObjAlt);else switch(this.options.shape){case"box":this.shape=new Box(this.options,this.body,this.labelModule);break;case"circle":this.shape=new Circle(this.options,this.body,this.labelModule);break;case"circularImage":this.shape=new CircularImage(this.options,this.body,this.labelModule,this.imageObj,this.imageObjAlt);break;case"database":this.shape=new Database(this.options,this.body,this.labelModule);break;case"diamond":this.shape=new Diamond(this.options,this.body,this.labelModule);break;case"dot":this.shape=new Dot(this.options,this.body,this.labelModule);break;case"ellipse":this.shape=new Ellipse(this.options,this.body,this.labelModule);break;case"icon":this.shape=new Icon(this.options,this.body,this.labelModule);break;case"image":this.shape=new Image$1(this.options,this.body,this.labelModule,this.imageObj,this.imageObjAlt);break;case"square":this.shape=new Square(this.options,this.body,this.labelModule);break;case"hexagon":this.shape=new Hexagon(this.options,this.body,this.labelModule);break;case"star":this.shape=new Star(this.options,this.body,this.labelModule);break;case"text":this.shape=new Text(this.options,this.body,this.labelModule);break;case"triangle":this.shape=new Triangle(this.options,this.body,this.labelModule);break;case"triangleDown":this.shape=new TriangleDown(this.options,this.body,this.labelModule);break;default:this.shape=new Ellipse(this.options,this.body,this.labelModule);}this.needsRefresh();}},{key:"select",value:function(){this.selected=!0,this.needsRefresh();}},{key:"unselect",value:function(){this.selected=!1,this.needsRefresh();}},{key:"needsRefresh",value:function(){this.shape.refreshNeeded=!0;}},{key:"getTitle",value:function(){return this.options.title;}},{key:"distanceToBorder",value:function(e,t){return this.shape.distanceToBorder(e,t);}},{key:"isFixed",value:function(){return this.options.fixed.x&&this.options.fixed.y;}},{key:"isSelected",value:function(){return this.selected;}},{key:"getValue",value:function(){return this.options.value;}},{key:"getLabelSize",value:function(){return this.labelModule.size();}},{key:"setValueRange",value:function(e,t,o){if(void 0!==this.options.value){var n=this.options.scaling.customScalingFunction(e,t,o,this.options.value),i=this.options.scaling.max-this.options.scaling.min;if(!0===this.options.scaling.label.enabled){var a=this.options.scaling.label.max-this.options.scaling.label.min;this.options.font.size=this.options.scaling.label.min+n*a;}this.options.size=this.options.scaling.min+n*i;}else this.options.size=this.baseSize,this.options.font.size=this.baseFontSize;this.updateLabelModule();}},{key:"draw",value:function(e){var t=this.getFormattingValues();this.shape.draw(e,this.x,this.y,this.selected,this.hover,t);}},{key:"updateBoundingBox",value:function(e){this.shape.updateBoundingBox(this.x,this.y,e);}},{key:"resize",value:function(e){var t=this.getFormattingValues();this.shape.resize(e,this.selected,this.hover,t);}},{key:"getItemsOnPoint",value:function(e){var t=[];return this.labelModule.visible()&&ComponentUtil.pointInRect(this.labelModule.getSize(),e)&&t.push({nodeId:this.id,labelId:0}),ComponentUtil.pointInRect(this.shape.boundingBox,e)&&t.push({nodeId:this.id}),t;}},{key:"isOverlappingWith",value:function(e){return this.shape.left<e.right&&this.shape.left+this.shape.width>e.left&&this.shape.top<e.bottom&&this.shape.top+this.shape.height>e.top;}},{key:"isBoundingBoxOverlappingWith",value:function(e){return this.shape.boundingBox.left<e.right&&this.shape.boundingBox.right>e.left&&this.shape.boundingBox.top<e.bottom&&this.shape.boundingBox.bottom>e.top;}}],[{key:"updateGroupOptions",value:function(e,t,o){if(void 0!==o){var n=e.group;if(void 0!==t&&void 0!==t.group&&n!==t.group)throw new Error("updateGroupOptions: group values in options don't match.");if("number"==typeof n||"string"==typeof n&&""!=n){var i=o.get(n),a=["font"];void 0!==t&&void 0!==t.color&&null!=t.color&&a.push("color"),util$2.selectiveNotDeepExtend(a,e,i),e.color=util$2.parseColor(e.color);}}}},{key:"parseOptions",value:function(t,o){var n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},a=4<arguments.length?arguments[4]:void 0;if(util$2.selectiveNotDeepExtend(["color","fixed","shadow"],t,o,n),e.checkMass(o),util$2.mergeOptions(t,o,"shadow",i),void 0!==o.color&&null!==o.color){var d=util$2.parseColor(o.color);util$2.fillIfDefined(t.color,d);}else!0===n&&null===o.color&&(t.color=util$2.bridgeObject(i.color));void 0!==o.fixed&&null!==o.fixed&&("boolean"==typeof o.fixed?(t.fixed.x=o.fixed,t.fixed.y=o.fixed):(void 0!==o.fixed.x&&"boolean"==typeof o.fixed.x&&(t.fixed.x=o.fixed.x),void 0!==o.fixed.y&&"boolean"==typeof o.fixed.y&&(t.fixed.y=o.fixed.y))),!0===n&&null===o.font&&(t.font=util$2.bridgeObject(i.font)),e.updateGroupOptions(t,o,a),void 0!==o.scaling&&util$2.mergeOptions(t.scaling,o.scaling,"label",i.scaling);}},{key:"checkMass",value:function(e,t){if(void 0!==e.mass&&0>=e.mass){var o="";void 0!==t&&(o=" in node id: "+t),console.log("%cNegative or zero mass disallowed"+o+", setting mass to 1.",printStyle),e.mass=1;}}}]),e;}(),NodesHandler=function(){var t=Math.round,o=Math.max;function e(t,n,i,a){var d=this;if(classCallCheck$1$1(this,e),this.body=t,this.images=n,this.groups=i,this.layoutEngine=a,this.body.functions.createNode=this.create.bind(this),this.nodesListeners={add:function(e,t){d.add(t.items);},update:function(e,t){d.update(t.items,t.data,t.oldData);},remove:function(e,t){d.remove(t.items);}},this.defaultOptions={borderWidth:1,borderWidthSelected:2,brokenImage:void 0,color:{border:"#2B7CE9",background:"#97C2FC",highlight:{border:"#2B7CE9",background:"#D2E5FF"},hover:{border:"#2B7CE9",background:"#D2E5FF"}},fixed:{x:!1,y:!1},font:{color:"#343434",size:14,face:"arial",background:"none",strokeWidth:0,strokeColor:"#ffffff",align:"center",vadjust:0,multi:!1,bold:{mod:"bold"},boldital:{mod:"bold italic"},ital:{mod:"italic"},mono:{mod:"",size:15,face:"monospace",vadjust:2}},group:void 0,hidden:!1,icon:{face:"FontAwesome",code:void 0,size:50,color:"#2B7CE9"},image:void 0,label:void 0,labelHighlightBold:!0,level:void 0,margin:{top:5,right:5,bottom:5,left:5},mass:1,physics:!0,scaling:{min:10,max:30,label:{enabled:!1,min:14,max:30,maxVisible:30,drawThreshold:5},customScalingFunction:function(e,t,n,i){if(t===e)return .5;return o(0,(i-e)*(1/(t-e)));}},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:10,x:5,y:5},shape:"ellipse",shapeProperties:{borderDashes:!1,borderRadius:6,interpolation:!0,useImageSize:!1,useBorderWithImage:!1},size:25,title:void 0,value:void 0,x:void 0,y:void 0},0>=this.defaultOptions.mass)throw"Internal error: mass in defaultOptions of NodesHandler may not be zero or negative";this.options=util$2.bridgeObject(this.defaultOptions),this.bindEventListeners();}return createClass$1$1(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("refreshNodes",this.refresh.bind(this)),this.body.emitter.on("refresh",this.refresh.bind(this)),this.body.emitter.on("destroy",function(){util$2.forEach(e.nodesListeners,function(t,o){e.body.data.nodes&&e.body.data.nodes.off(o,t);}),delete e.body.functions.createNode,delete e.nodesListeners.add,delete e.nodesListeners.update,delete e.nodesListeners.remove,delete e.nodesListeners;});}},{key:"setOptions",value:function(e){if(void 0!==e){if(Node.parseOptions(this.options,e),void 0!==e.shape)for(var t in this.body.nodes)this.body.nodes.hasOwnProperty(t)&&this.body.nodes[t].updateShape();if(void 0!==e.font)for(var o in this.body.nodes)this.body.nodes.hasOwnProperty(o)&&(this.body.nodes[o].updateLabelModule(),this.body.nodes[o].needsRefresh());if(void 0!==e.size)for(var n in this.body.nodes)this.body.nodes.hasOwnProperty(n)&&this.body.nodes[n].needsRefresh();(void 0!==e.hidden||void 0!==e.physics)&&this.body.emitter.emit("_dataChanged");}}},{key:"setData",value:function(e){var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],o=this.body.data.nodes;if(e instanceof DataSet$1||e instanceof DataView$1)this.body.data.nodes=e;else if(Array.isArray(e))this.body.data.nodes=new DataSet$1(),this.body.data.nodes.add(e);else if(!e)this.body.data.nodes=new DataSet$1();else throw new TypeError("Array or DataSet expected");if(o&&util$2.forEach(this.nodesListeners,function(e,t){o.off(t,e);}),this.body.nodes={},this.body.data.nodes){var n=this;util$2.forEach(this.nodesListeners,function(e,t){n.body.data.nodes.on(t,e);});var i=this.body.data.nodes.getIds();this.add(i,!0);}!1===t&&this.body.emitter.emit("_dataChanged");}},{key:"add",value:function(e){for(var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],o=[],n=0,a;n<e.length;n++){a=e[n];var d=this.body.data.nodes.get(a),s=this.create(d);o.push(s),this.body.nodes[a]=s;}this.layoutEngine.positionInitially(o),!1===t&&this.body.emitter.emit("_dataChanged");}},{key:"update",value:function(e,t,o){for(var n=this.body.nodes,a=!1,d=0;d<e.length;d++){var s=e[d],r=n[s],l=t[d];void 0===r?(a=!0,r=this.create(l),n[s]=r):r.setOptions(l)&&(a=!0);}a||void 0===o||(a=t.some(function(e,t){var n=o[t];return n&&n.level!==e.level;})),!0===a?this.body.emitter.emit("_dataChanged"):this.body.emitter.emit("_dataUpdated");}},{key:"remove",value:function(e){for(var t=this.body.nodes,o=0,n;o<e.length;o++)n=e[o],delete t[n];this.body.emitter.emit("_dataChanged");}},{key:"create",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:Node;return new t(e,this.body,this.images,this.groups,this.options,this.defaultOptions);}},{key:"refresh",value:function(){var e=this,t=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];util$2.forEach(this.body.nodes,function(o,n){var i=e.body.data.nodes.get(n);void 0!==i&&(!0===t&&o.setOptions({x:null,y:null}),o.setOptions({fixed:!1}),o.setOptions(i));});}},{key:"getPositions",value:function(e){var o={};if(void 0===e)for(var n=0,a;n<this.body.nodeIndices.length;n++)a=this.body.nodes[this.body.nodeIndices[n]],o[this.body.nodeIndices[n]]={x:t(a.x),y:t(a.y)};else if(!0===Array.isArray(e)){for(var d=0;d<e.length;d++)if(void 0!==this.body.nodes[e[d]]){var s=this.body.nodes[e[d]];o[e[d]]={x:t(s.x),y:t(s.y)};}}else if(void 0!==this.body.nodes[e]){var r=this.body.nodes[e];o[e]={x:t(r.x),y:t(r.y)};}return o;}},{key:"storePositions",value:function(){var e=[],o=this.body.data.nodes.getDataSet();for(var n in o._data)if(o._data.hasOwnProperty(n)){var i=this.body.nodes[n];(o._data[n].x!=t(i.x)||o._data[n].y!=t(i.y))&&e.push({id:i.id,x:t(i.x),y:t(i.y)});}o.update(e);}},{key:"getBoundingBox",value:function(e){if(void 0!==this.body.nodes[e])return this.body.nodes[e].shape.boundingBox;}},{key:"getConnectedNodes",value:function(e,t){var o=[];if(void 0!==this.body.nodes[e])for(var n=this.body.nodes[e],a={},d=0,s;d<n.edges.length;d++)s=n.edges[d],"to"!==t&&s.toId==n.id?void 0===a[s.fromId]&&(o.push(s.fromId),a[s.fromId]=!0):"from"!==t&&s.fromId==n.id&&void 0===a[s.toId]&&(o.push(s.toId),a[s.toId]=!0);return o;}},{key:"getConnectedEdges",value:function(e){var t=[];if(void 0!==this.body.nodes[e])for(var o=this.body.nodes[e],n=0;n<o.edges.length;n++)t.push(o.edges[n].id);else console.log("NodeId provided for getConnectedEdges does not exist. Provided: ",e);return t;}},{key:"moveNode",value:function(e,t,o){var n=this;void 0===this.body.nodes[e]?console.log("Node id supplied to moveNode does not exist. Provided: ",e):(this.body.nodes[e].x=+t,this.body.nodes[e].y=+o,setTimeout(function(){n.body.emitter.emit("startSimulation");},0));}}]),e;}(),EndPoint=function(){var t=Math.cos,o=Math.sin;function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"transform",value:function(e,n){e instanceof Array||(e=[e]);for(var a=n.point.x,d=n.point.y,s=n.angle,r=n.length,l=0;l<e.length;++l){var c=e[l],u=c.x*t(s)-c.y*o(s),p=c.x*o(s)+c.y*t(s);c.x=a+r*u,c.y=d+r*p;}}},{key:"drawPath",value:function(e,t){e.beginPath(),e.moveTo(t[0].x,t[0].y);for(var o=1;o<t.length;++o)e.lineTo(t[o].x,t[o].y);e.closePath();}}]),e;}(),Arrow=function(e){function t(){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).apply(this,arguments));}return inherits$1$1(t,e),createClass$1$1(t,null,[{key:"draw",value:function(e,t){var o=[{x:0,y:0},{x:-1,y:.3},{x:-.9,y:0},{x:-1,y:-.3}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),t;}(EndPoint),Crow=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o=[{x:-1,y:0},{x:0,y:.3},{x:-.4,y:0},{x:0,y:-.3}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),e;}(),Curve=function(){var t=Math.PI;function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,o){var n={x:-.4,y:0};EndPoint.transform(n,o),e.strokeStyle=e.fillStyle,e.fillStyle="rgba(0, 0, 0, 0)";var i=t,a=o.angle-i/2,d=o.angle+i/2;e.beginPath(),e.arc(n.x,n.y,.4*o.length,a,d,!1),e.stroke();}}]),e;}(),InvertedCurve=function(){var t=Math.PI;function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,o){var n={x:-.3,y:0};EndPoint.transform(n,o),e.strokeStyle=e.fillStyle,e.fillStyle="rgba(0, 0, 0, 0)";var i=t,a=o.angle+i/2,d=o.angle+3*i/2;e.beginPath(),e.arc(n.x,n.y,.4*o.length,a,d,!1),e.stroke();}}]),e;}(),Triangle$1=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o=[{x:.02,y:0},{x:-1,y:.3},{x:-1,y:-.3}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),e;}(),InvertedTriangle=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o=[{x:0,y:.3},{x:0,y:-.3},{x:-1,y:0}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),e;}(),Circle$1=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o={x:-.4,y:0};EndPoint.transform(o,t),e.circle(o.x,o.y,.4*t.length);}}]),e;}(),Bar=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o=[{x:0,y:.5},{x:0,y:-.5},{x:-.15,y:-.5},{x:-.15,y:.5}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),e;}(),Box$1=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o=[{x:0,y:.3},{x:0,y:-.3},{x:-.6,y:-.3},{x:-.6,y:.3}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),e;}(),Diamond$1=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o=[{x:0,y:0},{x:-.5,y:-.3},{x:-1,y:0},{x:-.5,y:.3}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),e;}(),Vee=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o=[{x:-1,y:.3},{x:-.5,y:0},{x:-1,y:-.3},{x:0,y:0}];EndPoint.transform(o,t),EndPoint.drawPath(e,o);}}]),e;}(),EndPoints=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"draw",value:function(e,t){var o;switch(t.type&&(o=t.type.toLowerCase()),o){case"circle":Circle$1.draw(e,t);break;case"box":Box$1.draw(e,t);break;case"crow":Crow.draw(e,t);break;case"curve":Curve.draw(e,t);break;case"diamond":Diamond$1.draw(e,t);break;case"inv_curve":InvertedCurve.draw(e,t);break;case"triangle":Triangle$1.draw(e,t);break;case"inv_triangle":InvertedTriangle.draw(e,t);break;case"bar":Bar.draw(e,t);break;case"vee":Vee.draw(e,t);break;case"arrow":default:Arrow.draw(e,t);}}}]),e;}(),EdgeBase=function(){var t=Math.atan2,o=Math.cos,n=Math.sin,i=Math.sqrt,a=Math.PI,d=Math.pow,s=Math.max,r=Math.abs,l=Math.min;function e(t,o,n){classCallCheck$1$1(this,e),this.body=o,this.labelModule=n,this.options={},this.setOptions(t),this.colorDirty=!0,this.color={},this.selectionWidth=2,this.hoverWidth=1.5,this.fromPoint=this.from,this.toPoint=this.to;}return createClass$1$1(e,[{key:"connect",value:function(){this.from=this.body.nodes[this.options.from],this.to=this.body.nodes[this.options.to];}},{key:"cleanup",value:function(){return !1;}},{key:"setOptions",value:function(e){this.options=e,this.from=this.body.nodes[this.options.from],this.to=this.body.nodes[this.options.to],this.id=this.options.id;}},{key:"drawLine",value:function(e,t,o,n,i){e.strokeStyle=this.getColor(e,t,o,n),e.lineWidth=t.width,!1===t.dashes?this._drawLine(e,t,i):this._drawDashedLine(e,t,i);}},{key:"_drawLine",value:function(e,t,o,n,i){if(this.from!=this.to)this._line(e,t,o,n,i);else{var a=this._getCircleData(e),d=slicedToArray(a,3),s=d[0],r=d[1],l=d[2];this._circle(e,t,s,r,l);}}},{key:"_drawDashedLine",value:function(e,t,o){e.lineCap="round";var n=[5,5];if(!0===Array.isArray(t.dashes)&&(n=t.dashes),void 0!==e.setLineDash){if(e.save(),e.setLineDash(n),e.lineDashOffset=0,this.from!=this.to)this._line(e,t,o);else{var i=this._getCircleData(e),a=slicedToArray(i,3),d=a[0],s=a[1],r=a[2];this._circle(e,t,d,s,r);}e.setLineDash([0]),e.lineDashOffset=0,e.restore();}else{if(this.from!=this.to)e.dashedLine(this.from.x,this.from.y,this.to.x,this.to.y,n);else{var l=this._getCircleData(e),c=slicedToArray(l,3),u=c[0],p=c[1],h=c[2];this._circle(e,t,u,p,h);}this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t);}}},{key:"findBorderPosition",value:function(e,t,o){return this.from==this.to?this._findBorderPositionCircle(e,t,o):this._findBorderPosition(e,t,o);}},{key:"findBorderPositions",value:function(e){var t={},o={};if(this.from!=this.to)t=this._findBorderPosition(this.from,e),o=this._findBorderPosition(this.to,e);else{var n=this._getCircleData(e).slice(0,2),i=slicedToArray(n,2),a=i[0],d=i[1];t=this._findBorderPositionCircle(this.from,e,{x:a,y:d,low:.25,high:.6,direction:-1}),o=this._findBorderPositionCircle(this.from,e,{x:a,y:d,low:.6,high:.8,direction:1});}return {from:t,to:o};}},{key:"_getCircleData",value:function(e){var t=this.from,o=this.options.selfReferenceSize,n,i;return void 0!==e&&void 0===t.shape.width&&t.shape.resize(e),t.shape.width>t.shape.height?(n=t.x+.5*t.shape.width,i=t.y-o):(n=t.x+o,i=t.y-.5*t.shape.height),[n,i,o];}},{key:"_pointOnCircle",value:function(e,t,i,d){var s=2*d*a;return {x:e+i*o(s),y:t-i*n(s)};}},{key:"_findBorderPositionCircle",value:function(e,o,n){for(var a=n.x,s=n.y,l=n.low,c=n.high,u=n.direction,p=0,h=this.options.selfReferenceSize,m=.5*(l+c),g,y,f,b,_;l<=c&&p<10&&(m=.5*(l+c),g=this._pointOnCircle(a,s,h,m),y=t(e.y-g.y,e.x-g.x),f=e.distanceToBorder(o,y),b=i(d(g.x-e.x,2)+d(g.y-e.y,2)),_=f-b,!(r(_)<.05));)0<_?0<u?l=m:c=m:0<u?c=m:l=m,p++;return g.t=m,g;}},{key:"getLineWidth",value:function(e,t){return !0===e?s(this.selectionWidth,.3/this.body.view.scale):!0===t?s(this.hoverWidth,.3/this.body.view.scale):s(this.options.width,.3/this.body.view.scale);}},{key:"getColor",value:function(e,t){if(!1!==t.inheritsColor){if("both"===t.inheritsColor&&this.from.id!==this.to.id){var o=e.createLinearGradient(this.from.x,this.from.y,this.to.x,this.to.y),n,i;return n=this.from.options.color.highlight.border,i=this.to.options.color.highlight.border,!1===this.from.selected&&!1===this.to.selected?(n=util$2.overrideOpacity(this.from.options.color.border,t.opacity),i=util$2.overrideOpacity(this.to.options.color.border,t.opacity)):!0===this.from.selected&&!1===this.to.selected?i=this.to.options.color.border:!1===this.from.selected&&!0===this.to.selected&&(n=this.from.options.color.border),o.addColorStop(0,n),o.addColorStop(1,i),o;}return "to"===t.inheritsColor?util$2.overrideOpacity(this.to.options.color.border,t.opacity):util$2.overrideOpacity(this.from.options.color.border,t.opacity);}return util$2.overrideOpacity(t.color,t.opacity);}},{key:"_circle",value:function(e,t,o,n,i){this.enableShadow(e,t),e.beginPath(),e.arc(o,n,i,0,2*a,!1),e.stroke(),this.disableShadow(e,t);}},{key:"getDistanceToEdge",value:function(e,t,o,n,a,d,s){var l=0;if(this.from!=this.to)l=this._getDistanceToEdge(e,t,o,n,a,d,s);else{var c=this._getCircleData(void 0),u=slicedToArray(c,3),p=u[0],h=u[1],m=u[2],g=p-a,y=h-d;l=r(i(g*g+y*y)-m);}return l;}},{key:"_getDistanceToLine",value:function(e,t,o,n,a,d){var s=o-e,r=n-t,l=((a-e)*s+(d-t)*r)/(s*s+r*r);1<l?l=1:0>l&&(l=0);var c=e+l*s,p=t+l*r,h=c-a,m=p-d;return i(h*h+m*m);}},{key:"getArrowData",value:function(e,i,d,r,c,u){var p=u.width,h,m,g,f,b,_,v;if("from"===i?(g=this.from,f=this.to,b=.1,_=u.fromArrowScale,v=u.fromArrowType):"to"===i?(g=this.to,f=this.from,b=-.1,_=u.toArrowScale,v=u.toArrowType):(g=this.to,f=this.from,_=u.middleArrowScale,v=u.middleArrowType),g==f){var k=this._getCircleData(e),w=slicedToArray(k,3),S=w[0],x=w[1],y=w[2];"from"===i?(m=this.findBorderPosition(this.from,e,{x:S,y:x,low:.25,high:.6,direction:-1}),h=-2*m.t*a+1.5*a+.1*a):"to"===i?(m=this.findBorderPosition(this.from,e,{x:S,y:x,low:.6,high:1,direction:1}),h=-2*m.t*a+1.5*a-1.1*a):(m=this._pointOnCircle(S,x,y,.175),h=3.9269908169872414);}else if("middle"===i)h=t(g.y-f.y,g.x-f.x),m=this.getPoint(.5,d);else if(!0===this.options.smooth.enabled){m=this.findBorderPosition(g,e,{via:d});var O=this.getPoint(s(0,l(1,m.t+b)),d);h=t(m.y-O.y,m.x-O.x);}else h=t(g.y-f.y,g.x-f.x),m=this.findBorderPosition(g,e);"middle"===i&&0>_&&(p*=-1);var D=15*_+3*p,T=m.x-.9*D*o(h),C=m.y-.9*D*n(h);return {point:m,core:{x:T,y:C},angle:h,length:D,type:v};}},{key:"drawArrowHead",value:function(e,t,o,n,i){e.strokeStyle=this.getColor(e,t,o,n),e.fillStyle=e.strokeStyle,e.lineWidth=t.width,EndPoints.draw(e,i),this.enableShadow(e,t),e.fill(),this.disableShadow(e,t);}},{key:"enableShadow",value:function(e,t){!0===t.shadow&&(e.shadowColor=t.shadowColor,e.shadowBlur=t.shadowSize,e.shadowOffsetX=t.shadowX,e.shadowOffsetY=t.shadowY);}},{key:"disableShadow",value:function(e,t){!0===t.shadow&&(e.shadowColor="rgba(0,0,0,0)",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0);}},{key:"drawBackground",value:function(e,t){if(!1!==t.background){var o=["strokeStyle","lineWidth","dashes"],n={};o.forEach(function(t){n[t]=e[t];}),e.strokeStyle=t.backgroundColor,e.lineWidth=t.backgroundSize,this.setStrokeDashed(e,t.backgroundDashes),e.stroke(),o.forEach(function(t){e[t]=n[t];}),this.setStrokeDashed(e,t.dashes);}}},{key:"setStrokeDashed",value:function(e,t){if(!1===t)void 0===e.setLineDash?console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used."):e.setLineDash([]);else if(void 0!==e.setLineDash){var o=[5,5];!0===Array.isArray(t)&&(o=t),e.setLineDash(o);}else console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used.");}}]),e;}(),BezierEdgeBase=function(e){var o=Math.atan2,n=Math.sqrt,a=Math.pow,d=Math.abs;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_findBorderPositionBezier",value:function(e,t){var i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this._getViaCoordinates(),s=0,r=0,l=1,c=this.to,u=!1,p,h,m,g,y;for(e.id===this.from.id&&(c=this.from,u=!0);r<=l&&s<10;){var f=.5*(r+l);if(p=this.getPoint(f,i),h=o(c.y-p.y,c.x-p.x),m=c.distanceToBorder(t,h),g=n(a(p.x-c.x,2)+a(p.y-c.y,2)),y=m-g,d(y)<.2)break;else 0>y?!1===u?r=f:l=f:!1===u?l=f:r=f;s++;}return p.t=f,p;}},{key:"_getDistanceToBezierEdge",value:function(e,o,n,d,s,r,l){var c=1e9,u=e,p=o,h,m,g,f,b;for(m=1;10>m;m++)g=.1*m,f=a(1-g,2)*e+2*g*(1-g)*l.x+a(g,2)*n,b=a(1-g,2)*o+2*g*(1-g)*l.y+a(g,2)*d,0<m&&(h=this._getDistanceToLine(u,p,f,b,s,r),c=h<c?h:c),u=f,p=b;return c;}},{key:"_bezierCurve",value:function(e,t,o,n){var i=void 0!==o&&void 0!==o.x,a=void 0!==n&&void 0!==n.x;e.beginPath(),e.moveTo(this.fromPoint.x,this.fromPoint.y),i&&a?e.bezierCurveTo(o.x,o.y,n.x,n.y,this.toPoint.x,this.toPoint.y):i?e.quadraticCurveTo(o.x,o.y,this.toPoint.x,this.toPoint.y):e.lineTo(this.toPoint.x,this.toPoint.y),this.drawBackground(e,t),this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t);}},{key:"getViaNode",value:function(){return this._getViaCoordinates();}}]),t;}(EdgeBase),CubicBezierEdgeBase=function(e){var o=Math.pow;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_getDistanceToBezierEdge",value:function(e,n,a,d,s,r,l,c){var u=1e9,p=e,h=n,m=[0,0,0,0],g,f,b,_,v;for(f=1;10>f;f++)b=.1*f,m[0]=o(1-b,3),m[1]=3*b*o(1-b,2),m[2]=3*o(b,2)*(1-b),m[3]=o(b,3),_=m[0]*e+m[1]*l.x+m[2]*c.x+m[3]*a,v=m[0]*n+m[1]*l.y+m[2]*c.y+m[3]*d,0<f&&(g=this._getDistanceToLine(p,h,_,v,s,r),u=g<u?g:u),p=_,h=v;return u;}}]),t;}(BezierEdgeBase),CubicBezierEdge=function(e){var o=Math.pow,n=Math.abs;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_line",value:function(e,t,o){var n=o[0],i=o[1];this._bezierCurve(e,t,n,i);}},{key:"_getViaCoordinates",value:function(){var e=this.from.x-this.to.x,t=this.from.y-this.to.y,o=this.options.smooth.roundness,i,a,d,s;return (n(e)>n(t)||!0===this.options.smooth.forceDirection||"horizontal"===this.options.smooth.forceDirection)&&"vertical"!==this.options.smooth.forceDirection?(a=this.from.y,s=this.to.y,i=this.from.x-o*e,d=this.to.x+o*e):(a=this.from.y-o*t,s=this.to.y+o*t,i=this.from.x,d=this.to.x),[{x:i,y:a},{x:d,y:s}];}},{key:"getViaNode",value:function(){return this._getViaCoordinates();}},{key:"_findBorderPosition",value:function(e,t){return this._findBorderPositionBezier(e,t);}},{key:"_getDistanceToEdge",value:function(e,t,o,n,i,a){var d=6<arguments.length&&void 0!==arguments[6]?arguments[6]:this._getViaCoordinates(),s=slicedToArray(d,2),r=s[0],l=s[1];return this._getDistanceToBezierEdge(e,t,o,n,i,a,r,l);}},{key:"getPoint",value:function(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this._getViaCoordinates(),i=slicedToArray(n,2),a=i[0],d=i[1],s=e,t=[];t[0]=o(1-s,3),t[1]=3*s*o(1-s,2),t[2]=3*o(s,2)*(1-s),t[3]=o(s,3);var r=t[0]*this.fromPoint.x+t[1]*a.x+t[2]*d.x+t[3]*this.toPoint.x,l=t[0]*this.fromPoint.y+t[1]*a.y+t[2]*d.y+t[3]*this.toPoint.y;return {x:r,y:l};}}]),t;}(CubicBezierEdgeBase),BezierEdgeDynamic=function(e){var o=Math.cos,n=Math.sin,i=Math.PI,d=Math.pow;function t(e,o,n){var i;return classCallCheck$1$1(this,t),i=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n)),i._boundFunction=function(){i.positionBezierNode();},i.body.emitter.on("_repositionBezierNodes",i._boundFunction),i;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"setOptions",value:function(e){var t=!1;this.options.physics!==e.physics&&(t=!0),this.options=e,this.id=this.options.id,this.from=this.body.nodes[this.options.from],this.to=this.body.nodes[this.options.to],this.setupSupportNode(),this.connect(),!0==t&&(this.via.setOptions({physics:this.options.physics}),this.positionBezierNode());}},{key:"connect",value:function(){this.from=this.body.nodes[this.options.from],this.to=this.body.nodes[this.options.to],void 0===this.from||void 0===this.to||!1===this.options.physics?this.via.setOptions({physics:!1}):this.from.id===this.to.id?this.via.setOptions({physics:!1}):this.via.setOptions({physics:!0});}},{key:"cleanup",value:function(){return this.body.emitter.off("_repositionBezierNodes",this._boundFunction),void 0!==this.via&&(delete this.body.nodes[this.via.id],this.via=void 0,!0);}},{key:"setupSupportNode",value:function(){if(void 0===this.via){var e="edgeId:"+this.id,t=this.body.functions.createNode({id:e,shape:"circle",physics:!0,hidden:!0});this.body.nodes[e]=t,this.via=t,this.via.parentEdgeId=this.id,this.positionBezierNode();}}},{key:"positionBezierNode",value:function(){void 0!==this.via&&void 0!==this.from&&void 0!==this.to?(this.via.x=.5*(this.from.x+this.to.x),this.via.y=.5*(this.from.y+this.to.y)):void 0!==this.via&&(this.via.x=0,this.via.y=0);}},{key:"_line",value:function(e,t,o){this._bezierCurve(e,t,o);}},{key:"getViaNode",value:function(){return this.via;}},{key:"getPoint",value:function(e){var s=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.via,r=e,t,l;if(this.from===this.to){var c=this._getCircleData(this.from),u=slicedToArray(c,3),p=u[0],h=u[1],m=u[2],g=2*i*(1-r);t=p+m*n(g),l=h+m-m*(1-o(g));}else t=d(1-r,2)*this.fromPoint.x+2*r*(1-r)*s.x+d(r,2)*this.toPoint.x,l=d(1-r,2)*this.fromPoint.y+2*r*(1-r)*s.y+d(r,2)*this.toPoint.y;return {x:t,y:l};}},{key:"_findBorderPosition",value:function(e,t){return this._findBorderPositionBezier(e,t,this.via);}},{key:"_getDistanceToEdge",value:function(e,t,o,n,i,a){return this._getDistanceToBezierEdge(e,t,o,n,i,a,this.via);}}]),t;}(BezierEdgeBase),BezierEdgeStatic=function(e){var o=Math.atan2,n=Math.cos,i=Math.sin,a=Math.sqrt,d=Math.PI,s=Math.pow,r=Math.abs;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_line",value:function(e,t,o){this._bezierCurve(e,t,o);}},{key:"getViaNode",value:function(){return this._getViaCoordinates();}},{key:"_getViaCoordinates",value:function(){var e=void 0,t=void 0,s=this.options.smooth.roundness,l=this.options.smooth.type,c=r(this.from.x-this.to.x),u=r(this.from.y-this.to.y);if("discrete"===l||"diagonalCross"===l){var p,h;p=c<=u?h=s*u:h=s*c,this.from.x>this.to.x&&(p=-p),this.from.y>=this.to.y&&(h=-h),e=this.from.x+p,t=this.from.y+h,"discrete"===l&&(c<=u?e=c<s*u?this.from.x:e:t=u<s*c?this.from.y:t);}else if("straightCross"===l){var m=(1-s)*c,g=(1-s)*u;c<=u?(m=0,this.from.y<this.to.y&&(g=-g)):(this.from.x<this.to.x&&(m=-m),g=0),e=this.to.x+m,t=this.to.y+g;}else if("horizontal"===l){var y=(1-s)*c;this.from.x<this.to.x&&(y=-y),e=this.to.x+y,t=this.from.y;}else if("vertical"===l){var f=(1-s)*u;this.from.y<this.to.y&&(f=-f),e=this.from.x,t=this.to.y+f;}else if("curvedCW"===l){c=this.to.x-this.from.x,u=this.from.y-this.to.y;var b=a(c*c+u*u),_=d,v=o(u,c),k=(v+(.5*s+.5)*_)%(2*_);e=this.from.x+(.5*s+.5)*b*i(k),t=this.from.y+(.5*s+.5)*b*n(k);}else if("curvedCCW"===l){c=this.to.x-this.from.x,u=this.from.y-this.to.y;var w=a(c*c+u*u),x=d,S=o(u,c),O=(S+(.5*-s+.5)*x)%(2*x);e=this.from.x+(.5*s+.5)*w*i(O),t=this.from.y+(.5*s+.5)*w*n(O);}else{var D,T;D=c<=u?T=s*u:T=s*c,this.from.x>this.to.x&&(D=-D),this.from.y>=this.to.y&&(T=-T),e=this.from.x+D,t=this.from.y+T,c<=u?this.from.x<=this.to.x?e=this.to.x<e?this.to.x:e:e=this.to.x>e?this.to.x:e:this.from.y>=this.to.y?t=this.to.y>t?this.to.y:t:t=this.to.y<t?this.to.y:t;}return {x:e,y:t};}},{key:"_findBorderPosition",value:function(e,t){var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};return this._findBorderPositionBezier(e,t,o.via);}},{key:"_getDistanceToEdge",value:function(e,t,o,n,i,a){var d=6<arguments.length&&void 0!==arguments[6]?arguments[6]:this._getViaCoordinates();return this._getDistanceToBezierEdge(e,t,o,n,i,a,d);}},{key:"getPoint",value:function(e){var o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this._getViaCoordinates(),n=e,t=s(1-n,2)*this.fromPoint.x+2*n*(1-n)*o.x+s(n,2)*this.toPoint.x,i=s(1-n,2)*this.fromPoint.y+2*n*(1-n)*o.y+s(n,2)*this.toPoint.y;return {x:t,y:i};}}]),t;}(BezierEdgeBase),StraightEdge=function(e){var o=Math.atan2,n=Math.sqrt;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_line",value:function(e,t){e.beginPath(),e.moveTo(this.fromPoint.x,this.fromPoint.y),e.lineTo(this.toPoint.x,this.toPoint.y),this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t);}},{key:"getViaNode",value:function(){}},{key:"getPoint",value:function(e){return {x:(1-e)*this.fromPoint.x+e*this.toPoint.x,y:(1-e)*this.fromPoint.y+e*this.toPoint.y};}},{key:"_findBorderPosition",value:function(e,t){var i=this.to,a=this.from;e.id===this.from.id&&(i=this.from,a=this.to);var d=o(i.y-a.y,i.x-a.x),s=i.x-a.x,r=i.y-a.y,l=n(s*s+r*r),c=e.distanceToBorder(t,d),u=(l-c)/l,p={};return p.x=(1-u)*a.x+u*i.x,p.y=(1-u)*a.y+u*i.y,p;}},{key:"_getDistanceToEdge",value:function(e,t,o,n,i,a){return this._getDistanceToLine(e,t,o,n,i,a);}}]),t;}(EdgeBase),Edge=function(){var t=Math.atan2,o=Math.cos,n=Math.sin,i=Math.PI,a=Math.max,d=Math.min;function e(t,o,n,i){if(classCallCheck$1$1(this,e),void 0===o)throw new Error("No body provided");this.options=util$2.bridgeObject(n),this.globalOptions=n,this.defaultOptions=i,this.body=o,this.id=void 0,this.fromId=void 0,this.toId=void 0,this.selected=!1,this.hover=!1,this.labelDirty=!0,this.baseWidth=this.options.width,this.baseFontSize=this.options.font.size,this.from=void 0,this.to=void 0,this.edgeType=void 0,this.connected=!1,this.labelModule=new Label(this.body,this.options,!0),this.setOptions(t);}return createClass$1$1(e,[{key:"setOptions",value:function(t){if(t){var o=this.options.hidden;(void 0===o||null===o)&&(o=!1),e.parseOptions(this.options,t,!0,this.globalOptions),void 0!==t.id&&(this.id=t.id),void 0!==t.from&&(this.fromId=t.from),void 0!==t.to&&(this.toId=t.to),void 0!==t.title&&(this.title=t.title),void 0!==t.value&&(t.value=parseFloat(t.value));var n=[t,this.options,this.defaultOptions];this.chooser=ComponentUtil.choosify("edge",n),this.updateLabelModule(t);var i=this.updateEdgeType();this._setInteractionWidths(),this.connect();var a=this.options.hidden;return (void 0===a||null===a)&&(a=!1),(a!=o||void 0!==t.physics)&&(i=!0),void 0!==t.physics&&(i=!0),i;}}},{key:"getFormattingValues",value:function(){var e=!0===this.options.arrows.to||!0===this.options.arrows.to.enabled,t=!0===this.options.arrows.from||!0===this.options.arrows.from.enabled,o=!0===this.options.arrows.middle||!0===this.options.arrows.middle.enabled,n=this.options.color.inherit,i={toArrow:e,toArrowScale:this.options.arrows.to.scaleFactor,toArrowType:this.options.arrows.to.type,middleArrow:o,middleArrowScale:this.options.arrows.middle.scaleFactor,middleArrowType:this.options.arrows.middle.type,fromArrow:t,fromArrowScale:this.options.arrows.from.scaleFactor,fromArrowType:this.options.arrows.from.type,arrowStrikethrough:this.options.arrowStrikethrough,color:n?void 0:this.options.color.color,inheritsColor:n,opacity:this.options.color.opacity,hidden:this.options.hidden,length:this.options.length,shadow:this.options.shadow.enabled,shadowColor:this.options.shadow.color,shadowSize:this.options.shadow.size,shadowX:this.options.shadow.x,shadowY:this.options.shadow.y,dashes:this.options.dashes,width:this.options.width,background:this.options.background.enabled,backgroundColor:this.options.background.color,backgroundSize:this.options.background.size,backgroundDashes:this.options.background.dashes};if(!(this.selected||this.hover))i.shadow=this.options.shadow.enabled,i.width=a(i.width,.3/this.body.view.scale);else if(!0!==this.chooser)"function"==typeof this.chooser&&(this.chooser(i,this.options.id,this.selected,this.hover),void 0!==i.color&&(i.inheritsColor=!1),!1===i.shadow&&(i.shadowColor!==this.options.shadow.color||i.shadowSize!==this.options.shadow.size||i.shadowX!==this.options.shadow.x||i.shadowY!==this.options.shadow.y)&&(i.shadow=!0));else if(this.selected){var d=this.options.selectionWidth;"function"==typeof d?i.width=d(i.width):"number"==typeof d&&(i.width+=d),i.width=a(i.width,.3/this.body.view.scale),i.color=this.options.color.highlight,i.shadow=this.options.shadow.enabled;}else if(this.hover){var s=this.options.hoverWidth;"function"==typeof s?i.width=s(i.width):"number"==typeof s&&(i.width+=s),i.width=a(i.width,.3/this.body.view.scale),i.color=this.options.color.hover,i.shadow=this.options.shadow.enabled;}return i;}},{key:"updateLabelModule",value:function(e){var t=[e,this.options,this.globalOptions,this.defaultOptions];this.labelModule.update(this.options,t),void 0!==this.labelModule.baseSize&&(this.baseFontSize=this.labelModule.baseSize);}},{key:"updateEdgeType",value:function(){var e=this.options.smooth,t=!1,o=!0;return void 0!==this.edgeType&&((this.edgeType instanceof BezierEdgeDynamic&&!0===e.enabled&&"dynamic"===e.type||this.edgeType instanceof CubicBezierEdge&&!0===e.enabled&&"cubicBezier"===e.type||this.edgeType instanceof BezierEdgeStatic&&!0===e.enabled&&"dynamic"!==e.type&&"cubicBezier"!==e.type||this.edgeType instanceof StraightEdge&&!1===e.type.enabled)&&(o=!1),!0===o&&(t=this.cleanup())),!0===o?!0===e.enabled?"dynamic"===e.type?(t=!0,this.edgeType=new BezierEdgeDynamic(this.options,this.body,this.labelModule)):"cubicBezier"===e.type?this.edgeType=new CubicBezierEdge(this.options,this.body,this.labelModule):this.edgeType=new BezierEdgeStatic(this.options,this.body,this.labelModule):this.edgeType=new StraightEdge(this.options,this.body,this.labelModule):this.edgeType.setOptions(this.options),t;}},{key:"connect",value:function(){this.disconnect(),this.from=this.body.nodes[this.fromId]||void 0,this.to=this.body.nodes[this.toId]||void 0,this.connected=void 0!==this.from&&void 0!==this.to,!0===this.connected?(this.from.attachEdge(this),this.to.attachEdge(this)):(this.from&&this.from.detachEdge(this),this.to&&this.to.detachEdge(this)),this.edgeType.connect();}},{key:"disconnect",value:function(){this.from&&(this.from.detachEdge(this),this.from=void 0),this.to&&(this.to.detachEdge(this),this.to=void 0),this.connected=!1;}},{key:"getTitle",value:function(){return this.title;}},{key:"isSelected",value:function(){return this.selected;}},{key:"getValue",value:function(){return this.options.value;}},{key:"setValueRange",value:function(e,t,o){if(void 0!==this.options.value){var n=this.options.scaling.customScalingFunction(e,t,o,this.options.value),i=this.options.scaling.max-this.options.scaling.min;if(!0===this.options.scaling.label.enabled){var a=this.options.scaling.label.max-this.options.scaling.label.min;this.options.font.size=this.options.scaling.label.min+n*a;}this.options.width=this.options.scaling.min+n*i;}else this.options.width=this.baseWidth,this.options.font.size=this.baseFontSize;this._setInteractionWidths(),this.updateLabelModule();}},{key:"_setInteractionWidths",value:function(){this.edgeType.hoverWidth="function"==typeof this.options.hoverWidth?this.options.hoverWidth(this.options.width):this.options.hoverWidth+this.options.width,this.edgeType.selectionWidth="function"==typeof this.options.selectionWidth?this.options.selectionWidth(this.options.width):this.options.selectionWidth+this.options.width;}},{key:"draw",value:function(e){var t=this.getFormattingValues();if(!t.hidden){var o=this.edgeType.getViaNode(),n={};this.edgeType.fromPoint=this.edgeType.from,this.edgeType.toPoint=this.edgeType.to,t.fromArrow&&(n.from=this.edgeType.getArrowData(e,"from",o,this.selected,this.hover,t),!1===t.arrowStrikethrough&&(this.edgeType.fromPoint=n.from.core)),t.toArrow&&(n.to=this.edgeType.getArrowData(e,"to",o,this.selected,this.hover,t),!1===t.arrowStrikethrough&&(this.edgeType.toPoint=n.to.core)),t.middleArrow&&(n.middle=this.edgeType.getArrowData(e,"middle",o,this.selected,this.hover,t)),this.edgeType.drawLine(e,t,this.selected,this.hover,o),this.drawArrows(e,n,t),this.drawLabel(e,o);}}},{key:"drawArrows",value:function(e,t,o){o.fromArrow&&this.edgeType.drawArrowHead(e,o,this.selected,this.hover,t.from),o.middleArrow&&this.edgeType.drawArrowHead(e,o,this.selected,this.hover,t.middle),o.toArrow&&this.edgeType.drawArrowHead(e,o,this.selected,this.hover,t.to);}},{key:"drawLabel",value:function(e,t){if(void 0!==this.options.label){var o=this.from,n=this.to;if(this.labelModule.differentState(this.selected,this.hover)&&this.labelModule.getTextSize(e,this.selected,this.hover),o.id!=n.id){this.labelModule.pointToSelf=!1;var i=this.edgeType.getPoint(.5,t);e.save();var a=this._getRotation(e);0!=a.angle&&(e.translate(a.x,a.y),e.rotate(a.angle)),this.labelModule.draw(e,i.x,i.y,this.selected,this.hover),e.restore();}else{this.labelModule.pointToSelf=!0;var d=this.options.selfReferenceSize,s,r;o.shape.width>o.shape.height?(s=o.x+.5*o.shape.width,r=o.y-d):(s=o.x+d,r=o.y-.5*o.shape.height),i=this._pointOnCircle(s,r,d,.125),this.labelModule.draw(e,i.x,i.y,this.selected,this.hover);}}}},{key:"getItemsOnPoint",value:function(e){var t=[];if(this.labelModule.visible()){var o=this._getRotation();ComponentUtil.pointInRect(this.labelModule.getSize(),e,o)&&t.push({edgeId:this.id,labelId:0});}var n={left:e.x,top:e.y};return this.isOverlappingWith(n)&&t.push({edgeId:this.id}),t;}},{key:"isOverlappingWith",value:function(e){if(this.connected){var t=this.from.x,o=this.from.y,n=this.to.x,i=this.to.y,a=e.left,d=e.top,s=this.edgeType.getDistanceToEdge(t,o,n,i,a,d);return 10>s;}return !1;}},{key:"_getRotation",value:function(e){var o=this.edgeType.getViaNode(),n=this.edgeType.getPoint(.5,o);void 0!==e&&this.labelModule.calculateLabelSize(e,this.selected,this.hover,n.x,n.y);var a={x:n.x,y:this.labelModule.size.yLine,angle:0};if(!this.labelModule.visible())return a;if("horizontal"===this.options.font.align)return a;var d=this.from.y-this.to.y,s=this.from.x-this.to.x,r=t(d,s);return (-1>r&&0>s||0<r&&0>s)&&(r+=i),a.angle=r,a;}},{key:"_pointOnCircle",value:function(e,t,a,d){var s=2*d*i;return {x:e+a*o(s),y:t-a*n(s)};}},{key:"select",value:function(){this.selected=!0;}},{key:"unselect",value:function(){this.selected=!1;}},{key:"cleanup",value:function(){return this.edgeType.cleanup();}},{key:"remove",value:function(){this.cleanup(),this.disconnect(),delete this.body.edges[this.id];}},{key:"endPointsValid",value:function(){return void 0!==this.body.nodes[this.fromId]&&void 0!==this.body.nodes[this.toId];}}],[{key:"parseOptions",value:function(e,t){var o=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},s=!!(4<arguments.length&&void 0!==arguments[4])&&arguments[4];if(util$2.selectiveDeepExtend(["arrowStrikethrough","id","from","hidden","hoverWidth","labelHighlightBold","length","line","opacity","physics","scaling","selectionWidth","selfReferenceSize","to","title","value","width","font","chosen","widthConstraint"],e,t,o),ComponentUtil.isValidLabel(t.label)?e.label=t.label:!ComponentUtil.isValidLabel(e.label)&&(e.label=void 0),util$2.mergeOptions(e,t,"smooth",n),util$2.mergeOptions(e,t,"shadow",n),util$2.mergeOptions(e,t,"background",n),void 0!==t.dashes&&null!==t.dashes?e.dashes=t.dashes:!0===o&&null===t.dashes&&(e.dashes=Object.create(n.dashes)),void 0!==t.scaling&&null!==t.scaling?(void 0!==t.scaling.min&&(e.scaling.min=t.scaling.min),void 0!==t.scaling.max&&(e.scaling.max=t.scaling.max),util$2.mergeOptions(e.scaling,t.scaling,"label",n.scaling)):!0===o&&null===t.scaling&&(e.scaling=Object.create(n.scaling)),void 0===t.arrows||null===t.arrows)!0===o&&null===t.arrows&&(e.arrows=Object.create(n.arrows));else if("string"==typeof t.arrows){var r=t.arrows.toLowerCase();e.arrows.to.enabled=-1!=r.indexOf("to"),e.arrows.middle.enabled=-1!=r.indexOf("middle"),e.arrows.from.enabled=-1!=r.indexOf("from");}else if("object"===_typeof_1$2$1(t.arrows))util$2.mergeOptions(e.arrows,t.arrows,"to",n.arrows),util$2.mergeOptions(e.arrows,t.arrows,"middle",n.arrows),util$2.mergeOptions(e.arrows,t.arrows,"from",n.arrows);else throw new Error("The arrow newOptions can only be an object or a string. Refer to the documentation. You used:"+JSON.stringify(t.arrows));if(void 0!==t.color&&null!==t.color){var l=t.color,c=e.color;if(s)util$2.deepExtend(c,n.color,!1,o);else for(var u in c)c.hasOwnProperty(u)&&delete c[u];if(util$2.isString(c))c.color=c,c.highlight=c,c.hover=c,c.inherit=!1,void 0===l.opacity&&(c.opacity=1);else{var i=!1;void 0!==l.color&&(c.color=l.color,i=!0),void 0!==l.highlight&&(c.highlight=l.highlight,i=!0),void 0!==l.hover&&(c.hover=l.hover,i=!0),void 0!==l.inherit&&(c.inherit=l.inherit),void 0!==l.opacity&&(c.opacity=d(1,a(0,l.opacity))),!0==i?c.inherit=!1:void 0===c.inherit&&(c.inherit="from");}}else!0===o&&null===t.color&&(e.color=util$2.bridgeObject(n.color));!0===o&&null===t.font&&(e.font=util$2.bridgeObject(n.font));}}]),e;}(),EdgesHandler=function(){var t=Math.max;function e(o,n,i){var a=this;classCallCheck$1$1(this,e),this.body=o,this.images=n,this.groups=i,this.body.functions.createEdge=this.create.bind(this),this.edgesListeners={add:function(e,t){a.add(t.items);},update:function(e,t){a.update(t.items);},remove:function(e,t){a.remove(t.items);}},this.options={},this.defaultOptions={arrows:{to:{enabled:!1,scaleFactor:1,type:"arrow"},middle:{enabled:!1,scaleFactor:1,type:"arrow"},from:{enabled:!1,scaleFactor:1,type:"arrow"}},arrowStrikethrough:!0,color:{color:"#848484",highlight:"#848484",hover:"#848484",inherit:"from",opacity:1},dashes:!1,font:{color:"#343434",size:14,face:"arial",background:"none",strokeWidth:2,strokeColor:"#ffffff",align:"horizontal",multi:!1,vadjust:0,bold:{mod:"bold"},boldital:{mod:"bold italic"},ital:{mod:"italic"},mono:{mod:"",size:15,face:"courier new",vadjust:2}},hidden:!1,hoverWidth:1.5,label:void 0,labelHighlightBold:!0,length:void 0,physics:!0,scaling:{min:1,max:15,label:{enabled:!0,min:14,max:30,maxVisible:30,drawThreshold:5},customScalingFunction:function(e,o,n,i){if(o===e)return .5;return t(0,(i-e)*(1/(o-e)));}},selectionWidth:1.5,selfReferenceSize:20,shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:10,x:5,y:5},background:{enabled:!1,color:"rgba(111,111,111,1)",size:10,dashes:!1},smooth:{enabled:!0,type:"dynamic",forceDirection:"none",roundness:.5},title:void 0,width:1,value:void 0},util$2.deepExtend(this.options,this.defaultOptions),this.bindEventListeners();}return createClass$1$1(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("_forceDisableDynamicCurves",function(t){var o=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];"dynamic"===t&&(t="continuous");var n=!1;for(var i in e.body.edges)if(e.body.edges.hasOwnProperty(i)){var a=e.body.edges[i],d=e.body.data.edges._data[i];if(void 0!==d){var s=d.smooth;void 0!==s&&!0===s.enabled&&"dynamic"===s.type&&(void 0===t?a.setOptions({smooth:!1}):a.setOptions({smooth:{type:t}}),n=!0);}}!0===o&&!0==n&&e.body.emitter.emit("_dataChanged");}),this.body.emitter.on("_dataUpdated",function(){e.reconnectEdges();}),this.body.emitter.on("refreshEdges",this.refresh.bind(this)),this.body.emitter.on("refresh",this.refresh.bind(this)),this.body.emitter.on("destroy",function(){util$2.forEach(e.edgesListeners,function(t,o){e.body.data.edges&&e.body.data.edges.off(o,t);}),delete e.body.functions.createEdge,delete e.edgesListeners.add,delete e.edgesListeners.update,delete e.edgesListeners.remove,delete e.edgesListeners;});}},{key:"setOptions",value:function(e){if(void 0!==e){Edge.parseOptions(this.options,e,!0,this.defaultOptions,!0);var t=!1;if(void 0!==e.smooth)for(var o in this.body.edges)this.body.edges.hasOwnProperty(o)&&(t=this.body.edges[o].updateEdgeType()||t);if(void 0!==e.font)for(var n in this.body.edges)this.body.edges.hasOwnProperty(n)&&this.body.edges[n].updateLabelModule();(void 0!==e.hidden||void 0!==e.physics||!0===t)&&this.body.emitter.emit("_dataChanged");}}},{key:"setData",value:function(e){var t=this,o=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],n=this.body.data.edges;if(e instanceof DataSet$1||e instanceof DataView$1)this.body.data.edges=e;else if(Array.isArray(e))this.body.data.edges=new DataSet$1(),this.body.data.edges.add(e);else if(!e)this.body.data.edges=new DataSet$1();else throw new TypeError("Array or DataSet expected");if(n&&util$2.forEach(this.edgesListeners,function(e,t){n.off(t,e);}),this.body.edges={},this.body.data.edges){util$2.forEach(this.edgesListeners,function(e,o){t.body.data.edges.on(o,e);});var i=this.body.data.edges.getIds();this.add(i,!0);}this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),!1===o&&this.body.emitter.emit("_dataChanged");}},{key:"add",value:function(e){for(var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],o=this.body.edges,n=this.body.data.edges,a=0;a<e.length;a++){var d=e[a],s=o[d];s&&s.disconnect();var r=n.get(d,{showInternalIds:!0});o[d]=this.create(r);}this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),!1===t&&this.body.emitter.emit("_dataChanged");}},{key:"update",value:function(e){for(var t=this.body.edges,o=this.body.data.edges,n=!1,a=0;a<e.length;a++){var d=e[a],s=o.get(d),r=t[d];void 0===r?(this.body.edges[d]=this.create(s),n=!0):(r.disconnect(),n=r.setOptions(s)||n,r.connect());}!0===n?(this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),this.body.emitter.emit("_dataChanged")):this.body.emitter.emit("_dataUpdated");}},{key:"remove",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if(0!==e.length){var o=this.body.edges;util$2.forEach(e,function(e){var t=o[e];void 0!==t&&t.remove();}),t&&this.body.emitter.emit("_dataChanged");}}},{key:"refresh",value:function(){var e=this;util$2.forEach(this.body.edges,function(t,o){var n=e.body.data.edges._data[o];void 0!==n&&t.setOptions(n);});}},{key:"create",value:function(e){return new Edge(e,this.body,this.options,this.defaultOptions);}},{key:"reconnectEdges",value:function(){var e=this.body.nodes,t=this.body.edges,o;for(o in e)e.hasOwnProperty(o)&&(e[o].edges=[]);for(o in t)if(t.hasOwnProperty(o)){var n=t[o];n.from=null,n.to=null,n.connect();}}},{key:"getConnectedNodes",value:function(e){var t=[];if(void 0!==this.body.edges[e]){var o=this.body.edges[e];void 0!==o.fromId&&t.push(o.fromId),void 0!==o.toId&&t.push(o.toId);}return t;}},{key:"_updateState",value:function(){this._addMissingEdges(),this._removeInvalidEdges();}},{key:"_removeInvalidEdges",value:function(){var e=this,t=[];util$2.forEach(this.body.edges,function(o,n){var i=e.body.nodes[o.toId],a=e.body.nodes[o.fromId];void 0!==i&&!0===i.isCluster||void 0!==a&&!0===a.isCluster||(void 0===i||void 0===a)&&t.push(n);}),this.remove(t,!1);}},{key:"_addMissingEdges",value:function(){var e=this.body.data.edges;if(void 0!==e&&null!==e){var t=this.body.edges,o=[];e.forEach(function(e,n){var i=t[n];void 0===i&&o.push(n);}),this.add(o,!0);}}}]),e;}(),BarnesHutSolver=function(){var t=Math.sin,o=Math.sqrt,n=Math.pow,a=Math.max,d=Math.abs,s=Math.min,r=Math.floor;function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.physicsBody=o,this.barnesHutTree,this.setOptions(n),this.randomSeed=5;}return createClass$1$1(e,[{key:"setOptions",value:function(e){this.options=e,this.thetaInversed=1/this.options.theta,this.overlapAvoidanceFactor=1-a(0,s(1,this.options.avoidOverlap));}},{key:"seededRandom",value:function(){var e=1e4*t(this.randomSeed++);return e-r(e);}},{key:"solve",value:function(){if(0!==this.options.gravitationalConstant&&0<this.physicsBody.physicsNodeIndices.length){var e=this.body.nodes,t=this.physicsBody.physicsNodeIndices,o=t.length,n=this._formBarnesHutTree(e,t),a;this.barnesHutTree=n;for(var d=0;d<o;d++)a=e[t[d]],0<a.options.mass&&this._getForceContributions(n.root,a);}}},{key:"_getForceContributions",value:function(e,t){this._getForceContribution(e.children.NW,t),this._getForceContribution(e.children.NE,t),this._getForceContribution(e.children.SW,t),this._getForceContribution(e.children.SE,t);}},{key:"_getForceContribution",value:function(e,t){if(0<e.childrenCount){var n,i,a;n=e.centerOfMass.x-t.x,i=e.centerOfMass.y-t.y,a=o(n*n+i*i),a*e.calcSize>this.thetaInversed?this._calculateForces(a,n,i,t,e):4===e.childrenCount?this._getForceContributions(e,t):e.children.data.id!=t.id&&this._calculateForces(a,n,i,t,e);}}},{key:"_calculateForces",value:function(e,t,o,i,d){0===e&&(e=.1,t=e),1>this.overlapAvoidanceFactor&&i.shape.radius&&(e=a(.1+this.overlapAvoidanceFactor*i.shape.radius,e-i.shape.radius));var s=this.options.gravitationalConstant*d.mass*i.options.mass/n(e,3),r=t*s;this.physicsBody.forces[i.id].x+=r,this.physicsBody.forces[i.id].y+=o*s;}},{key:"_formBarnesHutTree",value:function(e,t){for(var o=t.length,n=e[t[0]].x,s=e[t[0]].y,r=e[t[0]].x,l=e[t[0]].y,c=1,u;c<o;c++){var p=e[t[c]],h=p.x,m=p.y;0<p.options.mass&&(h<n&&(n=h),h>r&&(r=h),m<s&&(s=m),m>l&&(l=m));}var g=d(r-n)-d(l-s);0<g?(s-=.5*g,l+=.5*g):(n+=.5*g,r-=.5*g);var y=a(1e-5,d(r-n)),f=.5*y,b=.5*(n+r),_=.5*(s+l),v={root:{centerOfMass:{x:0,y:0},mass:0,range:{minX:b-f,maxX:b+f,minY:_-f,maxY:_+f},size:y,calcSize:1/y,children:{data:null},maxWidth:0,level:0,childrenCount:4}};this._splitBranch(v.root);for(var k=0;k<o;k++)u=e[t[k]],0<u.options.mass&&this._placeInTree(v.root,u);return v;}},{key:"_updateBranchMass",value:function(e,t){var o=e.centerOfMass,n=e.mass+t.options.mass,i=1/n;o.x=o.x*e.mass+t.x*t.options.mass,o.x*=i,o.y=o.y*e.mass+t.y*t.options.mass,o.y*=i,e.mass=n;var d=a(a(t.height,t.radius),t.width);e.maxWidth=e.maxWidth<d?d:e.maxWidth;}},{key:"_placeInTree",value:function(e,t,o){(!0!=o||void 0===o)&&this._updateBranchMass(e,t);var n=e.children.NW.range,i;i=n.maxX>t.x?n.maxY>t.y?"NW":"SW":n.maxY>t.y?"NE":"SE",this._placeInRegion(e,t,i);}},{key:"_placeInRegion",value:function(e,t,o){var n=e.children[o];switch(n.childrenCount){case 0:n.children.data=t,n.childrenCount=1,this._updateBranchMass(n,t);break;case 1:n.children.data.x===t.x&&n.children.data.y===t.y?(t.x+=this.seededRandom(),t.y+=this.seededRandom()):(this._splitBranch(n),this._placeInTree(n,t));break;case 4:this._placeInTree(n,t);}}},{key:"_splitBranch",value:function(e){var t=null;1===e.childrenCount&&(t=e.children.data,e.mass=0,e.centerOfMass.x=0,e.centerOfMass.y=0),e.childrenCount=4,e.children.data=null,this._insertRegion(e,"NW"),this._insertRegion(e,"NE"),this._insertRegion(e,"SW"),this._insertRegion(e,"SE"),null!=t&&this._placeInTree(e,t);}},{key:"_insertRegion",value:function(e,t){var o=.5*e.size,n,i,a,d;"NW"===t?(n=e.range.minX,i=e.range.minX+o,a=e.range.minY,d=e.range.minY+o):"NE"===t?(n=e.range.minX+o,i=e.range.maxX,a=e.range.minY,d=e.range.minY+o):"SW"===t?(n=e.range.minX,i=e.range.minX+o,a=e.range.minY+o,d=e.range.maxY):"SE"===t?(n=e.range.minX+o,i=e.range.maxX,a=e.range.minY+o,d=e.range.maxY):void 0,e.children[t]={centerOfMass:{x:0,y:0},mass:0,range:{minX:n,maxX:i,minY:a,maxY:d},size:.5*e.size,calcSize:2*e.calcSize,children:{data:null},maxWidth:0,level:e.level+1,childrenCount:0};}},{key:"_debug",value:function(e,t){void 0!==this.barnesHutTree&&(e.lineWidth=1,this._drawBranch(this.barnesHutTree.root,e,t));}},{key:"_drawBranch",value:function(e,t,o){void 0===o&&(o="#FF0000"),4===e.childrenCount&&(this._drawBranch(e.children.NW,t),this._drawBranch(e.children.NE,t),this._drawBranch(e.children.SE,t),this._drawBranch(e.children.SW,t)),t.strokeStyle=o,t.beginPath(),t.moveTo(e.range.minX,e.range.minY),t.lineTo(e.range.maxX,e.range.minY),t.stroke(),t.beginPath(),t.moveTo(e.range.maxX,e.range.minY),t.lineTo(e.range.maxX,e.range.maxY),t.stroke(),t.beginPath(),t.moveTo(e.range.maxX,e.range.maxY),t.lineTo(e.range.minX,e.range.maxY),t.stroke(),t.beginPath(),t.moveTo(e.range.minX,e.range.maxY),t.lineTo(e.range.minX,e.range.minY),t.stroke();}}]),e;}(),RepulsionSolver=function(){var t=Math.sqrt;function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.physicsBody=o,this.setOptions(n);}return createClass$1$1(e,[{key:"setOptions",value:function(e){this.options=e;}},{key:"solve",value:function(){for(var e=this.body.nodes,o=this.physicsBody.physicsNodeIndices,n=this.physicsBody.forces,a=this.options.nodeDistance,d=0,s,r,l,c,u,p,h,m;d<o.length-1;d++){h=e[o[d]];for(var g=d+1;g<o.length;g++)m=e[o[g]],s=m.x-h.x,r=m.y-h.y,l=t(s*s+r*r),0===l&&(l=.1*Math.random(),s=l),l<2*a&&(p=l<.5*a?1:-2/3/a*l+4/3,p/=l,c=s*p,u=r*p,n[h.id].x-=c,n[h.id].y-=u,n[m.id].x+=c,n[m.id].y+=u);}}}]),e;}(),HierarchicalRepulsionSolver=function(){var t=Math.sqrt,o=Math.pow;function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.physicsBody=o,this.setOptions(n);}return createClass$1$1(e,[{key:"setOptions",value:function(e){this.options=e;}},{key:"solve",value:function(){var e=this.body.nodes,n=this.physicsBody.physicsNodeIndices,a=this.physicsBody.forces,d=this.options.nodeDistance,s,r,l,c,u,p,h,m,g,y;for(g=0;g<n.length-1;g++)for(h=e[n[g]],y=g+1;y<n.length;y++)if(m=e[n[y]],h.level===m.level){s=m.x-h.x,r=m.y-h.y,l=t(s*s+r*r);var f=.05;p=l<d?-o(f*l,2)+o(f*d,2):0,0===l?l=.01:p/=l,c=s*p,u=r*p,a[h.id].x-=c,a[h.id].y-=u,a[m.id].x+=c,a[m.id].y+=u;}}}]),e;}(),SpringSolver=function(){var t=Math.sqrt,o=Math.max;function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.physicsBody=o,this.setOptions(n);}return createClass$1$1(e,[{key:"setOptions",value:function(e){this.options=e;}},{key:"solve",value:function(){for(var e=this.physicsBody.physicsEdgeIndices,t=this.body.edges,o=0,n,a,d,s,r;o<e.length;o++)a=t[e[o]],!0===a.connected&&a.toId!==a.fromId&&void 0!==this.body.nodes[a.toId]&&void 0!==this.body.nodes[a.fromId]&&(void 0===a.edgeType.via?(n=void 0===a.options.length?1.5*this.options.springLength:a.options.length,this._calculateSpringForce(a.from,a.to,n)):(n=void 0===a.options.length?this.options.springLength:a.options.length,d=a.to,s=a.edgeType.via,r=a.from,this._calculateSpringForce(d,s,.5*n),this._calculateSpringForce(s,r,.5*n)));}},{key:"_calculateSpringForce",value:function(e,n,i){var a=e.x-n.x,d=e.y-n.y,s=o(t(a*a+d*d),.01),r=this.options.springConstant*(i-s)/s,l=a*r,c=d*r;void 0!==this.physicsBody.forces[e.id]&&(this.physicsBody.forces[e.id].x+=l,this.physicsBody.forces[e.id].y+=c),void 0!==this.physicsBody.forces[n.id]&&(this.physicsBody.forces[n.id].x-=l,this.physicsBody.forces[n.id].y-=c);}}]),e;}(),HierarchicalSpringSolver=function(){var t=Math.sqrt,o=Math.max,n=Math.min;function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.physicsBody=o,this.setOptions(n);}return createClass$1$1(e,[{key:"setOptions",value:function(e){this.options=e;}},{key:"solve",value:function(){for(var e=this.body.edges,a=.5,d=this.physicsBody.physicsEdgeIndices,s=this.physicsBody.physicsNodeIndices,r=this.physicsBody.forces,l=0,c,u,p,h,m,g,y,f,b;l<s.length;l++)b=s[l],r[b].springFx=0,r[b].springFy=0;for(var _=0;_<d.length;_++)u=e[d[_]],!0===u.connected&&(c=void 0===u.options.length?this.options.springLength:u.options.length,p=u.from.x-u.to.x,h=u.from.y-u.to.y,f=t(p*p+h*h),f=0===f?.01:f,y=this.options.springConstant*(c-f)/f,m=p*y,g=h*y,u.to.level==u.from.level?(void 0!==r[u.toId]&&(r[u.toId].x-=a*m,r[u.toId].y-=a*g),void 0!==r[u.fromId]&&(r[u.fromId].x+=a*m,r[u.fromId].y+=a*g)):(void 0!==r[u.toId]&&(r[u.toId].springFx-=m,r[u.toId].springFy-=g),void 0!==r[u.fromId]&&(r[u.fromId].springFx+=m,r[u.fromId].springFy+=g)));y=1;for(var v=0,k,w,x;v<s.length;v++)x=s[v],k=n(y,o(-y,r[x].springFx)),w=n(y,o(-y,r[x].springFy)),r[x].x+=k,r[x].y+=w;for(var S=0,O=0,D=0,T;D<s.length;D++)T=s[D],S+=r[T].x,O+=r[T].y;for(var C=S/s.length,E=O/s.length,M=0,I;M<s.length;M++)I=s[M],r[I].x-=C,r[I].y-=E;}}]),e;}(),CentralGravitySolver=function(){var t=Math.sqrt;function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.physicsBody=o,this.setOptions(n);}return createClass$1$1(e,[{key:"setOptions",value:function(e){this.options=e;}},{key:"solve",value:function(){for(var e=this.body.nodes,o=this.physicsBody.physicsNodeIndices,n=this.physicsBody.forces,a=0,d,s,r,l,c;a<o.length;a++)c=o[a],l=e[c],d=-l.x,s=-l.y,r=t(d*d+s*s),this._calculateForces(r,d,s,n,l);}},{key:"_calculateForces",value:function(e,t,o,n,i){var a=0===e?0:this.options.centralGravity/e;n[i.id].x=t*a,n[i.id].y=o*a;}}]),e;}(),ForceAtlas2BasedRepulsionSolver=function(e){var o=Math.pow,n=Math.max;function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_calculateForces",value:function(e,t,i,a,d){0===e&&(e=.1*Math.random(),t=e),1>this.overlapAvoidanceFactor&&a.shape.radius&&(e=n(.1+this.overlapAvoidanceFactor*a.shape.radius,e-a.shape.radius));var s=a.edges.length+1,r=this.options.gravitationalConstant*d.mass*a.options.mass*s/o(e,2),l=t*r;this.physicsBody.forces[a.id].x+=l,this.physicsBody.forces[a.id].y+=i*r;}}]),t;}(BarnesHutSolver),ForceAtlas2BasedCentralGravitySolver=function(e){function t(e,o,n){return classCallCheck$1$1(this,t),possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n));}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_calculateForces",value:function(e,t,o,n,i){if(0<e){var a=i.edges.length+1,d=this.options.centralGravity*a*i.options.mass;n[i.id].x=t*d,n[i.id].y=o*d;}}}]),t;}(CentralGravitySolver),PhysicsEngine=function(){var t=Math.atan2,o=Math.sqrt,n=Math.pow,a=Math.max,d=Math.abs,s=Math.min;function e(t){classCallCheck$1$1(this,e),this.body=t,this.physicsBody={physicsNodeIndices:[],physicsEdgeIndices:[],forces:{},velocities:{}},this.physicsEnabled=!0,this.simulationInterval=1e3/60,this.requiresTimeout=!0,this.previousStates={},this.referenceState={},this.freezeCache={},this.renderTimer=void 0,this.adaptiveTimestep=!1,this.adaptiveTimestepEnabled=!1,this.adaptiveCounter=0,this.adaptiveInterval=3,this.stabilized=!1,this.startedStabilization=!1,this.stabilizationIterations=0,this.ready=!1,this.options={},this.defaultOptions={enabled:!0,barnesHut:{theta:.5,gravitationalConstant:-2e3,centralGravity:.3,springLength:95,springConstant:.04,damping:.09,avoidOverlap:0},forceAtlas2Based:{theta:.5,gravitationalConstant:-50,centralGravity:.01,springConstant:.08,springLength:100,damping:.4,avoidOverlap:0},repulsion:{centralGravity:.2,springLength:200,springConstant:.05,nodeDistance:100,damping:.09,avoidOverlap:0},hierarchicalRepulsion:{centralGravity:0,springLength:100,springConstant:.01,nodeDistance:120,damping:.09},maxVelocity:50,minVelocity:.75,solver:"barnesHut",stabilization:{enabled:!0,iterations:1e3,updateInterval:50,onlyDynamicEdges:!1,fit:!0},timestep:.5,adaptiveTimestep:!0},util$2.extend(this.options,this.defaultOptions),this.timestep=.5,this.layoutFailed=!1,this.bindEventListeners();}return createClass$1$1(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("initPhysics",function(){e.initPhysics();}),this.body.emitter.on("_layoutFailed",function(){e.layoutFailed=!0;}),this.body.emitter.on("resetPhysics",function(){e.stopSimulation(),e.ready=!1;}),this.body.emitter.on("disablePhysics",function(){e.physicsEnabled=!1,e.stopSimulation();}),this.body.emitter.on("restorePhysics",function(){e.setOptions(e.options),!0===e.ready&&e.startSimulation();}),this.body.emitter.on("startSimulation",function(){!0===e.ready&&e.startSimulation();}),this.body.emitter.on("stopSimulation",function(){e.stopSimulation();}),this.body.emitter.on("destroy",function(){e.stopSimulation(!1),e.body.emitter.off();}),this.body.emitter.on("_dataChanged",function(){e.updatePhysicsData();});}},{key:"setOptions",value:function(e){void 0!==e&&(!1===e?(this.options.enabled=!1,this.physicsEnabled=!1,this.stopSimulation()):!0===e?(this.options.enabled=!0,this.physicsEnabled=!0,this.startSimulation()):(this.physicsEnabled=!0,util$2.selectiveNotDeepExtend(["stabilization"],this.options,e),util$2.mergeOptions(this.options,e,"stabilization"),void 0===e.enabled&&(this.options.enabled=!0),!1===this.options.enabled&&(this.physicsEnabled=!1,this.stopSimulation()),this.timestep=this.options.timestep)),this.init();}},{key:"init",value:function(){var e;"forceAtlas2Based"===this.options.solver?(e=this.options.forceAtlas2Based,this.nodesSolver=new ForceAtlas2BasedRepulsionSolver(this.body,this.physicsBody,e),this.edgesSolver=new SpringSolver(this.body,this.physicsBody,e),this.gravitySolver=new ForceAtlas2BasedCentralGravitySolver(this.body,this.physicsBody,e)):"repulsion"===this.options.solver?(e=this.options.repulsion,this.nodesSolver=new RepulsionSolver(this.body,this.physicsBody,e),this.edgesSolver=new SpringSolver(this.body,this.physicsBody,e),this.gravitySolver=new CentralGravitySolver(this.body,this.physicsBody,e)):"hierarchicalRepulsion"===this.options.solver?(e=this.options.hierarchicalRepulsion,this.nodesSolver=new HierarchicalRepulsionSolver(this.body,this.physicsBody,e),this.edgesSolver=new HierarchicalSpringSolver(this.body,this.physicsBody,e),this.gravitySolver=new CentralGravitySolver(this.body,this.physicsBody,e)):(e=this.options.barnesHut,this.nodesSolver=new BarnesHutSolver(this.body,this.physicsBody,e),this.edgesSolver=new SpringSolver(this.body,this.physicsBody,e),this.gravitySolver=new CentralGravitySolver(this.body,this.physicsBody,e)),this.modelOptions=e;}},{key:"initPhysics",value:function(){!0===this.physicsEnabled&&!0===this.options.enabled?!0===this.options.stabilization.enabled?this.stabilize():(this.stabilized=!1,this.ready=!0,this.body.emitter.emit("fit",{},this.layoutFailed),this.startSimulation()):(this.ready=!0,this.body.emitter.emit("fit"));}},{key:"startSimulation",value:function(){!0===this.physicsEnabled&&!0===this.options.enabled?(this.stabilized=!1,this.adaptiveTimestep=!1,this.body.emitter.emit("_resizeNodes"),void 0===this.viewFunction&&(this.viewFunction=this.simulationStep.bind(this),this.body.emitter.on("initRedraw",this.viewFunction),this.body.emitter.emit("_startRendering"))):this.body.emitter.emit("_redraw");}},{key:"stopSimulation",value:function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0];this.stabilized=!0,!0===e&&this._emitStabilized(),void 0!==this.viewFunction&&(this.body.emitter.off("initRedraw",this.viewFunction),this.viewFunction=void 0,!0===e&&this.body.emitter.emit("_stopRendering"));}},{key:"simulationStep",value:function(){var e=Date.now();this.physicsTick();var t=Date.now()-e;(t<.4*this.simulationInterval||!0===this.runDoubleSpeed)&&!1===this.stabilized&&(this.physicsTick(),this.runDoubleSpeed=!0),!0===this.stabilized&&this.stopSimulation();}},{key:"_emitStabilized",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.stabilizationIterations;(1<this.stabilizationIterations||!0===this.startedStabilization)&&setTimeout(function(){e.body.emitter.emit("stabilized",{iterations:t}),e.startedStabilization=!1,e.stabilizationIterations=0;},0);}},{key:"physicsStep",value:function(){this.gravitySolver.solve(),this.nodesSolver.solve(),this.edgesSolver.solve(),this.moveNodes();}},{key:"adjustTimeStep",value:function(){var e=1.2;!0===this._evaluateStepQuality()?this.timestep=e*this.timestep:this.timestep/e<this.options.timestep?this.timestep=this.options.timestep:(this.adaptiveCounter=-1,this.timestep=a(this.options.timestep,this.timestep/e));}},{key:"physicsTick",value:function(){if(this._startStabilizing(),!0!==this.stabilized){if(!0===this.adaptiveTimestep&&!0===this.adaptiveTimestepEnabled){var e=0==this.adaptiveCounter%this.adaptiveInterval;e?(this.timestep=2*this.timestep,this.physicsStep(),this.revert(),this.timestep=.5*this.timestep,this.physicsStep(),this.physicsStep(),this.adjustTimeStep()):this.physicsStep(),this.adaptiveCounter+=1;}else this.timestep=this.options.timestep,this.physicsStep();!0===this.stabilized&&this.revert(),this.stabilizationIterations++;}}},{key:"updatePhysicsData",value:function(){this.physicsBody.forces={},this.physicsBody.physicsNodeIndices=[],this.physicsBody.physicsEdgeIndices=[];var e=this.body.nodes,t=this.body.edges;for(var o in e)e.hasOwnProperty(o)&&!0===e[o].options.physics&&this.physicsBody.physicsNodeIndices.push(e[o].id);for(var n in t)t.hasOwnProperty(n)&&!0===t[n].options.physics&&this.physicsBody.physicsEdgeIndices.push(t[n].id);for(var a=0,d;a<this.physicsBody.physicsNodeIndices.length;a++)d=this.physicsBody.physicsNodeIndices[a],this.physicsBody.forces[d]={x:0,y:0},void 0===this.physicsBody.velocities[d]&&(this.physicsBody.velocities[d]={x:0,y:0});for(var s in this.physicsBody.velocities)void 0===e[s]&&delete this.physicsBody.velocities[s];}},{key:"revert",value:function(){var e=Object.keys(this.previousStates),t=this.body.nodes,o=this.physicsBody.velocities;this.referenceState={};for(var n=0,a;n<e.length;n++)a=e[n],void 0===t[a]?delete this.previousStates[a]:!0===t[a].options.physics&&(this.referenceState[a]={positions:{x:t[a].x,y:t[a].y}},o[a].x=this.previousStates[a].vx,o[a].y=this.previousStates[a].vy,t[a].x=this.previousStates[a].x,t[a].y=this.previousStates[a].y);}},{key:"_evaluateStepQuality",value:function(){var e=this.body.nodes,t=this.referenceState,i,a,d;for(var s in this.referenceState)if(this.referenceState.hasOwnProperty(s)&&void 0!==e[s]&&(i=e[s].x-t[s].positions.x,a=e[s].y-t[s].positions.y,d=o(n(i,2)+n(a,2)),d>.3))return !1;return !0;}},{key:"moveNodes",value:function(){for(var e=this.physicsBody.physicsNodeIndices,t=0,o=0,n=5,d=0;d<e.length;d++){var s=e[d],r=this._performStep(s);t=a(t,r),o+=r;}this.adaptiveTimestepEnabled=o/e.length<n,this.stabilized=t<this.options.minVelocity;}},{key:"calculateComponentVelocity",value:function(e,t,o){var n=this.modelOptions.damping*e;e+=(t-n)/o*this.timestep;var i=this.options.maxVelocity||1e9;return d(e)>i&&(e=0<e?i:-i),e;}},{key:"_performStep",value:function(e){var t=this.body.nodes[e],i=this.physicsBody.forces[e],a=this.physicsBody.velocities[e];this.previousStates[e]={x:t.x,y:t.y,vx:a.x,vy:a.y},!1===t.options.fixed.x?(a.x=this.calculateComponentVelocity(a.x,i.x,t.options.mass),t.x+=a.x*this.timestep):(i.x=0,a.x=0),!1===t.options.fixed.y?(a.y=this.calculateComponentVelocity(a.y,i.y,t.options.mass),t.y+=a.y*this.timestep):(i.y=0,a.y=0);var d=o(n(a.x,2)+n(a.y,2));return d;}},{key:"_freezeNodes",value:function(){var e=this.body.nodes;for(var t in e)if(e.hasOwnProperty(t)&&e[t].x&&e[t].y){var o=e[t].options.fixed;this.freezeCache[t]={x:o.x,y:o.y},o.x=!0,o.y=!0;}}},{key:"_restoreFrozenNodes",value:function(){var e=this.body.nodes;for(var t in e)e.hasOwnProperty(t)&&void 0!==this.freezeCache[t]&&(e[t].options.fixed.x=this.freezeCache[t].x,e[t].options.fixed.y=this.freezeCache[t].y);this.freezeCache={};}},{key:"stabilize",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.options.stabilization.iterations;return "number"!=typeof t&&(t=this.options.stabilization.iterations,console.log("The stabilize method needs a numeric amount of iterations. Switching to default: ",t)),0===this.physicsBody.physicsNodeIndices.length?void(this.ready=!0):void(this.adaptiveTimestep=this.options.adaptiveTimestep,this.body.emitter.emit("_resizeNodes"),this.stopSimulation(),this.stabilized=!1,this.body.emitter.emit("_blockRedraw"),this.targetIterations=t,!0===this.options.stabilization.onlyDynamicEdges&&this._freezeNodes(),this.stabilizationIterations=0,setTimeout(function(){return e._stabilizationBatch();},0));}},{key:"_startStabilizing",value:function(){return !0!==this.startedStabilization&&(this.body.emitter.emit("startStabilizing"),this.startedStabilization=!0,!0);}},{key:"_stabilizationBatch",value:function(){var e=this,t=function(){return !1===e.stabilized&&e.stabilizationIterations<e.targetIterations;},o=function(){e.body.emitter.emit("stabilizationProgress",{iterations:e.stabilizationIterations,total:e.targetIterations});};this._startStabilizing()&&o();for(var n=0;t()&&n<this.options.stabilization.updateInterval;)this.physicsTick(),n++;o(),t()?setTimeout(this._stabilizationBatch.bind(this),0):this._finalizeStabilization();}},{key:"_finalizeStabilization",value:function(){this.body.emitter.emit("_allowRedraw"),!0===this.options.stabilization.fit&&this.body.emitter.emit("fit"),!0===this.options.stabilization.onlyDynamicEdges&&this._restoreFrozenNodes(),this.body.emitter.emit("stabilizationIterationsDone"),this.body.emitter.emit("_requestRedraw"),!0===this.stabilized?this._emitStabilized():this.startSimulation(),this.ready=!0;}},{key:"_drawForces",value:function(e){for(var d=0;d<this.physicsBody.physicsNodeIndices.length;d++){var r=this.physicsBody.physicsNodeIndices[d],l=this.body.nodes[r],c=this.physicsBody.forces[r],u=20,p=o(n(c.x,2)+n(c.x,2)),h=s(a(5,p),15),m=util$2.HSVToHex((180-180*s(1,a(0,.03*p)))/360,1,1),g={x:l.x+u*c.x,y:l.y+u*c.y};e.lineWidth=h,e.strokeStyle=m,e.beginPath(),e.moveTo(l.x,l.y),e.lineTo(g.x,g.y),e.stroke();var y=t(c.y,c.x);e.fillStyle=m,EndPoints.draw(e,{type:"arrow",point:g,angle:y,length:3*h}),e.fill();}}}]),e;}(),NetworkUtil=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,null,[{key:"getRange",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],o=1e9,n=-1e9,a=1e9,d=-1e9,s;if(0<t.length)for(var r=0;r<t.length;r++)s=e[t[r]],a>s.shape.boundingBox.left&&(a=s.shape.boundingBox.left),d<s.shape.boundingBox.right&&(d=s.shape.boundingBox.right),o>s.shape.boundingBox.top&&(o=s.shape.boundingBox.top),n<s.shape.boundingBox.bottom&&(n=s.shape.boundingBox.bottom);return 1e9===a&&-1e9===d&&1e9===o&&-1e9===n&&(o=0,n=0,a=0,d=0),{minX:a,maxX:d,minY:o,maxY:n};}},{key:"getRangeCore",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],o=1e9,n=-1e9,a=1e9,d=-1e9,s;if(0<t.length)for(var r=0;r<t.length;r++)s=e[t[r]],a>s.x&&(a=s.x),d<s.x&&(d=s.x),o>s.y&&(o=s.y),n<s.y&&(n=s.y);return 1e9===a&&-1e9===d&&1e9===o&&-1e9===n&&(o=0,n=0,a=0,d=0),{minX:a,maxX:d,minY:o,maxY:n};}},{key:"findCenter",value:function(e){return {x:.5*(e.maxX+e.minX),y:.5*(e.maxY+e.minY)};}},{key:"cloneOptions",value:function(e,t){var o={};return void 0===t||"node"===t?(util$2.deepExtend(o,e.options,!0),o.x=e.x,o.y=e.y,o.amountOfConnections=e.edges.length):util$2.deepExtend(o,e.options,!0),o;}}]),e;}(),Cluster=function(e){function t(e,o,n,i,a,d){var s;return classCallCheck$1$1(this,t),s=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this,e,o,n,i,a,d)),s.isCluster=!0,s.containedNodes={},s.containedEdges={},s;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"_openChildCluster",value:function(e){var t=this,o=this.body.nodes[e];if(void 0===this.containedNodes[e])throw new Error("node with id: "+e+" not in current cluster");if(!o.isCluster)throw new Error("node with id: "+e+" is not a cluster");delete this.containedNodes[e],util$2.forEach(o.edges,function(e){delete t.containedEdges[e.id];}),util$2.forEach(o.containedNodes,function(e,o){t.containedNodes[o]=e;}),o.containedNodes={},util$2.forEach(o.containedEdges,function(e,o){t.containedEdges[o]=e;}),o.containedEdges={},util$2.forEach(o.edges,function(e){util$2.forEach(t.edges,function(o){var n=o.clusteringEdgeReplacingIds.indexOf(e.id);-1===n||(util$2.forEach(e.clusteringEdgeReplacingIds,function(e){o.clusteringEdgeReplacingIds.push(e),t.body.edges[e].edgeReplacedById=o.id;}),o.clusteringEdgeReplacingIds.splice(n,1));});}),o.edges=[];}}]),t;}(Node),ClusterEngine=function(){var t=Math.sqrt,o=Math.pow,n=Math.floor;function e(t){var o=this;classCallCheck$1$1(this,e),this.body=t,this.clusteredNodes={},this.clusteredEdges={},this.options={},this.defaultOptions={},util$2.extend(this.options,this.defaultOptions),this.body.emitter.on("_resetData",function(){o.clusteredNodes={},o.clusteredEdges={};});}return createClass$1$1(e,[{key:"clusterByHubsize",value:function(e,t){void 0===e?e=this._getHubSize():"object"===_typeof_1$2$1(e)&&(t=this._checkOptions(e),e=this._getHubSize());for(var o=[],n=0,a;n<this.body.nodeIndices.length;n++)a=this.body.nodes[this.body.nodeIndices[n]],a.edges.length>=e&&o.push(a.id);for(var d=0;d<o.length;d++)this.clusterByConnection(o[d],t,!0);this.body.emitter.emit("_dataChanged");}},{key:"cluster",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},o=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if(void 0===t.joinCondition)throw new Error("Cannot call clusterByNodeData without a joinCondition function in the options.");t=this._checkOptions(t);var n={},i={};util$2.forEach(this.body.nodes,function(o,a){o.options&&!0===t.joinCondition(o.options)&&(n[a]=o,util$2.forEach(o.edges,function(t){void 0===e.clusteredEdges[t.id]&&(i[t.id]=t);}));}),this._cluster(n,i,t,o);}},{key:"clusterByEdgeCount",value:function(e,t){var o=this,n=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];t=this._checkOptions(t);for(var a=[],d={},s=function(n){var i={},s={},r=o.body.nodeIndices[n],y=o.body.nodes[r];if(void 0===d[r]){u=0,c=[];for(var f=0;f<y.edges.length;f++)l=y.edges[f],void 0===o.clusteredEdges[l.id]&&(l.toId!==l.fromId&&u++,c.push(l));if(u===e){p=function(e){if(void 0===t.joinCondition||null===t.joinCondition)return !0;var o=NetworkUtil.cloneOptions(e);return t.joinCondition(o);};for(var b=!0,_=0;_<c.length;_++){l=c[_];var v=o._getConnectedId(l,r);if(p(y))s[l.id]=l,i[r]=y,i[v]=o.body.nodes[v],d[r]=!0;else{b=!1;break;}}if(0<Object.keys(i).length&&0<Object.keys(s).length&&!0===b)if(h=function(){for(var e=0;e<a.length;++e)for(var t in i)if(void 0!==a[e].nodes[t])return a[e];},g=h(),void 0!==g){for(var k in i)void 0===g.nodes[k]&&(g.nodes[k]=i[k]);for(var m in s)void 0===g.edges[m]&&(g.edges[m]=s[m]);}else a.push({nodes:i,edges:s});}}},r=0,l,c,u;r<this.body.nodeIndices.length;r++){var p,h,g;s(r);}for(var r=0;r<a.length;r++)this._cluster(a[r].nodes,a[r].edges,t,!1);!0===n&&this.body.emitter.emit("_dataChanged");}},{key:"clusterOutliers",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];this.clusterByEdgeCount(1,e,t);}},{key:"clusterBridges",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];this.clusterByEdgeCount(2,e,t);}},{key:"clusterByConnection",value:function(e,t){var o=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];if(void 0===e)throw new Error("No nodeId supplied to clusterByConnection!");if(void 0===this.body.nodes[e])throw new Error("The nodeId given to clusterByConnection does not exist!");var n=this.body.nodes[e];t=this._checkOptions(t,n),void 0===t.clusterNodeProperties.x&&(t.clusterNodeProperties.x=n.x),void 0===t.clusterNodeProperties.y&&(t.clusterNodeProperties.y=n.y),void 0===t.clusterNodeProperties.fixed&&(t.clusterNodeProperties.fixed={},t.clusterNodeProperties.fixed.x=n.options.fixed.x,t.clusterNodeProperties.fixed.y=n.options.fixed.y);var a={},d={},s=n.id,r=NetworkUtil.cloneOptions(n);a[s]=n;for(var l=0,c;l<n.edges.length;l++)if(c=n.edges[l],void 0===this.clusteredEdges[c.id]){var u=this._getConnectedId(c,s);if(void 0===this.clusteredNodes[u])if(u===s)d[c.id]=c;else if(void 0===t.joinCondition)d[c.id]=c,a[u]=this.body.nodes[u];else{var p=NetworkUtil.cloneOptions(this.body.nodes[u]);!0===t.joinCondition(r,p)&&(d[c.id]=c,a[u]=this.body.nodes[u]);}}var h=Object.keys(a).map(function(e){return a[e].id;});for(m in a)if(a.hasOwnProperty(m))for(var m=a[m],g=0,f;g<m.edges.length;g++)f=m.edges[g],-1<h.indexOf(this._getConnectedId(f,m.id))&&(d[f.id]=f);this._cluster(a,d,t,o);}},{key:"_createClusterEdges",value:function(e,t,o,n){for(var a=Object.keys(e),d=[],s=0,r,l,c,u,p,h;s<a.length;s++){l=a[s],c=e[l];for(var m=0;m<c.edges.length;m++)r=c.edges[m],void 0===this.clusteredEdges[r.id]&&(r.toId==r.fromId?t[r.id]=r:r.toId==l?(u=o.id,p=r.fromId,h=p):(u=r.toId,p=o.id,h=u),void 0===e[h]&&d.push({edge:r,fromId:p,toId:u}));}for(var g=[],y=function(e){for(var t=0;t<g.length;t++){var o=g[t],n=e.fromId===o.fromId&&e.toId===o.toId,i=e.fromId===o.toId&&e.toId===o.fromId;if(n||i)return o;}return null;},f=0;f<d.length;f++){var b=d[f],_=b.edge,v=y(b);null===v?(v=this._createClusteredEdge(b.fromId,b.toId,_,n),g.push(v)):v.clusteringEdgeReplacingIds.push(_.id),this.body.edges[_.id].edgeReplacedById=v.id,this._backupEdgeOptions(_),_.setOptions({physics:!1});}}},{key:"_checkOptions",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return void 0===e.clusterEdgeProperties&&(e.clusterEdgeProperties={}),void 0===e.clusterNodeProperties&&(e.clusterNodeProperties={}),e;}},{key:"_cluster",value:function(e,t,o){var i=!(3<arguments.length&&void 0!==arguments[3])||arguments[3],a=[];for(var d in e)e.hasOwnProperty(d)&&void 0!==this.clusteredNodes[d]&&a.push(d);for(var s=0;s<a.length;++s)delete e[a[s]];if(0!=Object.keys(e).length&&(1!=Object.keys(e).length||!0==o.clusterNodeProperties.allowSingleNodeCluster)){var r=util$2.deepExtend({},o.clusterNodeProperties);if(void 0!==o.processProperties){var l=[];for(var c in e)if(e.hasOwnProperty(c)){var u=NetworkUtil.cloneOptions(e[c]);l.push(u);}var p=[];for(var h in t)if(t.hasOwnProperty(h)&&"clusterEdge:"!==h.substr(0,12)){var m=NetworkUtil.cloneOptions(t[h],"edge");p.push(m);}if(r=o.processProperties(r,l,p),!r)throw new Error("The processProperties function does not return properties!");}void 0===r.id&&(r.id="cluster:"+util$2.randomUUID());var g=r.id;void 0===r.label&&(r.label="cluster");var y;void 0===r.x&&(y=this._getClusterPosition(e),r.x=y.x),void 0===r.y&&(void 0===y&&(y=this._getClusterPosition(e)),r.y=y.y),r.id=g;var f=this.body.functions.createNode(r,Cluster);f.containedNodes=e,f.containedEdges=t,f.clusterEdgeProperties=o.clusterEdgeProperties,this.body.nodes[r.id]=f,this._clusterEdges(e,t,r,o.clusterEdgeProperties),r.id=void 0,!0===i&&this.body.emitter.emit("_dataChanged");}}},{key:"_backupEdgeOptions",value:function(e){void 0===this.clusteredEdges[e.id]&&(this.clusteredEdges[e.id]={physics:e.options.physics});}},{key:"_restoreEdge",value:function(e){var t=this.clusteredEdges[e.id];void 0!==t&&(e.setOptions({physics:t.physics}),delete this.clusteredEdges[e.id]);}},{key:"isCluster",value:function(e){return void 0===this.body.nodes[e]?(console.log("Node does not exist."),!1):!0===this.body.nodes[e].isCluster;}},{key:"_getClusterPosition",value:function(e){for(var t=Object.keys(e),o=e[t[0]].x,n=e[t[0]].x,a=e[t[0]].y,d=e[t[0]].y,s=1,r;s<t.length;s++)r=e[t[s]],o=r.x<o?r.x:o,n=r.x>n?r.x:n,a=r.y<a?r.y:a,d=r.y>d?r.y:d;return {x:.5*(o+n),y:.5*(a+d)};}},{key:"openCluster",value:function(e,t){var o=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];if(void 0===e)throw new Error("No clusterNodeId supplied to openCluster.");var n=this.body.nodes[e];if(void 0===n)throw new Error("The clusterNodeId supplied to openCluster does not exist.");if(!0!==n.isCluster||void 0===n.containedNodes||void 0===n.containedEdges)throw new Error("The node:"+e+" is not a valid cluster.");var a=this.findNode(e),d=a.indexOf(e)-1;if(0<=d){var s=a[d],r=this.body.nodes[s];return r._openChildCluster(e),delete this.body.nodes[e],void(!0===o&&this.body.emitter.emit("_dataChanged"));}var l=n.containedNodes,c=n.containedEdges;if(void 0!==t&&void 0!==t.releaseFunction&&"function"==typeof t.releaseFunction){var u={},p={x:n.x,y:n.y};for(var h in l)if(l.hasOwnProperty(h)){var m=this.body.nodes[h];u[h]={x:m.x,y:m.y};}var g=t.releaseFunction(p,u);for(var y in l)if(l.hasOwnProperty(y)){var f=this.body.nodes[y];void 0!==g[y]&&(f.x=void 0===g[y].x?n.x:g[y].x,f.y=void 0===g[y].y?n.y:g[y].y);}}else util$2.forEach(l,function(e){!1===e.options.fixed.x&&(e.x=n.x),!1===e.options.fixed.y&&(e.y=n.y);});for(var b in l)if(l.hasOwnProperty(b)){var _=this.body.nodes[b];_.vx=n.vx,_.vy=n.vy,_.setOptions({physics:!0}),delete this.clusteredNodes[b];}for(var v=[],k=0;k<n.edges.length;k++)v.push(n.edges[k]);for(var w=0;w<v.length;w++){for(var x=v[w],S=this._getConnectedId(x,e),O=this.clusteredNodes[S],D=0;D<x.clusteringEdgeReplacingIds.length;D++){var T=x.clusteringEdgeReplacingIds[D],C=this.body.edges[T];if(void 0!==C)if(void 0!==O){var E=this.body.nodes[O.clusterId];E.containedEdges[C.id]=C,delete c[C.id];var M=C.fromId,I=C.toId;C.toId==S?I=O.clusterId:M=O.clusterId,this._createClusteredEdge(M,I,C,E.clusterEdgeProperties,{hidden:!1,physics:!0});}else this._restoreEdge(C);}x.remove();}for(var P in c)c.hasOwnProperty(P)&&this._restoreEdge(c[P]);delete this.body.nodes[e],!0===o&&this.body.emitter.emit("_dataChanged");}},{key:"getNodesInCluster",value:function(e){var t=[];if(!0===this.isCluster(e)){var o=this.body.nodes[e].containedNodes;for(var n in o)o.hasOwnProperty(n)&&t.push(this.body.nodes[n].id);}return t;}},{key:"findNode",value:function(e){for(var t=[],o=0,n;void 0!==this.clusteredNodes[e]&&o<100;){if(n=this.body.nodes[e],void 0===n)return [];t.push(n.id),e=this.clusteredNodes[e].clusterId,o++;}return (n=this.body.nodes[e],void 0===n)?[]:(t.push(n.id),t.reverse(),t);}},{key:"updateClusteredNode",value:function(e,t){if(void 0===e)throw new Error("No clusteredNodeId supplied to updateClusteredNode.");if(void 0===t)throw new Error("No newOptions supplied to updateClusteredNode.");if(void 0===this.body.nodes[e])throw new Error("The clusteredNodeId supplied to updateClusteredNode does not exist.");this.body.nodes[e].setOptions(t),this.body.emitter.emit("_dataChanged");}},{key:"updateEdge",value:function(e,t){if(void 0===e)throw new Error("No startEdgeId supplied to updateEdge.");if(void 0===t)throw new Error("No newOptions supplied to updateEdge.");if(void 0===this.body.edges[e])throw new Error("The startEdgeId supplied to updateEdge does not exist.");for(var o=this.getClusteredEdges(e),n=0,a;n<o.length;n++)a=this.body.edges[o[n]],a.setOptions(t);this.body.emitter.emit("_dataChanged");}},{key:"getClusteredEdges",value:function(e){for(var t=[],o=0;void 0!==e&&void 0!==this.body.edges[e]&&o<100;)t.push(this.body.edges[e].id),e=this.body.edges[e].edgeReplacedById,o++;return t.reverse(),t;}},{key:"getBaseEdge",value:function(e){return this.getBaseEdges(e)[0];}},{key:"getBaseEdges",value:function(e){for(var t=[e],o=[],n=[],a=0,d;0<t.length&&a<100;)if(d=t.pop(),void 0!==d){var s=this.body.edges[d];if(void 0!==s){a++;var r=s.clusteringEdgeReplacingIds;if(void 0===r)n.push(d);else for(var l=0,c;l<r.length;++l)(c=r[l],-1===t.indexOf(r)&&-1===o.indexOf(r))&&t.push(c);o.push(d);}}return n;}},{key:"_getConnectedId",value:function(e,t){return e.toId==t?e.fromId==t?e.fromId:e.fromId:e.toId;}},{key:"_getHubSize",value:function(){for(var e=0,a=0,d=0,s=0,r=0,l;r<this.body.nodeIndices.length;r++)l=this.body.nodes[this.body.nodeIndices[r]],l.edges.length>s&&(s=l.edges.length),e+=l.edges.length,a+=o(l.edges.length,2),d+=1;e/=d,a/=d;var c=a-o(e,2),u=t(c),p=n(e+2*u);return p>s&&(p=s),p;}},{key:"_createClusteredEdge",value:function(e,t,o,n,i){var a=NetworkUtil.cloneOptions(o,"edge");util$2.deepExtend(a,n),a.from=e,a.to=t,a.id="clusterEdge:"+util$2.randomUUID(),void 0!==i&&util$2.deepExtend(a,i);var d=this.body.functions.createEdge(a);return d.clusteringEdgeReplacingIds=[o.id],d.connect(),this.body.edges[d.id]=d,d;}},{key:"_clusterEdges",value:function(e,t,o,n){if(t instanceof Edge){var i=t,a={};a[i.id]=i,t=a;}if(e instanceof Node){var d=e,s={};s[d.id]=d,e=s;}if(void 0===o||null===o)throw new Error("_clusterEdges: parameter clusterNode required");for(var r in void 0===n&&(n=o.clusterEdgeProperties),this._createClusterEdges(e,t,o,n),t)if(t.hasOwnProperty(r)&&void 0!==this.body.edges[r]){var l=this.body.edges[r];this._backupEdgeOptions(l),l.setOptions({physics:!1});}for(var c in e)e.hasOwnProperty(c)&&(this.clusteredNodes[c]={clusterId:o.id,node:this.body.nodes[c]},this.body.nodes[c].setOptions({physics:!1}));}},{key:"_getClusterNodeForNode",value:function(e){if(void 0!==e){var t=this.clusteredNodes[e];if(void 0!==t){var o=t.clusterId;return void 0===o?void 0:this.body.nodes[o];}}}},{key:"_filter",value:function(e,t){var o=[];return util$2.forEach(e,function(e){t(e)&&o.push(e);}),o;}},{key:"_updateState",value:function(){var e=this,t=[],o={},i=function(t){util$2.forEach(e.body.nodes,function(e){!0===e.isCluster&&t(e);});},a;for(a in this.clusteredNodes)if(this.clusteredNodes.hasOwnProperty(a)){var d=this.body.nodes[a];void 0===d&&t.push(a);}i(function(e){for(var o=0;o<t.length;o++)delete e.containedNodes[t[o]];});for(var s=0;s<t.length;s++)delete this.clusteredNodes[t[s]];util$2.forEach(this.clusteredEdges,function(t){var n=e.body.edges[t];void 0!==n&&n.endPointsValid()||(o[t]=t);}),i(function(e){util$2.forEach(e.containedEdges,function(e,t){e.endPointsValid()||o[t]||(o[t]=t);});}),util$2.forEach(this.body.edges,function(t,n){var i=!0,a=t.clusteringEdgeReplacingIds;if(void 0!==a){var d=0;util$2.forEach(a,function(t){var o=e.body.edges[t];void 0!==o&&o.endPointsValid()&&(d+=1);}),i=0<d;}t.endPointsValid()&&i||(o[n]=n);}),i(function(t){util$2.forEach(o,function(n){delete t.containedEdges[n],util$2.forEach(t.edges,function(i,a){return i.id===n?void(t.edges[a]=null):void(i.clusteringEdgeReplacingIds=e._filter(i.clusteringEdgeReplacingIds,function(e){return !o[e];}));}),t.edges=e._filter(t.edges,function(e){return null!==e;});});}),util$2.forEach(o,function(t){delete e.clusteredEdges[t];}),util$2.forEach(o,function(t){delete e.body.edges[t];});var r=Object.keys(this.body.edges);util$2.forEach(r,function(t){var o=e.body.edges[t],n=e._isClusteredNode(o.fromId)||e._isClusteredNode(o.toId);if(n!==e._isClusteredEdge(o.id))if(n){var i=e._getClusterNodeForNode(o.fromId);void 0!==i&&e._clusterEdges(e.body.nodes[o.fromId],o,i);var a=e._getClusterNodeForNode(o.toId);void 0!==a&&e._clusterEdges(e.body.nodes[o.toId],o,a);}else delete e._clusterEdges[t],e._restoreEdge(o);});for(var l=!1,c=!0,u=function(){var t=[];i(function(e){var o=Object.keys(e.containedNodes).length,n=!0===e.options.allowSingleNodeCluster;(n&&1>o||!n&&2>o)&&t.push(e.id);});for(var o=0;o<t.length;++o)e.openCluster(t[o],{},!1);c=0<t.length,l=l||c;};c;)u();l&&this._updateState();}},{key:"_isClusteredNode",value:function(e){return void 0!==this.clusteredNodes[e];}},{key:"_isClusteredEdge",value:function(e){return void 0!==this.clusteredEdges[e];}}]),e;}(),allOptions;function _initRequestAnimationFrame(){var e;window!==void 0&&(e=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame),window.requestAnimationFrame=void 0===e?function(e){e();}:e;}var CanvasRenderer=function(){function e(t,o){classCallCheck$1$1(this,e),_initRequestAnimationFrame(),this.body=t,this.canvas=o,this.redrawRequested=!1,this.renderTimer=void 0,this.requiresTimeout=!0,this.renderingActive=!1,this.renderRequests=0,this.allowRedraw=!0,this.dragging=!1,this.zooming=!1,this.options={},this.defaultOptions={hideEdgesOnDrag:!1,hideEdgesOnZoom:!1,hideNodesOnDrag:!1},util$2.extend(this.options,this.defaultOptions),this._determineBrowserMethod(),this.bindEventListeners();}return createClass$1$1(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("dragStart",function(){e.dragging=!0;}),this.body.emitter.on("dragEnd",function(){e.dragging=!1;}),this.body.emitter.on("zoom",function(){e.zooming=!0,window.clearTimeout(e.zoomTimeoutId),e.zoomTimeoutId=window.setTimeout(function(){e.zooming=!1,e._requestRedraw.bind(e)();},250);}),this.body.emitter.on("_resizeNodes",function(){e._resizeNodes();}),this.body.emitter.on("_redraw",function(){!1===e.renderingActive&&e._redraw();}),this.body.emitter.on("_blockRedraw",function(){e.allowRedraw=!1;}),this.body.emitter.on("_allowRedraw",function(){e.allowRedraw=!0,e.redrawRequested=!1;}),this.body.emitter.on("_requestRedraw",this._requestRedraw.bind(this)),this.body.emitter.on("_startRendering",function(){e.renderRequests+=1,e.renderingActive=!0,e._startRendering();}),this.body.emitter.on("_stopRendering",function(){e.renderRequests-=1,e.renderingActive=0<e.renderRequests,e.renderTimer=void 0;}),this.body.emitter.on("destroy",function(){e.renderRequests=0,e.allowRedraw=!1,e.renderingActive=!1,!0===e.requiresTimeout?clearTimeout(e.renderTimer):window.cancelAnimationFrame(e.renderTimer),e.body.emitter.off();});}},{key:"setOptions",value:function(e){if(void 0!==e){util$2.selectiveDeepExtend(["hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag"],this.options,e);}}},{key:"_requestNextFrame",value:function(e,t){if("undefined"!=typeof window){var o=window,n;return !0===this.requiresTimeout?n=o.setTimeout(e,t):o.requestAnimationFrame&&(n=o.requestAnimationFrame(e)),n;}}},{key:"_startRendering",value:function(){!0===this.renderingActive&&void 0===this.renderTimer&&(this.renderTimer=this._requestNextFrame(this._renderStep.bind(this),this.simulationInterval));}},{key:"_renderStep",value:function(){!0===this.renderingActive&&(this.renderTimer=void 0,!0===this.requiresTimeout&&this._startRendering(),this._redraw(),!1===this.requiresTimeout&&this._startRendering());}},{key:"redraw",value:function(){this.body.emitter.emit("setSize"),this._redraw();}},{key:"_requestRedraw",value:function(){var e=this;!0!==this.redrawRequested&&!1===this.renderingActive&&!0===this.allowRedraw&&(this.redrawRequested=!0,this._requestNextFrame(function(){e._redraw(!1);},0));}},{key:"_redraw",value:function(){var e=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];if(!0===this.allowRedraw){this.body.emitter.emit("initRedraw"),this.redrawRequested=!1,(0===this.canvas.frame.canvas.width||0===this.canvas.frame.canvas.height)&&this.canvas.setSize(),this.canvas.setTransform();var t=this.canvas.getContext(),o=this.canvas.frame.canvas.clientWidth,n=this.canvas.frame.canvas.clientHeight;if(t.clearRect(0,0,o,n),0===this.canvas.frame.clientWidth)return;t.save(),t.translate(this.body.view.translation.x,this.body.view.translation.y),t.scale(this.body.view.scale,this.body.view.scale),t.beginPath(),this.body.emitter.emit("beforeDrawing",t),t.closePath(),!1===e&&(!1===this.dragging||!0===this.dragging&&!1===this.options.hideEdgesOnDrag)&&(!1===this.zooming||!0===this.zooming&&!1===this.options.hideEdgesOnZoom)&&this._drawEdges(t),(!1===this.dragging||!0===this.dragging&&!1===this.options.hideNodesOnDrag)&&this._drawNodes(t,e),t.beginPath(),this.body.emitter.emit("afterDrawing",t),t.closePath(),t.restore(),!0===e&&t.clearRect(0,0,o,n);}}},{key:"_resizeNodes",value:function(){this.canvas.setTransform();var e=this.canvas.getContext();e.save(),e.translate(this.body.view.translation.x,this.body.view.translation.y),e.scale(this.body.view.scale,this.body.view.scale);var t=this.body.nodes,o;for(var n in t)t.hasOwnProperty(n)&&(o=t[n],o.resize(e),o.updateBoundingBox(e,o.selected));e.restore();}},{key:"_drawNodes",value:function(e){for(var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],o=this.body.nodes,n=this.body.nodeIndices,a=[],d=20,s=this.canvas.DOMtoCanvas({x:-d,y:-d}),r=this.canvas.DOMtoCanvas({x:this.canvas.frame.canvas.clientWidth+d,y:this.canvas.frame.canvas.clientHeight+d}),l={top:s.y,left:s.x,bottom:r.y,right:r.x},c=0,u;c<n.length;c++)u=o[n[c]],u.isSelected()?a.push(n[c]):!0===t?u.draw(e):!0===u.isBoundingBoxOverlappingWith(l)?u.draw(e):u.updateBoundingBox(e,u.selected);for(var p=0;p<a.length;p++)u=o[a[p]],u.draw(e);}},{key:"_drawEdges",value:function(e){for(var t=this.body.edges,o=this.body.edgeIndices,n=0,a;n<o.length;n++)a=t[o[n]],!0===a.connected&&a.draw(e);}},{key:"_determineBrowserMethod",value:function(){if("undefined"!=typeof window){var e=navigator.userAgent.toLowerCase();this.requiresTimeout=!1,-1==e.indexOf("msie 9.0")?-1!=e.indexOf("safari")&&-1>=e.indexOf("chrome")&&(this.requiresTimeout=!0):this.requiresTimeout=!0;}else this.requiresTimeout=!0;}}]),e;}(),hammerUtil=createCommonjsModule$2$1(function(e,t){t.onTouch=function(e,t){t.inputHandler=function(e){e.isFirst&&t(e);},e.on("hammer.input",t.inputHandler);},t.onRelease=function(e,t){return t.inputHandler=function(e){e.isFinal&&t(e);},e.on("hammer.input",t.inputHandler);},t.offTouch=function(e,t){e.off("hammer.input",t.inputHandler);},t.offRelease=t.offTouch,t.disablePreventDefaultVertically=function(e){return e.getTouchAction=function(){return ["pan-y"];},e;};}),hammerUtil_1=hammerUtil.onTouch,hammerUtil_2=hammerUtil.onRelease,hammerUtil_3=hammerUtil.offTouch,hammerUtil_4=hammerUtil.offRelease,hammerUtil_5=hammerUtil.disablePreventDefaultVertically,Canvas=function(){var t=Math.round;function e(t){classCallCheck$1$1(this,e),this.body=t,this.pixelRatio=1,this.resizeTimer=void 0,this.resizeFunction=this._onResize.bind(this),this.cameraState={},this.initialized=!1,this.canvasViewCenter={},this.options={},this.defaultOptions={autoResize:!0,height:"100%",width:"100%"},util$2.extend(this.options,this.defaultOptions),this.bindEventListeners();}return createClass$1$1(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.once("resize",function(t){0!==t.width&&(e.body.view.translation.x=.5*t.width),0!==t.height&&(e.body.view.translation.y=.5*t.height);}),this.body.emitter.on("setSize",this.setSize.bind(this)),this.body.emitter.on("destroy",function(){e.hammerFrame.destroy(),e.hammer.destroy(),e._cleanUp();});}},{key:"setOptions",value:function(e){var t=this;if(void 0!==e){util$2.selectiveDeepExtend(["width","height","autoResize"],this.options,e);}!0===this.options.autoResize&&(this._cleanUp(),this.resizeTimer=setInterval(function(){var e=t.setSize();!0===e&&t.body.emitter.emit("_requestRedraw");},1e3),this.resizeFunction=this._onResize.bind(this),util$2.addEventListener(window,"resize",this.resizeFunction));}},{key:"_cleanUp",value:function(){void 0!==this.resizeTimer&&clearInterval(this.resizeTimer),util$2.removeEventListener(window,"resize",this.resizeFunction),this.resizeFunction=void 0;}},{key:"_onResize",value:function(){this.setSize(),this.body.emitter.emit("_redraw");}},{key:"_getCameraState",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.pixelRatio;!0===this.initialized&&(this.cameraState.previousWidth=this.frame.canvas.width/e,this.cameraState.previousHeight=this.frame.canvas.height/e,this.cameraState.scale=this.body.view.scale,this.cameraState.position=this.DOMtoCanvas({x:.5*this.frame.canvas.width/e,y:.5*this.frame.canvas.height/e}));}},{key:"_setCameraState",value:function(){if(void 0!==this.cameraState.scale&&0!==this.frame.canvas.clientWidth&&0!==this.frame.canvas.clientHeight&&0!==this.pixelRatio&&0<this.cameraState.previousWidth){var e=this.frame.canvas.width/this.pixelRatio/this.cameraState.previousWidth,t=this.frame.canvas.height/this.pixelRatio/this.cameraState.previousHeight,o=this.cameraState.scale;1!=e&&1!=t?o=.5*this.cameraState.scale*(e+t):1==e?1!=t&&(o=this.cameraState.scale*t):o=this.cameraState.scale*e,this.body.view.scale=o;var n=this.DOMtoCanvas({x:.5*this.frame.canvas.clientWidth,y:.5*this.frame.canvas.clientHeight}),i={x:n.x-this.cameraState.position.x,y:n.y-this.cameraState.position.y};this.body.view.translation.x+=i.x*this.body.view.scale,this.body.view.translation.y+=i.y*this.body.view.scale;}}},{key:"_prepareValue",value:function(e){if("number"==typeof e)return e+"px";if("string"==typeof e){if(-1!==e.indexOf("%")||-1!==e.indexOf("px"))return e;if(-1===e.indexOf("%"))return e+"px";}throw new Error("Could not use the value supplied for width or height:"+e);}},{key:"_create",value:function(){for(;this.body.container.hasChildNodes();)this.body.container.removeChild(this.body.container.firstChild);if(this.frame=document.createElement("div"),this.frame.className="vis-network",this.frame.style.position="relative",this.frame.style.overflow="hidden",this.frame.tabIndex=900,this.frame.canvas=document.createElement("canvas"),this.frame.canvas.style.position="relative",this.frame.appendChild(this.frame.canvas),!this.frame.canvas.getContext){var e=document.createElement("DIV");e.style.color="red",e.style.fontWeight="bold",e.style.padding="10px",e.innerHTML="Error: your browser does not support HTML canvas",this.frame.canvas.appendChild(e);}else this._setPixelRatio(),this.setTransform();this.body.container.appendChild(this.frame),this.body.view.scale=1,this.body.view.translation={x:.5*this.frame.canvas.clientWidth,y:.5*this.frame.canvas.clientHeight},this._bindHammer();}},{key:"_bindHammer",value:function(){var e=this;void 0!==this.hammer&&this.hammer.destroy(),this.drag={},this.pinch={},this.hammer=new hammer(this.frame.canvas),this.hammer.get("pinch").set({enable:!0}),this.hammer.get("pan").set({threshold:5,direction:hammer.DIRECTION_ALL}),hammerUtil.onTouch(this.hammer,function(t){e.body.eventListeners.onTouch(t);}),this.hammer.on("tap",function(t){e.body.eventListeners.onTap(t);}),this.hammer.on("doubletap",function(t){e.body.eventListeners.onDoubleTap(t);}),this.hammer.on("press",function(t){e.body.eventListeners.onHold(t);}),this.hammer.on("panstart",function(t){e.body.eventListeners.onDragStart(t);}),this.hammer.on("panmove",function(t){e.body.eventListeners.onDrag(t);}),this.hammer.on("panend",function(t){e.body.eventListeners.onDragEnd(t);}),this.hammer.on("pinch",function(t){e.body.eventListeners.onPinch(t);}),this.frame.canvas.addEventListener("mousewheel",function(t){e.body.eventListeners.onMouseWheel(t);}),this.frame.canvas.addEventListener("DOMMouseScroll",function(t){e.body.eventListeners.onMouseWheel(t);}),this.frame.canvas.addEventListener("mousemove",function(t){e.body.eventListeners.onMouseMove(t);}),this.frame.canvas.addEventListener("contextmenu",function(t){e.body.eventListeners.onContext(t);}),this.hammerFrame=new hammer(this.frame),hammerUtil.onRelease(this.hammerFrame,function(t){e.body.eventListeners.onRelease(t);});}},{key:"setSize",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.options.width,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.options.height;e=this._prepareValue(e),o=this._prepareValue(o);var n=!1,i=this.frame.canvas.width,a=this.frame.canvas.height,d=this.pixelRatio;if(this._setPixelRatio(),e!=this.options.width||o!=this.options.height||this.frame.style.width!=e||this.frame.style.height!=o)this._getCameraState(d),this.frame.style.width=e,this.frame.style.height=o,this.frame.canvas.style.width="100%",this.frame.canvas.style.height="100%",this.frame.canvas.width=t(this.frame.canvas.clientWidth*this.pixelRatio),this.frame.canvas.height=t(this.frame.canvas.clientHeight*this.pixelRatio),this.options.width=e,this.options.height=o,this.canvasViewCenter={x:.5*this.frame.clientWidth,y:.5*this.frame.clientHeight},n=!0;else{var s=t(this.frame.canvas.clientWidth*this.pixelRatio),r=t(this.frame.canvas.clientHeight*this.pixelRatio);(this.frame.canvas.width!==s||this.frame.canvas.height!==r)&&this._getCameraState(d),this.frame.canvas.width!==s&&(this.frame.canvas.width=s,n=!0),this.frame.canvas.height!==r&&(this.frame.canvas.height=r,n=!0);}return !0==n&&(this.body.emitter.emit("resize",{width:t(this.frame.canvas.width/this.pixelRatio),height:t(this.frame.canvas.height/this.pixelRatio),oldWidth:t(i/this.pixelRatio),oldHeight:t(a/this.pixelRatio)}),this._setCameraState()),this.initialized=!0,n;}},{key:"getContext",value:function(){return this.frame.canvas.getContext("2d");}},{key:"_determinePixelRatio",value:function(){var e=this.getContext();if(void 0===e)throw new Error("Could not get canvax context");var t=1;"undefined"!=typeof window&&(t=window.devicePixelRatio||1);var o=e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1;return t/o;}},{key:"_setPixelRatio",value:function(){this.pixelRatio=this._determinePixelRatio();}},{key:"setTransform",value:function(){var e=this.getContext();if(void 0===e)throw new Error("Could not get canvax context");e.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);}},{key:"_XconvertDOMtoCanvas",value:function(e){return (e-this.body.view.translation.x)/this.body.view.scale;}},{key:"_XconvertCanvasToDOM",value:function(e){return e*this.body.view.scale+this.body.view.translation.x;}},{key:"_YconvertDOMtoCanvas",value:function(e){return (e-this.body.view.translation.y)/this.body.view.scale;}},{key:"_YconvertCanvasToDOM",value:function(e){return e*this.body.view.scale+this.body.view.translation.y;}},{key:"canvasToDOM",value:function(e){return {x:this._XconvertCanvasToDOM(e.x),y:this._YconvertCanvasToDOM(e.y)};}},{key:"DOMtoCanvas",value:function(e){return {x:this._XconvertDOMtoCanvas(e.x),y:this._YconvertDOMtoCanvas(e.y)};}}]),e;}(),View=function(){var t=Math.abs,o=Math.min;function e(t,o){var n=this;classCallCheck$1$1(this,e),this.body=t,this.canvas=o,this.animationSpeed=1/this.renderRefreshRate,this.animationEasingFunction="easeInOutQuint",this.easingTime=0,this.sourceScale=0,this.targetScale=0,this.sourceTranslation=0,this.targetTranslation=0,this.lockedOnNodeId=void 0,this.lockedOnNodeOffset=void 0,this.touchTime=0,this.viewFunction=void 0,this.body.emitter.on("fit",this.fit.bind(this)),this.body.emitter.on("animationFinished",function(){n.body.emitter.emit("_stopRendering");}),this.body.emitter.on("unlockNode",this.releaseNode.bind(this));}return createClass$1$1(e,[{key:"setOptions",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};this.options=e;}},{key:"fit",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{nodes:[]},n=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],i,a;if(e=Object.assign({},e),(void 0===e.nodes||0===e.nodes.length)&&(e.nodes=this.body.nodeIndices),!0===n){var d=0;for(var s in this.body.nodes)if(this.body.nodes.hasOwnProperty(s)){var r=this.body.nodes[s];!0===r.predefinedPosition&&(d+=1);}if(d>.5*this.body.nodeIndices.length)return void this.fit(e,!1);i=NetworkUtil.getRange(this.body.nodes,e.nodes);var l=this.body.nodeIndices.length;a=12.662/(l+7.4147)+.0964822;var c=o(this.canvas.frame.canvas.clientWidth/600,this.canvas.frame.canvas.clientHeight/600);a*=c;}else{this.body.emitter.emit("_resizeNodes"),i=NetworkUtil.getRange(this.body.nodes,e.nodes);var u=1.1*t(i.maxX-i.minX),p=1.1*t(i.maxY-i.minY),h=this.canvas.frame.canvas.clientWidth/u,m=this.canvas.frame.canvas.clientHeight/p;a=h<=m?h:m;}1<a?a=1:0===a&&(a=1);var g=NetworkUtil.findCenter(i),y={position:g,scale:a,animation:e.animation};this.moveTo(y);}},{key:"focus",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(void 0!==this.body.nodes[e]){var o={x:this.body.nodes[e].x,y:this.body.nodes[e].y};t.position=o,t.lockedOnNode=e,this.moveTo(t);}else console.log("Node: "+e+" cannot be found.");}},{key:"moveTo",value:function(e){if(void 0===e)return void(e={});if(e.scale=+e.scale,!(0<e.scale))throw new TypeError("The option \"scale\" has to be a number greater than zero.");void 0===e.offset&&(e.offset={x:0,y:0}),void 0===e.offset.x&&(e.offset.x=0),void 0===e.offset.y&&(e.offset.y=0),void 0===e.scale&&(e.scale=this.body.view.scale),void 0===e.position&&(e.position=this.getViewPosition()),void 0===e.animation&&(e.animation={duration:0}),!1===e.animation&&(e.animation={duration:0}),!0===e.animation&&(e.animation={}),void 0===e.animation.duration&&(e.animation.duration=1e3),void 0===e.animation.easingFunction&&(e.animation.easingFunction="easeInOutQuad"),this.animateView(e);}},{key:"animateView",value:function(e){if(void 0!==e){this.animationEasingFunction=e.animation.easingFunction,this.releaseNode(),!0===e.locked&&(this.lockedOnNodeId=e.lockedOnNode,this.lockedOnNodeOffset=e.offset),0!=this.easingTime&&this._transitionRedraw(!0),this.sourceScale=this.body.view.scale,this.sourceTranslation=this.body.view.translation,this.targetScale=e.scale,this.body.view.scale=this.targetScale;var t=this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight}),o={x:t.x-e.position.x,y:t.y-e.position.y};this.targetTranslation={x:this.sourceTranslation.x+o.x*this.targetScale+e.offset.x,y:this.sourceTranslation.y+o.y*this.targetScale+e.offset.y},0===e.animation.duration?null==this.lockedOnNodeId?(this.body.view.scale=this.targetScale,this.body.view.translation=this.targetTranslation,this.body.emitter.emit("_requestRedraw")):(this.viewFunction=this._lockedRedraw.bind(this),this.body.emitter.on("initRedraw",this.viewFunction)):(this.animationSpeed=1/(.001*(60*e.animation.duration))||1/60,this.animationEasingFunction=e.animation.easingFunction,this.viewFunction=this._transitionRedraw.bind(this),this.body.emitter.on("initRedraw",this.viewFunction),this.body.emitter.emit("_startRendering"));}}},{key:"_lockedRedraw",value:function(){var e={x:this.body.nodes[this.lockedOnNodeId].x,y:this.body.nodes[this.lockedOnNodeId].y},t=this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight}),o={x:t.x-e.x,y:t.y-e.y},n=this.body.view.translation,i={x:n.x+o.x*this.body.view.scale+this.lockedOnNodeOffset.x,y:n.y+o.y*this.body.view.scale+this.lockedOnNodeOffset.y};this.body.view.translation=i;}},{key:"releaseNode",value:function(){void 0!==this.lockedOnNodeId&&void 0!==this.viewFunction&&(this.body.emitter.off("initRedraw",this.viewFunction),this.lockedOnNodeId=void 0,this.lockedOnNodeOffset=void 0);}},{key:"_transitionRedraw",value:function(){var e=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];this.easingTime+=this.animationSpeed,this.easingTime=!0===e?1:this.easingTime;var t=util$2.easingFunctions[this.animationEasingFunction](this.easingTime);this.body.view.scale=this.sourceScale+(this.targetScale-this.sourceScale)*t,this.body.view.translation={x:this.sourceTranslation.x+(this.targetTranslation.x-this.sourceTranslation.x)*t,y:this.sourceTranslation.y+(this.targetTranslation.y-this.sourceTranslation.y)*t},1<=this.easingTime&&(this.body.emitter.off("initRedraw",this.viewFunction),this.easingTime=0,null!=this.lockedOnNodeId&&(this.viewFunction=this._lockedRedraw.bind(this),this.body.emitter.on("initRedraw",this.viewFunction)),this.body.emitter.emit("animationFinished"));}},{key:"getScale",value:function(){return this.body.view.scale;}},{key:"getViewPosition",value:function(){return this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight});}}]),e;}(),NavigationHandler=function(){function e(t,o){var n=this;classCallCheck$1$1(this,e),this.body=t,this.canvas=o,this.iconsCreated=!1,this.navigationHammers=[],this.boundFunctions={},this.touchTime=0,this.activated=!1,this.body.emitter.on("activate",function(){n.activated=!0,n.configureKeyboardBindings();}),this.body.emitter.on("deactivate",function(){n.activated=!1,n.configureKeyboardBindings();}),this.body.emitter.on("destroy",function(){void 0!==n.keycharm&&n.keycharm.destroy();}),this.options={};}return createClass$1$1(e,[{key:"setOptions",value:function(e){void 0!==e&&(this.options=e,this.create());}},{key:"create",value:function(){!0===this.options.navigationButtons?!1===this.iconsCreated&&this.loadNavigationElements():!0===this.iconsCreated&&this.cleanNavigation(),this.configureKeyboardBindings();}},{key:"cleanNavigation",value:function(){if(0!=this.navigationHammers.length){for(var e=0;e<this.navigationHammers.length;e++)this.navigationHammers[e].destroy();this.navigationHammers=[];}this.navigationDOM&&this.navigationDOM.wrapper&&this.navigationDOM.wrapper.parentNode&&this.navigationDOM.wrapper.parentNode.removeChild(this.navigationDOM.wrapper),this.iconsCreated=!1;}},{key:"loadNavigationElements",value:function(){var e=this;this.cleanNavigation(),this.navigationDOM={};var t=["up","down","left","right","zoomIn","zoomOut","zoomExtends"],o=["_moveUp","_moveDown","_moveLeft","_moveRight","_zoomIn","_zoomOut","_fit"];this.navigationDOM.wrapper=document.createElement("div"),this.navigationDOM.wrapper.className="vis-navigation",this.canvas.frame.appendChild(this.navigationDOM.wrapper);for(var n=0;n<t.length;n++){this.navigationDOM[t[n]]=document.createElement("div"),this.navigationDOM[t[n]].className="vis-button vis-"+t[n],this.navigationDOM.wrapper.appendChild(this.navigationDOM[t[n]]);var a=new hammer(this.navigationDOM[t[n]]);"_fit"===o[n]?hammerUtil.onTouch(a,this._fit.bind(this)):hammerUtil.onTouch(a,this.bindToRedraw.bind(this,o[n])),this.navigationHammers.push(a);}var d=new hammer(this.canvas.frame);hammerUtil.onRelease(d,function(){e._stopMovement();}),this.navigationHammers.push(d),this.iconsCreated=!0;}},{key:"bindToRedraw",value:function(e){void 0===this.boundFunctions[e]&&(this.boundFunctions[e]=this[e].bind(this),this.body.emitter.on("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_startRendering"));}},{key:"unbindFromRedraw",value:function(e){void 0!==this.boundFunctions[e]&&(this.body.emitter.off("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_stopRendering"),delete this.boundFunctions[e]);}},{key:"_fit",value:function(){700<new Date().valueOf()-this.touchTime&&(this.body.emitter.emit("fit",{duration:700}),this.touchTime=new Date().valueOf());}},{key:"_stopMovement",value:function(){for(var e in this.boundFunctions)this.boundFunctions.hasOwnProperty(e)&&(this.body.emitter.off("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_stopRendering"));this.boundFunctions={};}},{key:"_moveUp",value:function(){this.body.view.translation.y+=this.options.keyboard.speed.y;}},{key:"_moveDown",value:function(){this.body.view.translation.y-=this.options.keyboard.speed.y;}},{key:"_moveLeft",value:function(){this.body.view.translation.x+=this.options.keyboard.speed.x;}},{key:"_moveRight",value:function(){this.body.view.translation.x-=this.options.keyboard.speed.x;}},{key:"_zoomIn",value:function(){var e=this.body.view.scale,t=this.body.view.scale*(1+this.options.keyboard.speed.zoom),o=this.body.view.translation,n=t/e,i=(1-n)*this.canvas.canvasViewCenter.x+o.x*n,a=(1-n)*this.canvas.canvasViewCenter.y+o.y*n;this.body.view.scale=t,this.body.view.translation={x:i,y:a},this.body.emitter.emit("zoom",{direction:"+",scale:this.body.view.scale,pointer:null});}},{key:"_zoomOut",value:function(){var e=this.body.view.scale,t=this.body.view.scale/(1+this.options.keyboard.speed.zoom),o=this.body.view.translation,n=t/e,i=(1-n)*this.canvas.canvasViewCenter.x+o.x*n,a=(1-n)*this.canvas.canvasViewCenter.y+o.y*n;this.body.view.scale=t,this.body.view.translation={x:i,y:a},this.body.emitter.emit("zoom",{direction:"-",scale:this.body.view.scale,pointer:null});}},{key:"configureKeyboardBindings",value:function(){var e=this;void 0!==this.keycharm&&this.keycharm.destroy(),!0===this.options.keyboard.enabled&&(this.keycharm=!0===this.options.keyboard.bindToWindow?keycharm({container:window,preventDefault:!0}):keycharm({container:this.canvas.frame,preventDefault:!0}),this.keycharm.reset(),!0===this.activated&&(this.keycharm.bind("up",function(){e.bindToRedraw("_moveUp");},"keydown"),this.keycharm.bind("down",function(){e.bindToRedraw("_moveDown");},"keydown"),this.keycharm.bind("left",function(){e.bindToRedraw("_moveLeft");},"keydown"),this.keycharm.bind("right",function(){e.bindToRedraw("_moveRight");},"keydown"),this.keycharm.bind("=",function(){e.bindToRedraw("_zoomIn");},"keydown"),this.keycharm.bind("num+",function(){e.bindToRedraw("_zoomIn");},"keydown"),this.keycharm.bind("num-",function(){e.bindToRedraw("_zoomOut");},"keydown"),this.keycharm.bind("-",function(){e.bindToRedraw("_zoomOut");},"keydown"),this.keycharm.bind("[",function(){e.bindToRedraw("_zoomOut");},"keydown"),this.keycharm.bind("]",function(){e.bindToRedraw("_zoomIn");},"keydown"),this.keycharm.bind("pageup",function(){e.bindToRedraw("_zoomIn");},"keydown"),this.keycharm.bind("pagedown",function(){e.bindToRedraw("_zoomOut");},"keydown"),this.keycharm.bind("up",function(){e.unbindFromRedraw("_moveUp");},"keyup"),this.keycharm.bind("down",function(){e.unbindFromRedraw("_moveDown");},"keyup"),this.keycharm.bind("left",function(){e.unbindFromRedraw("_moveLeft");},"keyup"),this.keycharm.bind("right",function(){e.unbindFromRedraw("_moveRight");},"keyup"),this.keycharm.bind("=",function(){e.unbindFromRedraw("_zoomIn");},"keyup"),this.keycharm.bind("num+",function(){e.unbindFromRedraw("_zoomIn");},"keyup"),this.keycharm.bind("num-",function(){e.unbindFromRedraw("_zoomOut");},"keyup"),this.keycharm.bind("-",function(){e.unbindFromRedraw("_zoomOut");},"keyup"),this.keycharm.bind("[",function(){e.unbindFromRedraw("_zoomOut");},"keyup"),this.keycharm.bind("]",function(){e.unbindFromRedraw("_zoomIn");},"keyup"),this.keycharm.bind("pageup",function(){e.unbindFromRedraw("_zoomIn");},"keyup"),this.keycharm.bind("pagedown",function(){e.unbindFromRedraw("_zoomOut");},"keyup")));}}]),e;}(),Popup=function(){function e(t,o){classCallCheck$1$1(this,e),this.container=t,this.overflowMethod=o||"cap",this.x=0,this.y=0,this.padding=5,this.hidden=!1,this.frame=document.createElement("div"),this.frame.className="vis-tooltip",this.container.appendChild(this.frame);}return createClass$1$1(e,[{key:"setPosition",value:function(e,t){this.x=parseInt(e),this.y=parseInt(t);}},{key:"setText",value:function(e){e instanceof Element?(this.frame.innerHTML="",this.frame.appendChild(e)):this.frame.innerHTML=e;}},{key:"show",value:function(e){if(void 0===e&&(e=!0),!0===e){var t=this.frame.clientHeight,o=this.frame.clientWidth,n=this.frame.parentNode.clientHeight,i=this.frame.parentNode.clientWidth,a=0,d=0;if("flip"==this.overflowMethod){var s=!1,r=!0;this.y-t<this.padding&&(r=!1),this.x+o>i-this.padding&&(s=!0),a=s?this.x-o:this.x,d=r?this.y-t:this.y;}else d=this.y-t,d+t+this.padding>n&&(d=n-t-this.padding),d<this.padding&&(d=this.padding),a=this.x,a+o+this.padding>i&&(a=i-o-this.padding),a<this.padding&&(a=this.padding);this.frame.style.left=a+"px",this.frame.style.top=d+"px",this.frame.style.visibility="visible",this.hidden=!1;}else this.hide();}},{key:"hide",value:function(){this.hidden=!0,this.frame.style.left="0",this.frame.style.top="0",this.frame.style.visibility="hidden";}},{key:"destroy",value:function(){this.frame.parentNode.removeChild(this.frame);}}]),e;}(),InteractionHandler=function(){function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.canvas=o,this.selectionHandler=n,this.navigationHandler=new NavigationHandler(t,o),this.body.eventListeners.onTap=this.onTap.bind(this),this.body.eventListeners.onTouch=this.onTouch.bind(this),this.body.eventListeners.onDoubleTap=this.onDoubleTap.bind(this),this.body.eventListeners.onHold=this.onHold.bind(this),this.body.eventListeners.onDragStart=this.onDragStart.bind(this),this.body.eventListeners.onDrag=this.onDrag.bind(this),this.body.eventListeners.onDragEnd=this.onDragEnd.bind(this),this.body.eventListeners.onMouseWheel=this.onMouseWheel.bind(this),this.body.eventListeners.onPinch=this.onPinch.bind(this),this.body.eventListeners.onMouseMove=this.onMouseMove.bind(this),this.body.eventListeners.onRelease=this.onRelease.bind(this),this.body.eventListeners.onContext=this.onContext.bind(this),this.touchTime=0,this.drag={},this.pinch={},this.popup=void 0,this.popupObj=void 0,this.popupTimer=void 0,this.body.functions.getPointer=this.getPointer.bind(this),this.options={},this.defaultOptions={dragNodes:!0,dragView:!0,hover:!1,keyboard:{enabled:!1,speed:{x:10,y:10,zoom:.02},bindToWindow:!0},navigationButtons:!1,tooltipDelay:300,zoomView:!0,zoomSpeed:1},util$2.extend(this.options,this.defaultOptions),this.bindEventListeners();}return createClass$1$1(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("destroy",function(){clearTimeout(e.popupTimer),delete e.body.functions.getPointer;});}},{key:"setOptions",value:function(e){if(void 0!==e){util$2.selectiveNotDeepExtend(["hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag","keyboard","multiselect","selectable","selectConnectedEdges"],this.options,e),util$2.mergeOptions(this.options,e,"keyboard"),e.tooltip&&(util$2.extend(this.options.tooltip,e.tooltip),e.tooltip.color&&(this.options.tooltip.color=util$2.parseColor(e.tooltip.color)));}this.navigationHandler.setOptions(this.options);}},{key:"getPointer",value:function(e){return {x:e.x-util$2.getAbsoluteLeft(this.canvas.frame.canvas),y:e.y-util$2.getAbsoluteTop(this.canvas.frame.canvas)};}},{key:"onTouch",value:function(e){50<new Date().valueOf()-this.touchTime&&(this.drag.pointer=this.getPointer(e.center),this.drag.pinched=!1,this.pinch.scale=this.body.view.scale,this.touchTime=new Date().valueOf());}},{key:"onTap",value:function(e){var t=this.getPointer(e.center),o=this.selectionHandler.options.multiselect&&(e.changedPointers[0].ctrlKey||e.changedPointers[0].metaKey);this.checkSelectionChanges(t,e,o),this.selectionHandler._generateClickEvent("click",e,t);}},{key:"onDoubleTap",value:function(e){var t=this.getPointer(e.center);this.selectionHandler._generateClickEvent("doubleClick",e,t);}},{key:"onHold",value:function(e){var t=this.getPointer(e.center),o=this.selectionHandler.options.multiselect;this.checkSelectionChanges(t,e,o),this.selectionHandler._generateClickEvent("click",e,t),this.selectionHandler._generateClickEvent("hold",e,t);}},{key:"onRelease",value:function(e){if(10<new Date().valueOf()-this.touchTime){var t=this.getPointer(e.center);this.selectionHandler._generateClickEvent("release",e,t),this.touchTime=new Date().valueOf();}}},{key:"onContext",value:function(e){var t=this.getPointer({x:e.clientX,y:e.clientY});this.selectionHandler._generateClickEvent("oncontext",e,t);}},{key:"checkSelectionChanges",value:function(e,t){var o=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],n=this.selectionHandler.getSelection(),i=!1;i=!0===o?this.selectionHandler.selectAdditionalOnPoint(e):this.selectionHandler.selectOnPoint(e);var a=this.selectionHandler.getSelection(),d=this._determineDifference(n,a),s=this._determineDifference(a,n);0<d.edges.length&&(this.selectionHandler._generateClickEvent("deselectEdge",t,e,n),i=!0),0<d.nodes.length&&(this.selectionHandler._generateClickEvent("deselectNode",t,e,n),i=!0),0<s.nodes.length&&(this.selectionHandler._generateClickEvent("selectNode",t,e),i=!0),0<s.edges.length&&(this.selectionHandler._generateClickEvent("selectEdge",t,e),i=!0),!0===i&&this.selectionHandler._generateClickEvent("select",t,e);}},{key:"_determineDifference",value:function(e,t){var o=function(e,t){for(var o=[],n=0,a;n<e.length;n++)a=e[n],-1===t.indexOf(a)&&o.push(a);return o;};return {nodes:o(e.nodes,t.nodes),edges:o(e.edges,t.edges)};}},{key:"onDragStart",value:function(e){void 0===this.drag.pointer&&this.onTouch(e);var t=this.selectionHandler.getNodeAt(this.drag.pointer);if(this.drag.dragging=!0,this.drag.selection=[],this.drag.translation=util$2.extend({},this.body.view.translation),this.drag.nodeId=void 0,void 0!==t&&!0===this.options.dragNodes){this.drag.nodeId=t.id,!1===t.isSelected()&&(this.selectionHandler.unselectAll(),this.selectionHandler.selectObject(t)),this.selectionHandler._generateClickEvent("dragStart",e,this.drag.pointer);var o=this.selectionHandler.selectionObj.nodes;for(var n in o)if(o.hasOwnProperty(n)){var i=o[n],a={id:i.id,node:i,x:i.x,y:i.y,xFixed:i.options.fixed.x,yFixed:i.options.fixed.y};i.options.fixed.x=!0,i.options.fixed.y=!0,this.drag.selection.push(a);}}else this.selectionHandler._generateClickEvent("dragStart",e,this.drag.pointer,void 0,!0);}},{key:"onDrag",value:function(e){var t=this;if(!0!==this.drag.pinched){this.body.emitter.emit("unlockNode");var o=this.getPointer(e.center),n=this.drag.selection;if(n&&n.length&&!0===this.options.dragNodes){this.selectionHandler._generateClickEvent("dragging",e,o);var i=o.x-this.drag.pointer.x,a=o.y-this.drag.pointer.y;n.forEach(function(e){var o=e.node;!1===e.xFixed&&(o.x=t.canvas._XconvertDOMtoCanvas(t.canvas._XconvertCanvasToDOM(e.x)+i)),!1===e.yFixed&&(o.y=t.canvas._YconvertDOMtoCanvas(t.canvas._YconvertCanvasToDOM(e.y)+a));}),this.body.emitter.emit("startSimulation");}else if(!0===this.options.dragView){if(this.selectionHandler._generateClickEvent("dragging",e,o,void 0,!0),void 0===this.drag.pointer)return void this.onDragStart(e);var d=o.x-this.drag.pointer.x,s=o.y-this.drag.pointer.y;this.body.view.translation={x:this.drag.translation.x+d,y:this.drag.translation.y+s},this.body.emitter.emit("_requestRedraw");}}}},{key:"onDragEnd",value:function(e){this.drag.dragging=!1;var t=this.drag.selection;t&&t.length?(t.forEach(function(e){e.node.options.fixed.x=e.xFixed,e.node.options.fixed.y=e.yFixed;}),this.selectionHandler._generateClickEvent("dragEnd",e,this.getPointer(e.center)),this.body.emitter.emit("startSimulation")):(this.selectionHandler._generateClickEvent("dragEnd",e,this.getPointer(e.center),void 0,!0),this.body.emitter.emit("_requestRedraw"));}},{key:"onPinch",value:function(e){var t=this.getPointer(e.center);this.drag.pinched=!0,void 0===this.pinch.scale&&(this.pinch.scale=1);var o=this.pinch.scale*e.scale;this.zoom(o,t);}},{key:"zoom",value:function(e,t){if(!0===this.options.zoomView){var o=this.body.view.scale;1e-5>e&&(e=1e-5),10<e&&(e=10);var n;void 0!==this.drag&&!0===this.drag.dragging&&(n=this.canvas.DOMtoCanvas(this.drag.pointer));var i=this.body.view.translation,a=e/o,d=(1-a)*t.x+i.x*a,s=(1-a)*t.y+i.y*a;if(this.body.view.scale=e,this.body.view.translation={x:d,y:s},null!=n){var r=this.canvas.canvasToDOM(n);this.drag.pointer.x=r.x,this.drag.pointer.y=r.y;}this.body.emitter.emit("_requestRedraw"),o<e?this.body.emitter.emit("zoom",{direction:"+",scale:this.body.view.scale,pointer:t}):this.body.emitter.emit("zoom",{direction:"-",scale:this.body.view.scale,pointer:t});}}},{key:"onMouseWheel",value:function(e){if(!0===this.options.zoomView){var t=0;if(e.wheelDelta?t=e.wheelDelta/120:e.detail&&(t=-e.detail/3),0!=t){var o=this.body.view.scale,n=t*(this.options.zoomSpeed/10);0>t&&(n/=1-n),o*=1+n;var i=this.getPointer({x:e.clientX,y:e.clientY});this.zoom(o,i);}e.preventDefault();}}},{key:"onMouseMove",value:function(e){var t=this,o=this.getPointer({x:e.clientX,y:e.clientY}),n=!1;void 0!==this.popup&&(!1===this.popup.hidden&&this._checkHidePopup(o),!1===this.popup.hidden&&(n=!0,this.popup.setPosition(o.x+3,o.y-5),this.popup.show())),!1===this.options.keyboard.bindToWindow&&!0===this.options.keyboard.enabled&&this.canvas.frame.focus(),!1===n&&(void 0!==this.popupTimer&&(clearInterval(this.popupTimer),this.popupTimer=void 0),!this.drag.dragging&&(this.popupTimer=setTimeout(function(){return t._checkShowPopup(o);},this.options.tooltipDelay))),!0===this.options.hover&&this.selectionHandler.hoverObject(e,o);}},{key:"_checkShowPopup",value:function(e){var t=this.canvas._XconvertDOMtoCanvas(e.x),o=this.canvas._YconvertDOMtoCanvas(e.y),n={left:t,top:o,right:t,bottom:o},a=void 0===this.popupObj?void 0:this.popupObj.id,d=!1,s="node";if(void 0===this.popupObj){for(var r=this.body.nodeIndices,l=this.body.nodes,c=[],u=0,p;u<r.length;u++)p=l[r[u]],!0===p.isOverlappingWith(n)&&(d=!0,void 0!==p.getTitle()&&c.push(r[u]));0<c.length&&(this.popupObj=l[c[c.length-1]],d=!0);}if(void 0===this.popupObj&&!1===d){for(var h=this.body.edgeIndices,m=this.body.edges,g=[],y=0,f;y<h.length;y++)f=m[h[y]],!0===f.isOverlappingWith(n)&&!0===f.connected&&void 0!==f.getTitle()&&g.push(h[y]);0<g.length&&(this.popupObj=m[g[g.length-1]],s="edge");}void 0===this.popupObj?void 0!==this.popup&&(this.popup.hide(),this.body.emitter.emit("hidePopup")):this.popupObj.id!==a&&(void 0===this.popup&&(this.popup=new Popup(this.canvas.frame)),this.popup.popupTargetType=s,this.popup.popupTargetId=this.popupObj.id,this.popup.setPosition(e.x+3,e.y-5),this.popup.setText(this.popupObj.getTitle()),this.popup.show(),this.body.emitter.emit("showPopup",this.popupObj.id));}},{key:"_checkHidePopup",value:function(e){var t=this.selectionHandler._pointerToPositionObject(e),o=!1;if("node"!==this.popup.popupTargetType)void 0===this.selectionHandler.getNodeAt(e)&&void 0!==this.body.edges[this.popup.popupTargetId]&&(o=this.body.edges[this.popup.popupTargetId].isOverlappingWith(t));else if(void 0!==this.body.nodes[this.popup.popupTargetId]&&(o=this.body.nodes[this.popup.popupTargetId].isOverlappingWith(t),!0===o)){var n=this.selectionHandler.getNodeAt(e);o=void 0!==n&&n.id===this.popup.popupTargetId;}!1===o&&(this.popupObj=void 0,this.popup.hide(),this.body.emitter.emit("hidePopup"));}}]),e;}(),SelectionHandler=function(){function e(t,o){var n=this;classCallCheck$1$1(this,e),this.body=t,this.canvas=o,this.selectionObj={nodes:[],edges:[]},this.hoverObj={nodes:{},edges:{}},this.options={},this.defaultOptions={multiselect:!1,selectable:!0,selectConnectedEdges:!0,hoverConnectedEdges:!0},util$2.extend(this.options,this.defaultOptions),this.body.emitter.on("_dataChanged",function(){n.updateSelection();});}return createClass$1$1(e,[{key:"setOptions",value:function(e){if(void 0!==e){util$2.selectiveDeepExtend(["multiselect","hoverConnectedEdges","selectable","selectConnectedEdges"],this.options,e);}}},{key:"selectOnPoint",value:function(e){var t=!1;if(!0===this.options.selectable){var o=this.getNodeAt(e)||this.getEdgeAt(e);this.unselectAll(),void 0!==o&&(t=this.selectObject(o)),this.body.emitter.emit("_requestRedraw");}return t;}},{key:"selectAdditionalOnPoint",value:function(e){var t=!1;if(!0===this.options.selectable){var o=this.getNodeAt(e)||this.getEdgeAt(e);void 0!==o&&(t=!0,!0===o.isSelected()?this.deselectObject(o):this.selectObject(o),this.body.emitter.emit("_requestRedraw"));}return t;}},{key:"_initBaseEvent",value:function(e,t){var o={pointer:{DOM:{x:t.x,y:t.y},canvas:this.canvas.DOMtoCanvas(t)},event:e};return o;}},{key:"_generateClickEvent",value:function(e,t,o,n){var i=!!(4<arguments.length&&void 0!==arguments[4])&&arguments[4],a=this._initBaseEvent(t,o);if(!0===i)a.nodes=[],a.edges=[];else{var d=this.getSelection();a.nodes=d.nodes,a.edges=d.edges;}void 0!==n&&(a.previousSelection=n),"click"==e&&(a.items=this.getClickedItems(o)),void 0!==t.controlEdge&&(a.controlEdge=t.controlEdge),this.body.emitter.emit(e,a);}},{key:"selectObject",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.options.selectConnectedEdges;return void 0!==e&&(e instanceof Node&&!0===t&&this._selectConnectedEdges(e),e.select(),this._addToSelection(e),!0);}},{key:"deselectObject",value:function(e){!0===e.isSelected()&&(e.selected=!1,this._removeFromSelection(e));}},{key:"_getAllNodesOverlappingWith",value:function(e){for(var t=[],o=this.body.nodes,n=0,a;n<this.body.nodeIndices.length;n++)a=this.body.nodeIndices[n],o[a].isOverlappingWith(e)&&t.push(a);return t;}},{key:"_pointerToPositionObject",value:function(e){var t=this.canvas.DOMtoCanvas(e);return {left:t.x-1,top:t.y+1,right:t.x+1,bottom:t.y-1};}},{key:"getNodeAt",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],o=this._pointerToPositionObject(e),n=this._getAllNodesOverlappingWith(o);return 0<n.length?!0===t?this.body.nodes[n[n.length-1]]:n[n.length-1]:void 0;}},{key:"_getEdgesOverlappingWith",value:function(e,t){for(var o=this.body.edges,n=0,a;n<this.body.edgeIndices.length;n++)a=this.body.edgeIndices[n],o[a].isOverlappingWith(e)&&t.push(a);}},{key:"_getAllEdgesOverlappingWith",value:function(e){var t=[];return this._getEdgesOverlappingWith(e,t),t;}},{key:"getEdgeAt",value:function(e){for(var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],o=this.canvas.DOMtoCanvas(e),n=10,a=null,d=this.body.edges,s=0;s<this.body.edgeIndices.length;s++){var r=this.body.edgeIndices[s],l=d[r];if(l.connected){var c=l.from.x,u=l.from.y,p=l.to.x,h=l.to.y,m=l.edgeType.getDistanceToEdge(c,u,p,h,o.x,o.y);m<n&&(a=r,n=m);}}return null===a?void 0:!0===t?this.body.edges[a]:a;}},{key:"_addToSelection",value:function(e){e instanceof Node?this.selectionObj.nodes[e.id]=e:this.selectionObj.edges[e.id]=e;}},{key:"_addToHover",value:function(e){e instanceof Node?this.hoverObj.nodes[e.id]=e:this.hoverObj.edges[e.id]=e;}},{key:"_removeFromSelection",value:function(e){e instanceof Node?(delete this.selectionObj.nodes[e.id],this._unselectConnectedEdges(e)):delete this.selectionObj.edges[e.id];}},{key:"unselectAll",value:function(){for(var e in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(e)&&this.selectionObj.nodes[e].unselect();for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&this.selectionObj.edges[t].unselect();this.selectionObj={nodes:{},edges:{}};}},{key:"_getSelectedNodeCount",value:function(){var e=0;for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&(e+=1);return e;}},{key:"_getSelectedNode",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e))return this.selectionObj.nodes[e];}},{key:"_getSelectedEdge",value:function(){for(var e in this.selectionObj.edges)if(this.selectionObj.edges.hasOwnProperty(e))return this.selectionObj.edges[e];}},{key:"_getSelectedEdgeCount",value:function(){var e=0;for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&(e+=1);return e;}},{key:"_getSelectedObjectCount",value:function(){var e=0;for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&(e+=1);for(var o in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(o)&&(e+=1);return e;}},{key:"_selectionIsEmpty",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e))return !1;for(var t in this.selectionObj.edges)if(this.selectionObj.edges.hasOwnProperty(t))return !1;return !0;}},{key:"_clusterInSelection",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e)&&1<this.selectionObj.nodes[e].clusterSize)return !0;return !1;}},{key:"_selectConnectedEdges",value:function(e){for(var t=0,o;t<e.edges.length;t++)o=e.edges[t],o.select(),this._addToSelection(o);}},{key:"_hoverConnectedEdges",value:function(e){for(var t=0,o;t<e.edges.length;t++)o=e.edges[t],o.hover=!0,this._addToHover(o);}},{key:"_unselectConnectedEdges",value:function(e){for(var t=0,o;t<e.edges.length;t++)o=e.edges[t],o.unselect(),this._removeFromSelection(o);}},{key:"emitBlurEvent",value:function(e,t,o){var n=this._initBaseEvent(e,t);!0===o.hover&&(o.hover=!1,o instanceof Node?(n.node=o.id,this.body.emitter.emit("blurNode",n)):(n.edge=o.id,this.body.emitter.emit("blurEdge",n)));}},{key:"emitHoverEvent",value:function(e,t,o){var n=this._initBaseEvent(e,t),i=!1;return !1===o.hover&&(o.hover=!0,this._addToHover(o),i=!0,o instanceof Node?(n.node=o.id,this.body.emitter.emit("hoverNode",n)):(n.edge=o.id,this.body.emitter.emit("hoverEdge",n))),i;}},{key:"hoverObject",value:function(e,t){var o=this.getNodeAt(t);void 0===o&&(o=this.getEdgeAt(t));var n=!1;for(var i in this.hoverObj.nodes)this.hoverObj.nodes.hasOwnProperty(i)&&(void 0===o||o instanceof Node&&o.id!=i||o instanceof Edge)&&(this.emitBlurEvent(e,t,this.hoverObj.nodes[i]),delete this.hoverObj.nodes[i],n=!0);for(var a in this.hoverObj.edges)this.hoverObj.edges.hasOwnProperty(a)&&(!0===n?(this.hoverObj.edges[a].hover=!1,delete this.hoverObj.edges[a]):(void 0===o||o instanceof Edge&&o.id!=a||o instanceof Node&&!o.hover)&&(this.emitBlurEvent(e,t,this.hoverObj.edges[a]),delete this.hoverObj.edges[a],n=!0));if(void 0!==o){var d=Object.keys(this.hoverObj.edges).length,s=Object.keys(this.hoverObj.nodes).length,r=o instanceof Edge&&0===d&&0===s,l=o instanceof Node&&0===d&&0===s;(n||r||l)&&(n=this.emitHoverEvent(e,t,o)),o instanceof Node&&!0===this.options.hoverConnectedEdges&&this._hoverConnectedEdges(o);}!0===n&&this.body.emitter.emit("_requestRedraw");}},{key:"getSelection",value:function(){var e=this.getSelectedNodes(),t=this.getSelectedEdges();return {nodes:e,edges:t};}},{key:"getSelectedNodes",value:function(){var e=[];if(!0===this.options.selectable)for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&e.push(this.selectionObj.nodes[t].id);return e;}},{key:"getSelectedEdges",value:function(){var e=[];if(!0===this.options.selectable)for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&e.push(this.selectionObj.edges[t].id);return e;}},{key:"setSelection",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},o,n;if(!e||!e.nodes&&!e.edges)throw"Selection must be an object with nodes and/or edges properties";if((t.unselectAll||void 0===t.unselectAll)&&this.unselectAll(),e.nodes)for(o=0;o<e.nodes.length;o++){n=e.nodes[o];var a=this.body.nodes[n];if(!a)throw new RangeError("Node with id \""+n+"\" not found");this.selectObject(a,t.highlightEdges);}if(e.edges)for(o=0;o<e.edges.length;o++){n=e.edges[o];var d=this.body.edges[n];if(!d)throw new RangeError("Edge with id \""+n+"\" not found");this.selectObject(d);}this.body.emitter.emit("_requestRedraw");}},{key:"selectNodes",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if(!e||void 0===e.length)throw"Selection must be an array with ids";this.setSelection({nodes:e},{highlightEdges:t});}},{key:"selectEdges",value:function(e){if(!e||void 0===e.length)throw"Selection must be an array with ids";this.setSelection({edges:e});}},{key:"updateSelection",value:function(){for(var e in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(e)&&(this.body.nodes.hasOwnProperty(e)||delete this.selectionObj.nodes[e]);for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&(this.body.edges.hasOwnProperty(t)||delete this.selectionObj.edges[t]);}},{key:"getClickedItems",value:function(e){for(var t=this.canvas.DOMtoCanvas(e),o=[],n=this.body.nodeIndices,a=this.body.nodes,d=n.length-1;0<=d;d--){var s=a[n[d]],r=s.getItemsOnPoint(t);o.push.apply(o,r);}for(var l=this.body.edgeIndices,c=this.body.edges,u=l.length-1;0<=u;u--){var p=c[l[u]],h=p.getItemsOnPoint(t);o.push.apply(o,h);}return o;}}]),e;}(),timsort=createCommonjsModule$2$1(function(e,t){(function(e,o){o(t);})(commonjsGlobal$2$1,function(e){function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function");}function o(e){return 1e5>e?100>e?10>e?0:1:1e4>e?1e3>e?2:3:4:1e7>e?1e6>e?5:6:1e9>e?1e8>e?7:8:9;}function n(e,n){if(e===n)return 0;if(~~e===e&&~~n===n){if(0===e||0===n)return e<n?-1:1;if(0>e||0>n){if(0<=n)return -1;if(0<=e)return 1;e=-e,n=-n;}var i=o(e),d=o(n),s=0;return i<d?(e*=p[d-i-1],n/=10,s=-1):i>d&&(n*=p[i-d-1],e/=10,s=1),e===n?s:e<n?-1:1;}var r=e+"",l=n+"";return r===l?0:r<l?-1:1;}function i(e){for(var t=0;e>=32;)t|=1&e,e>>=1;return e+t;}function a(e,t,o,n){var i=t+1;if(i===o)return 1;if(0>n(e[i++],e[t])){for(;i<o&&0>n(e[i],e[i-1]);)i++;d(e,t,i);}else for(;i<o&&0<=n(e[i],e[i-1]);)i++;return i-t;}function d(e,o,n){for(n--;o<n;){var i=e[o];e[o++]=e[n],e[n--]=i;}}function s(e,t,o,i,a){for(i===t&&i++;i<o;i++){for(var d=e[i],s=t,r=i;s<r;){var l=s+r>>>1;0>a(d,e[l])?r=l:s=l+1;}var c=i-s;switch(c){case 3:e[s+3]=e[s+2];case 2:e[s+2]=e[s+1];case 1:e[s+1]=e[s];break;default:for(;0<c;)e[s+c]=e[s+c-1],c--;}e[s]=d;}}function r(e,t,o,n,i,a){var d=0,s=0,r=1;if(0<a(e,t[o+i])){for(s=n-i;r<s&&0<a(e,t[o+i+r]);)d=r,r=(r<<1)+1,0>=r&&(r=s);r>s&&(r=s),d+=i,r+=i;}else{for(s=i+1;r<s&&0>=a(e,t[o+i-r]);)d=r,r=(r<<1)+1,0>=r&&(r=s);r>s&&(r=s);var l=d;d=i-r,r=i-l;}for(d++;d<r;){var c=d+(r-d>>>1);0<a(e,t[o+c])?d=c+1:r=c;}return r;}function l(e,t,o,n,i,a){var d=0,s=0,r=1;if(0>a(e,t[o+i])){for(s=i+1;r<s&&0>a(e,t[o+i-r]);)d=r,r=(r<<1)+1,0>=r&&(r=s);r>s&&(r=s);var l=d;d=i-r,r=i-l;}else{for(s=n-i;r<s&&0<=a(e,t[o+i+r]);)d=r,r=(r<<1)+1,0>=r&&(r=s);r>s&&(r=s),d+=i,r+=i;}for(d++;d<r;){var c=d+(r-d>>>1);0>a(e,t[o+c])?r=c:d=c+1;}return r;}e.__esModule=!0,e.sort=function(e,t,o,d){if(!Array.isArray(e))throw new TypeError("Can only sort arrays");t?"function"!=typeof t&&(d=o,o=t,t=n):t=n,o||(o=0),d||(d=e.length);var r=d-o;if(!(2>r)){var l=0;if(32>r)return l=a(e,o,d,t),void s(e,o,d,o+l,t);var c=new h(e,t),u=i(r);do{if(l=a(e,o,d,t),l<u){var p=r;p>u&&(p=u),s(e,o,o+p,o+l,t),l=p;}c.pushRun(o,l),c.mergeRuns(),r-=l,o+=l;}while(0!==r);c.forceMergeRuns();}};var c=7,u=256,p=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9],h=function(){function e(o,n){t(this,e),this.array=null,this.compare=null,this.minGallop=c,this.length=0,this.tmpStorageLength=u,this.stackLength=0,this.runStart=null,this.runLength=null,this.stackSize=0,this.array=o,this.compare=n,this.length=o.length,this.length<2*u&&(this.tmpStorageLength=this.length>>>1),this.tmp=Array(this.tmpStorageLength),this.stackLength=120>this.length?5:1542>this.length?10:119151>this.length?19:40,this.runStart=Array(this.stackLength),this.runLength=Array(this.stackLength);}return e.prototype.pushRun=function(e,t){this.runStart[this.stackSize]=e,this.runLength[this.stackSize]=t,this.stackSize+=1;},e.prototype.mergeRuns=function(){for(;1<this.stackSize;){var e=this.stackSize-2;if(1<=e&&this.runLength[e-1]<=this.runLength[e]+this.runLength[e+1]||2<=e&&this.runLength[e-2]<=this.runLength[e]+this.runLength[e-1])this.runLength[e-1]<this.runLength[e+1]&&e--;else if(this.runLength[e]>this.runLength[e+1])break;this.mergeAt(e);}},e.prototype.forceMergeRuns=function(){for(;1<this.stackSize;){var e=this.stackSize-2;0<e&&this.runLength[e-1]<this.runLength[e+1]&&e--,this.mergeAt(e);}},e.prototype.mergeAt=function(e){var t=this.compare,o=this.array,n=this.runStart[e],i=this.runLength[e],a=this.runStart[e+1],d=this.runLength[e+1];this.runLength[e]=i+d,e===this.stackSize-3&&(this.runStart[e+1]=this.runStart[e+2],this.runLength[e+1]=this.runLength[e+2]),this.stackSize--;var s=l(o[a],o,n,i,0,t);(n+=s,i-=s,0!==i)&&(d=r(o[n+i-1],o,a,d,d-1,t),0===d||(i<=d?this.mergeLow(n,i,a,d):this.mergeHigh(n,i,a,d)));},e.prototype.mergeLow=function(e,t,o,n){var a=this.compare,d=this.array,s=this.tmp,u=0;for(u=0;u<t;u++)s[u]=d[e+u];var p=0,h=o,m=e;if(d[m++]=d[h++],0==--n){for(u=0;u<t;u++)d[m+u]=s[p+u];return;}if(1===t){for(u=0;u<n;u++)d[m+u]=d[h+u];return void(d[m+n]=s[p]);}for(var g=this.minGallop;;){var y=0,f=0,b=!1;do if(0>a(d[h],s[p])){if(d[m++]=d[h++],f++,y=0,0==--n){b=!0;break;}}else if(d[m++]=s[p++],y++,f=0,1==--t){b=!0;break;}while((y|f)<g);if(b)break;do{if(y=l(d[h],s,p,t,0,a),0!==y){for(u=0;u<y;u++)d[m+u]=s[p+u];if(m+=y,p+=y,t-=y,1>=t){b=!0;break;}}if(d[m++]=d[h++],0==--n){b=!0;break;}if(f=r(s[p],d,h,n,0,a),0!==f){for(u=0;u<f;u++)d[m+u]=d[h+u];if(m+=f,h+=f,n-=f,0===n){b=!0;break;}}if(d[m++]=s[p++],1==--t){b=!0;break;}g--;}while(y>=c||f>=c);if(b)break;0>g&&(g=0),g+=2;}if(this.minGallop=g,1>g&&(this.minGallop=1),1===t){for(u=0;u<n;u++)d[m+u]=d[h+u];d[m+n]=s[p];}else if(0===t)throw new Error("mergeLow preconditions were not respected");else for(u=0;u<t;u++)d[m+u]=s[p+u];},e.prototype.mergeHigh=function(e,t,o,n){var a=this.compare,d=this.array,s=this.tmp,u=0;for(u=0;u<n;u++)s[u]=d[o+u];var p=e+t-1,h=n-1,m=o+n-1,g=0,y=0;if(d[m--]=d[p--],0==--t){for(g=m-(n-1),u=0;u<n;u++)d[g+u]=s[u];return;}if(1===n){for(m-=t,p-=t,y=m+1,g=p+1,u=t-1;0<=u;u--)d[y+u]=d[g+u];return void(d[m]=s[h]);}for(var f=this.minGallop;;){var b=0,_=0,v=!1;do if(0>a(s[h],d[p])){if(d[m--]=d[p--],b++,_=0,0==--t){v=!0;break;}}else if(d[m--]=s[h--],_++,b=0,1==--n){v=!0;break;}while((b|_)<f);if(v)break;do{if(b=t-l(s[h],d,e,t,t-1,a),0!=b){for(m-=b,p-=b,t-=b,y=m+1,g=p+1,u=b-1;0<=u;u--)d[y+u]=d[g+u];if(0===t){v=!0;break;}}if(d[m--]=s[h--],1==--n){v=!0;break;}if(_=n-r(d[p],s,0,n,n-1,a),0!==_){for(m-=_,h-=_,n-=_,y=m+1,g=h+1,u=0;u<_;u++)d[y+u]=s[g+u];if(1>=n){v=!0;break;}}if(d[m--]=d[p--],0==--t){v=!0;break;}f--;}while(b>=c||_>=c);if(v)break;0>f&&(f=0),f+=2;}if(this.minGallop=f,1>f&&(this.minGallop=1),1===n){for(m-=t,p-=t,y=m+1,g=p+1,u=t-1;0<=u;u--)d[y+u]=d[g+u];d[m]=s[h];}else if(0===n)throw new Error("mergeHigh preconditions were not respected");else for(g=m-(n-1),u=0;u<n;u++)d[g+u]=s[u];},e;}();});});unwrapExports(timsort);var timsort$1=timsort,DirectionInterface=function(){function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,[{key:"abstract",value:function(){throw new Error("Can't instantiate abstract class!");}},{key:"fake_use",value:function(){}},{key:"curveType",value:function(){return this.abstract();}},{key:"getPosition",value:function(e){return this.fake_use(e),this.abstract();}},{key:"setPosition",value:function(e,t){var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;this.fake_use(e,t,o),this.abstract();}},{key:"getTreeSize",value:function(e){return this.fake_use(e),this.abstract();}},{key:"sort",value:function(e){this.fake_use(e),this.abstract();}},{key:"fix",value:function(e,t){this.fake_use(e,t),this.abstract();}},{key:"shift",value:function(e,t){this.fake_use(e,t),this.abstract();}}]),e;}(),VerticalStrategy=function(e){function t(e){var o;return classCallCheck$1$1(this,t),o=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this)),o.layout=e,o;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"curveType",value:function(){return "horizontal";}},{key:"getPosition",value:function(e){return e.x;}},{key:"setPosition",value:function(e,t){var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;void 0!==o&&this.layout.hierarchical.addToOrdering(e,o),e.x=t;}},{key:"getTreeSize",value:function(e){var t=this.layout.hierarchical.getTreeSize(this.layout.body.nodes,e);return {min:t.min_x,max:t.max_x};}},{key:"sort",value:function(e){timsort$1.sort(e,function(e,t){return e.x-t.x;});}},{key:"fix",value:function(e,t){e.y=this.layout.options.hierarchical.levelSeparation*t,e.options.fixed.y=!0;}},{key:"shift",value:function(e,t){this.layout.body.nodes[e].x+=t;}}]),t;}(DirectionInterface),HorizontalStrategy=function(e){function t(e){var o;return classCallCheck$1$1(this,t),o=possibleConstructorReturn$1$1(this,getPrototypeOf$1$1(t).call(this)),o.layout=e,o;}return inherits$1$1(t,e),createClass$1$1(t,[{key:"curveType",value:function(){return "vertical";}},{key:"getPosition",value:function(e){return e.y;}},{key:"setPosition",value:function(e,t){var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;void 0!==o&&this.layout.hierarchical.addToOrdering(e,o),e.y=t;}},{key:"getTreeSize",value:function(e){var t=this.layout.hierarchical.getTreeSize(this.layout.body.nodes,e);return {min:t.min_y,max:t.max_y};}},{key:"sort",value:function(e){timsort$1.sort(e,function(e,t){return e.y-t.y;});}},{key:"fix",value:function(e,t){e.x=this.layout.options.hierarchical.levelSeparation*t,e.options.fixed.x=!0;}},{key:"shift",value:function(e,t){this.layout.body.nodes[e].y+=t;}}]),t;}(DirectionInterface),HierarchicalStatus=function(){var t=Math.max,o=Math.min;function e(){classCallCheck$1$1(this,e),this.childrenReference={},this.parentReference={},this.trees={},this.distributionOrdering={},this.levels={},this.distributionIndex={},this.isTree=!1,this.treeIndex=-1;}return createClass$1$1(e,[{key:"addRelation",value:function(e,t){void 0===this.childrenReference[e]&&(this.childrenReference[e]=[]),this.childrenReference[e].push(t),void 0===this.parentReference[t]&&(this.parentReference[t]=[]),this.parentReference[t].push(e);}},{key:"checkIfTree",value:function(){for(var e in this.parentReference)if(1<this.parentReference[e].length)return void(this.isTree=!1);this.isTree=!0;}},{key:"numTrees",value:function(){return this.treeIndex+1;}},{key:"setTreeIndex",value:function(e,o){void 0===o||void 0===this.trees[e.id]&&(this.trees[e.id]=o,this.treeIndex=t(o,this.treeIndex));}},{key:"ensureLevel",value:function(e){void 0===this.levels[e]&&(this.levels[e]=0);}},{key:"getMaxLevel",value:function(e){var o=this,n={},i=function e(a){if(void 0!==n[a])return n[a];var d=o.levels[a];if(o.childrenReference[a]){var s=o.childrenReference[a];if(0<s.length)for(var r=0;r<s.length;r++)d=t(d,e(s[r]));}return n[a]=d,d;};return i(e);}},{key:"levelDownstream",value:function(e,t){void 0===this.levels[t.id]&&(void 0===this.levels[e.id]&&(this.levels[e.id]=0),this.levels[t.id]=this.levels[e.id]+1);}},{key:"setMinLevelToZero",value:function(e){var t=1e9;for(var n in e)e.hasOwnProperty(n)&&void 0!==this.levels[n]&&(t=o(this.levels[n],t));for(var i in e)e.hasOwnProperty(i)&&void 0!==this.levels[i]&&(this.levels[i]-=t);}},{key:"getTreeSize",value:function(e,n){var i=1e9,a=-1e9,d=1e9,s=-1e9;for(var r in this.trees)if(this.trees.hasOwnProperty(r)&&this.trees[r]===n){var l=e[r];i=o(l.x,i),a=t(l.x,a),d=o(l.y,d),s=t(l.y,s);}return {min_x:i,max_x:a,min_y:d,max_y:s};}},{key:"hasSameParent",value:function(e,t){var o=this.parentReference[e.id],n=this.parentReference[t.id];if(void 0===o||void 0===n)return !1;for(var a=0;a<o.length;a++)for(var d=0;d<n.length;d++)if(o[a]==n[d])return !0;return !1;}},{key:"inSameSubNetwork",value:function(e,t){return this.trees[e.id]===this.trees[t.id];}},{key:"getLevels",value:function(){return Object.keys(this.distributionOrdering);}},{key:"addToOrdering",value:function(e,t){void 0===this.distributionOrdering[t]&&(this.distributionOrdering[t]=[]);var o=!1,i=this.distributionOrdering[t];for(var a in i)if(i[a]===e){o=!0;break;}o||(this.distributionOrdering[t].push(e),this.distributionIndex[e.id]=this.distributionOrdering[t].length-1);}}]),e;}(),LayoutEngine=function(){var t=Math.cos,o=Math.sin,n=Math.sqrt,a=Math.PI,d=Math.round,s=Math.pow,r=Math.max,l=Math.abs,c=Math.min,u=Math.floor;function e(t){classCallCheck$1$1(this,e),this.body=t,this.initialRandomSeed=d(1e6*Math.random()),this.randomSeed=this.initialRandomSeed,this.setPhysics=!1,this.options={},this.optionsBackup={physics:{}},this.defaultOptions={randomSeed:void 0,improvedLayout:!0,hierarchical:{enabled:!1,levelSeparation:150,nodeSpacing:100,treeSpacing:200,blockShifting:!0,edgeMinimization:!0,parentCentralization:!0,direction:"UD",sortMethod:"hubsize"}},util$2.extend(this.options,this.defaultOptions),this.bindEventListeners();}return createClass$1$1(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("_dataChanged",function(){e.setupHierarchicalLayout();}),this.body.emitter.on("_dataLoaded",function(){e.layoutNetwork();}),this.body.emitter.on("_resetHierarchicalLayout",function(){e.setupHierarchicalLayout();}),this.body.emitter.on("_adjustEdgesForHierarchicalLayout",function(){if(!0===e.options.hierarchical.enabled){var t=e.direction.curveType();e.body.emitter.emit("_forceDisableDynamicCurves",t,!1);}});}},{key:"setOptions",value:function(e,t){if(void 0!==e){var o=this.options.hierarchical,n=o.enabled;if(util$2.selectiveDeepExtend(["randomSeed","improvedLayout"],this.options,e),util$2.mergeOptions(this.options,e,"hierarchical"),void 0!==e.randomSeed&&(this.initialRandomSeed=e.randomSeed),!0===o.enabled)return !0===n&&this.body.emitter.emit("refresh",!0),"RL"===o.direction||"DU"===o.direction?0<o.levelSeparation&&(o.levelSeparation*=-1):0>o.levelSeparation&&(o.levelSeparation*=-1),this.setDirectionStrategy(),this.body.emitter.emit("_resetHierarchicalLayout"),this.adaptAllOptionsForHierarchicalLayout(t);if(!0===n)return this.body.emitter.emit("refresh"),util$2.deepExtend(t,this.optionsBackup);}return t;}},{key:"adaptAllOptionsForHierarchicalLayout",value:function(e){if(!0===this.options.hierarchical.enabled){var t=this.optionsBackup.physics;void 0===e.physics||!0===e.physics?(e.physics={enabled:void 0===t.enabled||t.enabled,solver:"hierarchicalRepulsion"},t.enabled=void 0===t.enabled||t.enabled,t.solver=t.solver||"barnesHut"):"object"===_typeof_1$2$1(e.physics)?(t.enabled=void 0===e.physics.enabled||e.physics.enabled,t.solver=e.physics.solver||"barnesHut",e.physics.solver="hierarchicalRepulsion"):!1!==e.physics&&(t.solver="barnesHut",e.physics={solver:"hierarchicalRepulsion"});var o=this.direction.curveType();if(void 0===e.edges)this.optionsBackup.edges={smooth:{enabled:!0,type:"dynamic"}},e.edges={smooth:!1};else if(void 0===e.edges.smooth)this.optionsBackup.edges={smooth:{enabled:!0,type:"dynamic"}},e.edges.smooth=!1;else if("boolean"==typeof e.edges.smooth)this.optionsBackup.edges={smooth:e.edges.smooth},e.edges.smooth={enabled:e.edges.smooth,type:o};else{var n=e.edges.smooth;void 0!==n.type&&"dynamic"!==n.type&&(o=n.type),this.optionsBackup.edges={smooth:void 0===n.enabled||n.enabled,type:void 0===n.type?"dynamic":n.type,roundness:void 0===n.roundness?.5:n.roundness,forceDirection:void 0!==n.forceDirection&&n.forceDirection},e.edges.smooth={enabled:void 0===n.enabled||n.enabled,type:o,roundness:void 0===n.roundness?.5:n.roundness,forceDirection:void 0!==n.forceDirection&&n.forceDirection};}this.body.emitter.emit("_forceDisableDynamicCurves",o);}return e;}},{key:"seededRandom",value:function(){var e=1e4*o(this.randomSeed++);return e-u(e);}},{key:"positionInitially",value:function(e){if(!0!==this.options.hierarchical.enabled){this.randomSeed=this.initialRandomSeed;for(var n=e.length+50,d=0;d<e.length;d++){var s=e[d],r=2*a*this.seededRandom();void 0===s.x&&(s.x=n*t(r)),void 0===s.y&&(s.y=n*o(r));}}}},{key:"layoutNetwork",value:function(){if(!0!==this.options.hierarchical.enabled&&!0===this.options.improvedLayout){for(var e=this.body.nodeIndices,t=0,o=0,n;o<e.length;o++)n=this.body.nodes[e[o]],!0===n.predefinedPosition&&(t+=1);if(t<.5*e.length){var a=0,d=150,s={clusterNodeProperties:{shape:"ellipse",label:"",group:"",font:{multi:!1}},clusterEdgeProperties:{label:"",font:{multi:!1},smooth:{enabled:!1}}};if(e.length>d){for(var l=e.length;e.length>d&&10>=a;){a+=1;var c=e.length;0==a%3?this.body.modules.clustering.clusterBridges(s):this.body.modules.clustering.clusterOutliers(s);var u=e.length;if(c==u&&0!=a%3)return this._declusterAll(),this.body.emitter.emit("_layoutFailed"),void console.info("This network could not be positioned by this version of the improved layout algorithm. Please disable improvedLayout for better performance.");}this.body.modules.kamadaKawai.setOptions({springLength:r(150,2*l)});}10<a&&console.info("The clustering didn't succeed within the amount of interations allowed, progressing with partial result."),this.body.modules.kamadaKawai.solve(e,this.body.edgeIndices,!0),this._shiftToCenter();for(var p=70,h=0,m;h<e.length;h++)m=this.body.nodes[e[h]],!1===m.predefinedPosition&&(m.x+=(.5-this.seededRandom())*p,m.y+=(.5-this.seededRandom())*p);this._declusterAll(),this.body.emitter.emit("_repositionBezierNodes");}}}},{key:"_shiftToCenter",value:function(){for(var e=NetworkUtil.getRangeCore(this.body.nodes,this.body.nodeIndices),t=NetworkUtil.findCenter(e),o=0,n;o<this.body.nodeIndices.length;o++)n=this.body.nodes[this.body.nodeIndices[o]],n.x-=t.x,n.y-=t.y;}},{key:"_declusterAll",value:function(){for(var e=!0;!0===e;){e=!1;for(var t=0;t<this.body.nodeIndices.length;t++)!0===this.body.nodes[this.body.nodeIndices[t]].isCluster&&(e=!0,this.body.modules.clustering.openCluster(this.body.nodeIndices[t],{},!1));!0===e&&this.body.emitter.emit("_dataChanged");}}},{key:"getSeed",value:function(){return this.initialRandomSeed;}},{key:"setupHierarchicalLayout",value:function(){if(!0===this.options.hierarchical.enabled&&0<this.body.nodeIndices.length){var e=!1,t=!1,o,n;for(n in this.lastNodeOnLevel={},this.hierarchical=new HierarchicalStatus(),this.body.nodes)this.body.nodes.hasOwnProperty(n)&&(o=this.body.nodes[n],void 0===o.options.level?t=!0:(e=!0,this.hierarchical.levels[n]=o.options.level));if(!0===t&&!0===e)throw new Error("To use the hierarchical layout, nodes require either no predefined levels or levels have to be defined for all nodes.");else{if(!0===t){var i=this.options.hierarchical.sortMethod;"hubsize"===i?this._determineLevelsByHubsize():"directed"===i?this._determineLevelsDirected():"custom"===i&&this._determineLevelsCustomCallback();}for(var a in this.body.nodes)this.body.nodes.hasOwnProperty(a)&&this.hierarchical.ensureLevel(a);var d=this._getDistribution();this._generateMap(),this._placeNodesByHierarchy(d),this._condenseHierarchy(),this._shiftToCenter();}}}},{key:"_condenseHierarchy",value:function(){var e=this,t=!1,o={},i=function(){for(var t=u(),o=0,n=0,d;n<t.length-1;n++)d=t[n].max-t[n+1].min,o+=d+e.options.hierarchical.treeSpacing,a(n+1,o);},a=function(t,o){var n=e.hierarchical.trees;for(var i in n)n.hasOwnProperty(i)&&n[i]===t&&e.direction.shift(i,o);},u=function(){for(var t=[],o=0;o<e.hierarchical.numTrees();o++)t.push(e.direction.getTreeSize(o));return t;},p=function t(o,n){if(!n[o.id]&&(n[o.id]=!0,e.hierarchical.childrenReference[o.id])){var a=e.hierarchical.childrenReference[o.id];if(0<a.length)for(var d=0;d<a.length;d++)t(e.body.nodes[a[d]],n);}},h=function(t){var o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1e9,n=1e9,i=1e9,a=1e9,d=-1e9;for(var s in t)if(t.hasOwnProperty(s)){var l=e.body.nodes[s],u=e.hierarchical.levels[l.id],p=e.direction.getPosition(l),h=e._getSpaceAroundNode(l,t),m=slicedToArray(h,2),g=m[0],y=m[1];n=c(g,n),i=c(y,i),u<=o&&(a=c(p,a),d=r(p,d));}return [a,d,n,i];},m=function(t,o){var n=e.hierarchical.getMaxLevel(t.id),i=e.hierarchical.getMaxLevel(o.id);return c(n,i);},g=function(t,o,n){for(var a=e.hierarchical,d=0;d<o.length;d++){var s=o[d],r=a.distributionOrdering[s];if(1<r.length)for(var l=0;l<r.length-1;l++){var c=r[l],u=r[l+1];a.hasSameParent(c,u)&&a.inSameSubNetwork(c,u)&&t(c,u,n);}}},y=function(o,n){var i=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],a=e.direction.getPosition(o),d=e.direction.getPosition(n),s=l(d-a),r=e.options.hierarchical.nodeSpacing;if(s>r){var c={},u={};p(o,c),p(n,u);var g=m(o,n),y=h(c,g),f=h(u,g),b=y[1],_=f[0],v=f[2],k=l(b-_);if(k>r){var w=b-_+r;w<-v+r&&(w=-v+r),0>w&&(e._shiftBlock(n.id,w),t=!0,!0===i&&e._centerParent(n));}}},f=function(a,l){for(var u=l.id,m=l.edges,g=e.hierarchical.levels[l.id],y=e.options.hierarchical.levelSeparation*e.options.hierarchical.levelSeparation,f={},b=[],_=0,v;_<m.length;_++)if(v=m[_],v.toId!=v.fromId){var k=v.toId==u?v.from:v.to;f[m[_].id]=k,e.hierarchical.levels[k.id]<g&&b.push(v);}var w=function(t,o){for(var i=0,d=0;d<o.length;d++)if(void 0!==f[o[d].id]){var s=e.direction.getPosition(f[o[d].id])-t;i+=s/n(s*s+y);}return i;},x=function(t,o){for(var n=0,i=0;i<o.length;i++)if(void 0!==f[o[i].id]){var d=e.direction.getPosition(f[o[i].id])-t;n-=y*s(d*d+y,-1.5);}return n;},S=function(t,o){for(var n=e.direction.getPosition(l),i={},a=0;a<t;a++){var s=w(n,o),u=x(n,o),p=40,h=r(-p,c(p,d(s/u)));if(n-=h,void 0!==i[n])break;i[n]=a;}return n;},O=function(n){var i=e.direction.getPosition(l);if(void 0===o[l.id]){var a={};p(l,a),o[l.id]=a;}var d=h(o[l.id]),s=d[2],r=d[3],u=n-i,m=0;0<u?m=c(u,r-e.options.hierarchical.nodeSpacing):0>u&&(m=-c(-u,s-e.options.hierarchical.nodeSpacing)),0!=m&&(e._shiftBlock(l.id,m),t=!0);},D=function(o){var n=e.direction.getPosition(l),i=e._getSpaceAroundNode(l),a=slicedToArray(i,2),d=a[0],s=a[1],u=o-n,p=n;0<u?p=c(n+(s-e.options.hierarchical.nodeSpacing),o):0>u&&(p=r(n-(d-e.options.hierarchical.nodeSpacing),o)),p!==n&&(e.direction.setPosition(l,p),t=!0);},T=S(a,b);O(T),T=S(a,m),D(T);},b=function(o){var n=e.hierarchical.getLevels();n=n.reverse();for(var a=0;a<o;a++){t=!1;for(var d=0;d<n.length;d++)for(var s=n[d],r=e.hierarchical.distributionOrdering[s],l=0;l<r.length;l++)f(1e3,r[l]);if(!0!==t)break;}},_=function(o){var n=e.hierarchical.getLevels();n=n.reverse();for(var a=0;a<o&&(t=!1,g(y,n,!0),!0===t);a++);},v=function(){var t=e.hierarchical.getLevels();t=t.reverse();for(var o=0;o<t.length;o++)for(var n=t[o],a=e.hierarchical.distributionOrdering[n],d=0;d<a.length;d++)e._centerParent(a[d]);};!0===this.options.hierarchical.blockShifting&&(_(5),function(){for(var t in e.body.nodes)e.body.nodes.hasOwnProperty(t)&&e._centerParent(e.body.nodes[t]);}()),!0===this.options.hierarchical.edgeMinimization&&b(20),!0===this.options.hierarchical.parentCentralization&&v(),i();}},{key:"_getSpaceAroundNode",value:function(e,t){var o=!0;void 0===t&&(o=!1);var n=this.hierarchical.levels[e.id];if(void 0!==n){var i=this.hierarchical.distributionIndex[e.id],a=this.direction.getPosition(e),d=this.hierarchical.distributionOrdering[n],s=1e9,r=1e9;if(0!==i){var l=d[i-1];if(!0==o&&void 0===t[l.id]||!1==o){var u=this.direction.getPosition(l);s=a-u;}}if(i!=d.length-1){var p=d[i+1];if(!0==o&&void 0===t[p.id]||!1==o){var h=this.direction.getPosition(p);r=c(r,h-a);}}return [s,r];}return [0,0];}},{key:"_centerParent",value:function(e){if(this.hierarchical.parentReference[e.id])for(var t=this.hierarchical.parentReference[e.id],o=0;o<t.length;o++){var n=t[o],a=this.body.nodes[n],d=this.hierarchical.childrenReference[n];if(void 0!==d){var s=this._getCenterPosition(d),r=this.direction.getPosition(a),c=this._getSpaceAroundNode(a),u=slicedToArray(c,2),p=u[0],h=u[1],m=r-s;(0>m&&l(m)<h-this.options.hierarchical.nodeSpacing||0<m&&l(m)<p-this.options.hierarchical.nodeSpacing)&&this.direction.setPosition(a,s);}}}},{key:"_placeNodesByHierarchy",value:function(e){for(var t in this.positionedNodes={},e)if(e.hasOwnProperty(t)){var o=Object.keys(e[t]);o=this._indexArrayToNodes(o),this.direction.sort(o);for(var n=0,a=0,d;a<o.length;a++)if(d=o[a],void 0===this.positionedNodes[d.id]){var s=this.options.hierarchical.nodeSpacing,r=s*n;0<n&&(r=this.direction.getPosition(o[a-1])+s),this.direction.setPosition(d,r,t),this._validatePositionAndContinue(d,t,r),n++;}}}},{key:"_placeBranchNodes",value:function(e,t){var o=this.hierarchical.childrenReference[e];if(void 0!==o){for(var n=[],a=0;a<o.length;a++)n.push(this.body.nodes[o[a]]);this.direction.sort(n);for(var d=0;d<n.length;d++){var s=n[d],r=this.hierarchical.levels[s.id];if(r>t&&void 0===this.positionedNodes[s.id]){var l=this.options.hierarchical.nodeSpacing,c=void 0;c=0==d?this.direction.getPosition(this.body.nodes[e]):this.direction.getPosition(n[d-1])+l,this.direction.setPosition(s,c,r),this._validatePositionAndContinue(s,r,c);}else return;}var u=this._getCenterPosition(n);this.direction.setPosition(this.body.nodes[e],u,t);}}},{key:"_validatePositionAndContinue",value:function(e,t,o){if(this.hierarchical.isTree){if(void 0!==this.lastNodeOnLevel[t]){var n=this.direction.getPosition(this.body.nodes[this.lastNodeOnLevel[t]]);if(o-n<this.options.hierarchical.nodeSpacing){var i=n+this.options.hierarchical.nodeSpacing-o,a=this._findCommonParent(this.lastNodeOnLevel[t],e.id);this._shiftBlock(a.withChild,i);}}this.lastNodeOnLevel[t]=e.id,this.positionedNodes[e.id]=!0,this._placeBranchNodes(e.id,t);}}},{key:"_indexArrayToNodes",value:function(e){for(var t=[],o=0;o<e.length;o++)t.push(this.body.nodes[e[o]]);return t;}},{key:"_getDistribution",value:function(){var e={},t,o;for(t in this.body.nodes)if(this.body.nodes.hasOwnProperty(t)){o=this.body.nodes[t];var n=void 0===this.hierarchical.levels[t]?0:this.hierarchical.levels[t];this.direction.fix(o,n),void 0===e[n]&&(e[n]={}),e[n][t]=o;}return e;}},{key:"_getActiveEdges",value:function(e){var t=this,o=[];return util$2.forEach(e.edges,function(e){-1!==t.body.edgeIndices.indexOf(e.id)&&o.push(e);}),o;}},{key:"_getHubSizes",value:function(){var e=this,t={},o=this.body.nodeIndices;util$2.forEach(o,function(o){var n=e.body.nodes[o],i=e._getActiveEdges(n).length;t[i]=!0;});var n=[];return util$2.forEach(t,function(e){n.push(+e);}),timsort$1.sort(n,function(e,t){return t-e;}),n;}},{key:"_determineLevelsByHubsize",value:function(){for(var e=this,t=function(t,o){e.hierarchical.levelDownstream(t,o);},o=this._getHubSizes(),n=function(n){var i=o[n];return 0===i?"break":void util$2.forEach(e.body.nodeIndices,function(o){var n=e.body.nodes[o];i===e._getActiveEdges(n).length&&e._crawlNetwork(t,o);});},a=0,d;a<o.length&&(d=n(a),"break"!==d);++a);}},{key:"_determineLevelsCustomCallback",value:function(){var e=this,t=function(){};this._crawlNetwork(function(o,n,i){var a=e.hierarchical.levels[o.id];void 0===a&&(a=e.hierarchical.levels[o.id]=1e5);var d=t(NetworkUtil.cloneOptions(o,"node"),NetworkUtil.cloneOptions(n,"node"),NetworkUtil.cloneOptions(i,"edge"));e.hierarchical.levels[n.id]=a+d;}),this.hierarchical.setMinLevelToZero(this.body.nodes);}},{key:"_determineLevelsDirected",value:function(){var e=this,t=function(t){return util$2.forEach(e.body.edges,function(e){if(e.toId===t.fromId&&e.fromId===t.toId)return !0;}),!1;};this._crawlNetwork(function(o,n,i){var a=e.hierarchical.levels[o.id],d=e.hierarchical.levels[n.id];if(t(i));void 0===a&&(a=e.hierarchical.levels[o.id]=1e4),e.hierarchical.levels[n.id]=i.toId==n.id?a+1:a-1;}),this.hierarchical.setMinLevelToZero(this.body.nodes);}},{key:"_generateMap",value:function(){var e=this;this._crawlNetwork(function(t,o){e.hierarchical.levels[o.id]>e.hierarchical.levels[t.id]&&e.hierarchical.addRelation(t.id,o.id);}),this.hierarchical.checkIfTree();}},{key:"_crawlNetwork",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){},o=1<arguments.length?arguments[1]:void 0,n={},a=function o(a,d){if(void 0===n[a.id]){e.hierarchical.setTreeIndex(a,d),n[a.id]=!0;for(var s=e._getActiveEdges(a),r=0,l,c;r<s.length;r++)c=s[r],!0===c.connected&&(l=c.toId==a.id?c.from:c.to,a.id!=l.id&&(t(a,l,c),o(l,d)));}};if(void 0===o){for(var d=0,s=0,r;s<this.body.nodeIndices.length;s++)if(r=this.body.nodeIndices[s],void 0===n[r]){var l=this.body.nodes[r];a(l,d),d+=1;}}else{var c=this.body.nodes[o];if(void 0===c)return void console.error("Node not found:",o);a(c);}}},{key:"_shiftBlock",value:function(e,t){var o=this,n={},i=function e(a){if(!n[a]){n[a]=!0,o.direction.shift(a,t);var d=o.hierarchical.childrenReference[a];if(void 0!==d)for(var s=0;s<d.length;s++)e(d[s]);}};i(e);}},{key:"_findCommonParent",value:function(e,t){var o=this,n={},i=function e(t,n){var a=o.hierarchical.parentReference[n];if(void 0!==a)for(var d=0,s;d<a.length;d++)s=a[d],t[s]=!0,e(t,s);},a=function e(t,n){var a=o.hierarchical.parentReference[n];if(void 0!==a)for(var d=0,s;d<a.length;d++){if(s=a[d],void 0!==t[s])return {foundParent:s,withChild:n};var r=e(t,s);if(null!==r.foundParent)return r;}return {foundParent:null,withChild:n};};return i(n,e),a(n,t);}},{key:"setDirectionStrategy",value:function(){var e="UD"===this.options.hierarchical.direction||"DU"===this.options.hierarchical.direction;this.direction=e?new VerticalStrategy(this):new HorizontalStrategy(this);}},{key:"_getCenterPosition",value:function(e){for(var t=1e9,o=-1e9,n=0,a;n<e.length;n++){if(a=void 0,void 0!==e[n].id)a=e[n];else{var d=e[n];a=this.body.nodes[d];}var s=this.direction.getPosition(a);t=c(t,s),o=r(o,s);}return .5*(t+o);}}]),e;}(),ManipulationSystem=function(){function e(t,o,n){var i=this;classCallCheck$1$1(this,e),this.body=t,this.canvas=o,this.selectionHandler=n,this.editMode=!1,this.manipulationDiv=void 0,this.editModeDiv=void 0,this.closeDiv=void 0,this.manipulationHammers=[],this.temporaryUIFunctions={},this.temporaryEventFunctions=[],this.touchTime=0,this.temporaryIds={nodes:[],edges:[]},this.guiEnabled=!1,this.inMode=!1,this.selectedControlNode=void 0,this.options={},this.defaultOptions={enabled:!1,initiallyActive:!1,addNode:!0,addEdge:!0,editNode:void 0,editEdge:!0,deleteNode:!0,deleteEdge:!0,controlNodeStyle:{shape:"dot",size:6,color:{background:"#ff0000",border:"#3c3c3c",highlight:{background:"#07f968",border:"#3c3c3c"}},borderWidth:2,borderWidthSelected:2}},util$2.extend(this.options,this.defaultOptions),this.body.emitter.on("destroy",function(){i._clean();}),this.body.emitter.on("_dataChanged",this._restore.bind(this)),this.body.emitter.on("_resetData",this._restore.bind(this));}return createClass$1$1(e,[{key:"_restore",value:function(){!1!==this.inMode&&(!0===this.options.initiallyActive?this.enableEditMode():this.disableEditMode());}},{key:"setOptions",value:function(e,t,o){void 0!==t&&(this.options.locale=void 0===t.locale?o.locale:t.locale,this.options.locales=void 0===t.locales?o.locales:t.locales),void 0!==e&&("boolean"==typeof e?this.options.enabled=e:(this.options.enabled=!0,util$2.deepExtend(this.options,e)),!0===this.options.initiallyActive&&(this.editMode=!0),this._setup());}},{key:"toggleEditMode",value:function(){!0===this.editMode?this.disableEditMode():this.enableEditMode();}},{key:"enableEditMode",value:function(){this.editMode=!0,this._clean(),!0===this.guiEnabled&&(this.manipulationDiv.style.display="block",this.closeDiv.style.display="block",this.editModeDiv.style.display="none",this.showManipulatorToolbar());}},{key:"disableEditMode",value:function(){this.editMode=!1,this._clean(),!0===this.guiEnabled&&(this.manipulationDiv.style.display="none",this.closeDiv.style.display="none",this.editModeDiv.style.display="block",this._createEditButton());}},{key:"showManipulatorToolbar",value:function(){if(this._clean(),this.manipulationDOM={},!0===this.guiEnabled){this.editMode=!0,this.manipulationDiv.style.display="block",this.closeDiv.style.display="block";var e=this.selectionHandler._getSelectedNodeCount(),t=this.selectionHandler._getSelectedEdgeCount(),o=this.options.locales[this.options.locale],n=!1;!1!==this.options.addNode&&(this._createAddNodeButton(o),n=!0),!1!==this.options.addEdge&&(!0===n?this._createSeperator(1):n=!0,this._createAddEdgeButton(o)),1===e&&"function"==typeof this.options.editNode?(!0===n?this._createSeperator(2):n=!0,this._createEditNodeButton(o)):1===t&&0===e&&!1!==this.options.editEdge&&(!0===n?this._createSeperator(3):n=!0,this._createEditEdgeButton(o)),0!==e+t&&(0<e&&!1!==this.options.deleteNode?(!0===n&&this._createSeperator(4),this._createDeleteButton(o)):0===e&&!1!==this.options.deleteEdge&&(!0===n&&this._createSeperator(4),this._createDeleteButton(o))),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this)),this._temporaryBindEvent("select",this.showManipulatorToolbar.bind(this));}this.body.emitter.emit("_redraw");}},{key:"addNodeMode",value:function(){if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="addNode",!0===this.guiEnabled){var e=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(e),this._createSeperator(),this._createDescription(e.addDescription||this.options.locales.en.addDescription),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this));}this._temporaryBindEvent("click",this._performAddNode.bind(this));}},{key:"editNode",value:function(){var e=this;!0!==this.editMode&&this.enableEditMode(),this._clean();var t=this.selectionHandler._getSelectedNode();if(void 0===t)this.showManipulatorToolbar();else if(this.inMode="editNode","function"!=typeof this.options.editNode)throw new Error("No function has been configured to handle the editing of nodes.");else if(!0!==t.isCluster){var o=util$2.deepExtend({},t.options,!1);if(o.x=t.x,o.y=t.y,2===this.options.editNode.length)this.options.editNode(o,function(t){null!==t&&void 0!==t&&"editNode"===e.inMode&&e.body.data.nodes.getDataSet().update(t),e.showManipulatorToolbar();});else throw new Error("The function for edit does not support two arguments (data, callback)");}else alert(this.options.locales[this.options.locale].editClusterError||this.options.locales.en.editClusterError);}},{key:"addEdgeMode",value:function(){if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="addEdge",!0===this.guiEnabled){var e=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(e),this._createSeperator(),this._createDescription(e.edgeDescription||this.options.locales.en.edgeDescription),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this));}this._temporaryBindUI("onTouch",this._handleConnect.bind(this)),this._temporaryBindUI("onDragEnd",this._finishConnect.bind(this)),this._temporaryBindUI("onDrag",this._dragControlNode.bind(this)),this._temporaryBindUI("onRelease",this._finishConnect.bind(this)),this._temporaryBindUI("onDragStart",this._dragStartEdge.bind(this)),this._temporaryBindUI("onHold",function(){});}},{key:"editEdgeMode",value:function(){if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="editEdge","object"===_typeof_1$2$1(this.options.editEdge)&&"function"==typeof this.options.editEdge.editWithoutDrag&&(this.edgeBeingEditedId=this.selectionHandler.getSelectedEdges()[0],void 0!==this.edgeBeingEditedId)){var e=this.body.edges[this.edgeBeingEditedId];return void this._performEditEdge(e.from,e.to);}if(!0===this.guiEnabled){var t=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(t),this._createSeperator(),this._createDescription(t.editEdgeDescription||this.options.locales.en.editEdgeDescription),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this));}if(this.edgeBeingEditedId=this.selectionHandler.getSelectedEdges()[0],void 0!==this.edgeBeingEditedId){var o=this.body.edges[this.edgeBeingEditedId],n=this._getNewTargetNode(o.from.x,o.from.y),i=this._getNewTargetNode(o.to.x,o.to.y);this.temporaryIds.nodes.push(n.id),this.temporaryIds.nodes.push(i.id),this.body.nodes[n.id]=n,this.body.nodeIndices.push(n.id),this.body.nodes[i.id]=i,this.body.nodeIndices.push(i.id),this._temporaryBindUI("onTouch",this._controlNodeTouch.bind(this)),this._temporaryBindUI("onTap",function(){}),this._temporaryBindUI("onHold",function(){}),this._temporaryBindUI("onDragStart",this._controlNodeDragStart.bind(this)),this._temporaryBindUI("onDrag",this._controlNodeDrag.bind(this)),this._temporaryBindUI("onDragEnd",this._controlNodeDragEnd.bind(this)),this._temporaryBindUI("onMouseMove",function(){}),this._temporaryBindEvent("beforeDrawing",function(e){var t=o.edgeType.findBorderPositions(e);!1===n.selected&&(n.x=t.from.x,n.y=t.from.y),!1===i.selected&&(i.x=t.to.x,i.y=t.to.y);}),this.body.emitter.emit("_redraw");}else this.showManipulatorToolbar();}},{key:"deleteSelected",value:function(){var e=this;!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="delete";var t=this.selectionHandler.getSelectedNodes(),o=this.selectionHandler.getSelectedEdges(),n=void 0;if(0<t.length){for(var a=0;a<t.length;a++)if(!0===this.body.nodes[t[a]].isCluster)return void alert(this.options.locales[this.options.locale].deleteClusterError||this.options.locales.en.deleteClusterError);"function"==typeof this.options.deleteNode&&(n=this.options.deleteNode);}else 0<o.length&&"function"==typeof this.options.deleteEdge&&(n=this.options.deleteEdge);if("function"==typeof n){if(2===n.length)n({nodes:t,edges:o},function(t){null!==t&&void 0!==t&&"delete"===e.inMode?(e.body.data.edges.getDataSet().remove(t.edges),e.body.data.nodes.getDataSet().remove(t.nodes),e.body.emitter.emit("startSimulation"),e.showManipulatorToolbar()):(e.body.emitter.emit("startSimulation"),e.showManipulatorToolbar());});else throw new Error("The function for delete does not support two arguments (data, callback)");}else this.body.data.edges.getDataSet().remove(o),this.body.data.nodes.getDataSet().remove(t),this.body.emitter.emit("startSimulation"),this.showManipulatorToolbar();}},{key:"_setup",value:function(){!0===this.options.enabled?(this.guiEnabled=!0,this._createWrappers(),!1===this.editMode?this._createEditButton():this.showManipulatorToolbar()):(this._removeManipulationDOM(),this.guiEnabled=!1);}},{key:"_createWrappers",value:function(){void 0===this.manipulationDiv&&(this.manipulationDiv=document.createElement("div"),this.manipulationDiv.className="vis-manipulation",this.manipulationDiv.style.display=!0===this.editMode?"block":"none",this.canvas.frame.appendChild(this.manipulationDiv)),void 0===this.editModeDiv&&(this.editModeDiv=document.createElement("div"),this.editModeDiv.className="vis-edit-mode",this.editModeDiv.style.display=!0===this.editMode?"none":"block",this.canvas.frame.appendChild(this.editModeDiv)),void 0===this.closeDiv&&(this.closeDiv=document.createElement("div"),this.closeDiv.className="vis-close",this.closeDiv.style.display=this.manipulationDiv.style.display,this.canvas.frame.appendChild(this.closeDiv));}},{key:"_getNewTargetNode",value:function(e,t){var o=util$2.deepExtend({},this.options.controlNodeStyle);o.id="targetNode"+util$2.randomUUID(),o.hidden=!1,o.physics=!1,o.x=e,o.y=t;var n=this.body.functions.createNode(o);return n.shape.boundingBox={left:e,right:e,top:t,bottom:t},n;}},{key:"_createEditButton",value:function(){this._clean(),this.manipulationDOM={},util$2.recursiveDOMDelete(this.editModeDiv);var e=this.options.locales[this.options.locale],t=this._createButton("editMode","vis-button vis-edit vis-edit-mode",e.edit||this.options.locales.en.edit);this.editModeDiv.appendChild(t),this._bindHammerToDiv(t,this.toggleEditMode.bind(this));}},{key:"_clean",value:function(){this.inMode=!1,!0===this.guiEnabled&&(util$2.recursiveDOMDelete(this.editModeDiv),util$2.recursiveDOMDelete(this.manipulationDiv),this._cleanManipulatorHammers()),this._cleanupTemporaryNodesAndEdges(),this._unbindTemporaryUIs(),this._unbindTemporaryEvents(),this.body.emitter.emit("restorePhysics");}},{key:"_cleanManipulatorHammers",value:function(){if(0!=this.manipulationHammers.length){for(var e=0;e<this.manipulationHammers.length;e++)this.manipulationHammers[e].destroy();this.manipulationHammers=[];}}},{key:"_removeManipulationDOM",value:function(){this._clean(),util$2.recursiveDOMDelete(this.manipulationDiv),util$2.recursiveDOMDelete(this.editModeDiv),util$2.recursiveDOMDelete(this.closeDiv),this.manipulationDiv&&this.canvas.frame.removeChild(this.manipulationDiv),this.editModeDiv&&this.canvas.frame.removeChild(this.editModeDiv),this.closeDiv&&this.canvas.frame.removeChild(this.closeDiv),this.manipulationDiv=void 0,this.editModeDiv=void 0,this.closeDiv=void 0;}},{key:"_createSeperator",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1;this.manipulationDOM["seperatorLineDiv"+e]=document.createElement("div"),this.manipulationDOM["seperatorLineDiv"+e].className="vis-separator-line",this.manipulationDiv.appendChild(this.manipulationDOM["seperatorLineDiv"+e]);}},{key:"_createAddNodeButton",value:function(e){var t=this._createButton("addNode","vis-button vis-add",e.addNode||this.options.locales.en.addNode);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.addNodeMode.bind(this));}},{key:"_createAddEdgeButton",value:function(e){var t=this._createButton("addEdge","vis-button vis-connect",e.addEdge||this.options.locales.en.addEdge);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.addEdgeMode.bind(this));}},{key:"_createEditNodeButton",value:function(e){var t=this._createButton("editNode","vis-button vis-edit",e.editNode||this.options.locales.en.editNode);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.editNode.bind(this));}},{key:"_createEditEdgeButton",value:function(e){var t=this._createButton("editEdge","vis-button vis-edit",e.editEdge||this.options.locales.en.editEdge);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.editEdgeMode.bind(this));}},{key:"_createDeleteButton",value:function(e){var t=this.options.rtl?"vis-button vis-delete-rtl":"vis-button vis-delete";var o=this._createButton("delete",t,e.del||this.options.locales.en.del);this.manipulationDiv.appendChild(o),this._bindHammerToDiv(o,this.deleteSelected.bind(this));}},{key:"_createBackButton",value:function(e){var t=this._createButton("back","vis-button vis-back",e.back||this.options.locales.en.back);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.showManipulatorToolbar.bind(this));}},{key:"_createButton",value:function(e,t,o){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"vis-label";return this.manipulationDOM[e+"Div"]=document.createElement("div"),this.manipulationDOM[e+"Div"].className=t,this.manipulationDOM[e+"Label"]=document.createElement("div"),this.manipulationDOM[e+"Label"].className=n,this.manipulationDOM[e+"Label"].innerHTML=o,this.manipulationDOM[e+"Div"].appendChild(this.manipulationDOM[e+"Label"]),this.manipulationDOM[e+"Div"];}},{key:"_createDescription",value:function(e){this.manipulationDiv.appendChild(this._createButton("description","vis-button vis-none",e));}},{key:"_temporaryBindEvent",value:function(e,t){this.temporaryEventFunctions.push({event:e,boundFunction:t}),this.body.emitter.on(e,t);}},{key:"_temporaryBindUI",value:function(e,t){if(void 0!==this.body.eventListeners[e])this.temporaryUIFunctions[e]=this.body.eventListeners[e],this.body.eventListeners[e]=t;else throw new Error("This UI function does not exist. Typo? You tried: "+e+" possible are: "+JSON.stringify(Object.keys(this.body.eventListeners)));}},{key:"_unbindTemporaryUIs",value:function(){for(var e in this.temporaryUIFunctions)this.temporaryUIFunctions.hasOwnProperty(e)&&(this.body.eventListeners[e]=this.temporaryUIFunctions[e],delete this.temporaryUIFunctions[e]);this.temporaryUIFunctions={};}},{key:"_unbindTemporaryEvents",value:function(){for(var e=0;e<this.temporaryEventFunctions.length;e++){var t=this.temporaryEventFunctions[e].event,o=this.temporaryEventFunctions[e].boundFunction;this.body.emitter.off(t,o);}this.temporaryEventFunctions=[];}},{key:"_bindHammerToDiv",value:function(e,t){var o=new hammer(e,{});hammerUtil.onTouch(o,t),this.manipulationHammers.push(o);}},{key:"_cleanupTemporaryNodesAndEdges",value:function(){for(var e=0;e<this.temporaryIds.edges.length;e++){this.body.edges[this.temporaryIds.edges[e]].disconnect(),delete this.body.edges[this.temporaryIds.edges[e]];var t=this.body.edgeIndices.indexOf(this.temporaryIds.edges[e]);-1!==t&&this.body.edgeIndices.splice(t,1);}for(var o=0;o<this.temporaryIds.nodes.length;o++){delete this.body.nodes[this.temporaryIds.nodes[o]];var n=this.body.nodeIndices.indexOf(this.temporaryIds.nodes[o]);-1!==n&&this.body.nodeIndices.splice(n,1);}this.temporaryIds={nodes:[],edges:[]};}},{key:"_controlNodeTouch",value:function(e){this.selectionHandler.unselectAll(),this.lastTouch=this.body.functions.getPointer(e.center),this.lastTouch.translation=util$2.extend({},this.body.view.translation);}},{key:"_controlNodeDragStart",value:function(){var e=this.lastTouch,t=this.selectionHandler._pointerToPositionObject(e),o=this.body.nodes[this.temporaryIds.nodes[0]],n=this.body.nodes[this.temporaryIds.nodes[1]],i=this.body.edges[this.edgeBeingEditedId];this.selectedControlNode=void 0;var a=o.isOverlappingWith(t),d=n.isOverlappingWith(t);!0===a?(this.selectedControlNode=o,i.edgeType.from=o):!0===d&&(this.selectedControlNode=n,i.edgeType.to=n),void 0!==this.selectedControlNode&&this.selectionHandler.selectObject(this.selectedControlNode),this.body.emitter.emit("_redraw");}},{key:"_controlNodeDrag",value:function(e){this.body.emitter.emit("disablePhysics");var t=this.body.functions.getPointer(e.center),o=this.canvas.DOMtoCanvas(t);if(void 0!==this.selectedControlNode)this.selectedControlNode.x=o.x,this.selectedControlNode.y=o.y;else{var n=t.x-this.lastTouch.x,i=t.y-this.lastTouch.y;this.body.view.translation={x:this.lastTouch.translation.x+n,y:this.lastTouch.translation.y+i};}this.body.emitter.emit("_redraw");}},{key:"_controlNodeDragEnd",value:function(e){var t=this.body.functions.getPointer(e.center),o=this.selectionHandler._pointerToPositionObject(t),n=this.body.edges[this.edgeBeingEditedId];if(void 0!==this.selectedControlNode){this.selectionHandler.unselectAll();for(var a=this.selectionHandler._getAllNodesOverlappingWith(o),d=void 0,s=a.length-1;0<=s;s--)if(a[s]!==this.selectedControlNode.id){d=this.body.nodes[a[s]];break;}if(void 0===d||void 0===this.selectedControlNode)n.updateEdgeType(),this.body.emitter.emit("restorePhysics");else if(!0===d.isCluster)alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError);else{var r=this.body.nodes[this.temporaryIds.nodes[0]];this.selectedControlNode.id===r.id?this._performEditEdge(d.id,n.to.id):this._performEditEdge(n.from.id,d.id);}this.body.emitter.emit("_redraw");}}},{key:"_handleConnect",value:function(e){if(100<new Date().valueOf()-this.touchTime){this.lastTouch=this.body.functions.getPointer(e.center),this.lastTouch.translation=util$2.extend({},this.body.view.translation);var t=this.lastTouch,o=this.selectionHandler.getNodeAt(t);if(void 0!==o)if(!0===o.isCluster)alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError);else{var n=this._getNewTargetNode(o.x,o.y);this.body.nodes[n.id]=n,this.body.nodeIndices.push(n.id);var i=this.body.functions.createEdge({id:"connectionEdge"+util$2.randomUUID(),from:o.id,to:n.id,physics:!1,smooth:{enabled:!0,type:"continuous",roundness:.5}});this.body.edges[i.id]=i,this.body.edgeIndices.push(i.id),this.temporaryIds.nodes.push(n.id),this.temporaryIds.edges.push(i.id);}this.touchTime=new Date().valueOf();}}},{key:"_dragControlNode",value:function(e){var t=this.body.functions.getPointer(e.center),o=this.selectionHandler._pointerToPositionObject(t),n=void 0;void 0!==this.temporaryIds.edges[0]&&(n=this.body.edges[this.temporaryIds.edges[0]].fromId);for(var a=this.selectionHandler._getAllNodesOverlappingWith(o),d=void 0,s=a.length-1;0<=s;s--)if(-1===this.temporaryIds.nodes.indexOf(a[s])){d=this.body.nodes[a[s]];break;}if(e.controlEdge={from:n,to:d?d.id:void 0},this.selectionHandler._generateClickEvent("controlNodeDragging",e,t),void 0!==this.temporaryIds.nodes[0]){var r=this.body.nodes[this.temporaryIds.nodes[0]];r.x=this.canvas._XconvertDOMtoCanvas(t.x),r.y=this.canvas._YconvertDOMtoCanvas(t.y),this.body.emitter.emit("_redraw");}else{var l=t.x-this.lastTouch.x,c=t.y-this.lastTouch.y;this.body.view.translation={x:this.lastTouch.translation.x+l,y:this.lastTouch.translation.y+c};}}},{key:"_finishConnect",value:function(e){var t=this.body.functions.getPointer(e.center),o=this.selectionHandler._pointerToPositionObject(t),n=void 0;void 0!==this.temporaryIds.edges[0]&&(n=this.body.edges[this.temporaryIds.edges[0]].fromId);for(var a=this.selectionHandler._getAllNodesOverlappingWith(o),d=void 0,s=a.length-1;0<=s;s--)if(-1===this.temporaryIds.nodes.indexOf(a[s])){d=this.body.nodes[a[s]];break;}this._cleanupTemporaryNodesAndEdges(),void 0!==d&&(!0===d.isCluster?alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError):void 0!==this.body.nodes[n]&&void 0!==this.body.nodes[d.id]&&this._performAddEdge(n,d.id)),e.controlEdge={from:n,to:d?d.id:void 0},this.selectionHandler._generateClickEvent("controlNodeDragEnd",e,t),this.body.emitter.emit("_redraw");}},{key:"_dragStartEdge",value:function(e){var t=this.lastTouch;this.selectionHandler._generateClickEvent("dragStart",e,t,void 0,!0);}},{key:"_performAddNode",value:function(e){var t=this,o={id:util$2.randomUUID(),x:e.pointer.canvas.x,y:e.pointer.canvas.y,label:"new"};if("function"!=typeof this.options.addNode)this.body.data.nodes.getDataSet().add(o),this.showManipulatorToolbar();else if(2===this.options.addNode.length)this.options.addNode(o,function(e){null!==e&&void 0!==e&&"addNode"===t.inMode&&t.body.data.nodes.getDataSet().add(e),t.showManipulatorToolbar();});else throw this.showManipulatorToolbar(),new Error("The function for add does not support two arguments (data,callback)");}},{key:"_performAddEdge",value:function(e,t){var o=this,n={from:e,to:t};if("function"!=typeof this.options.addEdge)this.body.data.edges.getDataSet().add(n),this.selectionHandler.unselectAll(),this.showManipulatorToolbar();else if(2===this.options.addEdge.length)this.options.addEdge(n,function(e){null!==e&&void 0!==e&&"addEdge"===o.inMode&&(o.body.data.edges.getDataSet().add(e),o.selectionHandler.unselectAll(),o.showManipulatorToolbar());});else throw new Error("The function for connect does not support two arguments (data,callback)");}},{key:"_performEditEdge",value:function(e,t){var o=this,n={id:this.edgeBeingEditedId,from:e,to:t,label:this.body.data.edges._data[this.edgeBeingEditedId].label},i=this.options.editEdge;if("object"===_typeof_1$2$1(i)&&(i=i.editWithoutDrag),"function"!=typeof i)this.body.data.edges.getDataSet().update(n),this.selectionHandler.unselectAll(),this.showManipulatorToolbar();else if(2===i.length)i(n,function(e){null===e||void 0===e||"editEdge"!==o.inMode?(o.body.edges[n.id].updateEdgeType(),o.body.emitter.emit("_redraw"),o.showManipulatorToolbar()):(o.body.data.edges.getDataSet().update(e),o.selectionHandler.unselectAll(),o.showManipulatorToolbar());});else throw new Error("The function for edit does not support two arguments (data, callback)");}}]),e;}(),htmlColors={black:"#000000",navy:"#000080",darkblue:"#00008B",mediumblue:"#0000CD",blue:"#0000FF",darkgreen:"#006400",green:"#008000",teal:"#008080",darkcyan:"#008B8B",deepskyblue:"#00BFFF",darkturquoise:"#00CED1",mediumspringgreen:"#00FA9A",lime:"#00FF00",springgreen:"#00FF7F",aqua:"#00FFFF",cyan:"#00FFFF",midnightblue:"#191970",dodgerblue:"#1E90FF",lightseagreen:"#20B2AA",forestgreen:"#228B22",seagreen:"#2E8B57",darkslategray:"#2F4F4F",limegreen:"#32CD32",mediumseagreen:"#3CB371",turquoise:"#40E0D0",royalblue:"#4169E1",steelblue:"#4682B4",darkslateblue:"#483D8B",mediumturquoise:"#48D1CC",indigo:"#4B0082",darkolivegreen:"#556B2F",cadetblue:"#5F9EA0",cornflowerblue:"#6495ED",mediumaquamarine:"#66CDAA",dimgray:"#696969",slateblue:"#6A5ACD",olivedrab:"#6B8E23",slategray:"#708090",lightslategray:"#778899",mediumslateblue:"#7B68EE",lawngreen:"#7CFC00",chartreuse:"#7FFF00",aquamarine:"#7FFFD4",maroon:"#800000",purple:"#800080",olive:"#808000",gray:"#808080",skyblue:"#87CEEB",lightskyblue:"#87CEFA",blueviolet:"#8A2BE2",darkred:"#8B0000",darkmagenta:"#8B008B",saddlebrown:"#8B4513",darkseagreen:"#8FBC8F",lightgreen:"#90EE90",mediumpurple:"#9370D8",darkviolet:"#9400D3",palegreen:"#98FB98",darkorchid:"#9932CC",yellowgreen:"#9ACD32",sienna:"#A0522D",brown:"#A52A2A",darkgray:"#A9A9A9",lightblue:"#ADD8E6",greenyellow:"#ADFF2F",paleturquoise:"#AFEEEE",lightsteelblue:"#B0C4DE",powderblue:"#B0E0E6",firebrick:"#B22222",darkgoldenrod:"#B8860B",mediumorchid:"#BA55D3",rosybrown:"#BC8F8F",darkkhaki:"#BDB76B",silver:"#C0C0C0",mediumvioletred:"#C71585",indianred:"#CD5C5C",peru:"#CD853F",chocolate:"#D2691E",tan:"#D2B48C",lightgrey:"#D3D3D3",palevioletred:"#D87093",thistle:"#D8BFD8",orchid:"#DA70D6",goldenrod:"#DAA520",crimson:"#DC143C",gainsboro:"#DCDCDC",plum:"#DDA0DD",burlywood:"#DEB887",lightcyan:"#E0FFFF",lavender:"#E6E6FA",darksalmon:"#E9967A",violet:"#EE82EE",palegoldenrod:"#EEE8AA",lightcoral:"#F08080",khaki:"#F0E68C",aliceblue:"#F0F8FF",honeydew:"#F0FFF0",azure:"#F0FFFF",sandybrown:"#F4A460",wheat:"#F5DEB3",beige:"#F5F5DC",whitesmoke:"#F5F5F5",mintcream:"#F5FFFA",ghostwhite:"#F8F8FF",salmon:"#FA8072",antiquewhite:"#FAEBD7",linen:"#FAF0E6",lightgoldenrodyellow:"#FAFAD2",oldlace:"#FDF5E6",red:"#FF0000",fuchsia:"#FF00FF",magenta:"#FF00FF",deeppink:"#FF1493",orangered:"#FF4500",tomato:"#FF6347",hotpink:"#FF69B4",coral:"#FF7F50",darkorange:"#FF8C00",lightsalmon:"#FFA07A",orange:"#FFA500",lightpink:"#FFB6C1",pink:"#FFC0CB",gold:"#FFD700",peachpuff:"#FFDAB9",navajowhite:"#FFDEAD",moccasin:"#FFE4B5",bisque:"#FFE4C4",mistyrose:"#FFE4E1",blanchedalmond:"#FFEBCD",papayawhip:"#FFEFD5",lavenderblush:"#FFF0F5",seashell:"#FFF5EE",cornsilk:"#FFF8DC",lemonchiffon:"#FFFACD",floralwhite:"#FFFAF0",snow:"#FFFAFA",yellow:"#FFFF00",lightyellow:"#FFFFE0",ivory:"#FFFFF0",white:"#FFFFFF"},ColorPicker=function(){var t=Math.atan2,o=Math.cos,n=Math.sin,i=Math.sqrt,a=Math.PI,d=Math.min;function e(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1;classCallCheck$1$1(this,e),this.pixelRatio=t,this.generated=!1,this.centerCoordinates={x:289/2,y:289/2},this.r=289*.49,this.color={r:255,g:255,b:255,a:1},this.hueCircle=void 0,this.initialColor={r:255,g:255,b:255,a:1},this.previousColor=void 0,this.applied=!1,this.updateCallback=function(){},this.closeCallback=function(){},this._create();}return createClass$1$1(e,[{key:"insertTo",value:function(e){void 0!==this.hammer&&(this.hammer.destroy(),this.hammer=void 0),this.container=e,this.container.appendChild(this.frame),this._bindHammer(),this._setSize();}},{key:"setUpdateCallback",value:function(e){if("function"==typeof e)this.updateCallback=e;else throw new Error("Function attempted to set as colorPicker update callback is not a function.");}},{key:"setCloseCallback",value:function(e){if("function"==typeof e)this.closeCallback=e;else throw new Error("Function attempted to set as colorPicker closing callback is not a function.");}},{key:"_isColorString",value:function(e){if("string"==typeof e)return htmlColors[e];}},{key:"setColor",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if("none"!==e){var o=this._isColorString(e),n;if(void 0!==o&&(e=o),!0===util$2.isString(e)){if(!0===util$2.isValidRGB(e)){var i=e.substr(4).substr(0,e.length-5).split(",");n={r:i[0],g:i[1],b:i[2],a:1};}else if(!0===util$2.isValidRGBA(e)){var a=e.substr(5).substr(0,e.length-6).split(",");n={r:a[0],g:a[1],b:a[2],a:a[3]};}else if(!0===util$2.isValidHex(e)){var d=util$2.hexToRGB(e);n={r:d.r,g:d.g,b:d.b,a:1};}}else if(e instanceof Object&&void 0!==e.r&&void 0!==e.g&&void 0!==e.b){var s=void 0===e.a?"1.0":e.a;n={r:e.r,g:e.g,b:e.b,a:s};}if(void 0===n)throw new Error("Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: "+JSON.stringify(e));else this._setColor(n,t);}}},{key:"show",value:function(){void 0!==this.closeCallback&&(this.closeCallback(),this.closeCallback=void 0),this.applied=!1,this.frame.style.display="block",this._generateHueCircle();}},{key:"_hide",value:function(){var e=this,t=!(0<arguments.length&&void 0!==arguments[0])||arguments[0];!0===t&&(this.previousColor=util$2.extend({},this.color)),!0===this.applied&&this.updateCallback(this.initialColor),this.frame.style.display="none",setTimeout(function(){void 0!==e.closeCallback&&(e.closeCallback(),e.closeCallback=void 0);},0);}},{key:"_save",value:function(){this.updateCallback(this.color),this.applied=!1,this._hide();}},{key:"_apply",value:function(){this.applied=!0,this.updateCallback(this.color),this._updatePicker(this.color);}},{key:"_loadLast",value:function(){void 0===this.previousColor?alert("There is no last color to load..."):this.setColor(this.previousColor,!1);}},{key:"_setColor",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];!0===t&&(this.initialColor=util$2.extend({},e)),this.color=e;var i=util$2.RGBToHSV(e.r,e.g,e.b),d=2*a,s=this.r*i.s,r=this.centerCoordinates.x+s*n(d*i.h),l=this.centerCoordinates.y+s*o(d*i.h);this.colorPickerSelector.style.left=r-.5*this.colorPickerSelector.clientWidth+"px",this.colorPickerSelector.style.top=l-.5*this.colorPickerSelector.clientHeight+"px",this._updatePicker(e);}},{key:"_setOpacity",value:function(e){this.color.a=e/100,this._updatePicker(this.color);}},{key:"_setBrightness",value:function(e){var t=util$2.RGBToHSV(this.color.r,this.color.g,this.color.b);t.v=e/100;var o=util$2.HSVToRGB(t.h,t.s,t.v);o.a=this.color.a,this.color=o,this._updatePicker();}},{key:"_updatePicker",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.color,t=util$2.RGBToHSV(e.r,e.g,e.b),o=this.colorPickerCanvas.getContext("2d");void 0===this.pixelRation&&(this.pixelRatio=(window.devicePixelRatio||1)/(o.webkitBackingStorePixelRatio||o.mozBackingStorePixelRatio||o.msBackingStorePixelRatio||o.oBackingStorePixelRatio||o.backingStorePixelRatio||1)),o.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);var n=this.colorPickerCanvas.clientWidth,i=this.colorPickerCanvas.clientHeight;o.clearRect(0,0,n,i),o.putImageData(this.hueCircle,0,0),o.fillStyle="rgba(0,0,0,"+(1-t.v)+")",o.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r),o.fill(),this.brightnessRange.value=100*t.v,this.opacityRange.value=100*e.a,this.initialColorDiv.style.backgroundColor="rgba("+this.initialColor.r+","+this.initialColor.g+","+this.initialColor.b+","+this.initialColor.a+")",this.newColorDiv.style.backgroundColor="rgba("+this.color.r+","+this.color.g+","+this.color.b+","+this.color.a+")";}},{key:"_setSize",value:function(){this.colorPickerCanvas.style.width="100%",this.colorPickerCanvas.style.height="100%",this.colorPickerCanvas.width=289*this.pixelRatio,this.colorPickerCanvas.height=289*this.pixelRatio;}},{key:"_create",value:function(){if(this.frame=document.createElement("div"),this.frame.className="vis-color-picker",this.colorPickerDiv=document.createElement("div"),this.colorPickerSelector=document.createElement("div"),this.colorPickerSelector.className="vis-selector",this.colorPickerDiv.appendChild(this.colorPickerSelector),this.colorPickerCanvas=document.createElement("canvas"),this.colorPickerDiv.appendChild(this.colorPickerCanvas),!this.colorPickerCanvas.getContext){var e=document.createElement("DIV");e.style.color="red",e.style.fontWeight="bold",e.style.padding="10px",e.innerHTML="Error: your browser does not support HTML canvas",this.colorPickerCanvas.appendChild(e);}else{var t=this.colorPickerCanvas.getContext("2d");this.pixelRatio=(window.devicePixelRatio||1)/(t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1),this.colorPickerCanvas.getContext("2d").setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);}this.colorPickerDiv.className="vis-color",this.opacityDiv=document.createElement("div"),this.opacityDiv.className="vis-opacity",this.brightnessDiv=document.createElement("div"),this.brightnessDiv.className="vis-brightness",this.arrowDiv=document.createElement("div"),this.arrowDiv.className="vis-arrow",this.opacityRange=document.createElement("input");try{this.opacityRange.type="range",this.opacityRange.min="0",this.opacityRange.max="100";}catch(e){}this.opacityRange.value="100",this.opacityRange.className="vis-range",this.brightnessRange=document.createElement("input");try{this.brightnessRange.type="range",this.brightnessRange.min="0",this.brightnessRange.max="100";}catch(e){}this.brightnessRange.value="100",this.brightnessRange.className="vis-range",this.opacityDiv.appendChild(this.opacityRange),this.brightnessDiv.appendChild(this.brightnessRange);var o=this;this.opacityRange.onchange=function(){o._setOpacity(this.value);},this.opacityRange.oninput=function(){o._setOpacity(this.value);},this.brightnessRange.onchange=function(){o._setBrightness(this.value);},this.brightnessRange.oninput=function(){o._setBrightness(this.value);},this.brightnessLabel=document.createElement("div"),this.brightnessLabel.className="vis-label vis-brightness",this.brightnessLabel.innerHTML="brightness:",this.opacityLabel=document.createElement("div"),this.opacityLabel.className="vis-label vis-opacity",this.opacityLabel.innerHTML="opacity:",this.newColorDiv=document.createElement("div"),this.newColorDiv.className="vis-new-color",this.newColorDiv.innerHTML="new",this.initialColorDiv=document.createElement("div"),this.initialColorDiv.className="vis-initial-color",this.initialColorDiv.innerHTML="initial",this.cancelButton=document.createElement("div"),this.cancelButton.className="vis-button vis-cancel",this.cancelButton.innerHTML="cancel",this.cancelButton.onclick=this._hide.bind(this,!1),this.applyButton=document.createElement("div"),this.applyButton.className="vis-button vis-apply",this.applyButton.innerHTML="apply",this.applyButton.onclick=this._apply.bind(this),this.saveButton=document.createElement("div"),this.saveButton.className="vis-button vis-save",this.saveButton.innerHTML="save",this.saveButton.onclick=this._save.bind(this),this.loadButton=document.createElement("div"),this.loadButton.className="vis-button vis-load",this.loadButton.innerHTML="load last",this.loadButton.onclick=this._loadLast.bind(this),this.frame.appendChild(this.colorPickerDiv),this.frame.appendChild(this.arrowDiv),this.frame.appendChild(this.brightnessLabel),this.frame.appendChild(this.brightnessDiv),this.frame.appendChild(this.opacityLabel),this.frame.appendChild(this.opacityDiv),this.frame.appendChild(this.newColorDiv),this.frame.appendChild(this.initialColorDiv),this.frame.appendChild(this.cancelButton),this.frame.appendChild(this.applyButton),this.frame.appendChild(this.saveButton),this.frame.appendChild(this.loadButton);}},{key:"_bindHammer",value:function(){var e=this;this.drag={},this.pinch={},this.hammer=new hammer(this.colorPickerCanvas),this.hammer.get("pinch").set({enable:!0}),hammerUtil.onTouch(this.hammer,function(t){e._moveSelector(t);}),this.hammer.on("tap",function(t){e._moveSelector(t);}),this.hammer.on("panstart",function(t){e._moveSelector(t);}),this.hammer.on("panmove",function(t){e._moveSelector(t);}),this.hammer.on("panend",function(t){e._moveSelector(t);});}},{key:"_generateHueCircle",value:function(){if(!1===this.generated){var e=this.colorPickerCanvas.getContext("2d");void 0===this.pixelRation&&(this.pixelRatio=(window.devicePixelRatio||1)/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1)),e.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);var t=this.colorPickerCanvas.clientWidth,i=this.colorPickerCanvas.clientHeight;e.clearRect(0,0,t,i);var d,s,r,l;this.centerCoordinates={x:.5*t,y:.5*i},this.r=.49*t;var c=2*a/360,u=1/this.r,p;for(r=0;360>r;r++)for(l=0;l<this.r;l++)d=this.centerCoordinates.x+l*n(c*r),s=this.centerCoordinates.y+l*o(c*r),p=util$2.HSVToRGB(r*(1/360),l*u,1),e.fillStyle="rgb("+p.r+","+p.g+","+p.b+")",e.fillRect(d-.5,s-.5,2,2);e.strokeStyle="rgba(0,0,0,1)",e.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r),e.stroke(),this.hueCircle=e.getImageData(0,0,t,i);}this.generated=!0;}},{key:"_moveSelector",value:function(e){var r=this.colorPickerDiv.getBoundingClientRect(),l=e.center.x-r.left,c=e.center.y-r.top,u=.5*this.colorPickerDiv.clientHeight,p=.5*this.colorPickerDiv.clientWidth,m=l-p,g=c-u,y=t(m,g),f=.98*d(i(m*m+g*g),p),b=o(y)*f+u,_=n(y)*f+p;this.colorPickerSelector.style.top=b-.5*this.colorPickerSelector.clientHeight+"px",this.colorPickerSelector.style.left=_-.5*this.colorPickerSelector.clientWidth+"px";var v=y/(2*a);v=0>v?v+1:v;var k=f/this.r,s=util$2.RGBToHSV(this.color.r,this.color.g,this.color.b);s.h=v,s.s=k;var w=util$2.HSVToRGB(s.h,s.s,s.v);w.a=this.color.a,this.color=w,this.initialColorDiv.style.backgroundColor="rgba("+this.initialColor.r+","+this.initialColor.g+","+this.initialColor.b+","+this.initialColor.a+")",this.newColorDiv.style.backgroundColor="rgba("+this.color.r+","+this.color.g+","+this.color.b+","+this.color.a+")";}}]),e;}(),Configurator=function(){var t=Math.ceil;function e(t,o,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;classCallCheck$1$1(this,e),this.parent=t,this.changedOptions=[],this.container=o,this.allowCreation=!1,this.options={},this.initialized=!1,this.popupCounter=0,this.defaultOptions={enabled:!1,filter:!0,container:void 0,showButton:!0},util$2.extend(this.options,this.defaultOptions),this.configureOptions=n,this.moduleOptions={},this.domElements=[],this.popupDiv={},this.popupLimit=5,this.popupHistory={},this.colorPicker=new ColorPicker(i),this.wrapper=void 0;}return createClass$1$1(e,[{key:"setOptions",value:function(e){if(void 0!==e){this.popupHistory={},this._removePopup();var t=!0;if("string"==typeof e)this.options.filter=e;else if(e instanceof Array)this.options.filter=e.join();else if("object"===_typeof_1$2$1(e)){if(null==e)throw new TypeError("options cannot be null");void 0!==e.container&&(this.options.container=e.container),void 0!==e.filter&&(this.options.filter=e.filter),void 0!==e.showButton&&(this.options.showButton=e.showButton),void 0!==e.enabled&&(t=e.enabled);}else"boolean"==typeof e?(this.options.filter=!0,t=e):"function"==typeof e&&(this.options.filter=e,t=!0);!1===this.options.filter&&(t=!1),this.options.enabled=t;}this._clean();}},{key:"setModuleOptions",value:function(e){this.moduleOptions=e,!0===this.options.enabled&&(this._clean(),void 0!==this.options.container&&(this.container=this.options.container),this._create());}},{key:"_create",value:function(){this._clean(),this.changedOptions=[];var e=this.options.filter,t=0,o=!1;for(var n in this.configureOptions)this.configureOptions.hasOwnProperty(n)&&(this.allowCreation=!1,o=!1,"function"==typeof e?(o=e(n,[]),o=o||this._handleObject(this.configureOptions[n],[n],!0)):(!0===e||-1!==e.indexOf(n))&&(o=!0),!1!==o&&(this.allowCreation=!0,0<t&&this._makeItem([]),this._makeHeader(n),this._handleObject(this.configureOptions[n],[n])),t++);this._makeButton(),this._push();}},{key:"_push",value:function(){this.wrapper=document.createElement("div"),this.wrapper.className="vis-configuration-wrapper",this.container.appendChild(this.wrapper);for(var e=0;e<this.domElements.length;e++)this.wrapper.appendChild(this.domElements[e]);this._showPopupIfNeeded();}},{key:"_clean",value:function(){for(var e=0;e<this.domElements.length;e++)this.wrapper.removeChild(this.domElements[e]);void 0!==this.wrapper&&(this.container.removeChild(this.wrapper),this.wrapper=void 0),this.domElements=[],this._removePopup();}},{key:"_getValue",value:function(e){for(var t=this.moduleOptions,o=0;o<e.length;o++)if(void 0!==t[e[o]])t=t[e[o]];else{t=void 0;break;}return t;}},{key:"_makeItem",value:function(e){if(!0===this.allowCreation){var t=document.createElement("div");t.className="vis-configuration vis-config-item vis-config-s"+e.length;for(var o=arguments.length,n=Array(1<o?o-1:0),i=1;i<o;i++)n[i-1]=arguments[i];return n.forEach(function(e){t.appendChild(e);}),this.domElements.push(t),this.domElements.length;}return 0;}},{key:"_makeHeader",value:function(e){var t=document.createElement("div");t.className="vis-configuration vis-config-header",t.innerHTML=e,this._makeItem([],t);}},{key:"_makeLabel",value:function(e,t){var o=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],n=document.createElement("div");return n.className="vis-configuration vis-config-label vis-config-s"+t.length,n.innerHTML=!0===o?"<i><b>"+e+":</b></i>":e+":",n;}},{key:"_makeDropdown",value:function(e,t,o){var n=document.createElement("select");n.className="vis-configuration vis-config-select";var a=0;void 0!==t&&-1!==e.indexOf(t)&&(a=e.indexOf(t));for(var d=0,s;d<e.length;d++)s=document.createElement("option"),s.value=e[d],d==a&&(s.selected="selected"),s.innerHTML=e[d],n.appendChild(s);var r=this;n.onchange=function(){r._update(this.value,o);};var l=this._makeLabel(o[o.length-1],o);this._makeItem(o,l,n);}},{key:"_makeRange",value:function(e,o,n){var i=e[0],a=e[1],d=e[2],s=e[3],r=document.createElement("input");r.className="vis-configuration vis-config-range";try{r.type="range",r.min=a,r.max=d;}catch(e){}r.step=s;var l="",c=0;if(void 0!==o){var u=1.2;0>o&&o*u<a?(r.min=t(o*u),c=r.min,l="range increased"):o/u<a&&(r.min=t(o/u),c=r.min,l="range increased"),o*u>d&&1!==d&&(r.max=t(o*u),c=r.max,l="range increased"),r.value=o;}else r.value=i;var p=document.createElement("input");p.className="vis-configuration vis-config-rangeinput",p.value=r.value;var h=this;r.onchange=function(){p.value=this.value,h._update(+this.value,n);},r.oninput=function(){p.value=this.value;};var m=this._makeLabel(n[n.length-1],n),g=this._makeItem(n,m,r,p);""!=l&&this.popupHistory[g]!==c&&(this.popupHistory[g]=c,this._setupPopup(l,g));}},{key:"_makeButton",value:function(){var e=this;if(!0===this.options.showButton){var t=document.createElement("div");t.className="vis-configuration vis-config-button",t.innerHTML="generate options",t.onclick=function(){e._printOptions();},t.onmouseover=function(){t.className="vis-configuration vis-config-button hover";},t.onmouseout=function(){t.className="vis-configuration vis-config-button";},this.optionsContainer=document.createElement("div"),this.optionsContainer.className="vis-configuration vis-config-option-container",this.domElements.push(this.optionsContainer),this.domElements.push(t);}}},{key:"_setupPopup",value:function(e,t){var o=this;if(!0===this.initialized&&!0===this.allowCreation&&this.popupCounter<this.popupLimit){var n=document.createElement("div");n.id="vis-configuration-popup",n.className="vis-configuration-popup",n.innerHTML=e,n.onclick=function(){o._removePopup();},this.popupCounter+=1,this.popupDiv={html:n,index:t};}}},{key:"_removePopup",value:function(){void 0!==this.popupDiv.html&&(this.popupDiv.html.parentNode.removeChild(this.popupDiv.html),clearTimeout(this.popupDiv.hideTimeout),clearTimeout(this.popupDiv.deleteTimeout),this.popupDiv={});}},{key:"_showPopupIfNeeded",value:function(){var e=this;if(void 0!==this.popupDiv.html){var t=this.domElements[this.popupDiv.index],o=t.getBoundingClientRect();this.popupDiv.html.style.left=o.left+"px",this.popupDiv.html.style.top=o.top-30+"px",document.body.appendChild(this.popupDiv.html),this.popupDiv.hideTimeout=setTimeout(function(){e.popupDiv.html.style.opacity=0;},1500),this.popupDiv.deleteTimeout=setTimeout(function(){e._removePopup();},1800);}}},{key:"_makeCheckbox",value:function(e,t,o){var n=document.createElement("input");n.type="checkbox",n.className="vis-configuration vis-config-checkbox",n.checked=e,void 0!==t&&(n.checked=t,t!==e&&("object"===_typeof_1$2$1(e)?t!==e.enabled&&this.changedOptions.push({path:o,value:t}):this.changedOptions.push({path:o,value:t})));var i=this;n.onchange=function(){i._update(this.checked,o);};var a=this._makeLabel(o[o.length-1],o);this._makeItem(o,a,n);}},{key:"_makeTextInput",value:function(e,t,o){var n=document.createElement("input");n.type="text",n.className="vis-configuration vis-config-text",n.value=t,t!==e&&this.changedOptions.push({path:o,value:t});var i=this;n.onchange=function(){i._update(this.value,o);};var a=this._makeLabel(o[o.length-1],o);this._makeItem(o,a,n);}},{key:"_makeColorField",value:function(e,t,o){var n=this,i=e[1],a=document.createElement("div");t=void 0===t?i:t,"none"===t?a.className="vis-configuration vis-config-colorBlock none":(a.className="vis-configuration vis-config-colorBlock",a.style.backgroundColor=t),t=void 0===t?i:t,a.onclick=function(){n._showColorPicker(t,a,o);};var d=this._makeLabel(o[o.length-1],o);this._makeItem(o,d,a);}},{key:"_showColorPicker",value:function(e,t,o){var n=this;t.onclick=function(){},this.colorPicker.insertTo(t),this.colorPicker.show(),this.colorPicker.setColor(e),this.colorPicker.setUpdateCallback(function(e){var i="rgba("+e.r+","+e.g+","+e.b+","+e.a+")";t.style.backgroundColor=i,n._update(i,o);}),this.colorPicker.setCloseCallback(function(){t.onclick=function(){n._showColorPicker(e,t,o);};});}},{key:"_handleObject",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],o=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],n=!1,i=this.options.filter,a=!1;for(var d in e)if(e.hasOwnProperty(d)){n=!0;var s=e[d],r=util$2.copyAndExtendArray(t,d);if("function"==typeof i&&(n=i(d,t),!1===n&&!(s instanceof Array)&&"string"!=typeof s&&"boolean"!=typeof s&&s instanceof Object&&(this.allowCreation=!1,n=this._handleObject(s,r,!0),this.allowCreation=!1===o)),!1!==n){a=!0;var l=this._getValue(r);if(s instanceof Array)this._handleArray(s,l,r);else if("string"==typeof s)this._makeTextInput(s,l,r);else if("boolean"==typeof s)this._makeCheckbox(s,l,r);else if(s instanceof Object){var c=!0;if(-1!==t.indexOf("physics")&&this.moduleOptions.physics.solver!==d&&(c=!1),!0==c)if(void 0!==s.enabled){var u=util$2.copyAndExtendArray(r,"enabled"),p=this._getValue(u);if(!0===p){var h=this._makeLabel(d,r,!0);this._makeItem(r,h),a=this._handleObject(s,r)||a;}else this._makeCheckbox(s,p,r);}else{var m=this._makeLabel(d,r,!0);this._makeItem(r,m),a=this._handleObject(s,r)||a;}}else console.error("dont know how to handle",s,d,r);}}return a;}},{key:"_handleArray",value:function(e,t,o){"string"==typeof e[0]&&"color"===e[0]?(this._makeColorField(e,t,o),e[1]!==t&&this.changedOptions.push({path:o,value:t})):"string"==typeof e[0]?(this._makeDropdown(e,t,o),e[0]!==t&&this.changedOptions.push({path:o,value:t})):"number"==typeof e[0]&&(this._makeRange(e,t,o),e[0]!==t&&this.changedOptions.push({path:o,value:+t}));}},{key:"_update",value:function(e,t){var o=this._constructOptions(e,t);this.parent.body&&this.parent.body.emitter&&this.parent.body.emitter.emit&&this.parent.body.emitter.emit("configChange",o),this.initialized=!0,this.parent.setOptions(o);}},{key:"_constructOptions",value:function(e,t){var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},n=o;e="true"===e||e,e="false"!==e&&e;for(var a=0;a<t.length;a++)"global"!==t[a]&&(void 0===n[t[a]]&&(n[t[a]]={}),a==t.length-1?n[t[a]]=e:n=n[t[a]]);return o;}},{key:"_printOptions",value:function(){var e=this.getOptions();this.optionsContainer.innerHTML="<pre>var options = "+JSON.stringify(e,null,2)+"</pre>";}},{key:"getOptions",value:function(){for(var e={},t=0;t<this.changedOptions.length;t++)this._constructOptions(this.changedOptions[t].value,this.changedOptions[t].path,e);return e;}}]),e;}(),string="string",bool="boolean",number="number",array="array",object="object",dom="dom",any="any",endPoints=["arrow","circle","bar"],allOptions$1={configure:{enabled:{boolean:bool},filter:{boolean:bool,string:string,array:array,function:"function"},container:{dom:dom},showButton:{boolean:bool},__type__:{object:object,boolean:bool,string:string,array:array,function:"function"}},edges:{arrows:{to:{enabled:{boolean:bool},scaleFactor:{number:number},type:{string:endPoints},__type__:{object:object,boolean:bool}},middle:{enabled:{boolean:bool},scaleFactor:{number:number},type:{string:endPoints},__type__:{object:object,boolean:bool}},from:{enabled:{boolean:bool},scaleFactor:{number:number},type:{string:endPoints},__type__:{object:object,boolean:bool}},__type__:{string:["from","to","middle"],object:object}},arrowStrikethrough:{boolean:bool},background:{enabled:{boolean:bool},color:{string:string},size:{number:number},dashes:{boolean:bool,array:array},__type__:{object:object,boolean:bool}},chosen:{label:{boolean:bool,function:"function"},edge:{boolean:bool,function:"function"},__type__:{object:object,boolean:bool}},color:{color:{string:string},highlight:{string:string},hover:{string:string},inherit:{string:["from","to","both"],boolean:bool},opacity:{number:number},__type__:{object:object,string:string}},dashes:{boolean:bool,array:array},font:{color:{string:string},size:{number:number},face:{string:string},background:{string:string},strokeWidth:{number:number},strokeColor:{string:string},align:{string:["horizontal","top","middle","bottom"]},vadjust:{number:number},multi:{boolean:bool,string:string},bold:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},boldital:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},ital:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},mono:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},__type__:{object:object,string:string}},hidden:{boolean:bool},hoverWidth:{function:"function",number:number},label:{string:string,undefined:"undefined"},labelHighlightBold:{boolean:bool},length:{number:number,undefined:"undefined"},physics:{boolean:bool},scaling:{min:{number:number},max:{number:number},label:{enabled:{boolean:bool},min:{number:number},max:{number:number},maxVisible:{number:number},drawThreshold:{number:number},__type__:{object:object,boolean:bool}},customScalingFunction:{function:"function"},__type__:{object:object}},selectionWidth:{function:"function",number:number},selfReferenceSize:{number:number},shadow:{enabled:{boolean:bool},color:{string:string},size:{number:number},x:{number:number},y:{number:number},__type__:{object:object,boolean:bool}},smooth:{enabled:{boolean:bool},type:{string:["dynamic","continuous","discrete","diagonalCross","straightCross","horizontal","vertical","curvedCW","curvedCCW","cubicBezier"]},roundness:{number:number},forceDirection:{string:["horizontal","vertical","none"],boolean:bool},__type__:{object:object,boolean:bool}},title:{string:string,undefined:"undefined"},width:{number:number},widthConstraint:{maximum:{number:number},__type__:{object:object,boolean:bool,number:number}},value:{number:number,undefined:"undefined"},__type__:{object:object}},groups:{useDefaultGroups:{boolean:bool},__any__:"get from nodes, will be overwritten below",__type__:{object:object}},interaction:{dragNodes:{boolean:bool},dragView:{boolean:bool},hideEdgesOnDrag:{boolean:bool},hideEdgesOnZoom:{boolean:bool},hideNodesOnDrag:{boolean:bool},hover:{boolean:bool},keyboard:{enabled:{boolean:bool},speed:{x:{number:number},y:{number:number},zoom:{number:number},__type__:{object:object}},bindToWindow:{boolean:bool},__type__:{object:object,boolean:bool}},multiselect:{boolean:bool},navigationButtons:{boolean:bool},selectable:{boolean:bool},selectConnectedEdges:{boolean:bool},hoverConnectedEdges:{boolean:bool},tooltipDelay:{number:number},zoomView:{boolean:bool},zoomSpeed:{number:number},__type__:{object:object}},layout:{randomSeed:{undefined:"undefined",number:number},improvedLayout:{boolean:bool},hierarchical:{enabled:{boolean:bool},levelSeparation:{number:number},nodeSpacing:{number:number},treeSpacing:{number:number},blockShifting:{boolean:bool},edgeMinimization:{boolean:bool},parentCentralization:{boolean:bool},direction:{string:["UD","DU","LR","RL"]},sortMethod:{string:["hubsize","directed"]},__type__:{object:object,boolean:bool}},__type__:{object:object}},manipulation:{enabled:{boolean:bool},initiallyActive:{boolean:bool},addNode:{boolean:bool,function:"function"},addEdge:{boolean:bool,function:"function"},editNode:{function:"function"},editEdge:{editWithoutDrag:{function:"function"},__type__:{object:object,boolean:bool,function:"function"}},deleteNode:{boolean:bool,function:"function"},deleteEdge:{boolean:bool,function:"function"},controlNodeStyle:"get from nodes, will be overwritten below",__type__:{object:object,boolean:bool}},nodes:{borderWidth:{number:number},borderWidthSelected:{number:number,undefined:"undefined"},brokenImage:{string:string,undefined:"undefined"},chosen:{label:{boolean:bool,function:"function"},node:{boolean:bool,function:"function"},__type__:{object:object,boolean:bool}},color:{border:{string:string},background:{string:string},highlight:{border:{string:string},background:{string:string},__type__:{object:object,string:string}},hover:{border:{string:string},background:{string:string},__type__:{object:object,string:string}},__type__:{object:object,string:string}},fixed:{x:{boolean:bool},y:{boolean:bool},__type__:{object:object,boolean:bool}},font:{align:{string:string},color:{string:string},size:{number:number},face:{string:string},background:{string:string},strokeWidth:{number:number},strokeColor:{string:string},vadjust:{number:number},multi:{boolean:bool,string:string},bold:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},boldital:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},ital:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},mono:{color:{string:string},size:{number:number},face:{string:string},mod:{string:string},vadjust:{number:number},__type__:{object:object,string:string}},__type__:{object:object,string:string}},group:{string:string,number:number,undefined:"undefined"},heightConstraint:{minimum:{number:number},valign:{string:string},__type__:{object:object,boolean:bool,number:number}},hidden:{boolean:bool},icon:{face:{string:string},code:{string:string},size:{number:number},color:{string:string},__type__:{object:object}},id:{string:string,number:number},image:{selected:{string:string,undefined:"undefined"},unselected:{string:string,undefined:"undefined"},__type__:{object:object,string:string}},label:{string:string,undefined:"undefined"},labelHighlightBold:{boolean:bool},level:{number:number,undefined:"undefined"},margin:{top:{number:number},right:{number:number},bottom:{number:number},left:{number:number},__type__:{object:object,number:number}},mass:{number:number},physics:{boolean:bool},scaling:{min:{number:number},max:{number:number},label:{enabled:{boolean:bool},min:{number:number},max:{number:number},maxVisible:{number:number},drawThreshold:{number:number},__type__:{object:object,boolean:bool}},customScalingFunction:{function:"function"},__type__:{object:object}},shadow:{enabled:{boolean:bool},color:{string:string},size:{number:number},x:{number:number},y:{number:number},__type__:{object:object,boolean:bool}},shape:{string:["ellipse","circle","database","box","text","image","circularImage","diamond","dot","star","triangle","triangleDown","square","icon","hexagon"]},shapeProperties:{borderDashes:{boolean:bool,array:array},borderRadius:{number:number},interpolation:{boolean:bool},useImageSize:{boolean:bool},useBorderWithImage:{boolean:bool},__type__:{object:object}},size:{number:number},title:{string:string,dom:dom,undefined:"undefined"},value:{number:number,undefined:"undefined"},widthConstraint:{minimum:{number:number},maximum:{number:number},__type__:{object:object,boolean:bool,number:number}},x:{number:number},y:{number:number},__type__:{object:object}},physics:{enabled:{boolean:bool},barnesHut:{gravitationalConstant:{number:number},centralGravity:{number:number},springLength:{number:number},springConstant:{number:number},damping:{number:number},avoidOverlap:{number:number},__type__:{object:object}},forceAtlas2Based:{gravitationalConstant:{number:number},centralGravity:{number:number},springLength:{number:number},springConstant:{number:number},damping:{number:number},avoidOverlap:{number:number},__type__:{object:object}},repulsion:{centralGravity:{number:number},springLength:{number:number},springConstant:{number:number},nodeDistance:{number:number},damping:{number:number},__type__:{object:object}},hierarchicalRepulsion:{centralGravity:{number:number},springLength:{number:number},springConstant:{number:number},nodeDistance:{number:number},damping:{number:number},__type__:{object:object}},maxVelocity:{number:number},minVelocity:{number:number},solver:{string:["barnesHut","repulsion","hierarchicalRepulsion","forceAtlas2Based"]},stabilization:{enabled:{boolean:bool},iterations:{number:number},updateInterval:{number:number},onlyDynamicEdges:{boolean:bool},fit:{boolean:bool},__type__:{object:object,boolean:bool}},timestep:{number:number},adaptiveTimestep:{boolean:bool},__type__:{object:object,boolean:bool}},autoResize:{boolean:bool},clickToUse:{boolean:bool},locale:{string:string},locales:{__any__:{any:any},__type__:{object:object}},height:{string:string},width:{string:string},__type__:{object:object}};allOptions$1.groups.__any__=allOptions$1.nodes,allOptions$1.manipulation.controlNodeStyle=allOptions$1.nodes;var configureOptions={nodes:{borderWidth:[1,0,10,1],borderWidthSelected:[2,0,10,1],color:{border:["color","#2B7CE9"],background:["color","#97C2FC"],highlight:{border:["color","#2B7CE9"],background:["color","#D2E5FF"]},hover:{border:["color","#2B7CE9"],background:["color","#D2E5FF"]}},fixed:{x:!1,y:!1},font:{color:["color","#343434"],size:[14,0,100,1],face:["arial","verdana","tahoma"],background:["color","none"],strokeWidth:[0,0,50,1],strokeColor:["color","#ffffff"]},hidden:!1,labelHighlightBold:!0,physics:!0,scaling:{min:[10,0,200,1],max:[30,0,200,1],label:{enabled:!1,min:[14,0,200,1],max:[30,0,200,1],maxVisible:[30,0,200,1],drawThreshold:[5,0,20,1]}},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:[10,0,20,1],x:[5,-30,30,1],y:[5,-30,30,1]},shape:["ellipse","box","circle","database","diamond","dot","square","star","text","triangle","triangleDown","hexagon"],shapeProperties:{borderDashes:!1,borderRadius:[6,0,20,1],interpolation:!0,useImageSize:!1},size:[25,0,200,1]},edges:{arrows:{to:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"},middle:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"},from:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"}},arrowStrikethrough:!0,color:{color:["color","#848484"],highlight:["color","#848484"],hover:["color","#848484"],inherit:["from","to","both",!0,!1],opacity:[1,0,1,.05]},dashes:!1,font:{color:["color","#343434"],size:[14,0,100,1],face:["arial","verdana","tahoma"],background:["color","none"],strokeWidth:[2,0,50,1],strokeColor:["color","#ffffff"],align:["horizontal","top","middle","bottom"]},hidden:!1,hoverWidth:[1.5,0,5,.1],labelHighlightBold:!0,physics:!0,scaling:{min:[1,0,100,1],max:[15,0,100,1],label:{enabled:!0,min:[14,0,200,1],max:[30,0,200,1],maxVisible:[30,0,200,1],drawThreshold:[5,0,20,1]}},selectionWidth:[1.5,0,5,.1],selfReferenceSize:[20,0,200,1],shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:[10,0,20,1],x:[5,-30,30,1],y:[5,-30,30,1]},smooth:{enabled:!0,type:["dynamic","continuous","discrete","diagonalCross","straightCross","horizontal","vertical","curvedCW","curvedCCW","cubicBezier"],forceDirection:["horizontal","vertical","none"],roundness:[.5,0,1,.05]},width:[1,0,30,1]},layout:{hierarchical:{enabled:!1,levelSeparation:[150,20,500,5],nodeSpacing:[100,20,500,5],treeSpacing:[200,20,500,5],blockShifting:!0,edgeMinimization:!0,parentCentralization:!0,direction:["UD","DU","LR","RL"],sortMethod:["hubsize","directed"]}},interaction:{dragNodes:!0,dragView:!0,hideEdgesOnDrag:!1,hideEdgesOnZoom:!1,hideNodesOnDrag:!1,hover:!1,keyboard:{enabled:!1,speed:{x:[10,0,40,1],y:[10,0,40,1],zoom:[.02,0,.1,.005]},bindToWindow:!0},multiselect:!1,navigationButtons:!1,selectable:!0,selectConnectedEdges:!0,hoverConnectedEdges:!0,tooltipDelay:[300,0,1e3,25],zoomView:!0,zoomSpeed:[1,1,1,1]},manipulation:{enabled:!1,initiallyActive:!1},physics:{enabled:!0,barnesHut:{gravitationalConstant:[-2e3,-3e4,0,50],centralGravity:[.3,0,10,.05],springLength:[95,0,500,5],springConstant:[.04,0,1.2,.005],damping:[.09,0,1,.01],avoidOverlap:[0,0,1,.01]},forceAtlas2Based:{gravitationalConstant:[-50,-500,0,1],centralGravity:[.01,0,1,.005],springLength:[95,0,500,5],springConstant:[.08,0,1.2,.005],damping:[.4,0,1,.01],avoidOverlap:[0,0,1,.01]},repulsion:{centralGravity:[.2,0,10,.05],springLength:[200,0,500,5],springConstant:[.05,0,1.2,.005],nodeDistance:[100,0,500,5],damping:[.09,0,1,.01]},hierarchicalRepulsion:{centralGravity:[.2,0,10,.05],springLength:[100,0,500,5],springConstant:[.01,0,1.2,.005],nodeDistance:[120,0,500,5],damping:[.09,0,1,.01]},maxVelocity:[50,0,150,1],minVelocity:[.1,.01,.5,.01],solver:["barnesHut","forceAtlas2Based","repulsion","hierarchicalRepulsion"],timestep:[.5,.01,1,.01]}},allOptions$2=Object.freeze({allOptions:allOptions$1,configureOptions:configureOptions}),FloydWarshall=function(){var t=Math.min;function e(){classCallCheck$1$1(this,e);}return createClass$1$1(e,[{key:"getDistances",value:function(e,o,n){for(var a={},d=e.edges,s=0;s<o.length;s++){var r=o[s],l={};a[r]=l;for(var c=0;c<o.length;c++)l[o[c]]=s==c?0:1e9;}for(var u=0,p;u<n.length;u++)p=d[n[u]],!0===p.connected&&void 0!==a[p.fromId]&&void 0!==a[p.toId]&&(a[p.fromId][p.toId]=1,a[p.toId][p.fromId]=1);for(var h=o.length,m=0;m<h;m++)for(var g=o[m],y=a[g],f=0;f<h-1;f++)for(var b=o[f],_=a[b],v=f+1;v<h;v++){var w=o[v],x=a[w],S=t(_[w],_[g]+y[w]);_[w]=S,x[b]=S;}return a;}}]),e;}(),KamadaKawai=function(){var t=Math.sqrt,o=Math.pow,n=Math.max,i=Math.min;function e(t,o,n){classCallCheck$1$1(this,e),this.body=t,this.springLength=o,this.springConstant=n,this.distanceSolver=new FloydWarshall();}return createClass$1$1(e,[{key:"setOptions",value:function(e){e&&(e.springLength&&(this.springLength=e.springLength),e.springConstant&&(this.springConstant=e.springConstant));}},{key:"solve",value:function(e,t){var o=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],a=this.distanceSolver.getDistances(this.body,e,t);this._createL_matrix(a),this._createK_matrix(a),this._createE_matrix();for(var d=0,s=n(1e3,i(10*this.body.nodeIndices.length,6e3)),r=1e9,l=0,c=0,u=0,p=0,h=0;r>.01&&d<s;){d+=1;var m=this._getHighestEnergyNode(o),g=slicedToArray(m,4);for(l=g[0],r=g[1],c=g[2],u=g[3],p=r,h=0;p>1&&h<5;){h+=1,this._moveNode(l,c,u);var y=this._getEnergy(l),f=slicedToArray(y,3);p=f[0],c=f[1],u=f[2];}}}},{key:"_getHighestEnergyNode",value:function(e){for(var t=this.body.nodeIndices,o=this.body.nodes,n=0,i=t[0],a=0,d=0,s=0,r;s<t.length;s++)if(r=t[s],!1===o[r].predefinedPosition||!0===o[r].isCluster&&!0===e||!0===o[r].options.fixed.x||!0===o[r].options.fixed.y){var l=this._getEnergy(r),c=slicedToArray(l,3),u=c[0],p=c[1],h=c[2];n<u&&(n=u,i=r,a=p,d=h);}return [i,n,a,d];}},{key:"_getEnergy",value:function(e){var n=slicedToArray(this.E_sums[e],2),i=n[0],a=n[1],d=t(o(i,2)+o(a,2));return [d,i,a];}},{key:"_moveNode",value:function(e,t,n){for(var a=this.body.nodeIndices,d=this.body.nodes,s=0,r=0,l=0,c=d[e].x,u=d[e].y,p=this.K_matrix[e],h=this.L_matrix[e],m=0,g;m<a.length;m++)if(g=a[m],g!==e){var y=d[g].x,f=d[g].y,b=p[g],_=h[g],v=1/o(o(c-y,2)+o(u-f,2),1.5);s+=b*(1-_*o(u-f,2)*v),r+=b*(_*(c-y)*(u-f)*v),l+=b*(1-_*o(c-y,2)*v);}var k=s,w=r,x=t,S=l,O=(x/k+n/w)/(w/k-S/w);d[e].x+=-(w*O+x)/k,d[e].y+=O,this._updateE_matrix(e);}},{key:"_createL_matrix",value:function(e){var t=this.body.nodeIndices,o=this.springLength;this.L_matrix=[];for(var n=0;n<t.length;n++){this.L_matrix[t[n]]={};for(var a=0;a<t.length;a++)this.L_matrix[t[n]][t[a]]=o*e[t[n]][t[a]];}}},{key:"_createK_matrix",value:function(e){var t=this.body.nodeIndices,n=this.springConstant;this.K_matrix=[];for(var a=0;a<t.length;a++){this.K_matrix[t[a]]={};for(var d=0;d<t.length;d++)this.K_matrix[t[a]][t[d]]=n*o(e[t[a]][t[d]],-2);}}},{key:"_createE_matrix",value:function(){var e=this.body.nodeIndices,n=this.body.nodes;this.E_matrix={},this.E_sums={};for(var a=0;a<e.length;a++)this.E_matrix[e[a]]=[];for(var d=0;d<e.length;d++){for(var s=e[d],r=n[s].x,l=n[s].y,c=0,u=0,p=d,h;p<e.length;p++)if(h=e[p],h!==s){var m=n[h].x,g=n[h].y,y=1/t(o(r-m,2)+o(l-g,2));this.E_matrix[s][p]=[this.K_matrix[s][h]*(r-m-this.L_matrix[s][h]*(r-m)*y),this.K_matrix[s][h]*(l-g-this.L_matrix[s][h]*(l-g)*y)],this.E_matrix[h][d]=this.E_matrix[s][p],c+=this.E_matrix[s][p][0],u+=this.E_matrix[s][p][1];}this.E_sums[s]=[c,u];}}},{key:"_updateE_matrix",value:function(e){for(var n=this.body.nodeIndices,a=this.body.nodes,d=this.E_matrix[e],s=this.K_matrix[e],r=this.L_matrix[e],l=a[e].x,c=a[e].y,u=0,p=0,h=0,m;h<n.length;h++)if(m=n[h],m!==e){var g=d[h],y=g[0],f=g[1],b=a[m].x,_=a[m].y,v=1/t(o(l-b,2)+o(c-_,2)),k=s[m]*(l-b-r[m]*(l-b)*v),w=s[m]*(c-_-r[m]*(c-_)*v);d[h]=[k,w],u+=k,p+=w;var x=this.E_sums[m];x[0]+=k-y,x[1]+=w-f;}this.E_sums[e]=[u,p];}}]),e;}();function Network(e,t,o){var n=this;if(!(this instanceof Network))throw new SyntaxError("Constructor must be called with the new operator");this.options={},this.defaultOptions={locale:"en",locales:locales,clickToUse:!1},util$2.extend(this.options,this.defaultOptions),this.body={container:e,nodes:{},nodeIndices:[],edges:{},edgeIndices:[],emitter:{on:this.on.bind(this),off:this.off.bind(this),emit:this.emit.bind(this),once:this.once.bind(this)},eventListeners:{onTap:function(){},onTouch:function(){},onDoubleTap:function(){},onHold:function(){},onDragStart:function(){},onDrag:function(){},onDragEnd:function(){},onMouseWheel:function(){},onPinch:function(){},onMouseMove:function(){},onRelease:function(){},onContext:function(){}},data:{nodes:null,edges:null},functions:{createNode:function(){},createEdge:function(){},getPointer:function(){}},modules:{},view:{scale:1,translation:{x:0,y:0}}},this.bindEventListeners(),this.images=new Images(function(){return n.body.emitter.emit("_requestRedraw");}),this.groups=new Groups(),this.canvas=new Canvas(this.body),this.selectionHandler=new SelectionHandler(this.body,this.canvas),this.interactionHandler=new InteractionHandler(this.body,this.canvas,this.selectionHandler),this.view=new View(this.body,this.canvas),this.renderer=new CanvasRenderer(this.body,this.canvas),this.physics=new PhysicsEngine(this.body),this.layoutEngine=new LayoutEngine(this.body),this.clustering=new ClusterEngine(this.body),this.manipulation=new ManipulationSystem(this.body,this.canvas,this.selectionHandler),this.nodesHandler=new NodesHandler(this.body,this.images,this.groups,this.layoutEngine),this.edgesHandler=new EdgesHandler(this.body,this.images,this.groups),this.body.modules.kamadaKawai=new KamadaKawai(this.body,150,.05),this.body.modules.clustering=this.clustering,this.canvas._create(),this.setOptions(o),this.setData(t);}componentEmitter(Network.prototype),Network.prototype.setOptions=function(e){var t=this;if(null===e&&(e=void 0),void 0!==e){var o=Validator.validate(e,allOptions$1);!0===o&&console.log("%cErrors have been found in the supplied options object.",printStyle);if(util$2.selectiveDeepExtend(["locale","locales","clickToUse"],this.options,e),e=this.layoutEngine.setOptions(e.layout,e),this.canvas.setOptions(e),this.groups.setOptions(e.groups),this.nodesHandler.setOptions(e.nodes),this.edgesHandler.setOptions(e.edges),this.physics.setOptions(e.physics),this.manipulation.setOptions(e.manipulation,e,this.options),this.interactionHandler.setOptions(e.interaction),this.renderer.setOptions(e.interaction),this.selectionHandler.setOptions(e.interaction),void 0!==e.groups&&this.body.emitter.emit("refreshNodes"),"configure"in e&&(!this.configurator&&(this.configurator=new Configurator(this,this.body.container,configureOptions,this.canvas.pixelRatio)),this.configurator.setOptions(e.configure)),this.configurator&&!0===this.configurator.options.enabled){var n={nodes:{},edges:{},layout:{},interaction:{},manipulation:{},physics:{},global:{}};util$2.deepExtend(n.nodes,this.nodesHandler.options),util$2.deepExtend(n.edges,this.edgesHandler.options),util$2.deepExtend(n.layout,this.layoutEngine.options),util$2.deepExtend(n.interaction,this.selectionHandler.options),util$2.deepExtend(n.interaction,this.renderer.options),util$2.deepExtend(n.interaction,this.interactionHandler.options),util$2.deepExtend(n.manipulation,this.manipulation.options),util$2.deepExtend(n.physics,this.physics.options),util$2.deepExtend(n.global,this.canvas.options),util$2.deepExtend(n.global,this.options),this.configurator.setModuleOptions(n);}void 0===e.clickToUse?this.body.emitter.emit("activate"):!0===e.clickToUse?void 0===this.activator&&(this.activator=new Activator_1(this.canvas.frame),this.activator.on("change",function(){t.body.emitter.emit("activate");})):(void 0!==this.activator&&(this.activator.destroy(),delete this.activator),this.body.emitter.emit("activate")),this.canvas.setSize(),this.body.emitter.emit("startSimulation");}},Network.prototype._updateVisibleIndices=function(){var e=this.body.nodes,t=this.body.edges;for(var o in this.body.nodeIndices=[],this.body.edgeIndices=[],e)e.hasOwnProperty(o)&&(this.clustering._isClusteredNode(o)||!1!==e[o].options.hidden||this.body.nodeIndices.push(e[o].id));for(var n in t)if(t.hasOwnProperty(n)){var i=t[n],a=e[i.fromId],d=e[i.toId],s=!this.clustering._isClusteredEdge(n)&&!1===i.options.hidden&&void 0!==a&&void 0!==d&&!1===a.options.hidden&&!1===d.options.hidden;s&&this.body.edgeIndices.push(i.id);}},Network.prototype.bindEventListeners=function(){var e=this;this.body.emitter.on("_dataChanged",function(){e.edgesHandler._updateState(),e.body.emitter.emit("_dataUpdated");}),this.body.emitter.on("_dataUpdated",function(){e.clustering._updateState(),e._updateVisibleIndices(),e._updateValueRange(e.body.nodes),e._updateValueRange(e.body.edges),e.body.emitter.emit("startSimulation"),e.body.emitter.emit("_requestRedraw");});},Network.prototype.setData=function(e){if(this.body.emitter.emit("resetPhysics"),this.body.emitter.emit("_resetData"),this.selectionHandler.unselectAll(),e&&e.dot&&(e.nodes||e.edges))throw new SyntaxError("Data must contain either parameter \"dot\" or  parameter pair \"nodes\" and \"edges\", but not both.");if(this.setOptions(e&&e.options),e&&e.dot){console.log("The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);");var t=dotparser.DOTToGraph(e.dot);return void this.setData(t);}if(e&&e.gephi){console.log("The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);");var o=parseGephi(e.gephi);return void this.setData(o);}this.nodesHandler.setData(e&&e.nodes,!0),this.edgesHandler.setData(e&&e.edges,!0),this.body.emitter.emit("_dataChanged"),this.body.emitter.emit("_dataLoaded"),this.body.emitter.emit("initPhysics");},Network.prototype.destroy=function(){for(var e in this.body.emitter.emit("destroy"),this.body.emitter.off(),this.off(),delete this.groups,delete this.canvas,delete this.selectionHandler,delete this.interactionHandler,delete this.view,delete this.renderer,delete this.physics,delete this.layoutEngine,delete this.clustering,delete this.manipulation,delete this.nodesHandler,delete this.edgesHandler,delete this.configurator,delete this.images,this.body.nodes)this.body.nodes.hasOwnProperty(e)&&delete this.body.nodes[e];for(var t in this.body.edges)this.body.edges.hasOwnProperty(t)&&delete this.body.edges[t];util$2.recursiveDOMDelete(this.body.container);},Network.prototype._updateValueRange=function(e){var t=void 0,o=void 0,n=0,i;for(i in e)if(e.hasOwnProperty(i)){var a=e[i].getValue();a!==void 0&&(t=t===void 0?a:Math.min(a,t),o=o===void 0?a:Math.max(a,o),n+=a);}if(t!==void 0&&o!==void 0)for(i in e)e.hasOwnProperty(i)&&e[i].setValueRange(t,o,n);},Network.prototype.isActive=function(){return !this.activator||this.activator.active;},Network.prototype.setSize=function(){return this.canvas.setSize.apply(this.canvas,arguments);},Network.prototype.canvasToDOM=function(){return this.canvas.canvasToDOM.apply(this.canvas,arguments);},Network.prototype.DOMtoCanvas=function(){return this.canvas.DOMtoCanvas.apply(this.canvas,arguments);},Network.prototype.findNode=function(){return this.clustering.findNode.apply(this.clustering,arguments);},Network.prototype.isCluster=function(){return this.clustering.isCluster.apply(this.clustering,arguments);},Network.prototype.openCluster=function(){return this.clustering.openCluster.apply(this.clustering,arguments);},Network.prototype.cluster=function(){return this.clustering.cluster.apply(this.clustering,arguments);},Network.prototype.getNodesInCluster=function(){return this.clustering.getNodesInCluster.apply(this.clustering,arguments);},Network.prototype.clusterByConnection=function(){return this.clustering.clusterByConnection.apply(this.clustering,arguments);},Network.prototype.clusterByHubsize=function(){return this.clustering.clusterByHubsize.apply(this.clustering,arguments);},Network.prototype.clusterOutliers=function(){return this.clustering.clusterOutliers.apply(this.clustering,arguments);},Network.prototype.getSeed=function(){return this.layoutEngine.getSeed.apply(this.layoutEngine,arguments);},Network.prototype.enableEditMode=function(){return this.manipulation.enableEditMode.apply(this.manipulation,arguments);},Network.prototype.disableEditMode=function(){return this.manipulation.disableEditMode.apply(this.manipulation,arguments);},Network.prototype.addNodeMode=function(){return this.manipulation.addNodeMode.apply(this.manipulation,arguments);},Network.prototype.editNode=function(){return this.manipulation.editNode.apply(this.manipulation,arguments);},Network.prototype.editNodeMode=function(){return console.log("Deprecated: Please use editNode instead of editNodeMode."),this.manipulation.editNode.apply(this.manipulation,arguments);},Network.prototype.addEdgeMode=function(){return this.manipulation.addEdgeMode.apply(this.manipulation,arguments);},Network.prototype.editEdgeMode=function(){return this.manipulation.editEdgeMode.apply(this.manipulation,arguments);},Network.prototype.deleteSelected=function(){return this.manipulation.deleteSelected.apply(this.manipulation,arguments);},Network.prototype.getPositions=function(){return this.nodesHandler.getPositions.apply(this.nodesHandler,arguments);},Network.prototype.storePositions=function(){return this.nodesHandler.storePositions.apply(this.nodesHandler,arguments);},Network.prototype.moveNode=function(){return this.nodesHandler.moveNode.apply(this.nodesHandler,arguments);},Network.prototype.getBoundingBox=function(){return this.nodesHandler.getBoundingBox.apply(this.nodesHandler,arguments);},Network.prototype.getConnectedNodes=function(e){return void 0===this.body.nodes[e]?this.edgesHandler.getConnectedNodes.apply(this.edgesHandler,arguments):this.nodesHandler.getConnectedNodes.apply(this.nodesHandler,arguments);},Network.prototype.getConnectedEdges=function(){return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler,arguments);},Network.prototype.startSimulation=function(){return this.physics.startSimulation.apply(this.physics,arguments);},Network.prototype.stopSimulation=function(){return this.physics.stopSimulation.apply(this.physics,arguments);},Network.prototype.stabilize=function(){return this.physics.stabilize.apply(this.physics,arguments);},Network.prototype.getSelection=function(){return this.selectionHandler.getSelection.apply(this.selectionHandler,arguments);},Network.prototype.setSelection=function(){return this.selectionHandler.setSelection.apply(this.selectionHandler,arguments);},Network.prototype.getSelectedNodes=function(){return this.selectionHandler.getSelectedNodes.apply(this.selectionHandler,arguments);},Network.prototype.getSelectedEdges=function(){return this.selectionHandler.getSelectedEdges.apply(this.selectionHandler,arguments);},Network.prototype.getNodeAt=function(){var e=this.selectionHandler.getNodeAt.apply(this.selectionHandler,arguments);return void 0!==e&&void 0!==e.id?e.id:e;},Network.prototype.getEdgeAt=function(){var e=this.selectionHandler.getEdgeAt.apply(this.selectionHandler,arguments);return void 0!==e&&void 0!==e.id?e.id:e;},Network.prototype.selectNodes=function(){return this.selectionHandler.selectNodes.apply(this.selectionHandler,arguments);},Network.prototype.selectEdges=function(){return this.selectionHandler.selectEdges.apply(this.selectionHandler,arguments);},Network.prototype.unselectAll=function(){this.selectionHandler.unselectAll.apply(this.selectionHandler,arguments),this.redraw();},Network.prototype.redraw=function(){return this.renderer.redraw.apply(this.renderer,arguments);},Network.prototype.getScale=function(){return this.view.getScale.apply(this.view,arguments);},Network.prototype.getViewPosition=function(){return this.view.getViewPosition.apply(this.view,arguments);},Network.prototype.fit=function(){return this.view.fit.apply(this.view,arguments);},Network.prototype.moveTo=function(){return this.view.moveTo.apply(this.view,arguments);},Network.prototype.focus=function(){return this.view.focus.apply(this.view,arguments);},Network.prototype.releaseNode=function(){return this.view.releaseNode.apply(this.view,arguments);},Network.prototype.getOptionsFromConfigurator=function(){var e={};return this.configurator&&(e=this.configurator.getOptions.apply(this.configurator)),e;};var DOMutil=createCommonjsModule$2$1(function(e,t){t.prepareElements=function(e){for(var t in e)e.hasOwnProperty(t)&&(e[t].redundant=e[t].used,e[t].used=[]);},t.cleanupElements=function(e){for(var t in e)if(e.hasOwnProperty(t)&&e[t].redundant){for(var o=0;o<e[t].redundant.length;o++)e[t].redundant[o].parentNode.removeChild(e[t].redundant[o]);e[t].redundant=[];}},t.resetElements=function(e){t.prepareElements(e),t.cleanupElements(e),t.prepareElements(e);},t.getSVGElement=function(e,t,o){var n;return t.hasOwnProperty(e)?0<t[e].redundant.length?(n=t[e].redundant[0],t[e].redundant.shift()):(n=document.createElementNS("http://www.w3.org/2000/svg",e),o.appendChild(n)):(n=document.createElementNS("http://www.w3.org/2000/svg",e),t[e]={used:[],redundant:[]},o.appendChild(n)),t[e].used.push(n),n;},t.getDOMElement=function(e,t,o,n){var i;return t.hasOwnProperty(e)?0<t[e].redundant.length?(i=t[e].redundant[0],t[e].redundant.shift()):(i=document.createElement(e),void 0===n?o.appendChild(i):o.insertBefore(i,n)):(i=document.createElement(e),t[e]={used:[],redundant:[]},void 0===n?o.appendChild(i):o.insertBefore(i,n)),t[e].used.push(i),i;},t.drawPoint=function(e,o,n,i,a,d){var s;if("circle"==n.style?(s=t.getSVGElement("circle",i,a),s.setAttributeNS(null,"cx",e),s.setAttributeNS(null,"cy",o),s.setAttributeNS(null,"r",.5*n.size)):(s=t.getSVGElement("rect",i,a),s.setAttributeNS(null,"x",e-.5*n.size),s.setAttributeNS(null,"y",o-.5*n.size),s.setAttributeNS(null,"width",n.size),s.setAttributeNS(null,"height",n.size)),void 0!==n.styles&&s.setAttributeNS(null,"style",n.styles),s.setAttributeNS(null,"class",n.className+" vis-point"),d){var r=t.getSVGElement("text",i,a);d.xOffset&&(e+=d.xOffset),d.yOffset&&(o+=d.yOffset),d.content&&(r.textContent=d.content),d.className&&r.setAttributeNS(null,"class",d.className+" vis-label"),r.setAttributeNS(null,"x",e),r.setAttributeNS(null,"y",o);}return s;},t.drawBar=function(e,o,n,i,a,d,s,r){if(0!=i){0>i&&(i*=-1,o-=i);var l=t.getSVGElement("rect",d,s);l.setAttributeNS(null,"x",e-.5*n),l.setAttributeNS(null,"y",o),l.setAttributeNS(null,"width",n),l.setAttributeNS(null,"height",i),l.setAttributeNS(null,"class",a),r&&l.setAttributeNS(null,"style",r);}};}),DOMutil_1=DOMutil.prepareElements,DOMutil_2=DOMutil.cleanupElements,DOMutil_3=DOMutil.resetElements,DOMutil_4=DOMutil.getSVGElement,DOMutil_5=DOMutil.getDOMElement,DOMutil_6=DOMutil.drawPoint,DOMutil_7=DOMutil.drawBar,DOMutil$1=Object.freeze({default:DOMutil,__moduleExports:DOMutil,prepareElements:DOMutil_1,cleanupElements:DOMutil_2,resetElements:DOMutil_3,getSVGElement:DOMutil_4,getDOMElement:DOMutil_5,drawPoint:DOMutil_6,drawBar:DOMutil_7}),moment$2$1=createCommonjsModule$2$1(function(e){var t=Math.round,o=Math.pow,n=Math.max,a=Math.abs,d=Math.min,s=Math.floor,r=Math.ceil;(function(t,o){e.exports=o();})(commonjsGlobal$2$1,function(){function l(){return Zt.apply(null,arguments);}function u(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e);}function p(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e);}function h(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;for(var t in e)if(e.hasOwnProperty(t))return !1;return !0;}function m(e){return void 0===e;}function g(e){return "number"==typeof e||"[object Number]"===Object.prototype.toString.call(e);}function y(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e);}function f(e,t){var o=[],n;for(n=0;n<e.length;++n)o.push(t(e[n],n));return o;}function _(e,t){return Object.prototype.hasOwnProperty.call(e,t);}function v(e,t){for(var o in t)_(t,o)&&(e[o]=t[o]);return _(t,"toString")&&(e.toString=t.toString),_(t,"valueOf")&&(e.valueOf=t.valueOf),e;}function k(e,t,o,n){return it(e,t,o,n,!0).utc();}function w(){return {empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1};}function x(e){return null==e._pf&&(e._pf=w()),e._pf;}function S(e){if(null==e._isValid){var t=x(e),o=Xt.call(t.parsedDateParts,function(e){return null!=e;}),n=!isNaN(e._d.getTime())&&0>t.overflow&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&o);if(e._strict&&(n=n&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null==Object.isFrozen||!Object.isFrozen(e))e._isValid=n;else return n;}return e._isValid;}function O(e){var t=k(NaN);return null==e?x(t).userInvalidated=!0:v(x(t),e),t;}function D(e,t){var o,n,a;if(m(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),m(t._i)||(e._i=t._i),m(t._f)||(e._f=t._f),m(t._l)||(e._l=t._l),m(t._strict)||(e._strict=t._strict),m(t._tzm)||(e._tzm=t._tzm),m(t._isUTC)||(e._isUTC=t._isUTC),m(t._offset)||(e._offset=t._offset),m(t._pf)||(e._pf=x(t)),m(t._locale)||(e._locale=t._locale),0<Kt.length)for(o=0;o<Kt.length;o++)n=Kt[o],a=t[n],m(a)||(e[n]=a);return e;}function T(e){D(this,e),this._d=new Date(null==e._d?NaN:e._d.getTime()),this.isValid()||(this._d=new Date(NaN)),!1===Qt&&(Qt=!0,l.updateOffset(this),Qt=!1);}function C(e){return e instanceof T||null!=e&&null!=e._isAMomentObject;}function E(e){return 0>e?r(e)||0:s(e);}function M(e){var t=+e,o=0;return 0!=t&&isFinite(t)&&(o=E(t)),o;}function I(e,t,o){var n=d(e.length,t.length),s=a(e.length-t.length),r=0,l;for(l=0;l<n;l++)(o&&e[l]!==t[l]||!o&&M(e[l])!==M(t[l]))&&r++;return r+s;}function P(e){!1===l.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e);}function F(e,t){var o=!0;return v(function(){if(null!=l.deprecationHandler&&l.deprecationHandler(null,e),o){for(var n=[],a=0,d;a<arguments.length;a++){if(d="","object"==typeof arguments[a]){for(var s in d+="\n["+a+"] ",arguments[0])d+=s+": "+arguments[0][s]+", ";d=d.slice(0,-2);}else d=arguments[a];n.push(d);}P(e+"\nArguments: "+Array.prototype.slice.call(n).join("")+"\n"+new Error().stack),o=!1;}return t.apply(this,arguments);},t);}function Y(e,t){null!=l.deprecationHandler&&l.deprecationHandler(e,t),$t[e]||(P(t),$t[e]=!0);}function z(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e);}function N(e){var t,o;for(o in e)t=e[o],z(t)?this[o]=t:this["_"+o]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source);}function R(e,t){var o=v({},e),n;for(n in t)_(t,n)&&(p(e[n])&&p(t[n])?(o[n]={},v(o[n],e[n]),v(o[n],t[n])):null==t[n]?delete o[n]:o[n]=t[n]);for(n in e)_(e,n)&&!_(t,n)&&p(e[n])&&(o[n]=v({},o[n]));return o;}function B(e){null!=e&&this.set(e);}function H(e,t){var o=e.toLowerCase();to[o]=to[o+"s"]=to[t]=e;}function L(e){return "string"==typeof e?to[e]||to[e.toLowerCase()]:void 0;}function A(e){var t={},o,n;for(n in e)_(e,n)&&(o=L(n),o&&(t[o]=e[n]));return t;}function W(e,t){oo[e]=t;}function j(e){var t=[];for(var o in e)t.push({unit:o,priority:oo[o]});return t.sort(function(e,t){return e.priority-t.priority;}),t;}function U(e,t,i){var d=""+a(e),s=t-d.length;return (0<=e?i?"+":"":"-")+o(10,n(0,s)).toString().substr(1)+d;}function V(e,t,o,n){var i=n;"string"==typeof n&&(i=function(){return this[n]();}),e&&(so[e]=i),t&&(so[t[0]]=function(){return U(i.apply(this,arguments),t[1],t[2]);}),o&&(so[o]=function(){return this.localeData().ordinal(i.apply(this,arguments),e);});}function G(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"");}function q(e){var t=e.match(no),o,n;for(o=0,n=t.length;o<n;o++)t[o]=so[t[o]]?so[t[o]]:G(t[o]);return function(o){var a="",d;for(d=0;d<n;d++)a+=z(t[d])?t[d].call(o,e):t[d];return a;};}function Z(e,t){return e.isValid()?(t=X(t,e.localeData()),ao[t]=ao[t]||q(t),ao[t](e)):e.localeData().invalidDate();}function X(e,t){function o(e){return t.longDateFormat(e)||e;}var n=5;for(io.lastIndex=0;0<=n&&io.test(e);)e=e.replace(io,o),io.lastIndex=0,n-=1;return e;}function K(e,t,o){Oo[e]=z(t)?t:function(e){return e&&o?o:t;};}function Q(e,t){return _(Oo,e)?Oo[e](t._strict,t._locale):new RegExp($(e));}function $(e){return J(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,o,n,i){return t||o||n||i;}));}function J(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&");}function ee(e,t){var o=t,n;for("string"==typeof e&&(e=[e]),g(t)&&(o=function(e,o){o[t]=M(e);}),n=0;n<e.length;n++)Do[e[n]]=o;}function te(e,t){ee(e,function(e,o,n,i){n._w=n._w||{},t(e,n._w,n,i);});}function oe(e,t,o){null!=t&&_(Do,e)&&Do[e](t,o._a,o,e);}function ne(e){return ie(e)?366:365;}function ie(e){return 0==e%4&&0!=e%100||0==e%400;}function ae(e,t){return function(o){return null==o?de(this,e):(se(this,e,o),l.updateOffset(this,t),this);};}function de(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN;}function se(e,t,o){e.isValid()&&!isNaN(o)&&("FullYear"===t&&ie(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](o,e.month(),ce(o,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](o));}function re(e,t){if("object"==typeof e){e=A(e);for(var o=j(e),n=0;n<o.length;n++)this[o[n].unit](e[o[n].unit]);}else if(e=L(e),z(this[e]))return this[e](t);return this;}function le(e,t){return (e%t+t)%t;}function ce(e,t){if(isNaN(e)||isNaN(t))return NaN;var o=le(t,12);return e+=(t-o)/12,1===o?ie(e)?29:28:31-o%7%2;}function ue(e,t,o){var n=e.toLocaleLowerCase(),a,d,s;if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],a=0;12>a;++a)s=k([2e3,a]),this._shortMonthsParse[a]=this.monthsShort(s,"").toLocaleLowerCase(),this._longMonthsParse[a]=this.months(s,"").toLocaleLowerCase();return o?"MMM"===t?(d=Yo.call(this._shortMonthsParse,n),-1===d?null:d):(d=Yo.call(this._longMonthsParse,n),-1===d?null:d):"MMM"===t?(d=Yo.call(this._shortMonthsParse,n),-1!==d)?d:(d=Yo.call(this._longMonthsParse,n),-1===d?null:d):(d=Yo.call(this._longMonthsParse,n),-1!==d)?d:(d=Yo.call(this._shortMonthsParse,n),-1===d?null:d);}function pe(e,t,o){var n,a,d;if(this._monthsParseExact)return ue.call(this,e,t,o);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;12>n;n++){if(a=k([2e3,n]),o&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(a,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(a,"").replace(".","")+"$","i")),o||this._monthsParse[n]||(d="^"+this.months(a,"")+"|^"+this.monthsShort(a,""),this._monthsParse[n]=new RegExp(d.replace(".",""),"i")),o&&"MMMM"===t&&this._longMonthsParse[n].test(e))return n;if(o&&"MMM"===t&&this._shortMonthsParse[n].test(e))return n;if(!o&&this._monthsParse[n].test(e))return n;}}function he(e,t){var o;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=M(t);else if(t=e.localeData().monthsParse(t),!g(t))return e;return o=d(e.date(),ce(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,o),e;}function me(e){return null==e?de(this,"Month"):(he(this,e),l.updateOffset(this,!0),this);}function ge(){function e(e,t){return t.length-e.length;}var t=[],o=[],n=[],a,d;for(a=0;12>a;a++)d=k([2e3,a]),t.push(this.monthsShort(d,"")),o.push(this.months(d,"")),n.push(this.months(d,"")),n.push(this.monthsShort(d,""));for(t.sort(e),o.sort(e),n.sort(e),a=0;12>a;a++)t[a]=J(t[a]),o[a]=J(o[a]);for(a=0;24>a;a++)n[a]=J(n[a]);this._monthsRegex=new RegExp("^("+n.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+t.join("|")+")","i");}function ye(e,t,o,n,i,a,d){var s;return 100>e&&0<=e?(s=new Date(e+400,t,o,n,i,a,d),isFinite(s.getFullYear())&&s.setFullYear(e)):s=new Date(e,t,o,n,i,a,d),s;}function fe(e){var t;if(100>e&&0<=e){var o=Array.prototype.slice.call(arguments);o[0]=e+400,t=new Date(Date.UTC.apply(null,o)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e);}else t=new Date(Date.UTC.apply(null,arguments));return t;}function be(e,t,o){var n=7+t-o,i=(7+fe(e,0,n).getUTCDay()-t)%7;return -i+n-1;}function _e(e,t,o,n,i){var a=be(e,n,i),d=1+7*(t-1)+(7+o-n)%7+a,s,r;return 0>=d?(s=e-1,r=ne(s)+d):d>ne(e)?(s=e+1,r=d-ne(e)):(s=e,r=d),{year:s,dayOfYear:r};}function ve(e,t,o){var n=be(e.year(),t,o),i=s((e.dayOfYear()-n-1)/7)+1,a,d;return 1>i?(d=e.year()-1,a=i+ke(d,t,o)):i>ke(e.year(),t,o)?(a=i-ke(e.year(),t,o),d=e.year()+1):(d=e.year(),a=i),{week:a,year:d};}function ke(e,t,o){var n=be(e,t,o),i=be(e+1,t,o);return (ne(e)-n+i)/7;}function we(e,t){return "string"==typeof e?isNaN(e)?(e=t.weekdaysParse(e),"number"==typeof e?e:null):parseInt(e,10):e;}function xe(e,t){return "string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e;}function Se(e,t){return e.slice(t,7).concat(e.slice(0,t));}function Oe(e,t,o){var n=e.toLocaleLowerCase(),a,d,s;if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],a=0;7>a;++a)s=k([2e3,1]).day(a),this._minWeekdaysParse[a]=this.weekdaysMin(s,"").toLocaleLowerCase(),this._shortWeekdaysParse[a]=this.weekdaysShort(s,"").toLocaleLowerCase(),this._weekdaysParse[a]=this.weekdays(s,"").toLocaleLowerCase();return o?"dddd"===t?(d=Yo.call(this._weekdaysParse,n),-1===d?null:d):"ddd"===t?(d=Yo.call(this._shortWeekdaysParse,n),-1===d?null:d):(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):"dddd"===t?(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._shortWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):"ddd"===t?(d=Yo.call(this._shortWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._minWeekdaysParse,n),-1===d?null:d):(d=Yo.call(this._minWeekdaysParse,n),-1!==d)?d:(d=Yo.call(this._weekdaysParse,n),-1!==d)?d:(d=Yo.call(this._shortWeekdaysParse,n),-1===d?null:d);}function De(e,t,o){var n,a,d;if(this._weekdaysParseExact)return Oe.call(this,e,t,o);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;7>n;n++){if(a=k([2e3,1]).day(n),o&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp("^"+this.weekdays(a,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[n]=new RegExp("^"+this.weekdaysShort(a,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[n]=new RegExp("^"+this.weekdaysMin(a,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[n]||(d="^"+this.weekdays(a,"")+"|^"+this.weekdaysShort(a,"")+"|^"+this.weekdaysMin(a,""),this._weekdaysParse[n]=new RegExp(d.replace(".",""),"i")),o&&"dddd"===t&&this._fullWeekdaysParse[n].test(e))return n;if(o&&"ddd"===t&&this._shortWeekdaysParse[n].test(e))return n;if(o&&"dd"===t&&this._minWeekdaysParse[n].test(e))return n;if(!o&&this._weekdaysParse[n].test(e))return n;}}function Te(){function e(e,t){return t.length-e.length;}var t=[],o=[],n=[],a=[],d,s,r,l,c;for(d=0;7>d;d++)s=k([2e3,1]).day(d),r=this.weekdaysMin(s,""),l=this.weekdaysShort(s,""),c=this.weekdays(s,""),t.push(r),o.push(l),n.push(c),a.push(r),a.push(l),a.push(c);for(t.sort(e),o.sort(e),n.sort(e),a.sort(e),d=0;7>d;d++)o[d]=J(o[d]),n[d]=J(n[d]),a[d]=J(a[d]);this._weekdaysRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+n.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+t.join("|")+")","i");}function Ce(){return this.hours()%12||12;}function Ee(e,t){V(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t);});}function Me(e,t){return t._meridiemParse;}function Ie(e){return e?e.toLowerCase().replace("_","-"):e;}function Pe(e){for(var t=0,o,n,a,d;t<e.length;){for(d=Ie(e[t]).split("-"),o=d.length,n=Ie(e[t+1]),n=n?n.split("-"):null;0<o;){if(a=Fe(d.slice(0,o).join("-")),a)return a;if(n&&n.length>=o&&I(d,n,!0)>=o-1)break;o--;}t++;}return Qo;}function Fe(t){var o=null;if(!Ao[t]&&!0&&e&&e.exports)try{o=Qo._abbr;commonjsRequire$2$1("./locale/"+t),Ye(o);}catch(t){}return Ao[t];}function Ye(e,t){var o;return e&&(o=m(t)?Ne(e):ze(e,t),o?Qo=o:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Qo._abbr;}function ze(e,t){if(null!==t){var o=Lo,n;if(t.abbr=e,null!=Ao[e])Y("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),o=Ao[e]._config;else if(null!=t.parentLocale)if(null!=Ao[t.parentLocale])o=Ao[t.parentLocale]._config;else if(n=Fe(t.parentLocale),null!=n)o=n._config;else return Wo[t.parentLocale]||(Wo[t.parentLocale]=[]),Wo[t.parentLocale].push({name:e,config:t}),null;return Ao[e]=new B(R(o,t)),Wo[e]&&Wo[e].forEach(function(e){ze(e.name,e.config);}),Ye(e),Ao[e];}return delete Ao[e],null;}function Ne(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Qo;if(!u(e)){if(t=Fe(e),t)return t;e=[e];}return Pe(e);}function Re(){return Jt(Ao);}function Be(e){var t=e._a,o;return t&&-2===x(e).overflow&&(o=0>t[1]||11<t[1]?1:1>t[2]||t[2]>ce(t[0],t[1])?2:0>t[3]||24<t[3]||24===t[3]&&(0!==t[4]||0!==t[5]||0!==t[6])?3:0>t[4]||59<t[4]?4:0>t[5]||59<t[5]?5:0>t[6]||999<t[6]?6:-1,x(e)._overflowDayOfYear&&(0>o||2<o)&&(o=2),x(e)._overflowWeeks&&-1===o&&(o=7),x(e)._overflowWeekday&&-1===o&&(o=8),x(e).overflow=o),e;}function He(e,t,o){return null==e?null==t?o:t:e;}function Le(e){var t=new Date(l.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()];}function Ae(e){var t=[],o,n,a,d,s;if(!e._d){for(a=Le(e),e._w&&null==e._a[2]&&null==e._a[1]&&We(e),null!=e._dayOfYear&&(s=He(e._a[0],a[0]),(e._dayOfYear>ne(s)||0===e._dayOfYear)&&(x(e)._overflowDayOfYear=!0),n=fe(s,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),o=0;3>o&&null==e._a[o];++o)e._a[o]=t[o]=a[o];for(;7>o;o++)e._a[o]=t[o]=null==e._a[o]?2===o?1:0:e._a[o];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?fe:ye).apply(null,t),d=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&"undefined"!=typeof e._w.d&&e._w.d!==d&&(x(e).weekdayMismatch=!0);}}function We(e){var t,o,n,i,a,d,s,r;if(t=e._w,null!=t.GG||null!=t.W||null!=t.E)a=1,d=4,o=He(t.GG,e._a[0],ve(at(),1,4).year),n=He(t.W,1),i=He(t.E,1),(1>i||7<i)&&(r=!0);else{a=e._locale._week.dow,d=e._locale._week.doy;var l=ve(at(),a,d);o=He(t.gg,e._a[0],l.year),n=He(t.w,l.week),null==t.d?null==t.e?i=a:(i=t.e+a,(0>t.e||6<t.e)&&(r=!0)):(i=t.d,(0>i||6<i)&&(r=!0));}1>n||n>ke(o,a,d)?x(e)._overflowWeeks=!0:null==r?(s=_e(o,n,i,a,d),e._a[0]=s.year,e._dayOfYear=s.dayOfYear):x(e)._overflowWeekday=!0;}function je(e){var t=e._i,o=jo.exec(t)||Uo.exec(t),n,a,d,s,r,c;if(o){for(x(e).iso=!0,n=0,a=Go.length;n<a;n++)if(Go[n][1].exec(o[1])){s=Go[n][0],d=!1!==Go[n][2];break;}if(null==s)return void(e._isValid=!1);if(o[3]){for(n=0,a=qo.length;n<a;n++)if(qo[n][1].exec(o[3])){r=(o[2]||" ")+qo[n][0];break;}if(null==r)return void(e._isValid=!1);}if(!d&&null!=r)return void(e._isValid=!1);if(o[4])if(Vo.exec(o[4]))c="Z";else return void(e._isValid=!1);e._f=s+(r||"")+(c||""),Qe(e);}else e._isValid=!1;}function Ue(e,t,o,n,i,a){var d=[Ve(e),No.indexOf(t),parseInt(o,10),parseInt(n,10),parseInt(i,10)];return a&&d.push(parseInt(a,10)),d;}function Ve(e){var t=parseInt(e,10);return 49>=t?2e3+t:999>=t?1900+t:t;}function Ge(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"");}function qe(e,t,o){if(e){var n=Ro.indexOf(e),i=new Date(t[0],t[1],t[2]).getDay();if(n!==i)return x(o).weekdayMismatch=!0,o._isValid=!1,!1;}return !0;}function Ze(e,t,o){if(e)return Ko[e];if(t)return 0;var n=parseInt(o,10),i=n%100;return 60*((n-i)/100)+i;}function Xe(e){var t=Xo.exec(Ge(e._i));if(t){var o=Ue(t[4],t[3],t[2],t[5],t[6],t[7]);if(!qe(t[1],o,e))return;e._a=o,e._tzm=Ze(t[8],t[9],t[10]),e._d=fe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),x(e).rfc2822=!0;}else e._isValid=!1;}function Ke(e){var t=Zo.exec(e._i);if(null!==t)return void(e._d=new Date(+t[1]));if(je(e),!1===e._isValid)delete e._isValid;else return;if(Xe(e),!1===e._isValid)delete e._isValid;else return;l.createFromInputFallback(e);}function Qe(e){if(e._f===l.ISO_8601)return void je(e);if(e._f===l.RFC_2822)return void Xe(e);e._a=[],x(e).empty=!0;var t=""+e._i,o=t.length,n=0,a,d,s,r,c;for(s=X(e._f,e._locale).match(no)||[],a=0;a<s.length;a++)r=s[a],d=(t.match(Q(r,e))||[])[0],d&&(c=t.substr(0,t.indexOf(d)),0<c.length&&x(e).unusedInput.push(c),t=t.slice(t.indexOf(d)+d.length),n+=d.length),so[r]?(d?x(e).empty=!1:x(e).unusedTokens.push(r),oe(r,d,e)):e._strict&&!d&&x(e).unusedTokens.push(r);x(e).charsLeftOver=o-n,0<t.length&&x(e).unusedInput.push(t),12>=e._a[3]&&!0===x(e).bigHour&&0<e._a[3]&&(x(e).bigHour=void 0),x(e).parsedDateParts=e._a.slice(0),x(e).meridiem=e._meridiem,e._a[3]=$e(e._locale,e._a[3],e._meridiem),Ae(e),Be(e);}function $e(e,t,o){var n;return null==o?t:null==e.meridiemHour?null==e.isPM?t:(n=e.isPM(o),n&&12>t&&(t+=12),n||12!==t||(t=0),t):e.meridiemHour(t,o);}function Je(e){var t,o,n,a,d;if(0===e._f.length)return x(e).invalidFormat=!0,void(e._d=new Date(NaN));for(a=0;a<e._f.length;a++)(d=0,t=D({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[a],Qe(t),!!S(t))&&(d+=x(t).charsLeftOver,d+=10*x(t).unusedTokens.length,x(t).score=d,(null==n||d<n)&&(n=d,o=t));v(e,o||t);}function et(e){if(!e._d){var t=A(e._i);e._a=f([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10);}),Ae(e);}}function tt(e){var t=new T(Be(ot(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t;}function ot(e){var t=e._i,o=e._f;return (e._locale=e._locale||Ne(e._l),null===t||void 0===o&&""===t)?O({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),C(t))?new T(Be(t)):(y(t)?e._d=t:u(o)?Je(e):o?Qe(e):nt(e),S(e)||(e._d=null),e);}function nt(e){var t=e._i;m(t)?e._d=new Date(l.now()):y(t)?e._d=new Date(t.valueOf()):"string"==typeof t?Ke(e):u(t)?(e._a=f(t.slice(0),function(e){return parseInt(e,10);}),Ae(e)):p(t)?et(e):g(t)?e._d=new Date(t):l.createFromInputFallback(e);}function it(e,t,o,n,i){var a={};return (!0===o||!1===o)&&(n=o,o=void 0),(p(e)&&h(e)||u(e)&&0===e.length)&&(e=void 0),a._isAMomentObject=!0,a._useUTC=a._isUTC=i,a._l=o,a._i=e,a._f=t,a._strict=n,tt(a);}function at(e,t,o,n){return it(e,t,o,n,!1);}function dt(e,t){var o,n;if(1===t.length&&u(t[0])&&(t=t[0]),!t.length)return at();for(o=t[0],n=1;n<t.length;++n)(!t[n].isValid()||t[n][e](o))&&(o=t[n]);return o;}function st(e){for(var t in e)if(-1===Yo.call(en,t)||null!=e[t]&&isNaN(e[t]))return !1;for(var o=!1,n=0;n<en.length;++n)if(e[en[n]]){if(o)return !1;parseFloat(e[en[n]])!==M(e[en[n]])&&(o=!0);}return !0;}function rt(e){var t=A(e),o=t.year||0,n=t.quarter||0,i=t.month||0,a=t.week||t.isoWeek||0,d=t.day||0,s=t.hour||0,r=t.minute||0,l=t.second||0,c=t.millisecond||0;this._isValid=st(t),this._milliseconds=+c+1e3*l+6e4*r+60*(60*(1e3*s)),this._days=+d+7*a,this._months=+i+3*n+12*o,this._data={},this._locale=Ne(),this._bubble();}function lt(e){return e instanceof rt;}function ct(e){return 0>e?-1*t(-1*e):t(e);}function ut(e,t){V(e,0,0,function(){var e=this.utcOffset(),o="+";return 0>e&&(e=-e,o="-"),o+U(~~(e/60),2)+t+U(~~e%60,2);});}function pt(e,t){var o=(t||"").match(e);if(null===o)return null;var n=o[o.length-1]||[],i=(n+"").match(tn)||["-",0,0],a=+(60*i[1])+M(i[2]);return 0===a?0:"+"===i[0]?a:-a;}function ht(e,t){var o,n;return t._isUTC?(o=t.clone(),n=(C(e)||y(e)?e.valueOf():at(e).valueOf())-o.valueOf(),o._d.setTime(o._d.valueOf()+n),l.updateOffset(o,!1),o):at(e).local();}function mt(e){return 15*-t(e._d.getTimezoneOffset()/15);}function gt(){if(!m(this._isDSTShifted))return this._isDSTShifted;var e={};if(D(e,this),e=ot(e),e._a){var t=e._isUTC?k(e._a):at(e._a);this._isDSTShifted=this.isValid()&&0<I(e._a,t.toArray());}else this._isDSTShifted=!1;return this._isDSTShifted;}function yt(){return !!this.isValid()&&this._isUTC&&0===this._offset;}function ft(e,t){var o=e,n=null,i,a,d;return lt(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:g(e)?(o={},t?o[t]=e:o.milliseconds=e):(n=on.exec(e))?(i="-"===n[1]?-1:1,o={y:0,d:M(n[2])*i,h:M(n[3])*i,m:M(n[4])*i,s:M(n[5])*i,ms:M(ct(1e3*n[6]))*i}):(n=nn.exec(e))?(i="-"===n[1]?-1:1,o={y:bt(n[2],i),M:bt(n[3],i),w:bt(n[4],i),d:bt(n[5],i),h:bt(n[6],i),m:bt(n[7],i),s:bt(n[8],i)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(d=vt(at(o.from),at(o.to)),o={},o.ms=d.milliseconds,o.M=d.months),a=new rt(o),lt(e)&&_(e,"_locale")&&(a._locale=e._locale),a;}function bt(e,t){var o=e&&parseFloat(e.replace(",","."));return (isNaN(o)?0:o)*t;}function _t(e,t){var o={};return o.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(o.months,"M").isAfter(t)&&--o.months,o.milliseconds=+t-+e.clone().add(o.months,"M"),o;}function vt(e,t){var o;return e.isValid()&&t.isValid()?(t=ht(t,e),e.isBefore(t)?o=_t(e,t):(o=_t(t,e),o.milliseconds=-o.milliseconds,o.months=-o.months),o):{milliseconds:0,months:0};}function kt(e,t){return function(o,n){var i,a;return null===n||isNaN(+n)||(Y(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),a=o,o=n,n=a),o="string"==typeof o?+o:o,i=ft(o,n),wt(this,i,e),this;};}function wt(e,t,o,n){var i=t._milliseconds,a=ct(t._days),d=ct(t._months);e.isValid()&&(n=null==n||n,d&&he(e,de(e,"Month")+d*o),a&&se(e,"Date",de(e,"Date")+a*o),i&&e._d.setTime(e._d.valueOf()+i*o),n&&l.updateOffset(e,a||d));}function xt(e,t){var o=12*(t.year()-e.year())+(t.month()-e.month()),n=e.clone().add(o,"months"),i,a;return 0>t-n?(i=e.clone().add(o-1,"months"),a=(t-n)/(n-i)):(i=e.clone().add(o+1,"months"),a=(t-n)/(i-n)),-(o+a)||0;}function St(e){var t;return void 0===e?this._locale._abbr:(t=Ne(e),null!=t&&(this._locale=t),this);}function Ot(){return this._locale;}function Dt(e,t){return (e%t+t)%t;}function Tt(e,t,o){return 100>e&&0<=e?new Date(e+400,t,o)-12622780800000:new Date(e,t,o).valueOf();}function Ct(e,t,o){return 100>e&&0<=e?Date.UTC(e+400,t,o)-12622780800000:Date.UTC(e,t,o);}function Et(e,t){V(0,[e,e.length],0,t);}function Mt(e,t,o,n,i){var a;return null==e?ve(this,n,i).year:(a=ke(e,n,i),t>a&&(t=a),It.call(this,e,t,o,n,i));}function It(e,t,o,n,i){var a=_e(e,t,o,n,i),d=fe(a.year,0,a.dayOfYear);return this.year(d.getUTCFullYear()),this.month(d.getUTCMonth()),this.date(d.getUTCDate()),this;}function Pt(e,t){t[6]=M(1e3*("0."+e));}function Ft(e){return e;}function Yt(e,t,o,n){var i=Ne(),a=k().set(n,t);return i[o](a,e);}function zt(e,t,o){if(g(e)&&(t=e,e=void 0),e=e||"",null!=t)return Yt(e,t,o,"month");var n=[],a;for(a=0;12>a;a++)n[a]=Yt(e,a,o,"month");return n;}function Nt(e,t,o,n){"boolean"==typeof e?(g(t)&&(o=t,t=void 0),t=t||""):(t=e,o=t,e=!1,g(t)&&(o=t,t=void 0),t=t||"");var a=Ne(),d=e?a._week.dow:0;if(null!=o)return Yt(t,(o+d)%7,n,"day");var s=[],r;for(r=0;7>r;r++)s[r]=Yt(t,(r+d)%7,n,"day");return s;}function Rt(e,t,o,n){var i=ft(t,o);return e._milliseconds+=n*i._milliseconds,e._days+=n*i._days,e._months+=n*i._months,e._bubble();}function Bt(e){return 0>e?s(e):r(e);}function Ht(e){return 4800*e/146097;}function Lt(e){return 146097*e/4800;}function At(e){return function(){return this.as(e);};}function Wt(e){return function(){return this.isValid()?this._data[e]:NaN;};}function jt(e,t,o,n,i){return i.relativeTime(t||1,!!o,e,n);}function Ut(e,t,o){var n=ft(e).abs(),i=Pn(n.as("s")),d=Pn(n.as("m")),s=Pn(n.as("h")),r=Pn(n.as("d")),l=Pn(n.as("M")),c=Pn(n.as("y")),u=i<=Fn.ss&&["s",i]||i<Fn.s&&["ss",i]||1>=d&&["m"]||d<Fn.m&&["mm",d]||1>=s&&["h"]||s<Fn.h&&["hh",s]||1>=r&&["d"]||r<Fn.d&&["dd",r]||1>=l&&["M"]||l<Fn.M&&["MM",l]||1>=c&&["y"]||["yy",c];return u[2]=t,u[3]=0<+e,u[4]=o,jt.apply(null,u);}function Vt(e){return void 0===e?Pn:"function"==typeof e&&(Pn=e,!0);}function Gt(e){return (0<e)-(0>e)||+e;}function qt(){if(!this.isValid())return this.localeData().invalidDate();var e=Yn(this._milliseconds)/1e3,t=Yn(this._days),o=Yn(this._months),n,i,a;n=E(e/60),i=E(n/60),e%=60,n%=60,a=E(o/12),o%=12;var d=a,r=o,l=t,c=i,u=n,p=e?e.toFixed(3).replace(/\.?0+$/,""):"",s=this.asSeconds();if(!s)return "P0D";var h=0>s?"-":"",m=Gt(this._months)===Gt(s)?"":"-",g=Gt(this._days)===Gt(s)?"":"-",y=Gt(this._milliseconds)===Gt(s)?"":"-";return h+"P"+(d?m+d+"Y":"")+(r?m+r+"M":"")+(l?g+l+"D":"")+(c||u||p?"T":"")+(c?y+c+"H":"")+(u?y+u+"M":"")+(p?y+p+"S":"");}var Zt,Xt;Xt=Array.prototype.some?Array.prototype.some:function(e){for(var o=Object(this),t=o.length>>>0,n=0;n<t;n++)if(n in o&&e.call(this,o[n],n,o))return !0;return !1;};var Kt=l.momentProperties=[],Qt=!1,$t={};l.suppressDeprecationWarnings=!1,l.deprecationHandler=null;var Jt=Object.keys?Object.keys:function(e){var t=[],o;for(o in e)_(e,o)&&t.push(o);return t;};var eo=/\d{1,2}/,to={},oo={},no=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,io=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,ao={},so={},ro=/\d/,lo=/\d\d/,co=/\d{3}/,uo=/\d{4}/,po=/[+-]?\d{6}/,ho=/\d\d?/,mo=/\d\d\d\d?/,go=/\d\d\d\d\d\d?/,yo=/\d{1,3}/,fo=/\d{1,4}/,bo=/[+-]?\d{1,6}/,_o=/\d+/,vo=/[+-]?\d+/,ko=/Z|[+-]\d\d:?\d\d/gi,wo=/Z|[+-]\d\d(?::?\d\d)?/gi,xo=/[+-]?\d+(\.\d{1,3})?/,So=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Oo={},Do={},To=0,Co=1,Eo=2,Mo=3,Io=4,Po=5;V("Y",0,0,function(){var e=this.year();return 9999>=e?""+e:"+"+e;}),V(0,["YY",2],0,function(){return this.year()%100;}),V(0,["YYYY",4],0,"year"),V(0,["YYYYY",5],0,"year"),V(0,["YYYYYY",6,!0],0,"year"),H("year","y"),W("year",1),K("Y",vo),K("YY",ho,lo),K("YYYY",fo,uo),K("YYYYY",bo,po),K("YYYYYY",bo,po),ee(["YYYYY","YYYYYY"],To),ee("YYYY",function(e,t){t[To]=2===e.length?l.parseTwoDigitYear(e):M(e);}),ee("YY",function(e,t){t[To]=l.parseTwoDigitYear(e);}),ee("Y",function(e,t){t[To]=parseInt(e,10);}),l.parseTwoDigitYear=function(e){return M(e)+(68<M(e)?1900:2e3);};var Fo=ae("FullYear",!0),Yo;Yo=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return -1;},V("M",["MM",2],"Mo",function(){return this.month()+1;}),V("MMM",0,0,function(e){return this.localeData().monthsShort(this,e);}),V("MMMM",0,0,function(e){return this.localeData().months(this,e);}),H("month","M"),W("month",8),K("M",ho),K("MM",ho,lo),K("MMM",function(e,t){return t.monthsShortRegex(e);}),K("MMMM",function(e,t){return t.monthsRegex(e);}),ee(["M","MM"],function(e,t){t[Co]=M(e)-1;}),ee(["MMM","MMMM"],function(e,t,o,n){var i=o._locale.monthsParse(e,n,o._strict);null==i?x(o).invalidMonth=e:t[Co]=i;});var zo=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,No=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];V("w",["ww",2],"wo","week"),V("W",["WW",2],"Wo","isoWeek"),H("week","w"),H("isoWeek","W"),W("week",5),W("isoWeek",5),K("w",ho),K("ww",ho,lo),K("W",ho),K("WW",ho,lo),te(["w","ww","W","WW"],function(e,t,o,n){t[n.substr(0,1)]=M(e);});V("d",0,"do","day"),V("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e);}),V("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e);}),V("dddd",0,0,function(e){return this.localeData().weekdays(this,e);}),V("e",0,0,"weekday"),V("E",0,0,"isoWeekday"),H("day","d"),H("weekday","e"),H("isoWeekday","E"),W("day",11),W("weekday",11),W("isoWeekday",11),K("d",ho),K("e",ho),K("E",ho),K("dd",function(e,t){return t.weekdaysMinRegex(e);}),K("ddd",function(e,t){return t.weekdaysShortRegex(e);}),K("dddd",function(e,t){return t.weekdaysRegex(e);}),te(["dd","ddd","dddd"],function(e,t,o,n){var i=o._locale.weekdaysParse(e,n,o._strict);null==i?x(o).invalidWeekday=e:t.d=i;}),te(["d","e","E"],function(e,t,o,n){t[n]=M(e);});var Ro=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];V("H",["HH",2],0,"hour"),V("h",["hh",2],0,Ce),V("k",["kk",2],0,function(){return this.hours()||24;}),V("hmm",0,0,function(){return ""+Ce.apply(this)+U(this.minutes(),2);}),V("hmmss",0,0,function(){return ""+Ce.apply(this)+U(this.minutes(),2)+U(this.seconds(),2);}),V("Hmm",0,0,function(){return ""+this.hours()+U(this.minutes(),2);}),V("Hmmss",0,0,function(){return ""+this.hours()+U(this.minutes(),2)+U(this.seconds(),2);}),Ee("a",!0),Ee("A",!1),H("hour","h"),W("hour",13),K("a",Me),K("A",Me),K("H",ho),K("h",ho),K("k",ho),K("HH",ho,lo),K("hh",ho,lo),K("kk",ho,lo),K("hmm",mo),K("hmmss",go),K("Hmm",mo),K("Hmmss",go),ee(["H","HH"],Mo),ee(["k","kk"],function(e,t){var o=M(e);t[Mo]=24===o?0:o;}),ee(["a","A"],function(e,t,o){o._isPm=o._locale.isPM(e),o._meridiem=e;}),ee(["h","hh"],function(e,t,o){t[Mo]=M(e),x(o).bigHour=!0;}),ee("hmm",function(e,t,o){var n=e.length-2;t[Mo]=M(e.substr(0,n)),t[Io]=M(e.substr(n)),x(o).bigHour=!0;}),ee("hmmss",function(e,t,o){var n=e.length-4,i=e.length-2;t[Mo]=M(e.substr(0,n)),t[Io]=M(e.substr(n,2)),t[Po]=M(e.substr(i)),x(o).bigHour=!0;}),ee("Hmm",function(e,t){var o=e.length-2;t[Mo]=M(e.substr(0,o)),t[Io]=M(e.substr(o));}),ee("Hmmss",function(e,t){var o=e.length-4,n=e.length-2;t[Mo]=M(e.substr(0,o)),t[Io]=M(e.substr(o,2)),t[Po]=M(e.substr(n));});var Bo=/[ap]\.?m?\.?/i,Ho=ae("Hours",!0),Lo={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:eo,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:No,week:{dow:0,doy:6},weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekdaysShort:Ro,meridiemParse:Bo},Ao={},Wo={},jo=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Uo=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Vo=/Z|[+-]\d\d(?::?\d\d)?/,Go=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],qo=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Zo=/^\/?Date\((\-?\d+)/i,Xo=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,Ko={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480},Qo;l.createFromInputFallback=F("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""));}),l.ISO_8601=function(){},l.RFC_2822=function(){};var $o=F("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=at.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:O();}),Jo=F("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=at.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:O();}),en=["year","quarter","month","week","day","hour","minute","second","millisecond"];ut("Z",":"),ut("ZZ",""),K("Z",wo),K("ZZ",wo),ee(["Z","ZZ"],function(e,t,o){o._useUTC=!0,o._tzm=pt(wo,e);});var tn=/([\+\-]|\d\d)/gi;l.updateOffset=function(){};var on=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,nn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;ft.fn=rt.prototype,ft.invalid=function(){return ft(NaN);};var an=kt(1,"add"),dn=kt(-1,"subtract");l.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",l.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var sn=F("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e);});V(0,["gg",2],0,function(){return this.weekYear()%100;}),V(0,["GG",2],0,function(){return this.isoWeekYear()%100;}),Et("gggg","weekYear"),Et("ggggg","weekYear"),Et("GGGG","isoWeekYear"),Et("GGGGG","isoWeekYear"),H("weekYear","gg"),H("isoWeekYear","GG"),W("weekYear",1),W("isoWeekYear",1),K("G",vo),K("g",vo),K("GG",ho,lo),K("gg",ho,lo),K("GGGG",fo,uo),K("gggg",fo,uo),K("GGGGG",bo,po),K("ggggg",bo,po),te(["gggg","ggggg","GGGG","GGGGG"],function(e,t,o,n){t[n.substr(0,2)]=M(e);}),te(["gg","GG"],function(e,t,o,n){t[n]=l.parseTwoDigitYear(e);}),V("Q",0,"Qo","quarter"),H("quarter","Q"),W("quarter",7),K("Q",ro),ee("Q",function(e,t){t[Co]=3*(M(e)-1);}),V("D",["DD",2],"Do","date"),H("date","D"),W("date",9),K("D",ho),K("DD",ho,lo),K("Do",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient;}),ee(["D","DD"],Eo),ee("Do",function(e,t){t[Eo]=M(e.match(ho)[0]);});var rn=ae("Date",!0);V("DDD",["DDDD",3],"DDDo","dayOfYear"),H("dayOfYear","DDD"),W("dayOfYear",4),K("DDD",yo),K("DDDD",co),ee(["DDD","DDDD"],function(e,t,o){o._dayOfYear=M(e);}),V("m",["mm",2],0,"minute"),H("minute","m"),W("minute",14),K("m",ho),K("mm",ho,lo),ee(["m","mm"],Io);var ln=ae("Minutes",!1);V("s",["ss",2],0,"second"),H("second","s"),W("second",15),K("s",ho),K("ss",ho,lo),ee(["s","ss"],Po);var cn=ae("Seconds",!1);V("S",0,0,function(){return ~~(this.millisecond()/100);}),V(0,["SS",2],0,function(){return ~~(this.millisecond()/10);}),V(0,["SSS",3],0,"millisecond"),V(0,["SSSS",4],0,function(){return 10*this.millisecond();}),V(0,["SSSSS",5],0,function(){return 100*this.millisecond();}),V(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond();}),V(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond();}),V(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond();}),V(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond();}),H("millisecond","ms"),W("millisecond",16),K("S",yo,ro),K("SS",yo,lo),K("SSS",yo,co);var un;for(un="SSSS";9>=un.length;un+="S")K(un,_o);for(un="S";9>=un.length;un+="S")ee(un,Pt);var pn=ae("Milliseconds",!1);V("z",0,0,"zoneAbbr"),V("zz",0,0,"zoneName");var hn=T.prototype;hn.add=an,hn.calendar=function(e,t){var o=e||at(),n=ht(o,this).startOf("day"),i=l.calendarFormat(this,n)||"sameElse",a=t&&(z(t[i])?t[i].call(this,o):t[i]);return this.format(a||this.localeData().calendar(i,this,at(o)));},hn.clone=function(){return new T(this);},hn.diff=function(e,t,o){var n,i,a;return this.isValid()?(n=ht(e,this),!n.isValid())?NaN:(i=6e4*(n.utcOffset()-this.utcOffset()),t=L(t),(a="year"===t?xt(this,n)/12:"month"===t?xt(this,n):"quarter"===t?xt(this,n)/3:"second"===t?(this-n)/1e3:"minute"===t?(this-n)/6e4:"hour"===t?(this-n)/36e5:"day"===t?(this-n-i)/864e5:"week"===t?(this-n-i)/6048e5:this-n,o?a:E(a))):NaN;},hn.endOf=function(e){var t;if(e=L(e),void 0===e||"millisecond"===e||!this.isValid())return this;var o=this._isUTC?Ct:Tt;return "year"===e?t=o(this.year()+1,0,1)-1:"quarter"===e?t=o(this.year(),this.month()-this.month()%3+3,1)-1:"month"===e?t=o(this.year(),this.month()+1,1)-1:"week"===e?t=o(this.year(),this.month(),this.date()-this.weekday()+7)-1:"isoWeek"===e?t=o(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1:"day"===e||"date"===e?t=o(this.year(),this.month(),this.date()+1)-1:"hour"===e?(t=this._d.valueOf(),t+=3600000-Dt(t+(this._isUTC?0:60000*this.utcOffset()),3600000)-1):"minute"===e?(t=this._d.valueOf(),t+=60000-Dt(t,60000)-1):"second"===e?(t=this._d.valueOf(),t+=1000-Dt(t,1000)-1):void 0,this._d.setTime(t),l.updateOffset(this,!0),this;},hn.format=function(e){e||(e=this.isUtc()?l.defaultFormatUtc:l.defaultFormat);var t=Z(this,e);return this.localeData().postformat(t);},hn.from=function(e,t){return this.isValid()&&(C(e)&&e.isValid()||at(e).isValid())?ft({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate();},hn.fromNow=function(e){return this.from(at(),e);},hn.to=function(e,t){return this.isValid()&&(C(e)&&e.isValid()||at(e).isValid())?ft({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate();},hn.toNow=function(e){return this.to(at(),e);},hn.get=function(e){return e=L(e),z(this[e])?this[e]():this;},hn.invalidAt=function(){return x(this).overflow;},hn.isAfter=function(e,t){var o=C(e)?e:at(e);return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()>o.valueOf():o.valueOf()<this.clone().startOf(t).valueOf());},hn.isBefore=function(e,t){var o=C(e)?e:at(e);return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()<o.valueOf():this.clone().endOf(t).valueOf()<o.valueOf());},hn.isBetween=function(e,t,o,n){var i=C(e)?e:at(e),a=C(t)?t:at(t);return !!(this.isValid()&&i.isValid()&&a.isValid())&&(n=n||"()",("("===n[0]?this.isAfter(i,o):!this.isBefore(i,o))&&(")"===n[1]?this.isBefore(a,o):!this.isAfter(a,o)));},hn.isSame=function(e,t){var o=C(e)?e:at(e),n;return !!(this.isValid()&&o.isValid())&&(t=L(t)||"millisecond","millisecond"===t?this.valueOf()===o.valueOf():(n=o.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()));},hn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t);},hn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t);},hn.isValid=function(){return S(this);},hn.lang=sn,hn.locale=St,hn.localeData=Ot,hn.max=Jo,hn.min=$o,hn.parsingFlags=function(){return v({},x(this));},hn.set=re,hn.startOf=function(e){var t;if(e=L(e),void 0===e||"millisecond"===e||!this.isValid())return this;var o=this._isUTC?Ct:Tt;return "year"===e?t=o(this.year(),0,1):"quarter"===e?t=o(this.year(),this.month()-this.month()%3,1):"month"===e?t=o(this.year(),this.month(),1):"week"===e?t=o(this.year(),this.month(),this.date()-this.weekday()):"isoWeek"===e?t=o(this.year(),this.month(),this.date()-(this.isoWeekday()-1)):"day"===e||"date"===e?t=o(this.year(),this.month(),this.date()):"hour"===e?(t=this._d.valueOf(),t-=Dt(t+(this._isUTC?0:60000*this.utcOffset()),3600000)):"minute"===e?(t=this._d.valueOf(),t-=Dt(t,60000)):"second"===e?(t=this._d.valueOf(),t-=Dt(t,1000)):void 0,this._d.setTime(t),l.updateOffset(this,!0),this;},hn.subtract=dn,hn.toArray=function(){var e=this;return [e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()];},hn.toObject=function(){var e=this;return {years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()};},hn.toDate=function(){return new Date(this.valueOf());},hn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,o=t?this.clone().utc():this;return 0>o.year()||9999<o.year()?Z(o,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):z(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+1e3*(60*this.utcOffset())).toISOString().replace("Z",Z(o,"Z")):Z(o,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ");},hn.inspect=function(){if(!this.isValid())return "moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var o="["+e+"(\"]",n=0<=this.year()&&9999>=this.year()?"YYYY":"YYYYYY",i=t+"[\")]";return this.format(o+n+"-MM-DD[T]HH:mm:ss.SSS"+i);},hn.toJSON=function(){return this.isValid()?this.toISOString():null;},hn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");},hn.unix=function(){return s(this.valueOf()/1e3);},hn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0);},hn.creationData=function(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};},hn.year=Fo,hn.isLeapYear=function(){return ie(this.year());},hn.weekYear=function(e){return Mt.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);},hn.isoWeekYear=function(e){return Mt.call(this,e,this.isoWeek(),this.isoWeekday(),1,4);},hn.quarter=hn.quarters=function(e){return null==e?r((this.month()+1)/3):this.month(3*(e-1)+this.month()%3);},hn.month=me,hn.daysInMonth=function(){return ce(this.year(),this.month());},hn.week=hn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d");},hn.isoWeek=hn.isoWeeks=function(e){var t=ve(this,1,4).week;return null==e?t:this.add(7*(e-t),"d");},hn.weeksInYear=function(){var e=this.localeData()._week;return ke(this.year(),e.dow,e.doy);},hn.isoWeeksInYear=function(){return ke(this.year(),1,4);},hn.date=rn,hn.day=hn.days=function(e){if(!this.isValid())return null==e?NaN:this;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null==e?t:(e=we(e,this.localeData()),this.add(e-t,"d"));},hn.weekday=function(e){if(!this.isValid())return null==e?NaN:this;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d");},hn.isoWeekday=function(e){if(!this.isValid())return null==e?NaN:this;if(null!=e){var t=xe(e,this.localeData());return this.day(this.day()%7?t:t-7);}return this.day()||7;},hn.dayOfYear=function(e){var o=t((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?o:this.add(e-o,"d");},hn.hour=hn.hours=Ho,hn.minute=hn.minutes=ln,hn.second=hn.seconds=cn,hn.millisecond=hn.milliseconds=pn,hn.utcOffset=function(e,t,o){var n=this._offset||0,i;if(!this.isValid())return null==e?NaN:this;if(null!=e){if("string"!=typeof e)16>a(e)&&!o&&(e*=60);else if(e=pt(wo,e),null===e)return this;return !this._isUTC&&t&&(i=mt(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,"m"),n!==e&&(!t||this._changeInProgress?wt(this,ft(e-n,"m"),1,!1):!this._changeInProgress&&(this._changeInProgress=!0,l.updateOffset(this,!0),this._changeInProgress=null)),this;}return this._isUTC?n:mt(this);},hn.utc=function(e){return this.utcOffset(0,e);},hn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(mt(this),"m")),this;},hn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=pt(ko,this._i);null==e?this.utcOffset(0,!0):this.utcOffset(e);}return this;},hn.hasAlignedHourOffset=function(e){return !!this.isValid()&&(e=e?at(e).utcOffset():0,0==(this.utcOffset()-e)%60);},hn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();},hn.isLocal=function(){return !!this.isValid()&&!this._isUTC;},hn.isUtcOffset=function(){return !!this.isValid()&&this._isUTC;},hn.isUtc=yt,hn.isUTC=yt,hn.zoneAbbr=function(){return this._isUTC?"UTC":"";},hn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":"";},hn.dates=F("dates accessor is deprecated. Use date instead.",rn),hn.months=F("months accessor is deprecated. Use month instead",me),hn.years=F("years accessor is deprecated. Use year instead",Fo),hn.zone=F("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",function(e,t){return null==e?-this.utcOffset():("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this);}),hn.isDSTShifted=F("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",gt);var mn=B.prototype;mn.calendar=function(e,t,o){var n=this._calendar[e]||this._calendar.sameElse;return z(n)?n.call(t,o):n;},mn.longDateFormat=function(e){var t=this._longDateFormat[e],o=this._longDateFormat[e.toUpperCase()];return t||!o?t:(this._longDateFormat[e]=o.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1);}),this._longDateFormat[e]);},mn.invalidDate=function(){return this._invalidDate;},mn.ordinal=function(e){return this._ordinal.replace("%d",e);},mn.preparse=Ft,mn.postformat=Ft,mn.relativeTime=function(e,t,o,n){var i=this._relativeTime[o];return z(i)?i(e,t,o,n):i.replace(/%d/i,e);},mn.pastFuture=function(e,t){var o=this._relativeTime[0<e?"future":"past"];return z(o)?o(t):o.replace(/%s/i,t);},mn.set=N,mn.months=function(e,t){return e?u(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||zo).test(t)?"format":"standalone"][e.month()]:u(this._months)?this._months:this._months.standalone;},mn.monthsShort=function(e,t){return e?u(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[zo.test(t)?"format":"standalone"][e.month()]:u(this._monthsShort)?this._monthsShort:this._monthsShort.standalone;},mn.monthsParse=pe,mn.monthsRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||ge.call(this),e?this._monthsStrictRegex:this._monthsRegex):(_(this,"_monthsRegex")||(this._monthsRegex=So),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex);},mn.monthsShortRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||ge.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(_(this,"_monthsShortRegex")||(this._monthsShortRegex=So),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex);},mn.week=function(e){return ve(e,this._week.dow,this._week.doy).week;},mn.firstDayOfYear=function(){return this._week.doy;},mn.firstDayOfWeek=function(){return this._week.dow;},mn.weekdays=function(e,t){var o=u(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return !0===e?Se(o,this._week.dow):e?o[e.day()]:o;},mn.weekdaysMin=function(e){return !0===e?Se(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin;},mn.weekdaysShort=function(e){return !0===e?Se(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort;},mn.weekdaysParse=De,mn.weekdaysRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(_(this,"_weekdaysRegex")||(this._weekdaysRegex=So),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex);},mn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(_(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=So),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex);},mn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Te.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(_(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=So),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex);},mn.isPM=function(e){return "p"===(e+"").toLowerCase().charAt(0);},mn.meridiem=function(e,t,o){return 11<e?o?"pm":"PM":o?"am":"AM";},Ye("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10,o=1===M(e%100/10)?"th":1==t?"st":2==t?"nd":3==t?"rd":"th";return e+o;}}),l.lang=F("moment.lang is deprecated. Use moment.locale instead.",Ye),l.langData=F("moment.langData is deprecated. Use moment.localeData instead.",Ne);var gn=a,yn=At("ms"),fn=At("s"),bn=At("m"),_n=At("h"),vn=At("d"),kn=At("w"),wn=At("M"),xn=At("Q"),Sn=At("y"),On=Wt("milliseconds"),Dn=Wt("seconds"),Tn=Wt("minutes"),Cn=Wt("hours"),En=Wt("days"),Mn=Wt("months"),In=Wt("years"),Pn=t,Fn={ss:44,s:45,m:45,h:22,d:26,M:11},Yn=a,zn=rt.prototype;return zn.isValid=function(){return this._isValid;},zn.abs=function(){var e=this._data;return this._milliseconds=gn(this._milliseconds),this._days=gn(this._days),this._months=gn(this._months),e.milliseconds=gn(e.milliseconds),e.seconds=gn(e.seconds),e.minutes=gn(e.minutes),e.hours=gn(e.hours),e.months=gn(e.months),e.years=gn(e.years),this;},zn.add=function(e,t){return Rt(this,e,t,1);},zn.subtract=function(e,t){return Rt(this,e,t,-1);},zn.as=function(e){if(!this.isValid())return NaN;var o=this._milliseconds,n,i;if(e=L(e),"month"===e||"quarter"===e||"year"===e)switch(n=this._days+o/864e5,i=this._months+Ht(n),e){case"month":return i;case"quarter":return i/3;case"year":return i/12;}else switch(n=this._days+t(Lt(this._months)),e){case"week":return n/7+o/6048e5;case"day":return n+o/864e5;case"hour":return 24*n+o/36e5;case"minute":return 1440*n+o/6e4;case"second":return 86400*n+o/1e3;case"millisecond":return s(864e5*n)+o;default:throw new Error("Unknown unit "+e);}},zn.asMilliseconds=yn,zn.asSeconds=fn,zn.asMinutes=bn,zn.asHours=_n,zn.asDays=vn,zn.asWeeks=kn,zn.asMonths=wn,zn.asQuarters=xn,zn.asYears=Sn,zn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+2592e6*(this._months%12)+31536e6*M(this._months/12):NaN;},zn._bubble=function(){var e=this._milliseconds,t=this._days,o=this._months,n=this._data,i,a,d,s,r;return 0<=e&&0<=t&&0<=o||0>=e&&0>=t&&0>=o||(e+=864e5*Bt(Lt(o)+t),t=0,o=0),n.milliseconds=e%1e3,i=E(e/1e3),n.seconds=i%60,a=E(i/60),n.minutes=a%60,d=E(a/60),n.hours=d%24,t+=E(d/24),r=E(Ht(t)),o+=r,t-=Bt(Lt(r)),s=E(o/12),o%=12,n.days=t,n.months=o,n.years=s,this;},zn.clone=function(){return ft(this);},zn.get=function(e){return e=L(e),this.isValid()?this[e+"s"]():NaN;},zn.milliseconds=On,zn.seconds=Dn,zn.minutes=Tn,zn.hours=Cn,zn.days=En,zn.weeks=function(){return E(this.days()/7);},zn.months=Mn,zn.years=In,zn.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),o=Ut(this,!e,t);return e&&(o=t.pastFuture(+this,o)),t.postformat(o);},zn.toISOString=qt,zn.toString=qt,zn.toJSON=qt,zn.locale=St,zn.localeData=Ot,zn.toIsoString=F("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",qt),zn.lang=sn,V("X",0,0,"unix"),V("x",0,0,"valueOf"),K("x",vo),K("X",xo),ee("X",function(e,t,o){o._d=new Date(1e3*parseFloat(e,10));}),ee("x",function(e,t,o){o._d=new Date(M(e));}),l.version="2.24.0",function(e){Zt=e;}(at),l.fn=hn,l.min=function(){var e=[].slice.call(arguments,0);return dt("isBefore",e);},l.max=function(){var e=[].slice.call(arguments,0);return dt("isAfter",e);},l.now=function(){return Date.now?Date.now():+new Date();},l.utc=k,l.unix=function(e){return at(1e3*e);},l.months=function(e,t){return zt(e,t,"months");},l.isDate=y,l.locale=Ye,l.invalid=O,l.duration=ft,l.isMoment=C,l.weekdays=function(e,t,o){return Nt(e,t,o,"weekdays");},l.parseZone=function(){return at.apply(null,arguments).parseZone();},l.localeData=Ne,l.isDuration=lt,l.monthsShort=function(e,t){return zt(e,t,"monthsShort");},l.weekdaysMin=function(e,t,o){return Nt(e,t,o,"weekdaysMin");},l.defineLocale=ze,l.updateLocale=function(e,t){if(null!=t){var o=Lo,n,i;i=Fe(e),null!=i&&(o=i._config),t=R(o,t),n=new B(t),n.parentLocale=Ao[e],Ao[e]=n,Ye(e);}else null!=Ao[e]&&(null==Ao[e].parentLocale?null!=Ao[e]&&delete Ao[e]:Ao[e]=Ao[e].parentLocale);return Ao[e];},l.locales=Re,l.weekdaysShort=function(e,t,o){return Nt(e,t,o,"weekdaysShort");},l.normalizeUnits=L,l.relativeTimeRounding=Vt,l.relativeTimeThreshold=function(e,t){return void 0!==Fn[e]&&(void 0===t?Fn[e]:(Fn[e]=t,"s"===e&&(Fn.ss=t-1),!0));},l.calendarFormat=function(e,t){var o=e.diff(t,"days",!0);return -6>o?"sameElse":-1>o?"lastWeek":0>o?"lastDay":1>o?"sameDay":2>o?"nextDay":7>o?"nextWeek":"sameElse";},l.prototype=hn,l.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},l;});}),moment$3="undefined"!=typeof window&&window.moment||moment$2$1,moment$4=Object.freeze({default:moment$3,__moduleExports:moment$3}),network={Images:Images,dotparser:dotparser$1,gephiParser:gephiParser,allOptions:allOptions$2,convertDot:DOTToGraph_1,convertGephi:parseGephi},index$2=Object.freeze({util:esm,data:esm$1,network:network,DOMutil:DOMutil$1,moment:moment$4,Hammer:hammer$1,keycharm:keycharm$1,DataSet:DataSet$1,DataView:DataView$1,Queue:Queue$1,Network:Network});

  /** 
   * vis-graph3d - data
   * http://visjs.org/
   * 
   * Create interactive, animated 3d graphs. Surfaces, lines, dots and block styling out of the box.
   * 
   * @version 5.0.0
   * @date    2019-07-16T14:14:19Z
   * 
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
   * 
   * @license 
   * vis.js is dual licensed under both
   * 
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   * 
   *   and
   * 
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   * 
   * vis.js may be distributed under either license.
   */function _typeof$2(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$2=function(obj){return typeof obj;};}else{_typeof$2=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$2(obj);}function _defineProperty$3(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function ownKeys$3(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){keys.push.apply(keys,Object.getOwnPropertySymbols(object));}if(enumerableOnly)keys=keys.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});return keys;}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys$3(source,true).forEach(function(key){_defineProperty$3(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys$3(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _toConsumableArray$3(arr){return _arrayWithoutHoles$3(arr)||_iterableToArray$3(arr)||_nonIterableSpread$3();}function _arrayWithoutHoles$3(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2;}}function _iterableToArray$3(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _nonIterableSpread$3(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var commonjsGlobal$3=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function commonjsRequire$3(){throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');}function createCommonjsModule$3(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var moment$5=createCommonjsModule$3(function(module,exports){(function(global,factory){module.exports=factory();})(commonjsGlobal$3,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else{var k;for(k in obj){if(obj.hasOwnProperty(k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
  return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m);var parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties=hooks.momentProperties=[];function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i=0;i<momentProperties.length;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}var updateInProgress=false;// Moment prototype object
  function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
  // objects.
  if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function absFloor(number){if(number<0){// -0 -> 0
  return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}// compare two arrays, return the number of differences
  function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg='';if(typeof arguments[i]==='object'){arg+='\n['+i+'] ';for(var key in arguments[0]){arg+=key+': '+arguments[0][key]+', ';}arg=arg.slice(0,-2);// Remove trailing comma and space
  }else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
  // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
  // TODO: Remove "ordinalParse" fallback in next major release.
  this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
  res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d';var defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj){units.push({unit:u,priority:priorities[u]});}units.sort(function(a,b){return a.priority-b.priority;});return units;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions={};var formatTokenFunctions={};// token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
  function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var match1=/\d/;//       0 - 9
  var match2=/\d\d/;//      00 - 99
  var match3=/\d{3}/;//     000 - 999
  var match4=/\d{4}/;//    0000 - 9999
  var match6=/[+-]?\d{6}/;// -999999 - 999999
  var match1to2=/\d\d?/;//       0 - 99
  var match3to4=/\d\d\d\d?/;//     999 - 9999
  var match5to6=/\d\d\d\d\d\d?/;//   99999 - 999999
  var match1to3=/\d{1,3}/;//       0 - 999
  var match1to4=/\d{1,4}/;//       0 - 9999
  var match1to6=/[+-]?\d{1,6}/;// -999999 - 999999
  var matchUnsigned=/\d+/;//       0 - inf
  var matchSigned=/[+-]?\d+/;//    -inf - inf
  var matchOffset=/Z|[+-]\d\d:?\d\d/gi;// +00:00 -00:00 +0000 -0000 or Z
  var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;// +00 -00 +00:00 -00:00 +0000 -0000 or Z
  var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;// 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  var matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;var regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0;var MONTH=1;var DATE=2;var HOUR=3;var MINUTE=4;var SECOND=5;var MILLISECOND=6;var WEEK=7;var WEEKDAY=8;// FORMATTING
  addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?''+y:'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
  addUnitAlias('year','y');// PRIORITIES
  addUnitPriority('year',1);// PARSING
  addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
  function daysInYear(year){return isLeapYear(year)?366:365;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}// HOOKS
  hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
  var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else{return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else{mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
  function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(typeof units==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units);for(var i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function(o){// I know
  var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
  addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
  addUnitAlias('month','M');// PRIORITY
  addUnitPriority('month',8);// PARSING
  addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
  if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
  var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
  this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
  // Sorting makes sure if one month (or abbr) is a prefix of another
  // see sorting in computeMonthsParse
  for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
  function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
  return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
  if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else{return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}var defaultMonthsShortRegex=matchWord;function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}var defaultMonthsRegex=matchWord;function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
  // will match the longer piece.
  shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
  // https://stackoverflow.com/q/181348
  var date;// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else{date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date;// the Date.UTC function remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){var args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
  args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else{date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
  function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
  fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
  fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
  addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
  addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
  addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
  addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
  // LOCALES
  function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
  doy:6// The week that contains Jan 6th is the first week of the year.
  };function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
  function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
  addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
  addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
  addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
  addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
  if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
  function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
  function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
  function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
  // as a setter, sunday should belong to the previous week.
  if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}var defaultWeekdaysRegex=matchWord;function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}var defaultWeekdaysShortRegex=matchWord;function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}var defaultWeekdaysMinRegex=matchWord;function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);minp=this.weekdaysMin(mom,'');shortp=this.weekdaysShort(mom,'');longp=this.weekdays(mom,'');minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
  // will match the longer piece.
  minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);mixedPieces[i]=regexEscape(mixedPieces[i]);}this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
  function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
  addUnitAlias('hour','h');// PRIORITY
  addUnitPriority('hour',13);// PARSING
  function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
  function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
  // Using charAt should be more compatible.
  return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}// MOMENTS
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour=makeGetSet('Hours',true);var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
  var locales={};var localeFamilies={};var globalLocale;function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){//the next array item is better than a shallower substring of this one
  break;}j--;}i++;}return globalLocale;}function loadLocale(name){var oldLocale=null;// TODO: Find a better way to register and load all the locales in Node
  if(!locales[name]&&'object'!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;var aliasedRequire=commonjsRequire$3;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){}}return locales[name];}// This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
  globalLocale=data;}else{if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
  console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else{if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
  // make sure we set the locale AFTER all child locales have been
  // created, so we won't end up with the child locale set.
  getSetGlobalLocale(name);return locales[name];}else{// useful for testing
  delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;// MERGE
  tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;// backwards compat for now: also set the locale
  getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
  if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
  function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
  locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow;var a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// Pick the first defined of two or three arguments.
  function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
  var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
  if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
  if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
  // * if no year, month, day of month are given, default to today
  // * if day of month is given, default month and year
  // * if month is given, default only year
  // * if year is given, don't default anything
  for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
  for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
  if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
  // with parseZone.
  if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
  if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
  // how we interpret now (local, utc, fixed offset). So create
  // a now version of current config (take local/utc/offset flags, and
  // create now).
  weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;var curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
  week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
  weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
  weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to beginning of week
  weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;var isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],// YYYYMM is NOT allowed by the standard
  ['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/]];// iso time formats and regexes
  var isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]];var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;// date from iso format
  function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
  timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
  var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}var obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
  return 0;}else{var hm=parseInt(numOffset,10);var m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
  function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i));if(match){var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else{config._isValid=false;}}// date from iso format or fallback
  function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else{return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else{return;}// Final attempt, use Input Fallback
  hooks.createFromInputFallback(config);}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged and will be removed in an upcoming major release. Please refer to '+'http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// constant that refers to the ISO standard
  hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
  hooks.RFC_2822=function(){};// date from string and format string
  function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
  if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
  var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];// console.log('token', token, 'parsedInput', parsedInput,
  //         'regex', getParseRegexForToken(token, config));
  if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
  if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
  getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
  if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
  config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
  return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
  isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
  return hour;}}// date from string and array of format strings
  function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(!isValid(tempConfig)){continue;}// if there is any input that was not parsed add a penalty for that format
  currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
  currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
  res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
  config._d=new Date(input);}else{hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
  // https://github.com/moment/moment/issues/1423
  c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return createInvalid();}});var prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
  function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){for(var key in m){if(!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}var unitHasDecimal=false;for(var i=0;i<ordering.length;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
  }if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
  this._milliseconds=+milliseconds+seconds*1e3+// 1000
  minutes*6e4+// 1000 * 60
  hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
  // Because of dateAddRemove treats 24 hours as different from a
  // day when working around DST, we need to store them separately
  this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
  // which months you are are talking about, so we have to store
  // it separately.
  this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// FORMATTING
  function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset();var sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
  addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher);if(matches===null){return null;}var chunk=matches[matches.length-1]||[];var parts=(chunk+'').match(chunkOffset)||['-',0,0];var minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
  res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else{return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
  // https://github.com/moment/moment/pull/1871
  return -Math.round(m._d.getTimezoneOffset()/15)*15;}// HOOKS
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset=function(){};// MOMENTS
  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else{this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={};copyConfig(c,this);c=prepareConfig(c);if(c._a){var other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
  var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  var isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
  match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
  };}else if(!!(match=isoRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
  duration={};}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
  // converts floats to ints.
  // inp may be undefined, so careful calling replace on it.
  var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
  return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
  if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}val=typeof val==='string'?+val:val;dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
  return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add');var subtract=createAdder(-1,'subtract');function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// We want to compare the start of today, vs this.
  // Getting start-of-today depends on whether we're local/utc/offset or not.
  var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse';var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
  case'minute':output=(this-that)/6e4;break;// 1000 * 60
  case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
  case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
  case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
  default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){// difference in months
  var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
  anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
  adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
  adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
  return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true;var m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
  if(utc){return this.toDate().toISOString();}else{return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment';var zone='';if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}var prefix='['+func+'("]';var year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';var datetime='-MM-DD[T]HH:mm:ss.SSS';var suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000;var MS_PER_MINUTE=60*MS_PER_SECOND;var MS_PER_HOUR=60*MS_PER_MINUTE;var MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return new Date(y+400,m,d)-MS_PER_400_YEARS;}else{return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else{return Date.UTC(y,m,d);}}function startOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
  return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}// FORMATTING
  addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
  addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
  addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
  addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
  function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
  addFormatToken('Q',0,'Qo','quarter');// ALIASES
  addUnitAlias('quarter','Q');// PRIORITY
  addUnitPriority('quarter',7);// PARSING
  addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
  function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
  addFormatToken('D',['DD',2],'Do','date');// ALIASES
  addUnitAlias('date','D');// PRIORITY
  addUnitPriority('date',9);// PARSING
  addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
  return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
  var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
  addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
  addUnitAlias('dayOfYear','DDD');// PRIORITY
  addUnitPriority('dayOfYear',4);// PARSING
  addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
  // MOMENTS
  function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
  addFormatToken('m',['mm',2],0,'minute');// ALIASES
  addUnitAlias('minute','m');// PRIORITY
  addUnitPriority('minute',14);// PARSING
  addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
  var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
  addFormatToken('s',['ss',2],0,'second');// ALIASES
  addUnitAlias('second','s');// PRIORITY
  addUnitPriority('second',15);// PARSING
  addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
  var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
  addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
  addUnitAlias('millisecond','ms');// PRIORITY
  addUnitPriority('millisecond',16);// PARSING
  addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}// MOMENTS
  var getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
  addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
  function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale();var utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i;var out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0;if(index!=null){return get$1(format,(index+shift)%7,field,'day');}var i;var out=[];for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
  hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
  // check: https://github.com/moment/moment/issues/2166
  if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
  // examples of what that means.
  data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
  monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
  years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
  return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else{// handle milliseconds separately because of floating point math errors (issue #1867)
  days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
  case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
  function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms');var asSeconds=makeAs('s');var asMinutes=makeAs('m');var asHours=makeAs('h');var asDays=makeAs('d');var asWeeks=makeAs('w');var asMonths=makeAs('M');var asQuarters=makeAs('Q');var asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds');var seconds=makeGetter('seconds');var minutes=makeGetter('minutes');var hours=makeGetter('hours');var days=makeGetter('days');var months=makeGetter('months');var years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round;var thresholds={ss:44,// a few seconds to seconds
  s:45,// seconds to minute
  m:45,// minutes to hour
  h:22,// hours to day
  d:26,// days to month
  M:11// months to year
  };// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,locale){var duration=createDuration(posNegDuration).abs();var seconds=round(duration.as('s'));var minutes=round(duration.as('m'));var hours=round(duration.as('h'));var days=round(duration.as('d'));var months=round(duration.as('M'));var years=round(duration.as('y'));var a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days]||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(withSuffix){if(!this.isValid()){return this.localeData().invalidDate();}var locale=this.localeData();var output=relativeTime$1(this,!withSuffix,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
  //  * milliseconds bubble up until they become hours
  //  * days do not bubble at all
  //  * months bubble up until they become years
  // This is because there is no context-free conversion between hours and days
  // (think of clock changes)
  // and also not between days and months (28-31 days per month)
  if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000;var days=abs$1(this._days);var months=abs$1(this._months);var minutes,hours,years;// 3600 seconds -> 60 minutes -> 1 hour
  minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
  years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
  var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';var total=this.asSeconds();if(!total){// this is the same as C#'s (Noda) and python (isodate)...
  // but not other JS (goog.date)
  return 'P0D';}var totalSign=total<0?'-':'';var ymSign=sign(this._months)!==sign(total)?'-':'';var daysSign=sign(this._days)!==sign(total)?'-':'';var hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(Y?ymSign+Y+'Y':'')+(M?ymSign+M+'M':'')+(D?daysSign+D+'D':'')+(h||m||s?'T':'')+(h?hmsSign+h+'H':'')+(m?hmsSign+m+'M':'')+(s?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// Side effect imports
  // FORMATTING
  addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
  addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input,10)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});// Side effect imports
  hooks.version='2.24.0';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
  DATE:'YYYY-MM-DD',// <input type="date" />
  TIME:'HH:mm',// <input type="time" />
  TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
  TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
  WEEK:'GGGG-[W]WW',// <input type="week" />
  MONTH:'YYYY-MM'// <input type="month" />
  };return hooks;});});// Maps for number <-> hex string conversion
  var byteToHex$4=[];for(var i$4=0;i$4<256;i$4++){byteToHex$4[i$4]=(i$4+0x100).toString(16).substr(1);}/**
   * Represent binary UUID into it's string representation.
   *
   * @param buf - Buffer containing UUID bytes.
   * @param offset - Offset from the start of the buffer where the UUID is saved (not needed if the buffer starts with the UUID).
   *
   * @returns String representation of the UUID.
   */function stringifyUUID$3(buf,offset){var i=offset||0;var bth=byteToHex$4;return bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]];}/**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */var random$3=function(){if(typeof crypto!=='undefined'&&crypto.getRandomValues){// WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
  // Moderately fast, high quality
  var _rnds8=new Uint8Array(16);return function whatwgRNG(){crypto.getRandomValues(_rnds8);return _rnds8;};}// Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().
  // It's fast, but is of unspecified quality.
  var _rnds=new Array(16);return function(){for(var i=0,r;i<16;i++){if((i&0x03)===0){r=Math.random()*0x100000000;}_rnds[i]=r>>>((i&0x03)<<3)&0xff;}return _rnds;};//     uuid.js
  //
  //     Copyright (c) 2010-2012 Robert Kieffer
  //     MIT License - http://opensource.org/licenses/mit-license.php
  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  // return require('./rng');
  }();var byteToHex$1$3=[];for(var i$1$3=0;i$1$3<256;i$1$3++){byteToHex$1$3[i$1$3]=(i$1$3+0x100).toString(16).substr(1);}// **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq
  var seedBytes$3=random$3();// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var defaultNodeId$3=[seedBytes$3[0]|0x01,seedBytes$3[1],seedBytes$3[2],seedBytes$3[3],seedBytes$3[4],seedBytes$3[5]];// Per 4.2.2, randomize (14 bit) clockseq
  var defaultClockseq$3=(seedBytes$3[6]<<8|seedBytes$3[7])&0x3fff;// Previous uuid creation time
  /**
   * UUIDv4 options.
   */ /**
   * Generate UUIDv4
   *
   * @param options - Options to be used instead of default generated values.
   * String 'binary' is a shorthand for uuid4({}, new Array(16)).
   * @param buf - If present the buffer will be filled with the generated UUID.
   * @param offset - Offset of the UUID from the start of the buffer.
   *
   * @returns UUIDv4
   */function uuid4$3(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var buf=arguments.length>1?arguments[1]:undefined;var offset=arguments.length>2?arguments[2]:undefined;// Deprecated - 'format' argument, as supported in v1.2
  var i=buf&&offset||0;if(typeof options==='string'){buf=options==='binary'?new Array(16):undefined;options={};}var rnds=options.random||(options.rng||random$3)();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;// Copy bytes to buffer, if provided
  if(buf){for(var ii=0;ii<16;ii++){buf[i+ii]=rnds[ii];}}return buf||stringifyUUID$3(rnds);}// Rollup will complain about mixing default and named exports in UMD build,
  // for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'
  // code from http://momentjs.com/
  var ASPDateRegex$3=/^\/?Date\((-?\d+)/i;// Hex color
  var fullHexRE$2=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;var shortHexRE$2=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;/**
   * Hue, Saturation, Value.
   */ /**
   * Test whether given object is a number
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if number, false otherwise.
   */function isNumber$3(value){return value instanceof Number||typeof value==='number';}/**
   * Remove everything in the DOM object
   *
   * @param DOMobject - Node whose child nodes will be recursively deleted.
   */function recursiveDOMDelete$2(DOMobject){if(DOMobject){while(DOMobject.hasChildNodes()===true){var child=DOMobject.firstChild;if(child){recursiveDOMDelete$2(child);DOMobject.removeChild(child);}}}}/**
   * Test whether given object is a string
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if string, false otherwise.
   */function isString$3(value){return value instanceof String||typeof value==='string';}/**
   * Test whether given object is a object (not primitive or null).
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if not null object, false otherwise.
   */function isObject$2(value){return _typeof$2(value)==='object'&&value!==null;}/**
   * Test whether given object is a Date, or a String containing a Date
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Date instance or string date representation, false otherwise.
   */function isDate$2(value){if(value instanceof Date){return true;}else if(isString$3(value)){// test whether this string contains a date
  var match=ASPDateRegex$3.exec(value);if(match){return true;}else if(!isNaN(Date.parse(value))){return true;}}return false;}/**
   * Test whether given object is a Moment date.
   * @TODO: This is basically a workaround, if Moment was imported property it wouldn't necessary as moment.isMoment is a TS type guard.
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Moment instance, false otherwise.
   */function isMoment$3(value){return moment$5.isMoment(value);}/**
   * Copy property from b to a if property present in a.
   * If property in b explicitly set to null, delete it if `allowDeletion` set.
   *
   * Internal helper routine, should not be exported. Not added to `exports` for that reason.
   *
   * @param a - Target object.
   * @param b - Source object.
   * @param prop - Name of property to copy from b to a.
   * @param allowDeletion  if true, delete property in a if explicitly set to null in b
   */function copyOrDelete$2(a,b,prop,allowDeletion){var doDeletion=false;if(allowDeletion===true){doDeletion=b[prop]===null&&a[prop]!==undefined;}if(doDeletion){delete a[prop];}else{a[prop]=b[prop];// Remember, this is a reference copy!
  }}/**
   * Fill an object with a possibly partially defined other object.
   *
   * Only copies values for the properties already present in a.
   * That means an object is not created on a property if only the b object has it.
   *
   * @param a - The object that will have it's properties updated.
   * @param b - The object with property updates.
   * @param allowDeletion - if true, delete properties in a that are explicitly set to null in b
   */function fillIfDefined$2(a,b){var allowDeletion=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;// NOTE: iteration of properties of a
  // NOTE: prototype properties iterated over as well
  for(var prop in a){if(b[prop]!==undefined){if(b[prop]===null||_typeof$2(b[prop])!=='object'){// Note: typeof null === 'object'
  copyOrDelete$2(a,b,prop,allowDeletion);}else{var aProp=a[prop];var bProp=b[prop];if(isObject$2(aProp)&&isObject$2(bProp)){fillIfDefined$2(aProp,bProp,allowDeletion);}}}}}/**
   * Copy the values of all of the enumerable own properties from one or more source objects to a
   * target object. Returns the target object.
   *
   * @param target - The target object to copy to.
   * @param source - The source object from which to copy properties.
   *
   * @return The target object.
   */var extend$2=Object.assign;/**
   * Extend object a with selected properties of object b or a series of objects
   * Only properties with defined values are copied
   *
   * @param props - Properties to be copied to a.
   * @param a - The target.
   * @param others - The sources.
   *
   * @returns Argument a.
   */function selectiveExtend$2(props,a){// @TODO: better solution?
  if(!Array.isArray(props)){throw new Error('Array with property names expected as first argument');}for(var i=2;i<(arguments.length<=2?0:arguments.length-2);i++){var other=i+2<2||arguments.length<=i+2?undefined:arguments[i+2];for(var p=0;p<props.length;p++){var prop=props[p];if(other&&Object.prototype.hasOwnProperty.call(other,prop)){a[prop]=other[prop];}}}return a;}/**
   * Extend object a with selected properties of object b.
   * Only properties with defined values are copied.
   *
   * **Note:** Previous version of this routine implied that multiple source objects
   *           could be used; however, the implementation was **wrong**.
   *           Since multiple (>1) sources weren't used anywhere in the `vis.js` code,
   *           this has been removed
   *
   * @param props - Names of first-level properties to copy over.
   * @param a - Target object.
   * @param b - Source object.
   * @param allowDeletion - If true, delete property in a if explicitly set to null in b.
   *
   * @returns Argument a.
   */function selectiveDeepExtend$2(props,a,b){var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// TODO: add support for Arrays to deepExtend
  if(Array.isArray(b)){throw new TypeError('Arrays are not supported by deepExtend');}for(var p=0;p<props.length;p++){var prop=props[p];if(Object.prototype.hasOwnProperty.call(b,prop)){if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){deepExtend$2(a[prop],b[prop],false,allowDeletion);}else{copyOrDelete$2(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){throw new TypeError('Arrays are not supported by deepExtend');}else{copyOrDelete$2(a,b,prop,allowDeletion);}}}return a;}/**
   * Extend object `a` with properties of object `b`, ignoring properties which are explicitly
   * specified to be excluded.
   *
   * The properties of `b` are considered for copying.
   * Properties which are themselves objects are are also extended.
   * Only properties with defined values are copied
   *
   * @param propsToExclude - Names of properties which should *not* be copied.
   * @param a - Object to extend.
   * @param b - Object to take properties from for extension.
   * @param allowDeletion - If true, delete properties in a that are explicitly set to null in b.
   *
   * @returns Argument a.
   */function selectiveNotDeepExtend$2(propsToExclude,a,b){var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// TODO: add support for Arrays to deepExtend
  // NOTE: array properties have an else-below; apparently, there is a problem here.
  if(Array.isArray(b)){throw new TypeError('Arrays are not supported by deepExtend');}for(var prop in b){if(!Object.prototype.hasOwnProperty.call(b,prop)){continue;}// Handle local properties only
  if(propsToExclude.indexOf(prop)!==-1){continue;}// In exclusion list, skip
  if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){deepExtend$2(a[prop],b[prop]);// NOTE: allowDeletion not propagated!
  }else{copyOrDelete$2(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){a[prop]=[];for(var i=0;i<b[prop].length;i++){a[prop].push(b[prop][i]);}}else{copyOrDelete$2(a,b,prop,allowDeletion);}}return a;}/**
   * Deep extend an object a with the properties of object b
   *
   * @param a - Target object.
   * @param b - Source object.
   * @param protoExtend - If true, the prototype values will also be extended
   * (ie. the options objects that inherit from others will also get the inherited options).
   * @param allowDeletion - If true, the values of fields that are null will be deleted.
   *
   * @returns Argument a.
   */function deepExtend$2(a,b){var protoExtend=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;for(var prop in b){if(Object.prototype.hasOwnProperty.call(b,prop)||protoExtend===true){if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){deepExtend$2(a[prop],b[prop],protoExtend);// NOTE: allowDeletion not propagated!
  }else{copyOrDelete$2(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){a[prop]=[];for(var i=0;i<b[prop].length;i++){a[prop].push(b[prop][i]);}}else{copyOrDelete$2(a,b,prop,allowDeletion);}}}return a;}/**
   * Test whether all elements in two arrays are equal.
   *
   * @param a - First array.
   * @param b - Second array.
   *
   * @returns True if both arrays have the same length and same elements (1 = '1').
   */function equalArray$2(a,b){if(a.length!==b.length){return false;}for(var i=0,len=a.length;i<len;i++){if(a[i]!=b[i]){return false;}}return true;}/**
   * Convert an object into another type
   *
   * @param object - Value of unknown type.
   * @param type - Name of the desired type.
   *
   * @returns Object in the desired type.
   * @throws Error
   */function convert$3(object,type){var match;if(object===undefined){return undefined;}if(object===null){return null;}if(!type){return object;}if(!(typeof type==='string')&&!(type instanceof String)){throw new Error('Type must be a string');}//noinspection FallthroughInSwitchStatementJS
  switch(type){case'boolean':case'Boolean':return Boolean(object);case'number':case'Number':if(isString$3(object)&&!isNaN(Date.parse(object))){return moment$5(object).valueOf();}else{// @TODO: I don't think that Number and String constructors are a good idea.
  // This could also fail if the object doesn't have valueOf method or if it's redefined.
  // For example: Object.create(null) or { valueOf: 7 }.
  return Number(object.valueOf());}case'string':case'String':return String(object);case'Date':if(isNumber$3(object)){return new Date(object);}if(object instanceof Date){return new Date(object.valueOf());}else if(isMoment$3(object)){return new Date(object.valueOf());}if(isString$3(object)){match=ASPDateRegex$3.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1]));// parse number
  }else{return moment$5(new Date(object)).toDate();// parse string
  }}else{throw new Error('Cannot convert object of type '+getType$3(object)+' to type Date');}case'Moment':if(isNumber$3(object)){return moment$5(object);}if(object instanceof Date){return moment$5(object.valueOf());}else if(isMoment$3(object)){return moment$5(object);}if(isString$3(object)){match=ASPDateRegex$3.exec(object);if(match){// object is an ASP date
  return moment$5(Number(match[1]));// parse number
  }else{return moment$5(object);// parse string
  }}else{throw new Error('Cannot convert object of type '+getType$3(object)+' to type Date');}case'ISODate':if(isNumber$3(object)){return new Date(object);}else if(object instanceof Date){return object.toISOString();}else if(isMoment$3(object)){return object.toDate().toISOString();}else if(isString$3(object)){match=ASPDateRegex$3.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1])).toISOString();// parse number
  }else{return moment$5(object).format();// ISO 8601
  }}else{throw new Error('Cannot convert object of type '+getType$3(object)+' to type ISODate');}case'ASPDate':if(isNumber$3(object)){return '/Date('+object+')/';}else if(object instanceof Date){return '/Date('+object.valueOf()+')/';}else if(isString$3(object)){match=ASPDateRegex$3.exec(object);var _value;if(match){// object is an ASP date
  _value=new Date(Number(match[1])).valueOf();// parse number
  }else{_value=new Date(object).valueOf();// parse string
  }return '/Date('+_value+')/';}else{throw new Error('Cannot convert object of type '+getType$3(object)+' to type ASPDate');}default:var never=type;throw new Error("Unknown type ".concat(never));}}/**
   * Get the type of an object, for example exports.getType([]) returns 'Array'
   *
   * @param object - Input value of unknown type.
   *
   * @returns Detected type.
   */function getType$3(object){var type=_typeof$2(object);if(type==='object'){if(object===null){return 'null';}if(object instanceof Boolean){return 'Boolean';}if(object instanceof Number){return 'Number';}if(object instanceof String){return 'String';}if(Array.isArray(object)){return 'Array';}if(object instanceof Date){return 'Date';}return 'Object';}if(type==='number'){return 'Number';}if(type==='boolean'){return 'Boolean';}if(type==='string'){return 'String';}if(type===undefined){return 'undefined';}return type;}/**
   * Used to extend an array and copy it. This is used to propagate paths recursively.
   *
   * @param arr - First part.
   * @param newValue - The value to be aadded into the array.
   *
   * @returns A new array with all items from arr and newValue (which is last).
   */function copyAndExtendArray$2(arr,newValue){return [].concat(_toConsumableArray$3(arr),[newValue]);}/**
   * Used to extend an array and copy it. This is used to propagate paths recursively.
   *
   * @param arr - The array to be copied.
   *
   * @returns Shallow copy of arr.
   */function copyArray$2(arr){return arr.slice();}/**
   * Retrieve the absolute left value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute left position of this element in the browser page.
   */function getAbsoluteLeft$2(elem){return elem.getBoundingClientRect().left;}/**
   * Retrieve the absolute right value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute right position of this element in the browser page.
   */function getAbsoluteRight$2(elem){return elem.getBoundingClientRect().right;}/**
   * Retrieve the absolute top value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute top position of this element in the browser page.
   */function getAbsoluteTop$2(elem){return elem.getBoundingClientRect().top;}/**
   * Add a className to the given elements style.
   *
   * @param elem - The element to which the classes will be added.
   * @param classNames - Space separated list of classes.
   */function addClassName$2(elem,classNames){var classes=elem.className.split(' ');var newClasses=classNames.split(' ');classes=classes.concat(newClasses.filter(function(className){return classes.indexOf(className)<0;}));elem.className=classes.join(' ');}/**
   * Remove a className from the given elements style.
   *
   * @param elem - The element from which the classes will be removed.
   * @param classNames - Space separated list of classes.
   */function removeClassName$2(elem,classNames){var classes=elem.className.split(' ');var oldClasses=classNames.split(' ');classes=classes.filter(function(className){return oldClasses.indexOf(className)<0;});elem.className=classes.join(' ');}/**
   * For each method for both arrays and objects.
   * In case of an array, the built-in Array.forEach() is applied (**No, it's not!**).
   * In case of an Object, the method loops over all properties of the object.
   *
   * @param object - An Object or Array to be iterated over.
   * @param callback - Array.forEach-like callback.
   */function forEach$2(object,callback){if(Array.isArray(object)){// array
  var len=object.length;for(var i=0;i<len;i++){callback(object[i],i,object);}}else{// object
  for(var _key in object){if(Object.prototype.hasOwnProperty.call(object,_key)){callback(object[_key],_key,object);}}}}/**
   * Convert an object into an array: all objects properties are put into the array. The resulting array is unordered.
   *
   * @param o - Object that contains the properties and methods.
   *
   * @returns An array of unordered values.
   */var toArray$2=Object.values;/**
   * Update a property in an object
   *
   * @param object - The object whose property will be updated.
   * @param key - Name of the property to be updated.
   * @param value - The new value to be assigned.
   *
   * @returns Whether the value was updated (true) or already strictly the same in the original object (false).
   */function updateProperty$2(object,key,value){if(object[key]!==value){object[key]=value;return true;}else{return false;}}/**
   * Throttle the given function to be only executed once per animation frame.
   *
   * @param fn - The original function.
   *
   * @returns The throttled function.
   */function throttle$2(fn){var scheduled=false;return function(){if(!scheduled){scheduled=true;requestAnimationFrame(function(){scheduled=false;fn();});}};}/**
   * Add and event listener. Works for all browsers.
   *
   * @param element - The element to bind the event listener to.
   * @param action - Same as Element.addEventListener(action, —, —).
   * @param listener - Same as Element.addEventListener(—, listener, —).
   * @param useCapture - Same as Element.addEventListener(—, —, useCapture).
   */function addEventListener$2(element,action,listener,useCapture){if(element.addEventListener){if(useCapture===undefined){useCapture=false;}if(action==='mousewheel'&&navigator.userAgent.indexOf('Firefox')>=0){action='DOMMouseScroll';// For Firefox
  }element.addEventListener(action,listener,useCapture);}else{element.attachEvent('on'+action,listener);// IE browsers
  }}/**
   * Remove an event listener from an element
   *
   * @param element - The element to bind the event listener to.
   * @param action - Same as Element.removeEventListener(action, —, —).
   * @param listener - Same as Element.removeEventListener(—, listener, —).
   * @param useCapture - Same as Element.removeEventListener(—, —, useCapture).
   */function removeEventListener$2(element,action,listener,useCapture){if(element.removeEventListener){// non-IE browsers
  if(useCapture===undefined){useCapture=false;}if(action==='mousewheel'&&navigator.userAgent.indexOf('Firefox')>=0){action='DOMMouseScroll';// For Firefox
  }element.removeEventListener(action,listener,useCapture);}else{element.detachEvent('on'+action,listener);// IE browsers
  }}/**
   * Cancels the event's default action if it is cancelable, without stopping further propagation of the event.
   *
   * @param event - The event whose default action should be prevented.
   */function preventDefault$2(event){if(!event){event=window.event;}if(!event);else if(event.preventDefault){event.preventDefault();// non-IE browsers
  }else{event.returnValue=false;// IE browsers
  }}/**
   * Get HTML element which is the target of the event.
   *
   * @param event - The event.
   *
   * @returns The element or null if not obtainable.
   */function getTarget$2(){var event=arguments.length>0&&arguments[0]!==undefined?arguments[0]:window.event;// code from http://www.quirksmode.org/js/events_properties.html
  // @TODO: EventTarget can be almost anything, is it okay to return only Elements?
  var target=null;if(!event);else if(event.target){target=event.target;}else if(event.srcElement){target=event.srcElement;}if(!(target instanceof Element)){return null;}if(target.nodeType!=null&&target.nodeType==3){// defeat Safari bug
  target=target.parentNode;if(!(target instanceof Element)){return null;}}return target;}/**
   * Check if given element contains given parent somewhere in the DOM tree
   *
   * @param element - The element to be tested.
   * @param parent - The ancestor (not necessarily parent) of the element.
   *
   * @returns True if parent is an ancestor of the element, false otherwise.
   */function hasParent$2(element,parent){var elem=element;while(elem){if(elem===parent){return true;}else if(elem.parentNode){elem=elem.parentNode;}else{return false;}}return false;}var option$2={/**
     * Convert a value into a boolean.
     *
     * @param value - Value to be converted intoboolean, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding boolean value, if none then the default value, if none then null.
     */asBoolean:function asBoolean(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return value!=false;}return defaultValue||null;},/**
     * Convert a value into a number.
     *
     * @param value - Value to be converted intonumber, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding **boxed** number value, if none then the default value, if none then null.
     */asNumber:function asNumber(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return Number(value)||defaultValue||null;}return defaultValue||null;},/**
     * Convert a value into a string.
     *
     * @param value - Value to be converted intostring, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding **boxed** string value, if none then the default value, if none then null.
     */asString:function asString(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return String(value);}return defaultValue||null;},/**
     * Convert a value into a size.
     *
     * @param value - Value to be converted intosize, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding string value (number + 'px'), if none then the default value, if none then null.
     */asSize:function asSize(value,defaultValue){if(typeof value=='function'){value=value();}if(isString$3(value)){return value;}else if(isNumber$3(value)){return value+'px';}else{return defaultValue||null;}},/**
     * Convert a value into a DOM Element.
     *
     * @param value - Value to be converted into DOM Element, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns The DOM Element, if none then the default value, if none then null.
     */asElement:function asElement(value,defaultValue){if(typeof value=='function'){value=value();}return value||defaultValue||null;}};/**
   * Convert hex color string into RGB color object.
   * http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb
   *
   * @param hex - Hex color string (3 or 6 digits, with or without #).
   *
   * @returns RGB color object.
   */function hexToRGB$2(hex){var result;switch(hex.length){case 3:case 4:result=shortHexRE$2.exec(hex);return result?{r:parseInt(result[1]+result[1],16),g:parseInt(result[2]+result[2],16),b:parseInt(result[3]+result[3],16)}:null;case 6:case 7:result=fullHexRE$2.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null;default:return null;}}/**
   * This function takes string color in hex or RGB format and adds the opacity, RGBA is passed through unchanged.
   *
   * @param color - The color string (hex, RGB, RGBA).
   * @param opacity - The new opacity.
   *
   * @returns RGBA string, for example 'rgba(255, 0, 127, 0.3)'.
   */function overrideOpacity$2(color,opacity){if(color.indexOf('rgba')!==-1){return color;}else if(color.indexOf('rgb')!==-1){var rgb=color.substr(color.indexOf('(')+1).replace(')','').split(',');return 'rgba('+rgb[0]+','+rgb[1]+','+rgb[2]+','+opacity+')';}else{var _rgb=hexToRGB$2(color);if(_rgb==null){return color;}else{return 'rgba('+_rgb.r+','+_rgb.g+','+_rgb.b+','+opacity+')';}}}/**
   * Convert RGB <0, 255> into hex color string.
   *
   * @param red - Red channel.
   * @param green - Green channel.
   * @param blue - Blue channel.
   *
   * @returns Hex color string (for example: '#0acdc0').
   */function RGBToHex$2(red,green,blue){return '#'+((1<<24)+(red<<16)+(green<<8)+blue).toString(16).slice(1);}/**
   * Parse a color property into an object with border, background, and highlight colors
   *
   * @param inputColor - Shorthand color string or input color object.
   * @param defaultColor - Full color object to fill in missing values in inputColor.
   *
   * @returns Color object.
   */function parseColor$2(inputColor,defaultColor){if(isString$3(inputColor)){var colorStr=inputColor;if(isValidRGB$2(colorStr)){var rgb=colorStr.substr(4).substr(0,colorStr.length-5).split(',').map(function(value){return parseInt(value);});colorStr=RGBToHex$2(rgb[0],rgb[1],rgb[2]);}if(isValidHex$2(colorStr)===true){var hsv=hexToHSV$2(colorStr);var lighterColorHSV={h:hsv.h,s:hsv.s*0.8,v:Math.min(1,hsv.v*1.02)};var darkerColorHSV={h:hsv.h,s:Math.min(1,hsv.s*1.25),v:hsv.v*0.8};var darkerColorHex=HSVToHex$2(darkerColorHSV.h,darkerColorHSV.s,darkerColorHSV.v);var lighterColorHex=HSVToHex$2(lighterColorHSV.h,lighterColorHSV.s,lighterColorHSV.v);return {background:colorStr,border:darkerColorHex,highlight:{background:lighterColorHex,border:darkerColorHex},hover:{background:lighterColorHex,border:darkerColorHex}};}else{return {background:colorStr,border:colorStr,highlight:{background:colorStr,border:colorStr},hover:{background:colorStr,border:colorStr}};}}else{if(defaultColor){var color={background:inputColor.background||defaultColor.background,border:inputColor.border||defaultColor.border,highlight:isString$3(inputColor.highlight)?{border:inputColor.highlight,background:inputColor.highlight}:{background:inputColor.highlight&&inputColor.highlight.background||defaultColor.highlight.background,border:inputColor.highlight&&inputColor.highlight.border||defaultColor.highlight.border},hover:isString$3(inputColor.hover)?{border:inputColor.hover,background:inputColor.hover}:{border:inputColor.hover&&inputColor.hover.border||defaultColor.hover.border,background:inputColor.hover&&inputColor.hover.background||defaultColor.hover.background}};return color;}else{var _color={background:inputColor.background||undefined,border:inputColor.border||undefined,highlight:isString$3(inputColor.highlight)?{border:inputColor.highlight,background:inputColor.highlight}:{background:inputColor.highlight&&inputColor.highlight.background||undefined,border:inputColor.highlight&&inputColor.highlight.border||undefined},hover:isString$3(inputColor.hover)?{border:inputColor.hover,background:inputColor.hover}:{border:inputColor.hover&&inputColor.hover.border||undefined,background:inputColor.hover&&inputColor.hover.background||undefined}};return _color;}}}/**
   * Convert RGB <0, 255> into HSV object.
   * http://www.javascripter.net/faq/rgb2hsv.htm
   *
   * @param red - Red channel.
   * @param green - Green channel.
   * @param blue - Blue channel.
   *
   * @returns HSV color object.
   */function RGBToHSV$2(red,green,blue){red=red/255;green=green/255;blue=blue/255;var minRGB=Math.min(red,Math.min(green,blue));var maxRGB=Math.max(red,Math.max(green,blue));// Black-gray-white
  if(minRGB===maxRGB){return {h:0,s:0,v:minRGB};}// Colors other than black-gray-white:
  var d=red===minRGB?green-blue:blue===minRGB?red-green:blue-red;var h=red===minRGB?3:blue===minRGB?1:5;var hue=60*(h-d/(maxRGB-minRGB))/360;var saturation=(maxRGB-minRGB)/maxRGB;var value=maxRGB;return {h:hue,s:saturation,v:value};}var cssUtil$2={// split a string with css styles into an object with key/values
  split:function split(cssText){var styles={};cssText.split(';').forEach(function(style){if(style.trim()!=''){var parts=style.split(':');var _key2=parts[0].trim();var _value2=parts[1].trim();styles[_key2]=_value2;}});return styles;},// build a css text string from an object with key/values
  join:function join(styles){return Object.keys(styles).map(function(key){return key+': '+styles[key];}).join('; ');}};/**
   * Append a string with css styles to an element
   *
   * @param element - The element that will receive new styles.
   * @param cssText - The styles to be appended.
   */function addCssText$2(element,cssText){var currentStyles=cssUtil$2.split(element.style.cssText);var newStyles=cssUtil$2.split(cssText);var styles=_objectSpread2({},currentStyles,{},newStyles);element.style.cssText=cssUtil$2.join(styles);}/**
   * Remove a string with css styles from an element
   *
   * @param element - The element from which styles should be removed.
   * @param cssText - The styles to be removed.
   */function removeCssText$2(element,cssText){var styles=cssUtil$2.split(element.style.cssText);var removeStyles=cssUtil$2.split(cssText);for(var _key3 in removeStyles){if(Object.prototype.hasOwnProperty.call(removeStyles,_key3)){delete styles[_key3];}}element.style.cssText=cssUtil$2.join(styles);}/**
   * Convert HSV <0, 1> into RGB color object.
   * https://gist.github.com/mjijackson/5311256
   *
   * @param h - Hue
   * @param s - Saturation
   * @param v - Value
   *
   * @returns RGB color object.
   */function HSVToRGB$2(h,s,v){var r;var g;var b;var i=Math.floor(h*6);var f=h*6-i;var p=v*(1-s);var q=v*(1-f*s);var t=v*(1-(1-f)*s);switch(i%6){case 0:r=v,g=t,b=p;break;case 1:r=q,g=v,b=p;break;case 2:r=p,g=v,b=t;break;case 3:r=p,g=q,b=v;break;case 4:r=t,g=p,b=v;break;case 5:r=v,g=p,b=q;break;}return {r:Math.floor(r*255),g:Math.floor(g*255),b:Math.floor(b*255)};}/**
   * Convert HSV <0, 1> into hex color string.
   *
   * @param h - Hue
   * @param s - Saturation
   * @param v - Value
   *
   * @returns Hex color string.
   */function HSVToHex$2(h,s,v){var rgb=HSVToRGB$2(h,s,v);return RGBToHex$2(rgb.r,rgb.g,rgb.b);}/**
   * Convert hex color string into HSV <0, 1>.
   *
   * @param hex - Hex color string.
   *
   * @returns HSV color object.
   */function hexToHSV$2(hex){var rgb=hexToRGB$2(hex);if(!rgb){throw new TypeError("'".concat(hex,"' is not a valid color."));}return RGBToHSV$2(rgb.r,rgb.g,rgb.b);}/**
   * Validate hex color string.
   *
   * @param hex - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */function isValidHex$2(hex){var isOk=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);return isOk;}/**
   * Validate RGB color string.
   *
   * @param rgb - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */function isValidRGB$2(rgb){rgb=rgb.replace(' ','');var isOk=/rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/i.test(rgb);return isOk;}/**
   * Validate RGBA color string.
   *
   * @param rgba - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */function isValidRGBA$2(rgba){rgba=rgba.replace(' ','');var isOk=/rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),(0?.{1,3})\)/i.test(rgba);return isOk;}/**
   * This recursively redirects the prototype of JSON objects to the referenceObject.
   * This is used for default options.
   *
   * @param fields - Names of properties to be bridged.
   * @param referenceObject - The original object.
   *
   * @returns A new object inheriting from the referenceObject.
   */function selectiveBridgeObject$2(fields,referenceObject){if(referenceObject!==null&&_typeof$2(referenceObject)==='object'){// !!! typeof null === 'object'
  var objectTo=Object.create(referenceObject);for(var i=0;i<fields.length;i++){if(Object.prototype.hasOwnProperty.call(referenceObject,fields[i])){if(_typeof$2(referenceObject[fields[i]])=='object'){objectTo[fields[i]]=bridgeObject$2(referenceObject[fields[i]]);}}}return objectTo;}else{return null;}}/**
   * This recursively redirects the prototype of JSON objects to the referenceObject.
   * This is used for default options.
   *
   * @param referenceObject - The original object.
   *
   * @returns The Element if the referenceObject is an Element, or a new object inheriting from the referenceObject.
   */function bridgeObject$2(referenceObject){if(referenceObject===null||_typeof$2(referenceObject)!=='object'){return null;}if(referenceObject instanceof Element){// Avoid bridging DOM objects
  return referenceObject;}var objectTo=Object.create(referenceObject);for(var i in referenceObject){if(Object.prototype.hasOwnProperty.call(referenceObject,i)){if(_typeof$2(referenceObject[i])=='object'){objectTo[i]=bridgeObject$2(referenceObject[i]);}}}return objectTo;}/**
   * This method provides a stable sort implementation, very fast for presorted data.
   *
   * @param a - The array to be sorted (in-place).
   * @param compare - An order comparator.
   *
   * @returns The argument a.
   */function insertSort$2(a,compare){for(var i=0;i<a.length;i++){var k=a[i];var j=void 0;for(j=i;j>0&&compare(k,a[j-1])<0;j--){a[j]=a[j-1];}a[j]=k;}return a;}/**
   * This is used to set the options of subobjects in the options object.
   *
   * A requirement of these subobjects is that they have an 'enabled' element
   * which is optional for the user but mandatory for the program.
   *
   * The added value here of the merge is that option 'enabled' is set as required.
   *
   * @param mergeTarget - Either this.options or the options used for the groups.
   * @param options - Options.
   * @param option - Option key in the options argument.
   * @param globalOptions - Global options, passed in to determine value of option 'enabled'.
   */function mergeOptions$2(mergeTarget,options,option){var globalOptions=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// Local helpers
  var isPresent=function isPresent(obj){return obj!==null&&obj!==undefined;};var isObject=function isObject(obj){return obj!==null&&_typeof$2(obj)==='object';};// https://stackoverflow.com/a/34491287/1223531
  var isEmpty=function isEmpty(obj){for(var x in obj){if(Object.prototype.hasOwnProperty.call(obj,x)){return false;}}return true;};// Guards
  if(!isObject(mergeTarget)){throw new Error('Parameter mergeTarget must be an object');}if(!isObject(options)){throw new Error('Parameter options must be an object');}if(!isPresent(option)){throw new Error('Parameter option must have a value');}if(!isObject(globalOptions)){throw new Error('Parameter globalOptions must be an object');}//
  // Actual merge routine, separated from main logic
  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.
  //
  var doMerge=function doMerge(target,options,option){if(!isObject(target[option])){target[option]={};}var src=options[option];var dst=target[option];for(var prop in src){if(Object.prototype.hasOwnProperty.call(src,prop)){dst[prop]=src[prop];}}};// Local initialization
  var srcOption=options[option];var globalPassed=isObject(globalOptions)&&!isEmpty(globalOptions);var globalOption=globalPassed?globalOptions[option]:undefined;var globalEnabled=globalOption?globalOption.enabled:undefined;/////////////////////////////////////////
  // Main routine
  /////////////////////////////////////////
  if(srcOption===undefined){return;// Nothing to do
  }if(typeof srcOption==='boolean'){if(!isObject(mergeTarget[option])){mergeTarget[option]={};}mergeTarget[option].enabled=srcOption;return;}if(srcOption===null&&!isObject(mergeTarget[option])){// If possible, explicit copy from globals
  if(isPresent(globalOption)){mergeTarget[option]=Object.create(globalOption);}else{return;// Nothing to do
  }}if(!isObject(srcOption)){return;}//
  // Ensure that 'enabled' is properly set. It is required internally
  // Note that the value from options will always overwrite the existing value
  //
  var enabled=true;// default value
  if(srcOption.enabled!==undefined){enabled=srcOption.enabled;}else{// Take from globals, if present
  if(globalEnabled!==undefined){enabled=globalOption.enabled;}}doMerge(mergeTarget,options,option);mergeTarget[option].enabled=enabled;}/**
   * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses
   * this function will then iterate in both directions over this sorted list to find all visible items.
   *
   * @param orderedItems - Items ordered by start
   * @param comparator - -1 is lower, 0 is equal, 1 is higher
   * @param field - Property name on an item (i.e. item[field]).
   * @param field2 - Second property name on an item (i.e. item[field][field2]).
   *
   * @returns Index of the found item or -1 if nothing was found.
   */function binarySearchCustom$2(orderedItems,comparator,field,field2){var maxIterations=10000;var iteration=0;var low=0;var high=orderedItems.length-1;while(low<=high&&iteration<maxIterations){var middle=Math.floor((low+high)/2);var item=orderedItems[middle];var _value3=field2===undefined?item[field]:item[field][field2];var searchResult=comparator(_value3);if(searchResult==0){// jihaa, found a visible item!
  return middle;}else if(searchResult==-1){// it is too small --> increase low
  low=middle+1;}else{// it is too big --> decrease high
  high=middle-1;}iteration++;}return -1;}/**
   * This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of
   * two values, we return either the one before or the one after, depending on user input
   * If it is found, we return the index, else -1.
   *
   * @param orderedItems - Sorted array.
   * @param target - The searched value.
   * @param field - Name of the property in items to be searched.
   * @param sidePreference - If the target is between two values, should the index of the before or the after be returned?
   * @param comparator - An optional comparator, returning -1, 0, 1 for <, ===, >.
   *
   * @returns The index of found value or -1 if nothing was found.
   */function binarySearchValue$2(orderedItems,target,field,sidePreference,comparator){var maxIterations=10000;var iteration=0;var low=0;var high=orderedItems.length-1;var prevValue;var value;var nextValue;var middle;comparator=comparator!=undefined?comparator:function(a,b){return a==b?0:a<b?-1:1;};while(low<=high&&iteration<maxIterations){// get a new guess
  middle=Math.floor(0.5*(high+low));prevValue=orderedItems[Math.max(0,middle-1)][field];value=orderedItems[middle][field];nextValue=orderedItems[Math.min(orderedItems.length-1,middle+1)][field];if(comparator(value,target)==0){// we found the target
  return middle;}else if(comparator(prevValue,target)<0&&comparator(value,target)>0){// target is in between of the previous and the current
  return sidePreference=='before'?Math.max(0,middle-1):middle;}else if(comparator(value,target)<0&&comparator(nextValue,target)>0){// target is in between of the current and the next
  return sidePreference=='before'?middle:Math.min(orderedItems.length-1,middle+1);}else{// didnt find the target, we need to change our boundaries.
  if(comparator(value,target)<0){// it is too small --> increase low
  low=middle+1;}else{// it is too big --> decrease high
  high=middle-1;}}iteration++;}// didnt find anything. Return -1.
  return -1;}/*
   * Easing Functions.
   * Only considering the t value for the range [0, 1] => [0, 1].
   *
   * Inspiration: from http://gizma.com/easing/
   * https://gist.github.com/gre/1650294
   */var easingFunctions$2={/**
     * no easing, no acceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */linear:function linear(t){return t;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInQuad:function easeInQuad(t){return t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutQuad:function easeOutQuad(t){return t*(2-t);},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutQuad:function easeInOutQuad(t){return t<0.5?2*t*t:-1+(4-2*t)*t;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInCubic:function easeInCubic(t){return t*t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutCubic:function easeOutCubic(t){return --t*t*t+1;},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutCubic:function easeInOutCubic(t){return t<0.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInQuart:function easeInQuart(t){return t*t*t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutQuart:function easeOutQuart(t){return 1- --t*t*t*t;},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutQuart:function easeInOutQuart(t){return t<0.5?8*t*t*t*t:1-8*--t*t*t*t;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInQuint:function easeInQuint(t){return t*t*t*t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutQuint:function easeOutQuint(t){return 1+--t*t*t*t*t;},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutQuint:function easeInOutQuint(t){return t<0.5?16*t*t*t*t*t:1+16*--t*t*t*t*t;}};/**
   * Experimentaly compute the width of the scrollbar for this browser.
   *
   * @returns The width in pixels.
   */function getScrollBarWidth$2(){var inner=document.createElement('p');inner.style.width='100%';inner.style.height='200px';var outer=document.createElement('div');outer.style.position='absolute';outer.style.top='0px';outer.style.left='0px';outer.style.visibility='hidden';outer.style.width='200px';outer.style.height='150px';outer.style.overflow='hidden';outer.appendChild(inner);document.body.appendChild(outer);var w1=inner.offsetWidth;outer.style.overflow='scroll';var w2=inner.offsetWidth;if(w1==w2){w2=outer.clientWidth;}document.body.removeChild(outer);return w1-w2;}// @TODO: This doesn't work properly.
  // It works only for single property objects,
  // otherwise it combines all of the types in a union.
  // export function topMost<K1 extends string, V1> (
  //   pile: Record<K1, undefined | V1>[],
  //   accessors: K1 | [K1]
  // ): undefined | V1
  // export function topMost<K1 extends string, K2 extends string, V1, V2> (
  //   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2>>[],
  //   accessors: [K1, K2]
  // ): undefined | V1 | V2
  // export function topMost<K1 extends string, K2 extends string, K3 extends string, V1, V2, V3> (
  //   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2 | Record<K3, undefined | V3>>>[],
  //   accessors: [K1, K2, K3]
  // ): undefined | V1 | V2 | V3
  /**
   * Get the top most property value from a pile of objects.
   *
   * @param pile - Array of objects, no required format.
   * @param accessors - Array of property names (e.g. object['foo']['bar'] → ['foo', 'bar']).
   *
   * @returns Value of the property with given accessors path from the first pile item where it's not undefined.
   */function topMost$2(pile,accessors){var candidate;if(!Array.isArray(accessors)){accessors=[accessors];}var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=pile[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var member=_step.value;if(member){candidate=member[accessors[0]];for(var i=1;i<accessors.length;i++){if(candidate){candidate=candidate[accessors[i]];}}if(typeof candidate!=='undefined'){break;}}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return candidate;}var util$3=/*#__PURE__*/Object.freeze({isNumber:isNumber$3,recursiveDOMDelete:recursiveDOMDelete$2,isString:isString$3,isObject:isObject$2,isDate:isDate$2,isMoment:isMoment$3,fillIfDefined:fillIfDefined$2,extend:extend$2,selectiveExtend:selectiveExtend$2,selectiveDeepExtend:selectiveDeepExtend$2,selectiveNotDeepExtend:selectiveNotDeepExtend$2,deepExtend:deepExtend$2,equalArray:equalArray$2,convert:convert$3,getType:getType$3,copyAndExtendArray:copyAndExtendArray$2,copyArray:copyArray$2,getAbsoluteLeft:getAbsoluteLeft$2,getAbsoluteRight:getAbsoluteRight$2,getAbsoluteTop:getAbsoluteTop$2,addClassName:addClassName$2,removeClassName:removeClassName$2,forEach:forEach$2,toArray:toArray$2,updateProperty:updateProperty$2,throttle:throttle$2,addEventListener:addEventListener$2,removeEventListener:removeEventListener$2,preventDefault:preventDefault$2,getTarget:getTarget$2,hasParent:hasParent$2,option:option$2,hexToRGB:hexToRGB$2,overrideOpacity:overrideOpacity$2,RGBToHex:RGBToHex$2,parseColor:parseColor$2,RGBToHSV:RGBToHSV$2,addCssText:addCssText$2,removeCssText:removeCssText$2,HSVToRGB:HSVToRGB$2,HSVToHex:HSVToHex$2,hexToHSV:hexToHSV$2,isValidHex:isValidHex$2,isValidRGB:isValidRGB$2,isValidRGBA:isValidRGBA$2,selectiveBridgeObject:selectiveBridgeObject$2,bridgeObject:bridgeObject$2,insertSort:insertSort$2,mergeOptions:mergeOptions$2,binarySearchCustom:binarySearchCustom$2,binarySearchValue:binarySearchValue$2,easingFunctions:easingFunctions$2,getScrollBarWidth:getScrollBarWidth$2,topMost:topMost$2,randomUUID:uuid4$3});// New API (tree shakeable).
  var commonjsGlobal$1$2=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function commonjsRequire$1$2(){throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');}function createCommonjsModule$1$3(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var DOMutil$2=createCommonjsModule$1$3(function(module,exports){// DOM utility methods
  /**
     * this prepares the JSON container for allocating SVG elements
     * @param {Object} JSONcontainer
     * @private
     */exports.prepareElements=function(JSONcontainer){// cleanup the redundant svgElements;
  for(var elementType in JSONcontainer){if(JSONcontainer.hasOwnProperty(elementType)){JSONcontainer[elementType].redundant=JSONcontainer[elementType].used;JSONcontainer[elementType].used=[];}}};/**
     * this cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from
     * which to remove the redundant elements.
     *
     * @param {Object} JSONcontainer
     * @private
     */exports.cleanupElements=function(JSONcontainer){// cleanup the redundant svgElements;
  for(var elementType in JSONcontainer){if(JSONcontainer.hasOwnProperty(elementType)){if(JSONcontainer[elementType].redundant){for(var i=0;i<JSONcontainer[elementType].redundant.length;i++){JSONcontainer[elementType].redundant[i].parentNode.removeChild(JSONcontainer[elementType].redundant[i]);}JSONcontainer[elementType].redundant=[];}}}};/**
     * Ensures that all elements are removed first up so they can be recreated cleanly
     * @param {Object} JSONcontainer
     */exports.resetElements=function(JSONcontainer){exports.prepareElements(JSONcontainer);exports.cleanupElements(JSONcontainer);exports.prepareElements(JSONcontainer);};/**
     * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer
     * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.
     *
     * @param {string} elementType
     * @param {Object} JSONcontainer
     * @param {Object} svgContainer
     * @returns {Element}
     * @private
     */exports.getSVGElement=function(elementType,JSONcontainer,svgContainer){var element;// allocate SVG element, if it doesnt yet exist, create one.
  if(JSONcontainer.hasOwnProperty(elementType)){// this element has been created before
  // check if there is an redundant element
  if(JSONcontainer[elementType].redundant.length>0){element=JSONcontainer[elementType].redundant[0];JSONcontainer[elementType].redundant.shift();}else{// create a new element and add it to the SVG
  element=document.createElementNS('http://www.w3.org/2000/svg',elementType);svgContainer.appendChild(element);}}else{// create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.
  element=document.createElementNS('http://www.w3.org/2000/svg',elementType);JSONcontainer[elementType]={used:[],redundant:[]};svgContainer.appendChild(element);}JSONcontainer[elementType].used.push(element);return element;};/**
     * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer
     * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.
     *
     * @param {string} elementType
     * @param {Object} JSONcontainer
     * @param {Element} DOMContainer
     * @param {Element} insertBefore
     * @returns {*}
     */exports.getDOMElement=function(elementType,JSONcontainer,DOMContainer,insertBefore){var element;// allocate DOM element, if it doesnt yet exist, create one.
  if(JSONcontainer.hasOwnProperty(elementType)){// this element has been created before
  // check if there is an redundant element
  if(JSONcontainer[elementType].redundant.length>0){element=JSONcontainer[elementType].redundant[0];JSONcontainer[elementType].redundant.shift();}else{// create a new element and add it to the SVG
  element=document.createElement(elementType);if(insertBefore!==undefined){DOMContainer.insertBefore(element,insertBefore);}else{DOMContainer.appendChild(element);}}}else{// create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.
  element=document.createElement(elementType);JSONcontainer[elementType]={used:[],redundant:[]};if(insertBefore!==undefined){DOMContainer.insertBefore(element,insertBefore);}else{DOMContainer.appendChild(element);}}JSONcontainer[elementType].used.push(element);return element;};/**
     * Draw a point object. This is a separate function because it can also be called by the legend.
     * The reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions
     * as well.
     *
     * @param {number} x
     * @param {number} y
     * @param {Object} groupTemplate: A template containing the necessary information to draw the datapoint e.g., {style: 'circle', size: 5, className: 'className' }
     * @param {Object} JSONcontainer
     * @param {Object} svgContainer
     * @param {Object} labelObj
     * @returns {vis.PointItem}
     */exports.drawPoint=function(x,y,groupTemplate,JSONcontainer,svgContainer,labelObj){var point;if(groupTemplate.style=='circle'){point=exports.getSVGElement('circle',JSONcontainer,svgContainer);point.setAttributeNS(null,"cx",x);point.setAttributeNS(null,"cy",y);point.setAttributeNS(null,"r",0.5*groupTemplate.size);}else{point=exports.getSVGElement('rect',JSONcontainer,svgContainer);point.setAttributeNS(null,"x",x-0.5*groupTemplate.size);point.setAttributeNS(null,"y",y-0.5*groupTemplate.size);point.setAttributeNS(null,"width",groupTemplate.size);point.setAttributeNS(null,"height",groupTemplate.size);}if(groupTemplate.styles!==undefined){point.setAttributeNS(null,"style",groupTemplate.styles);}point.setAttributeNS(null,"class",groupTemplate.className+" vis-point");//handle label
  if(labelObj){var label=exports.getSVGElement('text',JSONcontainer,svgContainer);if(labelObj.xOffset){x=x+labelObj.xOffset;}if(labelObj.yOffset){y=y+labelObj.yOffset;}if(labelObj.content){label.textContent=labelObj.content;}if(labelObj.className){label.setAttributeNS(null,"class",labelObj.className+" vis-label");}label.setAttributeNS(null,"x",x);label.setAttributeNS(null,"y",y);}return point;};/**
     * draw a bar SVG element centered on the X coordinate
     *
     * @param {number} x
     * @param {number} y
     * @param {number} width
     * @param {number} height
     * @param {string} className
     * @param {Object} JSONcontainer
     * @param {Object} svgContainer
     * @param {string} style
     */exports.drawBar=function(x,y,width,height,className,JSONcontainer,svgContainer,style){if(height!=0){if(height<0){height*=-1;y-=height;}var rect=exports.getSVGElement('rect',JSONcontainer,svgContainer);rect.setAttributeNS(null,"x",x-0.5*width);rect.setAttributeNS(null,"y",y);rect.setAttributeNS(null,"width",width);rect.setAttributeNS(null,"height",height);rect.setAttributeNS(null,"class",className);if(style){rect.setAttributeNS(null,"style",style);}}};});var DOMutil_1$1=DOMutil$2.prepareElements;var DOMutil_2$1=DOMutil$2.cleanupElements;var DOMutil_3$1=DOMutil$2.resetElements;var DOMutil_4$1=DOMutil$2.getSVGElement;var DOMutil_5$1=DOMutil$2.getDOMElement;var DOMutil_6$1=DOMutil$2.drawPoint;var DOMutil_7$1=DOMutil$2.drawBar;/** 
   * vis-data - data
   * http://visjs.org/
   * 
   * Manage unstructured data using DataSet. Add, update, and remove data, and listen for changes in the data.
   * 
   * @version 6.0.0
   * @date    2019-07-12T21:27:54Z
   * 
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
   * 
   * @license 
   * vis.js is dual licensed under both
   * 
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   * 
   *   and
   * 
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   * 
   * vis.js may be distributed under either license.
   */function _typeof$1$1(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$1$1=function(obj){return typeof obj;};}else{_typeof$1$1=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$1$1(obj);}var commonjsGlobal$2$2=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function commonjsRequire$2$2(){throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');}function createCommonjsModule$2$2(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var moment$1$2=createCommonjsModule$2$2(function(module,exports){(function(global,factory){module.exports=factory();})(commonjsGlobal$2$2,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else{var k;for(k in obj){if(obj.hasOwnProperty(k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
  return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m);var parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties=hooks.momentProperties=[];function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i=0;i<momentProperties.length;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}var updateInProgress=false;// Moment prototype object
  function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
  // objects.
  if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function absFloor(number){if(number<0){// -0 -> 0
  return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}// compare two arrays, return the number of differences
  function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg='';if(typeof arguments[i]==='object'){arg+='\n['+i+'] ';for(var key in arguments[0]){arg+=key+': '+arguments[0][key]+', ';}arg=arg.slice(0,-2);// Remove trailing comma and space
  }else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
  // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
  // TODO: Remove "ordinalParse" fallback in next major release.
  this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
  res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d';var defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj){units.push({unit:u,priority:priorities[u]});}units.sort(function(a,b){return a.priority-b.priority;});return units;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions={};var formatTokenFunctions={};// token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
  function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var match1=/\d/;//       0 - 9
  var match2=/\d\d/;//      00 - 99
  var match3=/\d{3}/;//     000 - 999
  var match4=/\d{4}/;//    0000 - 9999
  var match6=/[+-]?\d{6}/;// -999999 - 999999
  var match1to2=/\d\d?/;//       0 - 99
  var match3to4=/\d\d\d\d?/;//     999 - 9999
  var match5to6=/\d\d\d\d\d\d?/;//   99999 - 999999
  var match1to3=/\d{1,3}/;//       0 - 999
  var match1to4=/\d{1,4}/;//       0 - 9999
  var match1to6=/[+-]?\d{1,6}/;// -999999 - 999999
  var matchUnsigned=/\d+/;//       0 - inf
  var matchSigned=/[+-]?\d+/;//    -inf - inf
  var matchOffset=/Z|[+-]\d\d:?\d\d/gi;// +00:00 -00:00 +0000 -0000 or Z
  var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;// +00 -00 +00:00 -00:00 +0000 -0000 or Z
  var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;// 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  var matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;var regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0;var MONTH=1;var DATE=2;var HOUR=3;var MINUTE=4;var SECOND=5;var MILLISECOND=6;var WEEK=7;var WEEKDAY=8;// FORMATTING
  addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?''+y:'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
  addUnitAlias('year','y');// PRIORITIES
  addUnitPriority('year',1);// PARSING
  addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
  function daysInYear(year){return isLeapYear(year)?366:365;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}// HOOKS
  hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
  var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else{return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else{mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
  function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(typeof units==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units);for(var i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function(o){// I know
  var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
  addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
  addUnitAlias('month','M');// PRIORITY
  addUnitPriority('month',8);// PARSING
  addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
  if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
  var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
  this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
  // Sorting makes sure if one month (or abbr) is a prefix of another
  // see sorting in computeMonthsParse
  for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
  function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
  return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
  if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else{return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}var defaultMonthsShortRegex=matchWord;function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}var defaultMonthsRegex=matchWord;function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
  // will match the longer piece.
  shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
  // https://stackoverflow.com/q/181348
  var date;// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else{date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date;// the Date.UTC function remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){var args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
  args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else{date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
  function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
  fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
  fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
  addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
  addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
  addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
  addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
  // LOCALES
  function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
  doy:6// The week that contains Jan 6th is the first week of the year.
  };function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
  function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
  addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
  addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
  addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
  addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
  if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
  function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
  function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
  function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
  // as a setter, sunday should belong to the previous week.
  if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}var defaultWeekdaysRegex=matchWord;function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}var defaultWeekdaysShortRegex=matchWord;function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}var defaultWeekdaysMinRegex=matchWord;function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);minp=this.weekdaysMin(mom,'');shortp=this.weekdaysShort(mom,'');longp=this.weekdays(mom,'');minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
  // will match the longer piece.
  minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);mixedPieces[i]=regexEscape(mixedPieces[i]);}this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
  function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
  addUnitAlias('hour','h');// PRIORITY
  addUnitPriority('hour',13);// PARSING
  function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
  function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
  // Using charAt should be more compatible.
  return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}// MOMENTS
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour=makeGetSet('Hours',true);var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
  var locales={};var localeFamilies={};var globalLocale;function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){//the next array item is better than a shallower substring of this one
  break;}j--;}i++;}return globalLocale;}function loadLocale(name){var oldLocale=null;// TODO: Find a better way to register and load all the locales in Node
  if(!locales[name]&&'object'!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;var aliasedRequire=commonjsRequire$2$2;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){}}return locales[name];}// This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
  globalLocale=data;}else{if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
  console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else{if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
  // make sure we set the locale AFTER all child locales have been
  // created, so we won't end up with the child locale set.
  getSetGlobalLocale(name);return locales[name];}else{// useful for testing
  delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;// MERGE
  tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;// backwards compat for now: also set the locale
  getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
  if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
  function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
  locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow;var a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// Pick the first defined of two or three arguments.
  function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
  var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
  if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
  if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
  // * if no year, month, day of month are given, default to today
  // * if day of month is given, default month and year
  // * if month is given, default only year
  // * if year is given, don't default anything
  for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
  for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
  if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
  // with parseZone.
  if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
  if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
  // how we interpret now (local, utc, fixed offset). So create
  // a now version of current config (take local/utc/offset flags, and
  // create now).
  weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;var curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
  week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
  weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
  weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to beginning of week
  weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;var isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],// YYYYMM is NOT allowed by the standard
  ['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/]];// iso time formats and regexes
  var isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]];var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;// date from iso format
  function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
  timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
  var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}var obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
  return 0;}else{var hm=parseInt(numOffset,10);var m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
  function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i));if(match){var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else{config._isValid=false;}}// date from iso format or fallback
  function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else{return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else{return;}// Final attempt, use Input Fallback
  hooks.createFromInputFallback(config);}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged and will be removed in an upcoming major release. Please refer to '+'http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// constant that refers to the ISO standard
  hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
  hooks.RFC_2822=function(){};// date from string and format string
  function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
  if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
  var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];// console.log('token', token, 'parsedInput', parsedInput,
  //         'regex', getParseRegexForToken(token, config));
  if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
  if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
  getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
  if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
  config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
  return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
  isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
  return hour;}}// date from string and array of format strings
  function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(!isValid(tempConfig)){continue;}// if there is any input that was not parsed add a penalty for that format
  currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
  currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
  res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
  config._d=new Date(input);}else{hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
  // https://github.com/moment/moment/issues/1423
  c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return createInvalid();}});var prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
  function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){for(var key in m){if(!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}var unitHasDecimal=false;for(var i=0;i<ordering.length;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
  }if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
  this._milliseconds=+milliseconds+seconds*1e3+// 1000
  minutes*6e4+// 1000 * 60
  hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
  // Because of dateAddRemove treats 24 hours as different from a
  // day when working around DST, we need to store them separately
  this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
  // which months you are are talking about, so we have to store
  // it separately.
  this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// FORMATTING
  function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset();var sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
  addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher);if(matches===null){return null;}var chunk=matches[matches.length-1]||[];var parts=(chunk+'').match(chunkOffset)||['-',0,0];var minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
  res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else{return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
  // https://github.com/moment/moment/pull/1871
  return -Math.round(m._d.getTimezoneOffset()/15)*15;}// HOOKS
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset=function(){};// MOMENTS
  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else{this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={};copyConfig(c,this);c=prepareConfig(c);if(c._a){var other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
  var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  var isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
  match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
  };}else if(!!(match=isoRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
  duration={};}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
  // converts floats to ints.
  // inp may be undefined, so careful calling replace on it.
  var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
  return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
  if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}val=typeof val==='string'?+val:val;dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
  return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add');var subtract=createAdder(-1,'subtract');function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// We want to compare the start of today, vs this.
  // Getting start-of-today depends on whether we're local/utc/offset or not.
  var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse';var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
  case'minute':output=(this-that)/6e4;break;// 1000 * 60
  case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
  case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
  case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
  default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){// difference in months
  var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
  anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
  adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
  adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
  return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true;var m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
  if(utc){return this.toDate().toISOString();}else{return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment';var zone='';if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}var prefix='['+func+'("]';var year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';var datetime='-MM-DD[T]HH:mm:ss.SSS';var suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000;var MS_PER_MINUTE=60*MS_PER_SECOND;var MS_PER_HOUR=60*MS_PER_MINUTE;var MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return new Date(y+400,m,d)-MS_PER_400_YEARS;}else{return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else{return Date.UTC(y,m,d);}}function startOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
  return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}// FORMATTING
  addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
  addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
  addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
  addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
  function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
  addFormatToken('Q',0,'Qo','quarter');// ALIASES
  addUnitAlias('quarter','Q');// PRIORITY
  addUnitPriority('quarter',7);// PARSING
  addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
  function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
  addFormatToken('D',['DD',2],'Do','date');// ALIASES
  addUnitAlias('date','D');// PRIORITY
  addUnitPriority('date',9);// PARSING
  addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
  return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
  var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
  addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
  addUnitAlias('dayOfYear','DDD');// PRIORITY
  addUnitPriority('dayOfYear',4);// PARSING
  addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
  // MOMENTS
  function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
  addFormatToken('m',['mm',2],0,'minute');// ALIASES
  addUnitAlias('minute','m');// PRIORITY
  addUnitPriority('minute',14);// PARSING
  addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
  var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
  addFormatToken('s',['ss',2],0,'second');// ALIASES
  addUnitAlias('second','s');// PRIORITY
  addUnitPriority('second',15);// PARSING
  addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
  var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
  addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
  addUnitAlias('millisecond','ms');// PRIORITY
  addUnitPriority('millisecond',16);// PARSING
  addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}// MOMENTS
  var getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
  addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
  function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale();var utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i;var out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0;if(index!=null){return get$1(format,(index+shift)%7,field,'day');}var i;var out=[];for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
  hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
  // check: https://github.com/moment/moment/issues/2166
  if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
  // examples of what that means.
  data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
  monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
  years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
  return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else{// handle milliseconds separately because of floating point math errors (issue #1867)
  days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
  case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
  function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms');var asSeconds=makeAs('s');var asMinutes=makeAs('m');var asHours=makeAs('h');var asDays=makeAs('d');var asWeeks=makeAs('w');var asMonths=makeAs('M');var asQuarters=makeAs('Q');var asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds');var seconds=makeGetter('seconds');var minutes=makeGetter('minutes');var hours=makeGetter('hours');var days=makeGetter('days');var months=makeGetter('months');var years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round;var thresholds={ss:44,// a few seconds to seconds
  s:45,// seconds to minute
  m:45,// minutes to hour
  h:22,// hours to day
  d:26,// days to month
  M:11// months to year
  };// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,locale){var duration=createDuration(posNegDuration).abs();var seconds=round(duration.as('s'));var minutes=round(duration.as('m'));var hours=round(duration.as('h'));var days=round(duration.as('d'));var months=round(duration.as('M'));var years=round(duration.as('y'));var a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days]||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(withSuffix){if(!this.isValid()){return this.localeData().invalidDate();}var locale=this.localeData();var output=relativeTime$1(this,!withSuffix,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
  //  * milliseconds bubble up until they become hours
  //  * days do not bubble at all
  //  * months bubble up until they become years
  // This is because there is no context-free conversion between hours and days
  // (think of clock changes)
  // and also not between days and months (28-31 days per month)
  if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000;var days=abs$1(this._days);var months=abs$1(this._months);var minutes,hours,years;// 3600 seconds -> 60 minutes -> 1 hour
  minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
  years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
  var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';var total=this.asSeconds();if(!total){// this is the same as C#'s (Noda) and python (isodate)...
  // but not other JS (goog.date)
  return 'P0D';}var totalSign=total<0?'-':'';var ymSign=sign(this._months)!==sign(total)?'-':'';var daysSign=sign(this._days)!==sign(total)?'-':'';var hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(Y?ymSign+Y+'Y':'')+(M?ymSign+M+'M':'')+(D?daysSign+D+'D':'')+(h||m||s?'T':'')+(h?hmsSign+h+'H':'')+(m?hmsSign+m+'M':'')+(s?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// Side effect imports
  // FORMATTING
  addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
  addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input,10)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});// Side effect imports
  hooks.version='2.24.0';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
  DATE:'YYYY-MM-DD',// <input type="date" />
  TIME:'HH:mm',// <input type="time" />
  TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
  TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
  WEEK:'GGGG-[W]WW',// <input type="week" />
  MONTH:'YYYY-MM'// <input type="month" />
  };return hooks;});});// Maps for number <-> hex string conversion
  var byteToHex$2$3=[];var hexToByte={};for(var i$2$3=0;i$2$3<256;i$2$3++){byteToHex$2$3[i$2$3]=(i$2$3+0x100).toString(16).substr(1);hexToByte[byteToHex$2$3[i$2$3]]=i$2$3;}/**
   * Parse a string UUID representation into it's component bytes.
   *
   * @param str - String UUID.
   * @param buf - Buffer to be filled with the bytes.
   * @param offset - Offset from the start of the buffer where the UUID bytes will be saved.
   *
   * @returns An array (or Uint8Array if supplied) of bytes.
   */function parseUUID(str){var buf=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var offset=arguments.length>2?arguments[2]:undefined;var i=buf&&offset||0;var ii=0;str.toLowerCase().replace(/[0-9a-f]{2}/g,function(oct){if(ii<16){// Don't overflow!
  buf[i+ii++]=hexToByte[oct];}return '';});// Zero out remaining bytes if string was short
  while(ii<16){buf[i+ii++]=0;}return buf;}/**
   * Represent binary UUID into it's string representation.
   *
   * @param buf - Buffer containing UUID bytes.
   * @param offset - Offset from the start of the buffer where the UUID is saved (not needed if the buffer starts with the UUID).
   *
   * @returns String representation of the UUID.
   */function stringifyUUID$1$2(buf,offset){var i=offset||0;var bth=byteToHex$2$3;return bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]];}/**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */var random$1$3=function(){if(typeof crypto!=='undefined'&&crypto.getRandomValues){// WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
  // Moderately fast, high quality
  var _rnds8=new Uint8Array(16);return function whatwgRNG(){crypto.getRandomValues(_rnds8);return _rnds8;};}// Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().
  // It's fast, but is of unspecified quality.
  var _rnds=new Array(16);return function(){for(var i=0,r;i<16;i++){if((i&0x03)===0){r=Math.random()*0x100000000;}_rnds[i]=r>>>((i&0x03)<<3)&0xff;}return _rnds;};//     uuid.js
  //
  //     Copyright (c) 2010-2012 Robert Kieffer
  //     MIT License - http://opensource.org/licenses/mit-license.php
  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  // return require('./rng');
  }();var byteToHex$1$1$3=[];for(var i$1$1$3=0;i$1$1$3<256;i$1$1$3++){byteToHex$1$1$3[i$1$1$3]=(i$1$1$3+0x100).toString(16).substr(1);}// **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq
  var seedBytes$1$3=random$1$3();// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var defaultNodeId$1$3=[seedBytes$1$3[0]|0x01,seedBytes$1$3[1],seedBytes$1$3[2],seedBytes$1$3[3],seedBytes$1$3[4],seedBytes$1$3[5]];// Per 4.2.2, randomize (14 bit) clockseq
  var defaultClockseq$1$3=(seedBytes$1$3[6]<<8|seedBytes$1$3[7])&0x3fff;// Previous uuid creation time
  var lastMSecs=0;var lastNSecs=0;/**
   * UUIDv1 options.
   */ /**
   * Generate UUIDv1
   *
   * @param options - Options to be used instead of default values.
   * @param buf - If present the buffer will be filled with the generated UUID.
   * @param offset - Offset of the UUID from the start of the buffer.
   *
   * @returns UUIDv1
   */function uuid1(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var buf=arguments.length>1?arguments[1]:undefined;var offset=arguments.length>2?arguments[2]:undefined;var i=buf&&offset||0;var b=buf||[];var clockseq=options.clockseq!==undefined?options.clockseq:defaultClockseq$1$3;// UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
  var msecs=options.msecs!==undefined?options.msecs:new Date().getTime();// Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock
  var nsecs=options.nsecs!==undefined?options.nsecs:lastNSecs+1;// Time since last uuid creation (in msecs)
  var dt=msecs-lastMSecs+(nsecs-lastNSecs)/10000;// Per 4.2.1.2, Bump clockseq on clock regression
  if(dt<0&&options.clockseq===undefined){clockseq=clockseq+1&0x3fff;}// Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval
  if((dt<0||msecs>lastMSecs)&&options.nsecs===undefined){nsecs=0;}// Per 4.2.1.2 Throw error if too many uuids are requested
  if(nsecs>=10000){throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");}lastMSecs=msecs;lastNSecs=nsecs;defaultClockseq$1$3=clockseq;// Per 4.1.4 - Convert from unix epoch to Gregorian epoch
  msecs+=12219292800000;// `time_low`
  var tl=((msecs&0xfffffff)*10000+nsecs)%0x100000000;b[i++]=tl>>>24&0xff;b[i++]=tl>>>16&0xff;b[i++]=tl>>>8&0xff;b[i++]=tl&0xff;// `time_mid`
  var tmh=msecs/0x100000000*10000&0xfffffff;b[i++]=tmh>>>8&0xff;b[i++]=tmh&0xff;// `time_high_and_version`
  b[i++]=tmh>>>24&0xf|0x10;// include version
  b[i++]=tmh>>>16&0xff;// `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
  b[i++]=clockseq>>>8|0x80;// `clock_seq_low`
  b[i++]=clockseq&0xff;// `node`
  var node=options.node||defaultNodeId$1$3;for(var n=0;n<6;n++){b[i+n]=node[n];}return buf?buf:stringifyUUID$1$2(b);}/**
   * UUIDv4 options.
   */ /**
   * Generate UUIDv4
   *
   * @param options - Options to be used instead of default generated values.
   * String 'binary' is a shorthand for uuid4({}, new Array(16)).
   * @param buf - If present the buffer will be filled with the generated UUID.
   * @param offset - Offset of the UUID from the start of the buffer.
   *
   * @returns UUIDv4
   */function uuid4$1$2(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var buf=arguments.length>1?arguments[1]:undefined;var offset=arguments.length>2?arguments[2]:undefined;// Deprecated - 'format' argument, as supported in v1.2
  var i=buf&&offset||0;if(typeof options==='string'){buf=options==='binary'?new Array(16):undefined;options={};}var rnds=options.random||(options.rng||random$1$3)();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;// Copy bytes to buffer, if provided
  if(buf){for(var ii=0;ii<16;ii++){buf[i+ii]=rnds[ii];}}return buf||stringifyUUID$1$2(rnds);}// Rollup will complain about mixing default and named exports in UMD build,
  // but since they both implement the same interface, there won't be any problems.
  /**
   * API properties as used before ES2015 modules and TypeScript.
   */var oldAPI=function oldAPI(){return uuid4$1$2.apply(void 0,arguments);};oldAPI.v1=uuid1;oldAPI.v4=uuid4$1$2;oldAPI.parse=parseUUID;oldAPI.unparse=stringifyUUID$1$2;var esm$2=createCommonjsModule$2$2(function(module,exports){function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function(obj){return typeof obj;};}else{_typeof=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}// utility functions
  // first check if moment.js is already loaded in the browser window, if so,
  // use this instance. Else, load via commonjs.
  /**
     * Test whether given object is a number
     * @param {*} object
     * @return {Boolean} isNumber
     */exports.isNumber=function(object){return object instanceof Number||typeof object=='number';};/**
     * Remove everything in the DOM object
     * @param {Element} DOMobject
     */exports.recursiveDOMDelete=function(DOMobject){if(DOMobject){while(DOMobject.hasChildNodes()===true){exports.recursiveDOMDelete(DOMobject.firstChild);DOMobject.removeChild(DOMobject.firstChild);}}};/**
     * Test whether given object is a string
     * @param {*} object
     * @return {Boolean} isString
     */exports.isString=function(object){return object instanceof String||typeof object=='string';};/**
     * Test whether given object is a Date, or a String containing a Date
     * @param {Date | String} object
     * @return {Boolean} isDate
     */exports.isDate=function(object){if(object instanceof Date){return true;}else if(exports.isString(object)){// test whether this string contains a date
  var match=ASPDateRegex.exec(object);if(match){return true;}else if(!isNaN(Date.parse(object))){return true;}}return false;};/**
     * Create a UUID
     * @return {string} uuid
     */exports.randomUUID=function(){return oldAPI.v4();};/**
     * Copy property from b to a if property present in a.
     * If property in b explicitly set to null, delete it if `allowDeletion` set.
     *
     * Internal helper routine, should not be exported. Not added to `exports` for that reason.
     *
     * @param {object} a  target object
     * @param {object} b  source object
     * @param {string} prop  name of property to copy to a
     * @param {boolean} allowDeletion  if true, delete property in a if explicitly set to null in b 
     * @private
     */function copyOrDelete(a,b,prop,allowDeletion){var doDeletion=false;if(allowDeletion===true){doDeletion=b[prop]===null&&a[prop]!==undefined;}if(doDeletion){delete a[prop];}else{a[prop]=b[prop];// Remember, this is a reference copy!
  }}/**
     * Fill an object with a possibly partially defined other object.
     *
     * Only copies values for the properties already present in a.
     * That means an object is not created on a property if only the b object has it.
     *
     * @param {object} a
     * @param {object} b
     * @param {boolean} [allowDeletion=false]  if true, delete properties in a that are explicitly set to null in b 
     */exports.fillIfDefined=function(a,b){var allowDeletion=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;// NOTE: iteration of properties of a
  // NOTE: prototype properties iterated over as well
  for(var prop in a){if(b[prop]!==undefined){if(b[prop]===null||_typeof(b[prop])!=='object'){// Note: typeof null === 'object'
  copyOrDelete(a,b,prop,allowDeletion);}else{if(_typeof(a[prop])==='object'){exports.fillIfDefined(a[prop],b[prop],allowDeletion);}}}}};/**
     * Extend object a with the properties of object b or a series of objects
     * Only properties with defined values are copied
     * @param {Object} a
     * @param {...Object} b
     * @return {Object} a
     */exports.extend=function(a,b){// eslint-disable-line no-unused-vars
  for(var i=1;i<arguments.length;i++){var other=arguments[i];for(var prop in other){if(other.hasOwnProperty(prop)){a[prop]=other[prop];}}}return a;};/**
     * Extend object a with selected properties of object b or a series of objects
     * Only properties with defined values are copied
     * @param {Array.<string>} props
     * @param {Object} a
     * @param {Object} b
     * @return {Object} a
     */exports.selectiveExtend=function(props,a,b){// eslint-disable-line no-unused-vars
  if(!Array.isArray(props)){throw new Error('Array with property names expected as first argument');}for(var i=2;i<arguments.length;i++){var other=arguments[i];for(var p=0;p<props.length;p++){var prop=props[p];if(other&&other.hasOwnProperty(prop)){a[prop]=other[prop];}}}return a;};/**
     * Extend object a with selected properties of object b.
     * Only properties with defined values are copied.
     *
     * **Note:** Previous version of this routine implied that multiple source objects
     *           could be used; however, the implementation was **wrong**.
     *           Since multiple (>1) sources weren't used anywhere in the `vis.js` code,
     *           this has been removed
     *
     * @param {Array.<string>} props names of first-level properties to copy over
     * @param {object} a  target object
     * @param {object} b  source object
     * @param {boolean} [allowDeletion=false]  if true, delete property in a if explicitly set to null in b 
     * @returns {Object} a
     */exports.selectiveDeepExtend=function(props,a,b){var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// TODO: add support for Arrays to deepExtend
  if(Array.isArray(b)){throw new TypeError('Arrays are not supported by deepExtend');}for(var p=0;p<props.length;p++){var prop=props[p];if(b.hasOwnProperty(prop)){if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){exports.deepExtend(a[prop],b[prop],false,allowDeletion);}else{copyOrDelete(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){throw new TypeError('Arrays are not supported by deepExtend');}else{copyOrDelete(a,b,prop,allowDeletion);}}}return a;};/**
     * Extend object `a` with properties of object `b`, ignoring properties which are explicitly 
     * specified to be excluded.
     * 
     * The properties of `b` are considered for copying.
     * Properties which are themselves objects are are also extended.
     * Only properties with defined values are copied
     *
     * @param {Array.<string>} propsToExclude  names of properties which should *not* be copied
     * @param {Object}                      a  object to extend
     * @param {Object}                      b  object to take properties from for extension
     * @param {boolean} [allowDeletion=false]  if true, delete properties in a that are explicitly set to null in b 
     * @return {Object} a
     */exports.selectiveNotDeepExtend=function(propsToExclude,a,b){var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// TODO: add support for Arrays to deepExtend
  // NOTE: array properties have an else-below; apparently, there is a problem here. 
  if(Array.isArray(b)){throw new TypeError('Arrays are not supported by deepExtend');}for(var prop in b){if(!b.hasOwnProperty(prop))continue;// Handle local properties only 
  if(propsToExclude.indexOf(prop)!==-1)continue;// In exclusion list, skip
  if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){exports.deepExtend(a[prop],b[prop]);// NOTE: allowDeletion not propagated!
  }else{copyOrDelete(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){a[prop]=[];for(var i=0;i<b[prop].length;i++){a[prop].push(b[prop][i]);}}else{copyOrDelete(a,b,prop,allowDeletion);}}return a;};/**
     * Deep extend an object a with the properties of object b
     *
     * @param {Object} a
     * @param {Object} b
     * @param {boolean} [protoExtend=false]  If true, the prototype values will also be extended.
     *                          (ie. the options objects that inherit from others will also get the inherited options)
     * @param {boolean} [allowDeletion=false] If true, the values of fields that are null will be deleted
     * @returns {Object}
     */exports.deepExtend=function(a,b){var protoExtend=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;for(var prop in b){if(b.hasOwnProperty(prop)||protoExtend===true){if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){exports.deepExtend(a[prop],b[prop],protoExtend);// NOTE: allowDeletion not propagated!
  }else{copyOrDelete(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){a[prop]=[];for(var i=0;i<b[prop].length;i++){a[prop].push(b[prop][i]);}}else{copyOrDelete(a,b,prop,allowDeletion);}}}return a;};/**
     * Test whether all elements in two arrays are equal.
     * @param {Array} a
     * @param {Array} b
     * @return {boolean} Returns true if both arrays have the same length and same
     *                   elements.
     */exports.equalArray=function(a,b){if(a.length!=b.length)return false;for(var i=0,len=a.length;i<len;i++){if(a[i]!=b[i])return false;}return true;};/**
     * Convert an object to another type
     * @param {boolean | number | string | Date | Moment | Null | undefined} object
     * @param {string | undefined} type   Name of the type. Available types:
     *                                    'Boolean', 'Number', 'String',
     *                                    'Date', 'Moment', ISODate', 'ASPDate'.
     * @return {*} object
     * @throws Error
     */exports.convert=function(object,type){var match;if(object===undefined){return undefined;}if(object===null){return null;}if(!type){return object;}if(!(typeof type==='string')&&!(type instanceof String)){throw new Error('Type must be a string');}//noinspection FallthroughInSwitchStatementJS
  switch(type){case'boolean':case'Boolean':return Boolean(object);case'number':case'Number':if(exports.isString(object)&&!isNaN(Date.parse(object))){return moment$1$2(object).valueOf();}else{return Number(object.valueOf());}case'string':case'String':return String(object);case'Date':if(exports.isNumber(object)){return new Date(object);}if(object instanceof Date){return new Date(object.valueOf());}else if(moment$1$2.isMoment(object)){return new Date(object.valueOf());}if(exports.isString(object)){match=ASPDateRegex.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1]));// parse number
  }else{return moment$1$2(new Date(object)).toDate();// parse string
  }}else{throw new Error('Cannot convert object of type '+exports.getType(object)+' to type Date');}case'Moment':if(exports.isNumber(object)){return moment$1$2(object);}if(object instanceof Date){return moment$1$2(object.valueOf());}else if(moment$1$2.isMoment(object)){return moment$1$2(object);}if(exports.isString(object)){match=ASPDateRegex.exec(object);if(match){// object is an ASP date
  return moment$1$2(Number(match[1]));// parse number
  }else{return moment$1$2(object);// parse string
  }}else{throw new Error('Cannot convert object of type '+exports.getType(object)+' to type Date');}case'ISODate':if(exports.isNumber(object)){return new Date(object);}else if(object instanceof Date){return object.toISOString();}else if(moment$1$2.isMoment(object)){return object.toDate().toISOString();}else if(exports.isString(object)){match=ASPDateRegex.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1])).toISOString();// parse number
  }else{return moment$1$2(object).format();// ISO 8601
  }}else{throw new Error('Cannot convert object of type '+exports.getType(object)+' to type ISODate');}case'ASPDate':if(exports.isNumber(object)){return '/Date('+object+')/';}else if(object instanceof Date){return '/Date('+object.valueOf()+')/';}else if(exports.isString(object)){match=ASPDateRegex.exec(object);var value;if(match){// object is an ASP date
  value=new Date(Number(match[1])).valueOf();// parse number
  }else{value=new Date(object).valueOf();// parse string
  }return '/Date('+value+')/';}else{throw new Error('Cannot convert object of type '+exports.getType(object)+' to type ASPDate');}default:throw new Error('Unknown type "'+type+'"');}};// parse ASP.Net Date pattern,
  // for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'
  // code from http://momentjs.com/
  var ASPDateRegex=/^\/?Date\((\-?\d+)/i;/**
     * Get the type of an object, for example exports.getType([]) returns 'Array'
     * @param {*} object
     * @return {string} type
     */exports.getType=function(object){var type=_typeof(object);if(type=='object'){if(object===null){return 'null';}if(object instanceof Boolean){return 'Boolean';}if(object instanceof Number){return 'Number';}if(object instanceof String){return 'String';}if(Array.isArray(object)){return 'Array';}if(object instanceof Date){return 'Date';}return 'Object';}else if(type=='number'){return 'Number';}else if(type=='boolean'){return 'Boolean';}else if(type=='string'){return 'String';}else if(type===undefined){return 'undefined';}return type;};/**
     * Used to extend an array and copy it. This is used to propagate paths recursively.
     *
     * @param {Array} arr
     * @param {*} newValue
     * @returns {Array}
     */exports.copyAndExtendArray=function(arr,newValue){var newArr=[];for(var i=0;i<arr.length;i++){newArr.push(arr[i]);}newArr.push(newValue);return newArr;};/**
     * Used to extend an array and copy it. This is used to propagate paths recursively.
     *
     * @param {Array} arr
     * @returns {Array}
     */exports.copyArray=function(arr){var newArr=[];for(var i=0;i<arr.length;i++){newArr.push(arr[i]);}return newArr;};/**
     * Retrieve the absolute left value of a DOM element
     * @param {Element} elem        A dom element, for example a div
     * @return {number} left        The absolute left position of this element
     *                              in the browser page.
     */exports.getAbsoluteLeft=function(elem){return elem.getBoundingClientRect().left;};exports.getAbsoluteRight=function(elem){return elem.getBoundingClientRect().right;};/**
     * Retrieve the absolute top value of a DOM element
     * @param {Element} elem        A dom element, for example a div
     * @return {number} top        The absolute top position of this element
     *                              in the browser page.
     */exports.getAbsoluteTop=function(elem){return elem.getBoundingClientRect().top;};/**
     * add a className to the given elements style
     * @param {Element} elem
     * @param {string} classNames
     */exports.addClassName=function(elem,classNames){var classes=elem.className.split(' ');var newClasses=classNames.split(' ');classes=classes.concat(newClasses.filter(function(className){return classes.indexOf(className)<0;}));elem.className=classes.join(' ');};/**
     * add a className to the given elements style
     * @param {Element} elem
     * @param {string} classNames
     */exports.removeClassName=function(elem,classNames){var classes=elem.className.split(' ');var oldClasses=classNames.split(' ');classes=classes.filter(function(className){return oldClasses.indexOf(className)<0;});elem.className=classes.join(' ');};/**
     * For each method for both arrays and objects.
     * In case of an array, the built-in Array.forEach() is applied. (**No, it's not!**)
     * In case of an Object, the method loops over all properties of the object.
     * @param {Object | Array} object   An Object or Array
     * @param {function} callback       Callback method, called for each item in
     *                                  the object or array with three parameters:
     *                                  callback(value, index, object)
     */exports.forEach=function(object,callback){var i,len;if(Array.isArray(object)){// array
  for(i=0,len=object.length;i<len;i++){callback(object[i],i,object);}}else{// object
  for(i in object){if(object.hasOwnProperty(i)){callback(object[i],i,object);}}}};/**
     * Convert an object into an array: all objects properties are put into the
     * array. The resulting array is unordered.
     * @param {Object} object
     * @returns {Array} array
     */exports.toArray=function(object){var array=[];for(var prop in object){if(object.hasOwnProperty(prop))array.push(object[prop]);}return array;};/**
     * Update a property in an object
     * @param {Object} object
     * @param {string} key
     * @param {*} value
     * @return {Boolean} changed
     */exports.updateProperty=function(object,key,value){if(object[key]!==value){object[key]=value;return true;}else{return false;}};/**
     * Throttle the given function to be only executed once per animation frame
     * @param {function} fn
     * @returns {function} Returns the throttled function
     */exports.throttle=function(fn){var scheduled=false;return function throttled(){if(!scheduled){scheduled=true;requestAnimationFrame(function(){scheduled=false;fn();});}};};/**
     * Add and event listener. Works for all browsers
     * @param {Element}     element    An html element
     * @param {string}      action     The action, for example "click",
     *                                 without the prefix "on"
     * @param {function}    listener   The callback function to be executed
     * @param {boolean}     [useCapture]
     */exports.addEventListener=function(element,action,listener,useCapture){if(element.addEventListener){if(useCapture===undefined)useCapture=false;if(action==="mousewheel"&&navigator.userAgent.indexOf("Firefox")>=0){action="DOMMouseScroll";// For Firefox
  }element.addEventListener(action,listener,useCapture);}else{element.attachEvent("on"+action,listener);// IE browsers
  }};/**
     * Remove an event listener from an element
     * @param {Element}     element         An html dom element
     * @param {string}      action          The name of the event, for example "mousedown"
     * @param {function}    listener        The listener function
     * @param {boolean}     [useCapture]
     */exports.removeEventListener=function(element,action,listener,useCapture){if(element.removeEventListener){// non-IE browsers
  if(useCapture===undefined)useCapture=false;if(action==="mousewheel"&&navigator.userAgent.indexOf("Firefox")>=0){action="DOMMouseScroll";// For Firefox
  }element.removeEventListener(action,listener,useCapture);}else{// IE browsers
  element.detachEvent("on"+action,listener);}};/**
     * Cancels the event if it is cancelable, without stopping further propagation of the event.
     * @param {Event} event
     */exports.preventDefault=function(event){if(!event)event=window.event;if(event.preventDefault){event.preventDefault();// non-IE browsers
  }else{event.returnValue=false;// IE browsers
  }};/**
     * Get HTML element which is the target of the event
     * @param {Event} event
     * @return {Element} target element
     */exports.getTarget=function(event){// code from http://www.quirksmode.org/js/events_properties.html
  if(!event){event=window.event;}var target;if(event.target){target=event.target;}else if(event.srcElement){target=event.srcElement;}if(target.nodeType!=undefined&&target.nodeType==3){// defeat Safari bug
  target=target.parentNode;}return target;};/**
     * Check if given element contains given parent somewhere in the DOM tree
     * @param {Element} element
     * @param {Element} parent
     * @returns {boolean}
     */exports.hasParent=function(element,parent){var e=element;while(e){if(e===parent){return true;}e=e.parentNode;}return false;};exports.option={};/**
     * Convert a value into a boolean
     * @param {Boolean | function | undefined} value
     * @param {boolean} [defaultValue]
     * @returns {Boolean} bool
     */exports.option.asBoolean=function(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return value!=false;}return defaultValue||null;};/**
     * Convert a value into a number
     * @param {Boolean | function | undefined} value
     * @param {number} [defaultValue]
     * @returns {number} number
     */exports.option.asNumber=function(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return Number(value)||defaultValue||null;}return defaultValue||null;};/**
     * Convert a value into a string
     * @param {string | function | undefined} value
     * @param {string} [defaultValue]
     * @returns {String} str
     */exports.option.asString=function(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return String(value);}return defaultValue||null;};/**
     * Convert a size or location into a string with pixels or a percentage
     * @param {string | number | function | undefined} value
     * @param {string} [defaultValue]
     * @returns {String} size
     */exports.option.asSize=function(value,defaultValue){if(typeof value=='function'){value=value();}if(exports.isString(value)){return value;}else if(exports.isNumber(value)){return value+'px';}else{return defaultValue||null;}};/**
     * Convert a value into a DOM element
     * @param {HTMLElement | function | undefined} value
     * @param {HTMLElement} [defaultValue]
     * @returns {HTMLElement | null} dom
     */exports.option.asElement=function(value,defaultValue){if(typeof value=='function'){value=value();}return value||defaultValue||null;};/**
     * http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb
     *
     * @param {string} hex
     * @returns {{r: *, g: *, b: *}} | 255 range
     */exports.hexToRGB=function(hex){// Expand shorthand form (e.g. "03F") to full form (e.g. "0033FF")
  var shorthandRegex=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;hex=hex.replace(shorthandRegex,function(m,r,g,b){return r+r+g+g+b+b;});var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null;};/**
     * This function takes color in hex format or rgb() or rgba() format and overrides the opacity. Returns rgba() string.
     * @param {string} color
     * @param {number} opacity
     * @returns {String}
     */exports.overrideOpacity=function(color,opacity){var rgb;if(color.indexOf("rgba")!=-1){return color;}else if(color.indexOf("rgb")!=-1){rgb=color.substr(color.indexOf("(")+1).replace(")","").split(",");return "rgba("+rgb[0]+","+rgb[1]+","+rgb[2]+","+opacity+")";}else{rgb=exports.hexToRGB(color);if(rgb==null){return color;}else{return "rgba("+rgb.r+","+rgb.g+","+rgb.b+","+opacity+")";}}};/**
     *
     * @param {number} red     0 -- 255
     * @param {number} green   0 -- 255
     * @param {number} blue    0 -- 255
     * @returns {String}
     * @constructor
     */exports.RGBToHex=function(red,green,blue){return "#"+((1<<24)+(red<<16)+(green<<8)+blue).toString(16).slice(1);};/**
     * Parse a color property into an object with border, background, and
     * highlight colors
     * @param {Object | String} color
     * @return {Object} colorObject
     */exports.parseColor=function(color){var c;if(exports.isString(color)===true){if(exports.isValidRGB(color)===true){var rgb=color.substr(4).substr(0,color.length-5).split(',').map(function(value){return parseInt(value);});color=exports.RGBToHex(rgb[0],rgb[1],rgb[2]);}if(exports.isValidHex(color)===true){var hsv=exports.hexToHSV(color);var lighterColorHSV={h:hsv.h,s:hsv.s*0.8,v:Math.min(1,hsv.v*1.02)};var darkerColorHSV={h:hsv.h,s:Math.min(1,hsv.s*1.25),v:hsv.v*0.8};var darkerColorHex=exports.HSVToHex(darkerColorHSV.h,darkerColorHSV.s,darkerColorHSV.v);var lighterColorHex=exports.HSVToHex(lighterColorHSV.h,lighterColorHSV.s,lighterColorHSV.v);c={background:color,border:darkerColorHex,highlight:{background:lighterColorHex,border:darkerColorHex},hover:{background:lighterColorHex,border:darkerColorHex}};}else{c={background:color,border:color,highlight:{background:color,border:color},hover:{background:color,border:color}};}}else{c={};c.background=color.background||undefined;c.border=color.border||undefined;if(exports.isString(color.highlight)){c.highlight={border:color.highlight,background:color.highlight};}else{c.highlight={};c.highlight.background=color.highlight&&color.highlight.background||undefined;c.highlight.border=color.highlight&&color.highlight.border||undefined;}if(exports.isString(color.hover)){c.hover={border:color.hover,background:color.hover};}else{c.hover={};c.hover.background=color.hover&&color.hover.background||undefined;c.hover.border=color.hover&&color.hover.border||undefined;}}return c;};/**
     * http://www.javascripter.net/faq/rgb2hsv.htm
     *
     * @param {number} red
     * @param {number} green
     * @param {number} blue
     * @returns {{h: number, s: number, v: number}}
     * @constructor
     */exports.RGBToHSV=function(red,green,blue){red=red/255;green=green/255;blue=blue/255;var minRGB=Math.min(red,Math.min(green,blue));var maxRGB=Math.max(red,Math.max(green,blue));// Black-gray-white
  if(minRGB==maxRGB){return {h:0,s:0,v:minRGB};}// Colors other than black-gray-white:
  var d=red==minRGB?green-blue:blue==minRGB?red-green:blue-red;var h=red==minRGB?3:blue==minRGB?1:5;var hue=60*(h-d/(maxRGB-minRGB))/360;var saturation=(maxRGB-minRGB)/maxRGB;var value=maxRGB;return {h:hue,s:saturation,v:value};};var cssUtil={// split a string with css styles into an object with key/values
  split:function split(cssText){var styles={};cssText.split(';').forEach(function(style){if(style.trim()!=''){var parts=style.split(':');var key=parts[0].trim();var value=parts[1].trim();styles[key]=value;}});return styles;},// build a css text string from an object with key/values
  join:function join(styles){return Object.keys(styles).map(function(key){return key+': '+styles[key];}).join('; ');}};/**
     * Append a string with css styles to an element
     * @param {Element} element
     * @param {string} cssText
     */exports.addCssText=function(element,cssText){var currentStyles=cssUtil.split(element.style.cssText);var newStyles=cssUtil.split(cssText);var styles=exports.extend(currentStyles,newStyles);element.style.cssText=cssUtil.join(styles);};/**
     * Remove a string with css styles from an element
     * @param {Element} element
     * @param {string} cssText
     */exports.removeCssText=function(element,cssText){var styles=cssUtil.split(element.style.cssText);var removeStyles=cssUtil.split(cssText);for(var key in removeStyles){if(removeStyles.hasOwnProperty(key)){delete styles[key];}}element.style.cssText=cssUtil.join(styles);};/**
     * https://gist.github.com/mjijackson/5311256
     * @param {number} h
     * @param {number} s
     * @param {number} v
     * @returns {{r: number, g: number, b: number}}
     * @constructor
     */exports.HSVToRGB=function(h,s,v){var r,g,b;var i=Math.floor(h*6);var f=h*6-i;var p=v*(1-s);var q=v*(1-f*s);var t=v*(1-(1-f)*s);switch(i%6){case 0:r=v,g=t,b=p;break;case 1:r=q,g=v,b=p;break;case 2:r=p,g=v,b=t;break;case 3:r=p,g=q,b=v;break;case 4:r=t,g=p,b=v;break;case 5:r=v,g=p,b=q;break;}return {r:Math.floor(r*255),g:Math.floor(g*255),b:Math.floor(b*255)};};exports.HSVToHex=function(h,s,v){var rgb=exports.HSVToRGB(h,s,v);return exports.RGBToHex(rgb.r,rgb.g,rgb.b);};exports.hexToHSV=function(hex){var rgb=exports.hexToRGB(hex);return exports.RGBToHSV(rgb.r,rgb.g,rgb.b);};exports.isValidHex=function(hex){var isOk=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);return isOk;};exports.isValidRGB=function(rgb){rgb=rgb.replace(" ","");var isOk=/rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/i.test(rgb);return isOk;};exports.isValidRGBA=function(rgba){rgba=rgba.replace(" ","");var isOk=/rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),(.{1,3})\)/i.test(rgba);return isOk;};/**
     * This recursively redirects the prototype of JSON objects to the referenceObject
     * This is used for default options.
     *
     * @param {Array.<string>} fields
     * @param {Object} referenceObject
     * @returns {*}
     */exports.selectiveBridgeObject=function(fields,referenceObject){if(referenceObject!==null&&_typeof(referenceObject)==="object"){// !!! typeof null === 'object'
  var objectTo=Object.create(referenceObject);for(var i=0;i<fields.length;i++){if(referenceObject.hasOwnProperty(fields[i])){if(_typeof(referenceObject[fields[i]])=="object"){objectTo[fields[i]]=exports.bridgeObject(referenceObject[fields[i]]);}}}return objectTo;}else{return null;}};/**
     * This recursively redirects the prototype of JSON objects to the referenceObject
     * This is used for default options.
     *
     * @param {Object} referenceObject
     * @returns {*}
     */exports.bridgeObject=function(referenceObject){if(referenceObject!==null&&_typeof(referenceObject)==="object"){// !!! typeof null === 'object'
  var objectTo=Object.create(referenceObject);if(referenceObject instanceof Element){// Avoid bridging DOM objects
  objectTo=referenceObject;}else{objectTo=Object.create(referenceObject);for(var i in referenceObject){if(referenceObject.hasOwnProperty(i)){if(_typeof(referenceObject[i])=="object"){objectTo[i]=exports.bridgeObject(referenceObject[i]);}}}}return objectTo;}else{return null;}};/**
     * This method provides a stable sort implementation, very fast for presorted data
     *
     * @param {Array} a the array
     * @param {function} compare an order comparator
     * @returns {Array}
     */exports.insertSort=function(a,compare){for(var i=0;i<a.length;i++){var k=a[i];for(var j=i;j>0&&compare(k,a[j-1])<0;j--){a[j]=a[j-1];}a[j]=k;}return a;};/**
     * This is used to set the options of subobjects in the options object.
     *
     * A requirement of these subobjects is that they have an 'enabled' element
     * which is optional for the user but mandatory for the program.
     *
     * The added value here of the merge is that option 'enabled' is set as required.
     *
     *
     * @param {object} mergeTarget   | either this.options or the options used for the groups.
     * @param {object} options       | options
     * @param {string} option        | option key in the options argument
     * @param {object} globalOptions | global options, passed in to determine value of option 'enabled'
     */exports.mergeOptions=function(mergeTarget,options,option){var globalOptions=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// Local helpers
  var isPresent=function isPresent(obj){return obj!==null&&obj!==undefined;};var isObject=function isObject(obj){return obj!==null&&_typeof(obj)==='object';};// https://stackoverflow.com/a/34491287/1223531
  var isEmpty=function isEmpty(obj){for(var x in obj){if(obj.hasOwnProperty(x))return false;}return true;};// Guards
  if(!isObject(mergeTarget)){throw new Error('Parameter mergeTarget must be an object');}if(!isObject(options)){throw new Error('Parameter options must be an object');}if(!isPresent(option)){throw new Error('Parameter option must have a value');}if(!isObject(globalOptions)){throw new Error('Parameter globalOptions must be an object');}//
  // Actual merge routine, separated from main logic
  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.
  //
  var doMerge=function doMerge(target,options,option){if(!isObject(target[option])){target[option]={};}var src=options[option];var dst=target[option];for(var prop in src){if(src.hasOwnProperty(prop)){dst[prop]=src[prop];}}};// Local initialization
  var srcOption=options[option];var globalPassed=isObject(globalOptions)&&!isEmpty(globalOptions);var globalOption=globalPassed?globalOptions[option]:undefined;var globalEnabled=globalOption?globalOption.enabled:undefined;/////////////////////////////////////////
  // Main routine
  /////////////////////////////////////////
  if(srcOption===undefined){return;// Nothing to do
  }if(typeof srcOption==='boolean'){if(!isObject(mergeTarget[option])){mergeTarget[option]={};}mergeTarget[option].enabled=srcOption;return;}if(srcOption===null&&!isObject(mergeTarget[option])){// If possible, explicit copy from globals
  if(isPresent(globalOption)){mergeTarget[option]=Object.create(globalOption);}else{return;// Nothing to do
  }}if(!isObject(srcOption)){return;}//
  // Ensure that 'enabled' is properly set. It is required internally
  // Note that the value from options will always overwrite the existing value
  //
  var enabled=true;// default value
  if(srcOption.enabled!==undefined){enabled=srcOption.enabled;}else{// Take from globals, if present
  if(globalEnabled!==undefined){enabled=globalOption.enabled;}}doMerge(mergeTarget,options,option);mergeTarget[option].enabled=enabled;};/**
     * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses
     * this function will then iterate in both directions over this sorted list to find all visible items.
     *
     * @param {Item[]} orderedItems       | Items ordered by start
     * @param {function} comparator       | -1 is lower, 0 is equal, 1 is higher
     * @param {string} field
     * @param {string} field2
     * @returns {number}
     * @private
     */exports.binarySearchCustom=function(orderedItems,comparator,field,field2){var maxIterations=10000;var iteration=0;var low=0;var high=orderedItems.length-1;while(low<=high&&iteration<maxIterations){var middle=Math.floor((low+high)/2);var item=orderedItems[middle];var value=field2===undefined?item[field]:item[field][field2];var searchResult=comparator(value);if(searchResult==0){// jihaa, found a visible item!
  return middle;}else if(searchResult==-1){// it is too small --> increase low
  low=middle+1;}else{// it is too big --> decrease high
  high=middle-1;}iteration++;}return -1;};/**
     * This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of
     * two values, we return either the one before or the one after, depending on user input
     * If it is found, we return the index, else -1.
     *
     * @param {Array} orderedItems
     * @param {{start: number, end: number}} target
     * @param {string} field
     * @param {string} sidePreference   'before' or 'after'
     * @param {function} comparator an optional comparator, returning -1,0,1 for <,==,>.
     * @returns {number}
     * @private
     */exports.binarySearchValue=function(orderedItems,target,field,sidePreference,comparator){var maxIterations=10000;var iteration=0;var low=0;var high=orderedItems.length-1;var prevValue,value,nextValue,middle;comparator=comparator!=undefined?comparator:function(a,b){return a==b?0:a<b?-1:1;};while(low<=high&&iteration<maxIterations){// get a new guess
  middle=Math.floor(0.5*(high+low));prevValue=orderedItems[Math.max(0,middle-1)][field];value=orderedItems[middle][field];nextValue=orderedItems[Math.min(orderedItems.length-1,middle+1)][field];if(comparator(value,target)==0){// we found the target
  return middle;}else if(comparator(prevValue,target)<0&&comparator(value,target)>0){// target is in between of the previous and the current
  return sidePreference=='before'?Math.max(0,middle-1):middle;}else if(comparator(value,target)<0&&comparator(nextValue,target)>0){// target is in between of the current and the next
  return sidePreference=='before'?middle:Math.min(orderedItems.length-1,middle+1);}else{// didnt find the target, we need to change our boundaries.
  if(comparator(value,target)<0){// it is too small --> increase low
  low=middle+1;}else{// it is too big --> decrease high
  high=middle-1;}}iteration++;}// didnt find anything. Return -1.
  return -1;};/*
     * Easing Functions - inspired from http://gizma.com/easing/
     * only considering the t value for the range [0, 1] => [0, 1]
     * https://gist.github.com/gre/1650294
     */exports.easingFunctions={// no easing, no acceleration
  linear:function linear(t){return t;},// accelerating from zero velocity
  easeInQuad:function easeInQuad(t){return t*t;},// decelerating to zero velocity
  easeOutQuad:function easeOutQuad(t){return t*(2-t);},// acceleration until halfway, then deceleration
  easeInOutQuad:function easeInOutQuad(t){return t<.5?2*t*t:-1+(4-2*t)*t;},// accelerating from zero velocity
  easeInCubic:function easeInCubic(t){return t*t*t;},// decelerating to zero velocity
  easeOutCubic:function easeOutCubic(t){return --t*t*t+1;},// acceleration until halfway, then deceleration
  easeInOutCubic:function easeInOutCubic(t){return t<.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1;},// accelerating from zero velocity
  easeInQuart:function easeInQuart(t){return t*t*t*t;},// decelerating to zero velocity
  easeOutQuart:function easeOutQuart(t){return 1- --t*t*t*t;},// acceleration until halfway, then deceleration
  easeInOutQuart:function easeInOutQuart(t){return t<.5?8*t*t*t*t:1-8*--t*t*t*t;},// accelerating from zero velocity
  easeInQuint:function easeInQuint(t){return t*t*t*t*t;},// decelerating to zero velocity
  easeOutQuint:function easeOutQuint(t){return 1+--t*t*t*t*t;},// acceleration until halfway, then deceleration
  easeInOutQuint:function easeInOutQuint(t){return t<.5?16*t*t*t*t*t:1+16*--t*t*t*t*t;}};exports.getScrollBarWidth=function(){var inner=document.createElement('p');inner.style.width="100%";inner.style.height="200px";var outer=document.createElement('div');outer.style.position="absolute";outer.style.top="0px";outer.style.left="0px";outer.style.visibility="hidden";outer.style.width="200px";outer.style.height="150px";outer.style.overflow="hidden";outer.appendChild(inner);document.body.appendChild(outer);var w1=inner.offsetWidth;outer.style.overflow='scroll';var w2=inner.offsetWidth;if(w1==w2)w2=outer.clientWidth;document.body.removeChild(outer);return w1-w2;};exports.topMost=function(pile,accessors){var candidate;if(!Array.isArray(accessors)){accessors=[accessors];}var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=pile[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var member=_step.value;if(member){candidate=member[accessors[0]];for(var i=1;i<accessors.length;i++){if(candidate){candidate=candidate[accessors[i]];}}if(typeof candidate!='undefined'){break;}}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return candidate;};});var esm_1=esm$2.isNumber;var esm_2=esm$2.recursiveDOMDelete;var esm_3=esm$2.isString;var esm_4=esm$2.isDate;var esm_5=esm$2.randomUUID;var esm_6=esm$2.fillIfDefined;var esm_7=esm$2.extend;var esm_8=esm$2.selectiveExtend;var esm_9=esm$2.selectiveDeepExtend;var esm_10=esm$2.selectiveNotDeepExtend;var esm_11=esm$2.deepExtend;var esm_12=esm$2.equalArray;var esm_13=esm$2.convert;var esm_14=esm$2.getType;var esm_15=esm$2.copyAndExtendArray;var esm_16=esm$2.copyArray;var esm_17=esm$2.getAbsoluteLeft;var esm_18=esm$2.getAbsoluteRight;var esm_19=esm$2.getAbsoluteTop;var esm_20=esm$2.addClassName;var esm_21=esm$2.removeClassName;var esm_22=esm$2.forEach;var esm_23=esm$2.toArray;var esm_24=esm$2.updateProperty;var esm_25=esm$2.throttle;var esm_26=esm$2.addEventListener;var esm_27=esm$2.removeEventListener;var esm_28=esm$2.preventDefault;var esm_29=esm$2.getTarget;var esm_30=esm$2.hasParent;var esm_31=esm$2.option;var esm_32=esm$2.hexToRGB;var esm_33=esm$2.overrideOpacity;var esm_34=esm$2.RGBToHex;var esm_35=esm$2.parseColor;var esm_36=esm$2.RGBToHSV;var esm_37=esm$2.addCssText;var esm_38=esm$2.removeCssText;var esm_39=esm$2.HSVToRGB;var esm_40=esm$2.HSVToHex;var esm_41=esm$2.hexToHSV;var esm_42=esm$2.isValidHex;var esm_43=esm$2.isValidRGB;var esm_44=esm$2.isValidRGBA;var esm_45=esm$2.selectiveBridgeObject;var esm_46=esm$2.bridgeObject;var esm_47=esm$2.insertSort;var esm_48=esm$2.mergeOptions;var esm_49=esm$2.binarySearchCustom;var esm_50=esm$2.binarySearchValue;var esm_51=esm$2.easingFunctions;var esm_52=esm$2.getScrollBarWidth;var esm_53=esm$2.topMost;/**
   * A queue
   * @param {Object} options
   *            Available options:
   *            - delay: number    When provided, the queue will be flushed
   *                               automatically after an inactivity of this delay
   *                               in milliseconds.
   *                               Default value is null.
   *            - max: number      When the queue exceeds the given maximum number
   *                               of entries, the queue is flushed automatically.
   *                               Default value of max is Infinity.
   * @constructor Queue
   */function Queue$2(options){// options
  this.delay=null;this.max=Infinity;// properties
  this._queue=[];this._timeout=null;this._extended=null;this.setOptions(options);}/**
   * Update the configuration of the queue
   * @param {Object} options
   *            Available options:
   *            - delay: number    When provided, the queue will be flushed
   *                               automatically after an inactivity of this delay
   *                               in milliseconds.
   *                               Default value is null.
   *            - max: number      When the queue exceeds the given maximum number
   *                               of entries, the queue is flushed automatically.
   *                               Default value of max is Infinity.
   */Queue$2.prototype.setOptions=function(options){if(options&&typeof options.delay!=='undefined'){this.delay=options.delay;}if(options&&typeof options.max!=='undefined'){this.max=options.max;}this._flushIfNeeded();};/**
   * Extend an object with queuing functionality.
   * The object will be extended with a function flush, and the methods provided
   * in options.replace will be replaced with queued ones.
   * @param {Object} object
   * @param {Object} options
   *            Available options:
   *            - replace: Array.<string>
   *                               A list with method names of the methods
   *                               on the object to be replaced with queued ones.
   *            - delay: number    When provided, the queue will be flushed
   *                               automatically after an inactivity of this delay
   *                               in milliseconds.
   *                               Default value is null.
   *            - max: number      When the queue exceeds the given maximum number
   *                               of entries, the queue is flushed automatically.
   *                               Default value of max is Infinity.
   * @return {Queue} Returns the created queue
   */Queue$2.extend=function(object,options){var queue=new Queue$2(options);if(object.flush!==undefined){throw new Error('Target object already has a property flush');}object.flush=function(){queue.flush();};var methods=[{name:'flush',original:undefined}];if(options&&options.replace){for(var i=0;i<options.replace.length;i++){var name=options.replace[i];methods.push({name:name,original:object[name]});queue.replace(object,name);}}queue._extended={object:object,methods:methods};return queue;};/**
   * Destroy the queue. The queue will first flush all queued actions, and in
   * case it has extended an object, will restore the original object.
   */Queue$2.prototype.destroy=function(){this.flush();if(this._extended){var object=this._extended.object;var methods=this._extended.methods;for(var i=0;i<methods.length;i++){var method=methods[i];if(method.original){object[method.name]=method.original;}else{delete object[method.name];}}this._extended=null;}};/**
   * Replace a method on an object with a queued version
   * @param {Object} object   Object having the method
   * @param {string} method   The method name
   */Queue$2.prototype.replace=function(object,method){var me=this;var original=object[method];if(!original){throw new Error('Method '+method+' undefined');}object[method]=function(){// create an Array with the arguments
  var args=[];for(var i=0;i<arguments.length;i++){args[i]=arguments[i];}// add this call to the queue
  me.queue({args:args,fn:original,context:this});};};/**
   * Queue a call
   * @param {function | {fn: function, args: Array} | {fn: function, args: Array, context: Object}} entry
   */Queue$2.prototype.queue=function(entry){if(typeof entry==='function'){this._queue.push({fn:entry});}else{this._queue.push(entry);}this._flushIfNeeded();};/**
   * Check whether the queue needs to be flushed
   * @private
   */Queue$2.prototype._flushIfNeeded=function(){// flush when the maximum is exceeded.
  if(this._queue.length>this.max){this.flush();}// flush after a period of inactivity when a delay is configured
  clearTimeout(this._timeout);if(this.queue.length>0&&typeof this.delay==='number'){var me=this;this._timeout=setTimeout(function(){me.flush();},this.delay);}};/**
   * Flush all queued calls
   */Queue$2.prototype.flush=function(){while(this._queue.length>0){var entry=this._queue.shift();entry.fn.apply(entry.context||entry.fn,entry.args||[]);}};var Queue_1=Queue$2;/**
   * DataSet
   * // TODO: add a DataSet constructor DataSet(data, options)
   *
   * Usage:
   *     var dataSet = new DataSet({
   *         fieldId: '_id',
   *         type: {
   *             // ...
   *         }
   *     });
   *
   *     dataSet.add(item);
   *     dataSet.add(data);
   *     dataSet.update(item);
   *     dataSet.update(data);
   *     dataSet.remove(id);
   *     dataSet.remove(ids);
   *     var data = dataSet.get();
   *     var data = dataSet.get(id);
   *     var data = dataSet.get(ids);
   *     var data = dataSet.get(ids, options, data);
   *     dataSet.clear();
   *
   * A data set can:
   * - add/remove/update data
   * - gives triggers upon changes in the data
   * - can  import/export data in various data formats
   *
   * @param {Array} [data]    Optional array with initial data
   * @param {Object} [options]   Available options:
   *                             {string} fieldId Field name of the id in the
   *                                              items, 'id' by default.
   *                             {Object.<string, string} type
   *                                              A map with field names as key,
   *                                              and the field type as value.
   *                             {Object} queue   Queue changes to the DataSet,
   *                                              flush them all at once.
   *                                              Queue options:
   *                                              - {number} delay  Delay in ms, null by default
   *                                              - {number} max    Maximum number of entries in the queue, Infinity by default
   * @constructor DataSet
   */function DataSet$2(data,options){// correctly read optional arguments
  if(data&&!Array.isArray(data)){options=data;data=null;}this._options=options||{};this._data={};// map with data indexed by id
  this.length=0;// number of items in the DataSet
  this._fieldId=this._options.fieldId||'id';// name of the field containing id
  this._type={};// internal field types (NOTE: this can differ from this._options.type)
  // all variants of a Date are internally stored as Date, so we can convert
  // from everything to everything (also from ISODate to Number for example)
  if(this._options.type){var fields=Object.keys(this._options.type);for(var i=0,len=fields.length;i<len;i++){var field=fields[i];var value=this._options.type[field];if(value=='Date'||value=='ISODate'||value=='ASPDate'){this._type[field]='Date';}else{this._type[field]=value;}}}this._subscribers={};// event subscribers
  // add initial data when provided
  if(data){this.add(data);}this.setOptions(options);}/**
   * @param {Object} options   Available options:
   *                             {Object} queue   Queue changes to the DataSet,
   *                                              flush them all at once.
   *                                              Queue options:
   *                                              - {number} delay  Delay in ms, null by default
   *                                              - {number} max    Maximum number of entries in the queue, Infinity by default
   */DataSet$2.prototype.setOptions=function(options){if(options&&options.queue!==undefined){if(options.queue===false){// delete queue if loaded
  if(this._queue){this._queue.destroy();delete this._queue;}}else{// create queue and update its options
  if(!this._queue){this._queue=Queue_1.extend(this,{replace:['add','update','remove']});}if(_typeof$1$1(options.queue)==='object'){this._queue.setOptions(options.queue);}}}};/**
   * Subscribe to an event, add an event listener
   * @param {string} event        Event name. Available events: 'add', 'update',
   *                              'remove'
   * @param {function} callback   Callback method. Called with three parameters:
   *                                  {string} event
   *                                  {Object | null} params
   *                                  {string | number} senderId
   */DataSet$2.prototype.on=function(event,callback){var subscribers=this._subscribers[event];if(!subscribers){subscribers=[];this._subscribers[event]=subscribers;}subscribers.push({callback:callback});};/**
   * Unsubscribe from an event, remove an event listener
   * @param {string} event
   * @param {function} callback
   */DataSet$2.prototype.off=function(event,callback){var subscribers=this._subscribers[event];if(subscribers){this._subscribers[event]=subscribers.filter(function(listener){return listener.callback!=callback;});}};/**
   * Trigger an event
   * @param {string} event
   * @param {Object | null} params
   * @param {string} [senderId]       Optional id of the sender.
   * @private
   */DataSet$2.prototype._trigger=function(event,params,senderId){if(event=='*'){throw new Error('Cannot trigger event *');}var subscribers=[];if(event in this._subscribers){subscribers=subscribers.concat(this._subscribers[event]);}if('*'in this._subscribers){subscribers=subscribers.concat(this._subscribers['*']);}for(var i=0,len=subscribers.length;i<len;i++){var subscriber=subscribers[i];if(subscriber.callback){subscriber.callback(event,params,senderId||null);}}};/**
   * Add data.
   * Adding an item will fail when there already is an item with the same id.
   * @param {Object | Array} data
   * @param {string} [senderId] Optional sender id
   * @return {Array.<string|number>} addedIds      Array with the ids of the added items
   */DataSet$2.prototype.add=function(data,senderId){var addedIds=[],id,me=this;if(Array.isArray(data)){// Array
  for(var i=0,len=data.length;i<len;i++){id=me._addItem(data[i]);addedIds.push(id);}}else if(data&&_typeof$1$1(data)==='object'){// Single item
  id=me._addItem(data);addedIds.push(id);}else{throw new Error('Unknown dataType');}if(addedIds.length){this._trigger('add',{items:addedIds},senderId);}return addedIds;};/**
   * Update existing items. When an item does not exist, it will be created
   * @param {Object | Array} data
   * @param {string} [senderId] Optional sender id
   * @return {Array.<string|number>} updatedIds     The ids of the added or updated items
   * @throws {Error} Unknown Datatype
   */DataSet$2.prototype.update=function(data,senderId){var addedIds=[];var updatedIds=[];var oldData=[];var updatedData=[];var me=this;var fieldId=me._fieldId;var addOrUpdate=function addOrUpdate(item){var id=item[fieldId];if(me._data[id]){var oldItem=esm$2.extend({},me._data[id]);// update item
  id=me._updateItem(item);updatedIds.push(id);updatedData.push(item);oldData.push(oldItem);}else{// add new item
  id=me._addItem(item);addedIds.push(id);}};if(Array.isArray(data)){// Array
  for(var i=0,len=data.length;i<len;i++){if(data[i]&&_typeof$1$1(data[i])==='object'){addOrUpdate(data[i]);}else{console.warn('Ignoring input item, which is not an object at index '+i);}}}else if(data&&_typeof$1$1(data)==='object'){// Single item
  addOrUpdate(data);}else{throw new Error('Unknown dataType');}if(addedIds.length){this._trigger('add',{items:addedIds},senderId);}if(updatedIds.length){var props={items:updatedIds,oldData:oldData,data:updatedData};// TODO: remove deprecated property 'data' some day
  //Object.defineProperty(props, 'data', {
  //  'get': (function() {
  //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');
  //    return updatedData;
  //  }).bind(this)
  //});
  this._trigger('update',props,senderId);}return addedIds.concat(updatedIds);};/**
   * Get a data item or multiple items.
   *
   * Usage:
   *
   *     get()
   *     get(options: Object)
   *
   *     get(id: number | string)
   *     get(id: number | string, options: Object)
   *
   *     get(ids: number[] | string[])
   *     get(ids: number[] | string[], options: Object)
   *
   * Where:
   *
   * {number | string} id         The id of an item
   * {number[] | string{}} ids    An array with ids of items
   * {Object} options             An Object with options. Available options:
   * {string} [returnType]        Type of data to be returned.
   *                              Can be 'Array' (default) or 'Object'.
   * {Object.<string, string>} [type]
   * {string[]} [fields]          field names to be returned
   * {function} [filter]          filter items
   * {string | function} [order]  Order the items by a field name or custom sort function.
   * @param {Array} args
   * @returns {DataSet}
   * @throws Error
   */DataSet$2.prototype.get=function(args){// eslint-disable-line no-unused-vars
  var me=this;// parse the arguments
  var id,ids,options;var firstType=esm$2.getType(arguments[0]);if(firstType=='String'||firstType=='Number'){// get(id [, options])
  id=arguments[0];options=arguments[1];}else if(firstType=='Array'){// get(ids [, options])
  ids=arguments[0];options=arguments[1];}else{// get([, options])
  options=arguments[0];}// determine the return type
  var returnType;if(options&&options.returnType){var allowedValues=['Array','Object'];returnType=allowedValues.indexOf(options.returnType)==-1?'Array':options.returnType;}else{returnType='Array';}// build options
  var type=options&&options.type||this._options.type;var filter=options&&options.filter;var items=[],item,itemIds,itemId,i,len;// convert items
  if(id!=undefined){// return a single item
  item=me._getItem(id,type);if(item&&filter&&!filter(item)){item=null;}}else if(ids!=undefined){// return a subset of items
  for(i=0,len=ids.length;i<len;i++){item=me._getItem(ids[i],type);if(!filter||filter(item)){items.push(item);}}}else{// return all items
  itemIds=Object.keys(this._data);for(i=0,len=itemIds.length;i<len;i++){itemId=itemIds[i];item=me._getItem(itemId,type);if(!filter||filter(item)){items.push(item);}}}// order the results
  if(options&&options.order&&id==undefined){this._sort(items,options.order);}// filter fields of the items
  if(options&&options.fields){var fields=options.fields;if(id!=undefined){item=this._filterFields(item,fields);}else{for(i=0,len=items.length;i<len;i++){items[i]=this._filterFields(items[i],fields);}}}// return the results
  if(returnType=='Object'){var result={},resultant;for(i=0,len=items.length;i<len;i++){resultant=items[i];result[resultant.id]=resultant;}return result;}else{if(id!=undefined){// a single item
  return item;}else{// just return our array
  return items;}}};/**
   * Get ids of all items or from a filtered set of items.
   * @param {Object} [options]    An Object with options. Available options:
   *                              {function} [filter] filter items
   *                              {string | function} [order] Order the items by
   *                                  a field name or custom sort function.
   * @return {Array.<string|number>} ids
   */DataSet$2.prototype.getIds=function(options){var data=this._data,filter=options&&options.filter,order=options&&options.order,type=options&&options.type||this._options.type,itemIds=Object.keys(data),i,len,id,item,items,ids=[];if(filter){// get filtered items
  if(order){// create ordered list
  items=[];for(i=0,len=itemIds.length;i<len;i++){id=itemIds[i];item=this._getItem(id,type);if(filter(item)){items.push(item);}}this._sort(items,order);for(i=0,len=items.length;i<len;i++){ids.push(items[i][this._fieldId]);}}else{// create unordered list
  for(i=0,len=itemIds.length;i<len;i++){id=itemIds[i];item=this._getItem(id,type);if(filter(item)){ids.push(item[this._fieldId]);}}}}else{// get all items
  if(order){// create an ordered list
  items=[];for(i=0,len=itemIds.length;i<len;i++){id=itemIds[i];items.push(data[id]);}this._sort(items,order);for(i=0,len=items.length;i<len;i++){ids.push(items[i][this._fieldId]);}}else{// create unordered list
  for(i=0,len=itemIds.length;i<len;i++){id=itemIds[i];item=data[id];ids.push(item[this._fieldId]);}}}return ids;};/**
   * Returns the DataSet itself. Is overwritten for example by the DataView,
   * which returns the DataSet it is connected to instead.
   * @returns {DataSet}
   */DataSet$2.prototype.getDataSet=function(){return this;};/**
   * Execute a callback function for every item in the dataset.
   * @param {function} callback
   * @param {Object} [options]    Available options:
   *                              {Object.<string, string>} [type]
   *                              {string[]} [fields] filter fields
   *                              {function} [filter] filter items
   *                              {string | function} [order] Order the items by
   *                                  a field name or custom sort function.
   */DataSet$2.prototype.forEach=function(callback,options){var filter=options&&options.filter,type=options&&options.type||this._options.type,data=this._data,itemIds=Object.keys(data),i,len,item,id;if(options&&options.order){// execute forEach on ordered list
  var items=this.get(options);for(i=0,len=items.length;i<len;i++){item=items[i];id=item[this._fieldId];callback(item,id);}}else{// unordered
  for(i=0,len=itemIds.length;i<len;i++){id=itemIds[i];item=this._getItem(id,type);if(!filter||filter(item)){callback(item,id);}}}};/**
   * Map every item in the dataset.
   * @param {function} callback
   * @param {Object} [options]    Available options:
   *                              {Object.<string, string>} [type]
   *                              {string[]} [fields] filter fields
   *                              {function} [filter] filter items
   *                              {string | function} [order] Order the items by
   *                                  a field name or custom sort function.
   * @return {Object[]} mappedItems
   */DataSet$2.prototype.map=function(callback,options){var filter=options&&options.filter,type=options&&options.type||this._options.type,mappedItems=[],data=this._data,itemIds=Object.keys(data),i,len,id,item;// convert and filter items
  for(i=0,len=itemIds.length;i<len;i++){id=itemIds[i];item=this._getItem(id,type);if(!filter||filter(item)){mappedItems.push(callback(item,id));}}// order items
  if(options&&options.order){this._sort(mappedItems,options.order);}return mappedItems;};/**
   * Filter the fields of an item
   * @param {Object | null} item
   * @param {string[]} fields     Field names
   * @return {Object | null} filteredItem or null if no item is provided
   * @private
   */DataSet$2.prototype._filterFields=function(item,fields){if(!item){// item is null
  return item;}var filteredItem={},itemFields=Object.keys(item),len=itemFields.length,i,field;if(Array.isArray(fields)){for(i=0;i<len;i++){field=itemFields[i];if(fields.indexOf(field)!=-1){filteredItem[field]=item[field];}}}else{for(i=0;i<len;i++){field=itemFields[i];if(fields.hasOwnProperty(field)){filteredItem[fields[field]]=item[field];}}}return filteredItem;};/**
   * Sort the provided array with items
   * @param {Object[]} items
   * @param {string | function} order      A field name or custom sort function.
   * @private
   */DataSet$2.prototype._sort=function(items,order){if(esm$2.isString(order)){// order by provided field name
  var name=order;// field name
  items.sort(function(a,b){var av=a[name];var bv=b[name];return av>bv?1:av<bv?-1:0;});}else if(typeof order==='function'){// order by sort function
  items.sort(order);}// TODO: extend order by an Object {field:string, direction:string}
  //       where direction can be 'asc' or 'desc'
  else{throw new TypeError('Order must be a function or a string');}};/**
   * Remove an object by pointer or by id
   * @param {string | number | Object | Array.<string|number>} id Object or id, or an array with
   *                                              objects or ids to be removed
   * @param {string} [senderId] Optional sender id
   * @return {Array.<string|number>} removedIds
   */DataSet$2.prototype.remove=function(id,senderId){var removedIds=[],removedItems=[],ids=[],i,len,itemId,item;// force everything to be an array for simplicity
  ids=Array.isArray(id)?id:[id];for(i=0,len=ids.length;i<len;i++){item=this._remove(ids[i]);if(item){itemId=item[this._fieldId];if(itemId!=undefined){removedIds.push(itemId);removedItems.push(item);}}}if(removedIds.length){this._trigger('remove',{items:removedIds,oldData:removedItems},senderId);}return removedIds;};/**
   * Remove an item by its id
   * @param {number | string | Object} id   id or item
   * @returns {number | string | null} id
   * @private
   */DataSet$2.prototype._remove=function(id){var item,ident;// confirm the id to use based on the args type
  if(esm$2.isNumber(id)||esm$2.isString(id)){ident=id;}else if(id&&_typeof$1$1(id)==='object'){ident=id[this._fieldId];// look for the identifier field using _fieldId
  }// do the remove if the item is found
  if(ident!==undefined&&this._data[ident]){item=this._data[ident];delete this._data[ident];this.length--;return item;}return null;};/**
   * Clear the data
   * @param {string} [senderId] Optional sender id
   * @return {Array.<string|number>} removedIds    The ids of all removed items
   */DataSet$2.prototype.clear=function(senderId){var i,len;var ids=Object.keys(this._data);var items=[];for(i=0,len=ids.length;i<len;i++){items.push(this._data[ids[i]]);}this._data={};this.length=0;this._trigger('remove',{items:ids,oldData:items},senderId);return ids;};/**
   * Find the item with maximum value of a specified field
   * @param {string} field
   * @return {Object | null} item  Item containing max value, or null if no items
   */DataSet$2.prototype.max=function(field){var data=this._data,itemIds=Object.keys(data),max=null,maxField=null,i,len;for(i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];var item=data[id];var itemField=item[field];if(itemField!=null&&(!max||itemField>maxField)){max=item;maxField=itemField;}}return max;};/**
   * Find the item with minimum value of a specified field
   * @param {string} field
   * @return {Object | null} item  Item containing max value, or null if no items
   */DataSet$2.prototype.min=function(field){var data=this._data,itemIds=Object.keys(data),min=null,minField=null,i,len;for(i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];var item=data[id];var itemField=item[field];if(itemField!=null&&(!min||itemField<minField)){min=item;minField=itemField;}}return min;};/**
   * Find all distinct values of a specified field
   * @param {string} field
   * @return {Array} values  Array containing all distinct values. If data items
   *                         do not contain the specified field are ignored.
   *                         The returned array is unordered.
   */DataSet$2.prototype.distinct=function(field){var data=this._data;var itemIds=Object.keys(data);var values=[];var fieldType=this._options.type&&this._options.type[field]||null;var count=0;var i,j,len;for(i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];var item=data[id];var value=item[field];var exists=false;for(j=0;j<count;j++){if(values[j]==value){exists=true;break;}}if(!exists&&value!==undefined){values[count]=value;count++;}}if(fieldType){for(i=0,len=values.length;i<len;i++){values[i]=esm$2.convert(values[i],fieldType);}}return values;};/**
   * Add a single item. Will fail when an item with the same id already exists.
   * @param {Object} item
   * @return {string} id
   * @private
   */DataSet$2.prototype._addItem=function(item){var id=item[this._fieldId];if(id!=undefined){// check whether this id is already taken
  if(this._data[id]){// item already exists
  throw new Error('Cannot add item: item with id '+id+' already exists');}}else{// generate an id
  id=esm$2.randomUUID();item[this._fieldId]=id;}var d={},fields=Object.keys(item),i,len;for(i=0,len=fields.length;i<len;i++){var field=fields[i];var fieldType=this._type[field];// type may be undefined
  d[field]=esm$2.convert(item[field],fieldType);}this._data[id]=d;this.length++;return id;};/**
   * Get an item. Fields can be converted to a specific type
   * @param {string} id
   * @param {Object.<string, string>} [types]  field types to convert
   * @return {Object | null} item
   * @private
   */DataSet$2.prototype._getItem=function(id,types){var field,value,i,len;// get the item from the dataset
  var raw=this._data[id];if(!raw){return null;}// convert the items field types
  var converted={},fields=Object.keys(raw);if(types){for(i=0,len=fields.length;i<len;i++){field=fields[i];value=raw[field];converted[field]=esm$2.convert(value,types[field]);}}else{// no field types specified, no converting needed
  for(i=0,len=fields.length;i<len;i++){field=fields[i];value=raw[field];converted[field]=value;}}if(!converted[this._fieldId]){converted[this._fieldId]=raw.id;}return converted;};/**
   * Update a single item: merge with existing item.
   * Will fail when the item has no id, or when there does not exist an item
   * with the same id.
   * @param {Object} item
   * @return {string} id
   * @private
   */DataSet$2.prototype._updateItem=function(item){var id=item[this._fieldId];if(id==undefined){throw new Error('Cannot update item: item has no id (item: '+JSON.stringify(item)+')');}var d=this._data[id];if(!d){// item doesn't exist
  throw new Error('Cannot update item: no item with id '+id+' found');}// merge with current item
  var fields=Object.keys(item);for(var i=0,len=fields.length;i<len;i++){var field=fields[i];var fieldType=this._type[field];// type may be undefined
  d[field]=esm$2.convert(item[field],fieldType);}return id;};var DataSet_1=DataSet$2;/**
   * DataView
   *
   * a dataview offers a filtered view on a dataset or an other dataview.
   *
   * @param {DataSet | DataView} data
   * @param {Object} [options]   Available options: see method get
   *
   * @constructor DataView
   */function DataView$2(data,options){this._data=null;this._ids={};// ids of the items currently in memory (just contains a boolean true)
  this.length=0;// number of items in the DataView
  this._options=options||{};this._fieldId='id';// name of the field containing id
  this._subscribers={};// event subscribers
  var me=this;this.listener=function(){me._onEvent.apply(me,arguments);};this.setData(data);}// TODO: implement a function .config() to dynamically update things like configured filter
  // and trigger changes accordingly
  /**
   * Set a data source for the view
   * @param {DataSet | DataView} data
   */DataView$2.prototype.setData=function(data){var ids,id,i,len,items;if(this._data){// unsubscribe from current dataset
  if(this._data.off){this._data.off('*',this.listener);}// trigger a remove of all items in memory
  ids=this._data.getIds({filter:this._options&&this._options.filter});items=[];for(i=0,len=ids.length;i<len;i++){items.push(this._data._data[ids[i]]);}this._ids={};this.length=0;this._trigger('remove',{items:ids,oldData:items});}this._data=data;if(this._data){// update fieldId
  this._fieldId=this._options.fieldId||this._data&&this._data.options&&this._data.options.fieldId||'id';// trigger an add of all added items
  ids=this._data.getIds({filter:this._options&&this._options.filter});for(i=0,len=ids.length;i<len;i++){id=ids[i];this._ids[id]=true;}this.length=ids.length;this._trigger('add',{items:ids});// subscribe to new dataset
  if(this._data.on){this._data.on('*',this.listener);}}};/**
   * Refresh the DataView. Useful when the DataView has a filter function
   * containing a variable parameter.
   */DataView$2.prototype.refresh=function(){var id,i,len;var ids=this._data.getIds({filter:this._options&&this._options.filter}),oldIds=Object.keys(this._ids),newIds={},addedIds=[],removedIds=[],removedItems=[];// check for additions
  for(i=0,len=ids.length;i<len;i++){id=ids[i];newIds[id]=true;if(!this._ids[id]){addedIds.push(id);this._ids[id]=true;}}// check for removals
  for(i=0,len=oldIds.length;i<len;i++){id=oldIds[i];if(!newIds[id]){removedIds.push(id);removedItems.push(this._data._data[id]);delete this._ids[id];}}this.length+=addedIds.length-removedIds.length;// trigger events
  if(addedIds.length){this._trigger('add',{items:addedIds});}if(removedIds.length){this._trigger('remove',{items:removedIds,oldData:removedItems});}};/**
   * Get data from the data view
   *
   * Usage:
   *
   *     get()
   *     get(options: Object)
   *     get(options: Object, data: Array | DataTable)
   *
   *     get(id: Number)
   *     get(id: Number, options: Object)
   *     get(id: Number, options: Object, data: Array | DataTable)
   *
   *     get(ids: Number[])
   *     get(ids: Number[], options: Object)
   *     get(ids: Number[], options: Object, data: Array | DataTable)
   *
   * Where:
   *
   * {number | string} id         The id of an item
   * {number[] | string{}} ids    An array with ids of items
   * {Object} options             An Object with options. Available options:
   *                              {string} [type] Type of data to be returned. Can
   *                                              be 'DataTable' or 'Array' (default)
   *                              {Object.<string, string>} [convert]
   *                              {string[]} [fields] field names to be returned
   *                              {function} [filter] filter items
   *                              {string | function} [order] Order the items by
   *                                  a field name or custom sort function.
   * {Array | DataTable} [data]   If provided, items will be appended to this
   *                              array or table. Required in case of Google
   *                              DataTable.
   * @param {Array} args
   * @return {DataSet|DataView}
   */DataView$2.prototype.get=function(args){// eslint-disable-line no-unused-vars
  var me=this;// parse the arguments
  var ids,options,data;var firstType=esm$2.getType(arguments[0]);if(firstType=='String'||firstType=='Number'||firstType=='Array'){// get(id(s) [, options] [, data])
  ids=arguments[0];// can be a single id or an array with ids
  options=arguments[1];data=arguments[2];}else{// get([, options] [, data])
  options=arguments[0];data=arguments[1];}// extend the options with the default options and provided options
  var viewOptions=esm$2.extend({},this._options,options);// create a combined filter method when needed
  if(this._options.filter&&options&&options.filter){viewOptions.filter=function(item){return me._options.filter(item)&&options.filter(item);};}// build up the call to the linked data set
  var getArguments=[];if(ids!=undefined){getArguments.push(ids);}getArguments.push(viewOptions);getArguments.push(data);return this._data&&this._data.get.apply(this._data,getArguments);};/**
   * Get ids of all items or from a filtered set of items.
   * @param {Object} [options]    An Object with options. Available options:
   *                              {function} [filter] filter items
   *                              {string | function} [order] Order the items by
   *                                  a field name or custom sort function.
   * @return {Array.<string|number>} ids
   */DataView$2.prototype.getIds=function(options){var ids;if(this._data){var defaultFilter=this._options.filter;var filter;if(options&&options.filter){if(defaultFilter){filter=function filter(item){return defaultFilter(item)&&options.filter(item);};}else{filter=options.filter;}}else{filter=defaultFilter;}ids=this._data.getIds({filter:filter,order:options&&options.order});}else{ids=[];}return ids;};/**
   * Execute a callback function for every item in the dataview.
   * @param {function} callback
   * @param {Object} [options]    Available options:
   *                              {Object.<string, string>} [type]
   *                              {string[]} [fields] filter fields
   *                              {function} [filter] filter items
   *                              {string | function} [order] Order the items by
   *                                  a field name or custom sort function.
   */DataView$2.prototype.forEach=function(callback,options){if(this._data){var defaultFilter=this._options.filter;var filter;if(options&&options.filter){if(defaultFilter){filter=function filter(item){return defaultFilter(item)&&options.filter(item);};}else{filter=options.filter;}}else{filter=defaultFilter;}this._data.forEach(callback,{filter:filter,order:options&&options.order});}};/**
   * Map every item in the dataview.
   * @param {function} callback
   * @param {Object} [options]    Available options:
   *                              {Object.<string, string>} [type]
   *                              {string[]} [fields] filter fields
   *                              {function} [filter] filter items
   *                              {string | function} [order] Order the items by
   *                                  a field name or custom sort function.
   * @return {Object[]} mappedItems
   */DataView$2.prototype.map=function(callback,options){var mappedItems=[];if(this._data){var defaultFilter=this._options.filter;var filter;if(options&&options.filter){if(defaultFilter){filter=function filter(item){return defaultFilter(item)&&options.filter(item);};}else{filter=options.filter;}}else{filter=defaultFilter;}mappedItems=this._data.map(callback,{filter:filter,order:options&&options.order});}else{mappedItems=[];}return mappedItems;};/**
   * Get the DataSet to which this DataView is connected. In case there is a chain
   * of multiple DataViews, the root DataSet of this chain is returned.
   * @return {DataSet} dataSet
   */DataView$2.prototype.getDataSet=function(){var dataSet=this;while(dataSet instanceof DataView$2){dataSet=dataSet._data;}return dataSet||null;};/**
   * Event listener. Will propagate all events from the connected data set to
   * the subscribers of the DataView, but will filter the items and only trigger
   * when there are changes in the filtered data set.
   * @param {string} event
   * @param {Object | null} params
   * @param {string} senderId
   * @private
   */DataView$2.prototype._onEvent=function(event,params,senderId){var i,len,id,item;var ids=params&&params.items;var addedIds=[],updatedIds=[],removedIds=[],oldItems=[],updatedItems=[],removedItems=[];if(ids&&this._data){switch(event){case'add':// filter the ids of the added items
  for(i=0,len=ids.length;i<len;i++){id=ids[i];item=this.get(id);if(item){this._ids[id]=true;addedIds.push(id);}}break;case'update':// determine the event from the views viewpoint: an updated
  // item can be added, updated, or removed from this view.
  for(i=0,len=ids.length;i<len;i++){id=ids[i];item=this.get(id);if(item){if(this._ids[id]){updatedIds.push(id);updatedItems.push(params.data[i]);oldItems.push(params.oldData[i]);}else{this._ids[id]=true;addedIds.push(id);}}else{if(this._ids[id]){delete this._ids[id];removedIds.push(id);removedItems.push(params.oldData[i]);}}}break;case'remove':// filter the ids of the removed items
  for(i=0,len=ids.length;i<len;i++){id=ids[i];if(this._ids[id]){delete this._ids[id];removedIds.push(id);removedItems.push(params.oldData[i]);}}break;}this.length+=addedIds.length-removedIds.length;if(addedIds.length){this._trigger('add',{items:addedIds},senderId);}if(updatedIds.length){this._trigger('update',{items:updatedIds,oldData:oldItems,data:updatedItems},senderId);}if(removedIds.length){this._trigger('remove',{items:removedIds,oldData:removedItems},senderId);}}};// copy subscription functionality from DataSet
  DataView$2.prototype.on=DataSet_1.prototype.on;DataView$2.prototype.off=DataSet_1.prototype.off;DataView$2.prototype._trigger=DataSet_1.prototype._trigger;// TODO: make these functions deprecated (replaced with `on` and `off` since version 0.5)
  DataView$2.prototype.subscribe=DataView$2.prototype.on;DataView$2.prototype.unsubscribe=DataView$2.prototype.off;var _DataView=DataView$2;var DataSet$1$1=DataSet_1;var DataView$1$1=_DataView;var Queue$1$1=Queue_1;var visData={DataSet:DataSet$1$1,DataView:DataView$1$1,Queue:Queue$1$1};/**
   * Expose `Emitter`.
   */var emitterComponent=Emitter;/**
   * Initialize a new `Emitter`.
   *
   * @api public
   */function Emitter(obj){if(obj)return mixin(obj);}/**
   * Mixin the emitter properties.
   *
   * @param {Object} obj
   * @return {Object}
   * @api private
   */function mixin(obj){for(var key in Emitter.prototype){obj[key]=Emitter.prototype[key];}return obj;}/**
   * Listen on the given `event` with `fn`.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */Emitter.prototype.on=Emitter.prototype.addEventListener=function(event,fn){this._callbacks=this._callbacks||{};(this._callbacks[event]=this._callbacks[event]||[]).push(fn);return this;};/**
   * Adds an `event` listener that will be invoked a single
   * time then automatically removed.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */Emitter.prototype.once=function(event,fn){var self=this;this._callbacks=this._callbacks||{};function on(){self.off(event,on);fn.apply(this,arguments);}on.fn=fn;this.on(event,on);return this;};/**
   * Remove the given callback for `event` or all
   * registered callbacks.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(event,fn){this._callbacks=this._callbacks||{};// all
  if(0==arguments.length){this._callbacks={};return this;}// specific event
  var callbacks=this._callbacks[event];if(!callbacks)return this;// remove all handlers
  if(1==arguments.length){delete this._callbacks[event];return this;}// remove specific handler
  var cb;for(var i=0;i<callbacks.length;i++){cb=callbacks[i];if(cb===fn||cb.fn===fn){callbacks.splice(i,1);break;}}return this;};/**
   * Emit `event` with the given args.
   *
   * @param {String} event
   * @param {Mixed} ...
   * @return {Emitter}
   */Emitter.prototype.emit=function(event){this._callbacks=this._callbacks||{};var args=[].slice.call(arguments,1),callbacks=this._callbacks[event];if(callbacks){callbacks=callbacks.slice(0);for(var i=0,len=callbacks.length;i<len;++i){callbacks[i].apply(this,args);}}return this;};/**
   * Return array of callbacks for `event`.
   *
   * @param {String} event
   * @return {Array}
   * @api public
   */Emitter.prototype.listeners=function(event){this._callbacks=this._callbacks||{};return this._callbacks[event]||[];};/**
   * Check if this emitter has `event` handlers.
   *
   * @param {String} event
   * @return {Boolean}
   * @api public
   */Emitter.prototype.hasListeners=function(event){return !!this.listeners(event).length;};/**
   * @prototype Point3d
   * @param {number} [x]
   * @param {number} [y]
   * @param {number} [z]
   */function Point3d(x,y,z){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.z=z!==undefined?z:0;}/**
   * Subtract the two provided points, returns a-b
   * @param {Point3d} a
   * @param {Point3d} b
   * @return {Point3d} a-b
   */Point3d.subtract=function(a,b){var sub=new Point3d();sub.x=a.x-b.x;sub.y=a.y-b.y;sub.z=a.z-b.z;return sub;};/**
   * Add the two provided points, returns a+b
   * @param {Point3d} a
   * @param {Point3d} b
   * @return {Point3d} a+b
   */Point3d.add=function(a,b){var sum=new Point3d();sum.x=a.x+b.x;sum.y=a.y+b.y;sum.z=a.z+b.z;return sum;};/**
   * Calculate the average of two 3d points
   * @param {Point3d} a
   * @param {Point3d} b
   * @return {Point3d} The average, (a+b)/2
   */Point3d.avg=function(a,b){return new Point3d((a.x+b.x)/2,(a.y+b.y)/2,(a.z+b.z)/2);};/**
   * Calculate the cross product of the two provided points, returns axb
   * Documentation: http://en.wikipedia.org/wiki/Cross_product
   * @param {Point3d} a
   * @param {Point3d} b
   * @return {Point3d} cross product axb
   */Point3d.crossProduct=function(a,b){var crossproduct=new Point3d();crossproduct.x=a.y*b.z-a.z*b.y;crossproduct.y=a.z*b.x-a.x*b.z;crossproduct.z=a.x*b.y-a.y*b.x;return crossproduct;};/**
   * Rtrieve the length of the vector (or the distance from this point to the origin
   * @return {number}  length
   */Point3d.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);};var Point3d_1=Point3d;/**
   * @prototype Point2d
   * @param {number} [x]
   * @param {number} [y]
   */function Point2d(x,y){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;}var Point2d_1=Point2d;/**
   * An html slider control with start/stop/prev/next buttons
   *
   * @constructor Slider
   * @param {Element} container  The element where the slider will be created
   * @param {Object} options   Available options:
   *                 {boolean} visible   If true (default) the
   *                           slider is visible.
   */function Slider(container,options){if(container===undefined){throw new Error('No container element defined');}this.container=container;this.visible=options&&options.visible!=undefined?options.visible:true;if(this.visible){this.frame=document.createElement('DIV');//this.frame.style.backgroundColor = '#E5E5E5';
  this.frame.style.width='100%';this.frame.style.position='relative';this.container.appendChild(this.frame);this.frame.prev=document.createElement('INPUT');this.frame.prev.type='BUTTON';this.frame.prev.value='Prev';this.frame.appendChild(this.frame.prev);this.frame.play=document.createElement('INPUT');this.frame.play.type='BUTTON';this.frame.play.value='Play';this.frame.appendChild(this.frame.play);this.frame.next=document.createElement('INPUT');this.frame.next.type='BUTTON';this.frame.next.value='Next';this.frame.appendChild(this.frame.next);this.frame.bar=document.createElement('INPUT');this.frame.bar.type='BUTTON';this.frame.bar.style.position='absolute';this.frame.bar.style.border='1px solid red';this.frame.bar.style.width='100px';this.frame.bar.style.height='6px';this.frame.bar.style.borderRadius='2px';this.frame.bar.style.MozBorderRadius='2px';this.frame.bar.style.border='1px solid #7F7F7F';this.frame.bar.style.backgroundColor='#E5E5E5';this.frame.appendChild(this.frame.bar);this.frame.slide=document.createElement('INPUT');this.frame.slide.type='BUTTON';this.frame.slide.style.margin='0px';this.frame.slide.value=' ';this.frame.slide.style.position='relative';this.frame.slide.style.left='-100px';this.frame.appendChild(this.frame.slide);// create events
  var me=this;this.frame.slide.onmousedown=function(event){me._onMouseDown(event);};this.frame.prev.onclick=function(event){me.prev(event);};this.frame.play.onclick=function(event){me.togglePlay(event);};this.frame.next.onclick=function(event){me.next(event);};}this.onChangeCallback=undefined;this.values=[];this.index=undefined;this.playTimeout=undefined;this.playInterval=1000;// milliseconds
  this.playLoop=true;}/**
   * Select the previous index
   */Slider.prototype.prev=function(){var index=this.getIndex();if(index>0){index--;this.setIndex(index);}};/**
   * Select the next index
   */Slider.prototype.next=function(){var index=this.getIndex();if(index<this.values.length-1){index++;this.setIndex(index);}};/**
   * Select the next index
   */Slider.prototype.playNext=function(){var start=new Date();var index=this.getIndex();if(index<this.values.length-1){index++;this.setIndex(index);}else if(this.playLoop){// jump to the start
  index=0;this.setIndex(index);}var end=new Date();var diff=end-start;// calculate how much time it to to set the index and to execute the callback
  // function.
  var interval=Math.max(this.playInterval-diff,0);// document.title = diff // TODO: cleanup
  var me=this;this.playTimeout=setTimeout(function(){me.playNext();},interval);};/**
   * Toggle start or stop playing
   */Slider.prototype.togglePlay=function(){if(this.playTimeout===undefined){this.play();}else{this.stop();}};/**
   * Start playing
   */Slider.prototype.play=function(){// Test whether already playing
  if(this.playTimeout)return;this.playNext();if(this.frame){this.frame.play.value='Stop';}};/**
   * Stop playing
   */Slider.prototype.stop=function(){clearInterval(this.playTimeout);this.playTimeout=undefined;if(this.frame){this.frame.play.value='Play';}};/**
   * Set a callback function which will be triggered when the value of the
   * slider bar has changed.
   *
   * @param {function} callback
   */Slider.prototype.setOnChangeCallback=function(callback){this.onChangeCallback=callback;};/**
   * Set the interval for playing the list
   * @param {number} interval   The interval in milliseconds
   */Slider.prototype.setPlayInterval=function(interval){this.playInterval=interval;};/**
   * Retrieve the current play interval
   * @return {number} interval   The interval in milliseconds
   */Slider.prototype.getPlayInterval=function(){return this.playInterval;};/**
   * Set looping on or off
   * @param {boolean} doLoop  If true, the slider will jump to the start when
   *               the end is passed, and will jump to the end
   *               when the start is passed.
   *
   */Slider.prototype.setPlayLoop=function(doLoop){this.playLoop=doLoop;};/**
   * Execute the onchange callback function
   */Slider.prototype.onChange=function(){if(this.onChangeCallback!==undefined){this.onChangeCallback();}};/**
   * redraw the slider on the correct place
   */Slider.prototype.redraw=function(){if(this.frame){// resize the bar
  this.frame.bar.style.top=this.frame.clientHeight/2-this.frame.bar.offsetHeight/2+'px';this.frame.bar.style.width=this.frame.clientWidth-this.frame.prev.clientWidth-this.frame.play.clientWidth-this.frame.next.clientWidth-30+'px';// position the slider button
  var left=this.indexToLeft(this.index);this.frame.slide.style.left=left+'px';}};/**
   * Set the list with values for the slider
   * @param {Array} values   A javascript array with values (any type)
   */Slider.prototype.setValues=function(values){this.values=values;if(this.values.length>0)this.setIndex(0);else this.index=undefined;};/**
   * Select a value by its index
   * @param {number} index
   */Slider.prototype.setIndex=function(index){if(index<this.values.length){this.index=index;this.redraw();this.onChange();}else{throw new Error('Index out of range');}};/**
   * retrieve the index of the currently selected vaue
   * @return {number} index
   */Slider.prototype.getIndex=function(){return this.index;};/**
   * retrieve the currently selected value
   * @return {*} value
   */Slider.prototype.get=function(){return this.values[this.index];};Slider.prototype._onMouseDown=function(event){// only react on left mouse button down
  var leftButtonDown=event.which?event.which===1:event.button===1;if(!leftButtonDown)return;this.startClientX=event.clientX;this.startSlideX=parseFloat(this.frame.slide.style.left);this.frame.style.cursor='move';// add event listeners to handle moving the contents
  // we store the function onmousemove and onmouseup in the graph, so we can
  // remove the eventlisteners lateron in the function mouseUp()
  var me=this;this.onmousemove=function(event){me._onMouseMove(event);};this.onmouseup=function(event){me._onMouseUp(event);};util$3.addEventListener(document,'mousemove',this.onmousemove);util$3.addEventListener(document,'mouseup',this.onmouseup);util$3.preventDefault(event);};Slider.prototype.leftToIndex=function(left){var width=parseFloat(this.frame.bar.style.width)-this.frame.slide.clientWidth-10;var x=left-3;var index=Math.round(x/width*(this.values.length-1));if(index<0)index=0;if(index>this.values.length-1)index=this.values.length-1;return index;};Slider.prototype.indexToLeft=function(index){var width=parseFloat(this.frame.bar.style.width)-this.frame.slide.clientWidth-10;var x=index/(this.values.length-1)*width;var left=x+3;return left;};Slider.prototype._onMouseMove=function(event){var diff=event.clientX-this.startClientX;var x=this.startSlideX+diff;var index=this.leftToIndex(x);this.setIndex(index);util$3.preventDefault();};Slider.prototype._onMouseUp=function(event){// eslint-disable-line no-unused-vars
  this.frame.style.cursor='auto';// remove event listeners
  util$3.removeEventListener(document,'mousemove',this.onmousemove);util$3.removeEventListener(document,'mouseup',this.onmouseup);util$3.preventDefault();};var Slider_1=Slider;/**
   * @prototype StepNumber
   * The class StepNumber is an iterator for Numbers. You provide a start and end
   * value, and a best step size. StepNumber itself rounds to fixed values and
   * a finds the step that best fits the provided step.
   *
   * If prettyStep is true, the step size is chosen as close as possible to the
   * provided step, but being a round value like 1, 2, 5, 10, 20, 50, ....
   *
   * Example usage:
   *   var step = new StepNumber(0, 10, 2.5, true);
   *   step.start();
   *   while (!step.end()) {
   *   alert(step.getCurrent());
   *   step.next();
   *   }
   *
   * Version: 1.0
   *
   * @param {number} start     The start value
   * @param {number} end     The end value
   * @param {number} step    Optional. Step size. Must be a positive value.
   * @param {boolean} prettyStep Optional. If true, the step size is rounded
   *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)
   */function StepNumber(start,end,step,prettyStep){// set default values
  this._start=0;this._end=0;this._step=1;this.prettyStep=true;this.precision=5;this._current=0;this.setRange(start,end,step,prettyStep);}/**
   * Check for input values, to prevent disasters from happening
   *
   * Source: http://stackoverflow.com/a/1830844
   *
   * @param {string} n
   * @returns {boolean}
   */StepNumber.prototype.isNumeric=function(n){return !isNaN(parseFloat(n))&&isFinite(n);};/**
   * Set a new range: start, end and step.
   *
   * @param {number} start     The start value
   * @param {number} end     The end value
   * @param {number} step    Optional. Step size. Must be a positive value.
   * @param {boolean} prettyStep Optional. If true, the step size is rounded
   *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)
   */StepNumber.prototype.setRange=function(start,end,step,prettyStep){if(!this.isNumeric(start)){throw new Error('Parameter \'start\' is not numeric; value: '+start);}if(!this.isNumeric(end)){throw new Error('Parameter \'end\' is not numeric; value: '+start);}if(!this.isNumeric(step)){throw new Error('Parameter \'step\' is not numeric; value: '+start);}this._start=start?start:0;this._end=end?end:0;this.setStep(step,prettyStep);};/**
   * Set a new step size
   * @param {number} step    New step size. Must be a positive value
   * @param {boolean} prettyStep Optional. If true, the provided step is rounded
   *               to a pretty step size (like 1, 2, 5, 10, 20, 50, ...)
   */StepNumber.prototype.setStep=function(step,prettyStep){if(step===undefined||step<=0)return;if(prettyStep!==undefined)this.prettyStep=prettyStep;if(this.prettyStep===true)this._step=StepNumber.calculatePrettyStep(step);else this._step=step;};/**
   * Calculate a nice step size, closest to the desired step size.
   * Returns a value in one of the ranges 1*10^n, 2*10^n, or 5*10^n, where n is an
   * integer Number. For example 1, 2, 5, 10, 20, 50, etc...
   * @param {number}  step  Desired step size
   * @return {number}     Nice step size
   */StepNumber.calculatePrettyStep=function(step){var log10=function log10(x){return Math.log(x)/Math.LN10;};// try three steps (multiple of 1, 2, or 5
  var step1=Math.pow(10,Math.round(log10(step))),step2=2*Math.pow(10,Math.round(log10(step/2))),step5=5*Math.pow(10,Math.round(log10(step/5)));// choose the best step (closest to minimum step)
  var prettyStep=step1;if(Math.abs(step2-step)<=Math.abs(prettyStep-step))prettyStep=step2;if(Math.abs(step5-step)<=Math.abs(prettyStep-step))prettyStep=step5;// for safety
  if(prettyStep<=0){prettyStep=1;}return prettyStep;};/**
   * returns the current value of the step
   * @return {number} current value
   */StepNumber.prototype.getCurrent=function(){return parseFloat(this._current.toPrecision(this.precision));};/**
   * returns the current step size
   * @return {number} current step size
   */StepNumber.prototype.getStep=function(){return this._step;};/**
   * Set the current to its starting value.
   *
   * By default, this will be the largest value smaller than start, which
   * is a multiple of the step size.
   *
   * Parameters checkFirst is optional, default false.
   * If set to true, move the current value one step if smaller than start.
   *
   * @param {boolean} [checkFirst=false]
   */StepNumber.prototype.start=function(checkFirst){if(checkFirst===undefined){checkFirst=false;}this._current=this._start-this._start%this._step;if(checkFirst){if(this.getCurrent()<this._start){this.next();}}};/**
   * Do a step, add the step size to the current value
   */StepNumber.prototype.next=function(){this._current+=this._step;};/**
   * Returns true whether the end is reached
   * @return {boolean}  True if the current value has passed the end value.
   */StepNumber.prototype.end=function(){return this._current>this._end;};var StepNumber_1=StepNumber;function _typeof$2$1(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$2$1=function(obj){return typeof obj;};}else{_typeof$2$1=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$2$1(obj);}function _classCallCheck$2(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties$2(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass$2(Constructor,protoProps,staticProps){if(protoProps)_defineProperties$2(Constructor.prototype,protoProps);if(staticProps)_defineProperties$2(Constructor,staticProps);return Constructor;}/**
   * The camera is mounted on a (virtual) camera arm. The camera arm can rotate
   * The camera is always looking in the direction of the origin of the arm.
   * This way, the camera always rotates around one fixed point, the location
   * of the camera arm.
   *
   * Documentation:
   *   http://en.wikipedia.org/wiki/3D_projection
   * @class Camera
   */function Camera(){this.armLocation=new Point3d_1();this.armRotation={};this.armRotation.horizontal=0;this.armRotation.vertical=0;this.armLength=1.7;this.cameraOffset=new Point3d_1();this.offsetMultiplier=0.6;this.cameraLocation=new Point3d_1();this.cameraRotation=new Point3d_1(0.5*Math.PI,0,0);this.calculateCameraOrientation();}/**
   * Set offset camera in camera coordinates
   * @param {number} x offset by camera horisontal
   * @param {number} y offset by camera vertical
   */Camera.prototype.setOffset=function(x,y){var abs=Math.abs,sign=Math.sign,mul=this.offsetMultiplier,border=this.armLength*mul;if(abs(x)>border){x=sign(x)*border;}if(abs(y)>border){y=sign(y)*border;}this.cameraOffset.x=x;this.cameraOffset.y=y;this.calculateCameraOrientation();};/**
   * Get camera offset by horizontal and vertical
   * @returns {number}
   */Camera.prototype.getOffset=function(){return this.cameraOffset;};/**
   * Set the location (origin) of the arm
   * @param {number} x  Normalized value of x
   * @param {number} y  Normalized value of y
   * @param {number} z  Normalized value of z
   */Camera.prototype.setArmLocation=function(x,y,z){this.armLocation.x=x;this.armLocation.y=y;this.armLocation.z=z;this.calculateCameraOrientation();};/**
   * Set the rotation of the camera arm
   * @param {number} horizontal   The horizontal rotation, between 0 and 2*PI.
   *                Optional, can be left undefined.
   * @param {number} vertical   The vertical rotation, between 0 and 0.5*PI
   *                if vertical=0.5*PI, the graph is shown from the
   *                top. Optional, can be left undefined.
   */Camera.prototype.setArmRotation=function(horizontal,vertical){if(horizontal!==undefined){this.armRotation.horizontal=horizontal;}if(vertical!==undefined){this.armRotation.vertical=vertical;if(this.armRotation.vertical<0)this.armRotation.vertical=0;if(this.armRotation.vertical>0.5*Math.PI)this.armRotation.vertical=0.5*Math.PI;}if(horizontal!==undefined||vertical!==undefined){this.calculateCameraOrientation();}};/**
   * Retrieve the current arm rotation
   * @return {object}   An object with parameters horizontal and vertical
   */Camera.prototype.getArmRotation=function(){var rot={};rot.horizontal=this.armRotation.horizontal;rot.vertical=this.armRotation.vertical;return rot;};/**
   * Set the (normalized) length of the camera arm.
   * @param {number} length A length between 0.71 and 5.0
   */Camera.prototype.setArmLength=function(length){if(length===undefined)return;this.armLength=length;// Radius must be larger than the corner of the graph,
  // which has a distance of sqrt(0.5^2+0.5^2) = 0.71 from the center of the
  // graph
  if(this.armLength<0.71)this.armLength=0.71;if(this.armLength>5.0)this.armLength=5.0;this.setOffset(this.cameraOffset.x,this.cameraOffset.y);this.calculateCameraOrientation();};/**
   * Retrieve the arm length
   * @return {number} length
   */Camera.prototype.getArmLength=function(){return this.armLength;};/**
   * Retrieve the camera location
   * @return {Point3d} cameraLocation
   */Camera.prototype.getCameraLocation=function(){return this.cameraLocation;};/**
   * Retrieve the camera rotation
   * @return {Point3d} cameraRotation
   */Camera.prototype.getCameraRotation=function(){return this.cameraRotation;};/**
   * Calculate the location and rotation of the camera based on the
   * position and orientation of the camera arm
   */Camera.prototype.calculateCameraOrientation=function(){// calculate location of the camera
  this.cameraLocation.x=this.armLocation.x-this.armLength*Math.sin(this.armRotation.horizontal)*Math.cos(this.armRotation.vertical);this.cameraLocation.y=this.armLocation.y-this.armLength*Math.cos(this.armRotation.horizontal)*Math.cos(this.armRotation.vertical);this.cameraLocation.z=this.armLocation.z+this.armLength*Math.sin(this.armRotation.vertical);// calculate rotation of the camera
  this.cameraRotation.x=Math.PI/2-this.armRotation.vertical;this.cameraRotation.y=0;this.cameraRotation.z=-this.armRotation.horizontal;var xa=this.cameraRotation.x;var za=this.cameraRotation.z;var dx=this.cameraOffset.x;var dy=this.cameraOffset.y;var sin=Math.sin,cos=Math.cos;this.cameraLocation.x=this.cameraLocation.x+dx*cos(za)+dy*-sin(za)*cos(xa);this.cameraLocation.y=this.cameraLocation.y+dx*sin(za)+dy*cos(za)*cos(xa);this.cameraLocation.z=this.cameraLocation.z+dy*sin(xa);};var Camera_1=Camera;// This modules handles the options for Graph3d.
  //
  ////////////////////////////////////////////////////////////////////////////////
  // enumerate the available styles
  var STYLE={BAR:0,BARCOLOR:1,BARSIZE:2,DOT:3,DOTLINE:4,DOTCOLOR:5,DOTSIZE:6,GRID:7,LINE:8,SURFACE:9};// The string representations of the styles
  var STYLENAME={'dot':STYLE.DOT,'dot-line':STYLE.DOTLINE,'dot-color':STYLE.DOTCOLOR,'dot-size':STYLE.DOTSIZE,'line':STYLE.LINE,'grid':STYLE.GRID,'surface':STYLE.SURFACE,'bar':STYLE.BAR,'bar-color':STYLE.BARCOLOR,'bar-size':STYLE.BARSIZE};/**
   * Field names in the options hash which are of relevance to the user.
   *
   * Specifically, these are the fields which require no special handling,
   * and can be directly copied over.
   */var OPTIONKEYS=['width','height','filterLabel','legendLabel','xLabel','yLabel','zLabel','xValueLabel','yValueLabel','zValueLabel','showXAxis','showYAxis','showZAxis','showGrid','showPerspective','showShadow','keepAspectRatio','verticalRatio','dotSizeRatio','dotSizeMinFraction','dotSizeMaxFraction','showAnimationControls','animationInterval','animationPreload','animationAutoStart','axisColor','gridColor','xCenter','yCenter','zoomable','ctrlToZoom'];/**
   * Field names in the options hash which are of relevance to the user.
   *
   * Same as OPTIONKEYS, but internally these fields are stored with 
   * prefix 'default' in the name.
   */var PREFIXEDOPTIONKEYS=['xBarWidth','yBarWidth','valueMin','valueMax','xMin','xMax','xStep','yMin','yMax','yStep','zMin','zMax','zStep'];// Placeholder for DEFAULTS reference
  var DEFAULTS=undefined;/**
   * Check if given hash is empty.
   *
   * Source: http://stackoverflow.com/a/679937
   *
   * @param {object} obj
   * @returns {boolean}
   */function isEmpty(obj){for(var prop in obj){if(obj.hasOwnProperty(prop))return false;}return true;}/**
   * Make first letter of parameter upper case.
   *
   * Source: http://stackoverflow.com/a/1026087
   *
   * @param {string} str
   * @returns {string}
   */function capitalize(str){if(str===undefined||str===""||typeof str!="string"){return str;}return str.charAt(0).toUpperCase()+str.slice(1);}/**
   * Add a prefix to a field name, taking style guide into account
   *
   * @param {string} prefix
   * @param {string} fieldName
   * @returns {string}
   */function prefixFieldName(prefix,fieldName){if(prefix===undefined||prefix===""){return fieldName;}return prefix+capitalize(fieldName);}/**
   * Forcibly copy fields from src to dst in a controlled manner.
   *
   * A given field in dst will always be overwitten. If this field
   * is undefined or not present in src, the field in dst will 
   * be explicitly set to undefined.
   * 
   * The intention here is to be able to reset all option fields.
   * 
   * Only the fields mentioned in array 'fields' will be handled.
   *
   * @param {object} src
   * @param {object} dst
   * @param {array<string>} fields array with names of fields to copy
   * @param {string} [prefix] prefix to use for the target fields.
   */function forceCopy(src,dst,fields,prefix){var srcKey;var dstKey;for(var i=0;i<fields.length;++i){srcKey=fields[i];dstKey=prefixFieldName(prefix,srcKey);dst[dstKey]=src[srcKey];}}/**
   * Copy fields from src to dst in a safe and controlled manner.
   *
   * Only the fields mentioned in array 'fields' will be copied over,
   * and only if these are actually defined.
   *
   * @param {object} src
   * @param {object} dst
   * @param {array<string>} fields array with names of fields to copy
   * @param {string} [prefix] prefix to use for the target fields.
   */function safeCopy(src,dst,fields,prefix){var srcKey;var dstKey;for(var i=0;i<fields.length;++i){srcKey=fields[i];if(src[srcKey]===undefined)continue;dstKey=prefixFieldName(prefix,srcKey);dst[dstKey]=src[srcKey];}}/**
   * Initialize dst with the values in src.
   *
   * src is the hash with the default values. 
   * A reference DEFAULTS to this hash is stored locally for 
   * further handling.
   *
   * For now, dst is assumed to be a Graph3d instance.
   * @param {object} src
   * @param {object} dst
   */function setDefaults(src,dst){if(src===undefined||isEmpty(src)){throw new Error('No DEFAULTS passed');}if(dst===undefined){throw new Error('No dst passed');}// Remember defaults for future reference
  DEFAULTS=src;// Handle the defaults which can be simply copied over
  forceCopy(src,dst,OPTIONKEYS);forceCopy(src,dst,PREFIXEDOPTIONKEYS,'default');// Handle the more complex ('special') fields
  setSpecialSettings(src,dst);// Following are internal fields, not part of the user settings
  dst.margin=10;// px
  dst.showGrayBottom=false;// TODO: this does not work correctly
  dst.showTooltip=false;dst.onclick_callback=null;dst.eye=new Point3d_1(0,0,-1);// TODO: set eye.z about 3/4 of the width of the window?
  }/**
   *
   * @param {object} options
   * @param {object} dst
   */function setOptions(options,dst){if(options===undefined){return;}if(dst===undefined){throw new Error('No dst passed');}if(DEFAULTS===undefined||isEmpty(DEFAULTS)){throw new Error('DEFAULTS not set for module Settings');}// Handle the parameters which can be simply copied over
  safeCopy(options,dst,OPTIONKEYS);safeCopy(options,dst,PREFIXEDOPTIONKEYS,'default');// Handle the more complex ('special') fields
  setSpecialSettings(options,dst);}/**
   * Special handling for certain parameters
   *
   * 'Special' here means: setting requires more than a simple copy
   *
   * @param {object} src
   * @param {object} dst
   */function setSpecialSettings(src,dst){if(src.backgroundColor!==undefined){setBackgroundColor(src.backgroundColor,dst);}setDataColor(src.dataColor,dst);setStyle(src.style,dst);setShowLegend(src.showLegend,dst);setCameraPosition(src.cameraPosition,dst);// As special fields go, this is an easy one; just a translation of the name.
  // Can't use this.tooltip directly, because that field exists internally
  if(src.tooltip!==undefined){dst.showTooltip=src.tooltip;}if(src.onclick!=undefined){dst.onclick_callback=src.onclick;}if(src.tooltipStyle!==undefined){util$3.selectiveDeepExtend(['tooltipStyle'],dst,src);}}/**
   * Set the value of setting 'showLegend'
   *
   * This depends on the value of the style fields, so it must be called
   * after the style field has been initialized.
   *
   * @param {boolean} showLegend
   * @param {object} dst
   */function setShowLegend(showLegend,dst){if(showLegend===undefined){// If the default was auto, make a choice for this field
  var isAutoByDefault=DEFAULTS.showLegend===undefined;if(isAutoByDefault){// these styles default to having legends
  var isLegendGraphStyle=dst.style===STYLE.DOTCOLOR||dst.style===STYLE.DOTSIZE;dst.showLegend=isLegendGraphStyle;}}else{dst.showLegend=showLegend;}}/**
   * Retrieve the style index from given styleName
   * @param {string} styleName  Style name such as 'dot', 'grid', 'dot-line'
   * @return {number} styleNumber Enumeration value representing the style, or -1
   *                when not found
   */function getStyleNumberByName(styleName){var number=STYLENAME[styleName];if(number===undefined){return -1;}return number;}/**
   * Check if given number is a valid style number.
   *
   * @param {string | number} style
   * @return {boolean} true if valid, false otherwise
   */function checkStyleNumber(style){var valid=false;for(var n in STYLE){if(STYLE[n]===style){valid=true;break;}}return valid;}/**
   *
   * @param {string | number} style
   * @param {Object} dst
   */function setStyle(style,dst){if(style===undefined){return;// Nothing to do
  }var styleNumber;if(typeof style==='string'){styleNumber=getStyleNumberByName(style);if(styleNumber===-1){throw new Error('Style \''+style+'\' is invalid');}}else{// Do a pedantic check on style number value
  if(!checkStyleNumber(style)){throw new Error('Style \''+style+'\' is invalid');}styleNumber=style;}dst.style=styleNumber;}/**
   * Set the background styling for the graph
   * @param {string | {fill: string, stroke: string, strokeWidth: string}} backgroundColor
   * @param {Object} dst
   */function setBackgroundColor(backgroundColor,dst){var fill='white';var stroke='gray';var strokeWidth=1;if(typeof backgroundColor==='string'){fill=backgroundColor;stroke='none';strokeWidth=0;}else if(_typeof$2$1(backgroundColor)==='object'){if(backgroundColor.fill!==undefined)fill=backgroundColor.fill;if(backgroundColor.stroke!==undefined)stroke=backgroundColor.stroke;if(backgroundColor.strokeWidth!==undefined)strokeWidth=backgroundColor.strokeWidth;}else{throw new Error('Unsupported type of backgroundColor');}dst.frame.style.backgroundColor=fill;dst.frame.style.borderColor=stroke;dst.frame.style.borderWidth=strokeWidth+'px';dst.frame.style.borderStyle='solid';}/**
   *
   * @param {string | Object} dataColor
   * @param {Object} dst
   */function setDataColor(dataColor,dst){if(dataColor===undefined){return;// Nothing to do
  }if(dst.dataColor===undefined){dst.dataColor={};}if(typeof dataColor==='string'){dst.dataColor.fill=dataColor;dst.dataColor.stroke=dataColor;}else{if(dataColor.fill){dst.dataColor.fill=dataColor.fill;}if(dataColor.stroke){dst.dataColor.stroke=dataColor.stroke;}if(dataColor.strokeWidth!==undefined){dst.dataColor.strokeWidth=dataColor.strokeWidth;}}}/**
   *
   * @param {Object} cameraPosition
   * @param {Object} dst
   */function setCameraPosition(cameraPosition,dst){var camPos=cameraPosition;if(camPos===undefined){return;}if(dst.camera===undefined){dst.camera=new Camera_1();}dst.camera.setArmRotation(camPos.horizontal,camPos.vertical);dst.camera.setArmLength(camPos.distance);}var STYLE_1=STYLE;var setDefaults_1=setDefaults;var setOptions_1=setOptions;var setCameraPosition_1=setCameraPosition;var Settings={STYLE:STYLE_1,setDefaults:setDefaults_1,setOptions:setOptions_1,setCameraPosition:setCameraPosition_1};var errorFound$1=false;var allOptions$3;var printStyle$1='background: #FFeeee; color: #dd0000';/**
   *  Used to validate options.
   */var Validator$1=/*#__PURE__*/function(){/**
     * @ignore
     */function Validator(){_classCallCheck$2(this,Validator);}/**
     * Main function to be called
     * @param {Object} options
     * @param {Object} referenceOptions
     * @param {Object} subObject
     * @returns {boolean}
     * @static
     */_createClass$2(Validator,null,[{key:"validate",value:function validate(options,referenceOptions,subObject){errorFound$1=false;allOptions$3=referenceOptions;var usedOptions=referenceOptions;if(subObject!==undefined){usedOptions=referenceOptions[subObject];}Validator.parse(options,usedOptions,[]);return errorFound$1;}/**
       * Will traverse an object recursively and check every value
       * @param {Object} options
       * @param {Object} referenceOptions
       * @param {array} path    | where to look for the actual option
       * @static
       */},{key:"parse",value:function parse(options,referenceOptions,path){for(var option in options){if(options.hasOwnProperty(option)){Validator.check(option,options,referenceOptions,path);}}}/**
       * Check every value. If the value is an object, call the parse function on that object.
       * @param {string} option
       * @param {Object} options
       * @param {Object} referenceOptions
       * @param {array} path    | where to look for the actual option
       * @static
       */},{key:"check",value:function check(option,options,referenceOptions,path){if(referenceOptions[option]===undefined&&referenceOptions.__any__===undefined){Validator.getSuggestion(option,referenceOptions,path);return;}var referenceOption=option;var is_object=true;if(referenceOptions[option]===undefined&&referenceOptions.__any__!==undefined){// NOTE: This only triggers if the __any__ is in the top level of the options object.
  //       THAT'S A REALLY BAD PLACE TO ALLOW IT!!!!
  // TODO: Examine if needed, remove if possible
  // __any__ is a wildcard. Any value is accepted and will be further analysed by reference.
  referenceOption='__any__';// if the any-subgroup is not a predefined object in the configurator,
  // we do not look deeper into the object.
  is_object=Validator.getType(options[option])==='object';}var refOptionObj=referenceOptions[referenceOption];if(is_object&&refOptionObj.__type__!==undefined){refOptionObj=refOptionObj.__type__;}Validator.checkFields(option,options,referenceOptions,referenceOption,refOptionObj,path);}/**
       *
       * @param {string}  option           | the option property
       * @param {Object}  options          | The supplied options object
       * @param {Object}  referenceOptions | The reference options containing all options and their allowed formats
       * @param {string}  referenceOption  | Usually this is the same as option, except when handling an __any__ tag.
       * @param {string}  refOptionObj     | This is the type object from the reference options
       * @param {Array}   path             | where in the object is the option
       * @static
       */},{key:"checkFields",value:function checkFields(option,options,referenceOptions,referenceOption,refOptionObj,path){var log=function log(message){console.log('%c'+message+Validator.printLocation(path,option),printStyle$1);};var optionType=Validator.getType(options[option]);var refOptionType=refOptionObj[optionType];if(refOptionType!==undefined){// if the type is correct, we check if it is supposed to be one of a few select values
  if(Validator.getType(refOptionType)==='array'&&refOptionType.indexOf(options[option])===-1){log('Invalid option detected in "'+option+'".'+' Allowed values are:'+Validator.print(refOptionType)+' not "'+options[option]+'". ');errorFound$1=true;}else if(optionType==='object'&&referenceOption!=="__any__"){path=util$3.copyAndExtendArray(path,option);Validator.parse(options[option],referenceOptions[referenceOption],path);}}else if(refOptionObj['any']===undefined){// type of the field is incorrect and the field cannot be any
  log('Invalid type received for "'+option+'". Expected: '+Validator.print(Object.keys(refOptionObj))+'. Received ['+optionType+'] "'+options[option]+'"');errorFound$1=true;}}/**
       *
       * @param {Object|boolean|number|string|Array.<number>|Date|Node|Moment|undefined|null} object
       * @returns {string}
       * @static
       */},{key:"getType",value:function getType(object){var type=_typeof$2$1(object);if(type==='object'){if(object===null){return 'null';}if(object instanceof Boolean){return 'boolean';}if(object instanceof Number){return 'number';}if(object instanceof String){return 'string';}if(Array.isArray(object)){return 'array';}if(object instanceof Date){return 'date';}if(object.nodeType!==undefined){return 'dom';}if(object._isAMomentObject===true){return 'moment';}return 'object';}else if(type==='number'){return 'number';}else if(type==='boolean'){return 'boolean';}else if(type==='string'){return 'string';}else if(type===undefined){return 'undefined';}return type;}/**
       * @param {string} option
       * @param {Object} options
       * @param {Array.<string>} path
       * @static
       */},{key:"getSuggestion",value:function getSuggestion(option,options,path){var localSearch=Validator.findInOptions(option,options,path,false);var globalSearch=Validator.findInOptions(option,allOptions$3,[],true);var localSearchThreshold=8;var globalSearchThreshold=4;var msg;if(localSearch.indexMatch!==undefined){msg=' in '+Validator.printLocation(localSearch.path,option,'')+'Perhaps it was incomplete? Did you mean: "'+localSearch.indexMatch+'"?\n\n';}else if(globalSearch.distance<=globalSearchThreshold&&localSearch.distance>globalSearch.distance){msg=' in '+Validator.printLocation(localSearch.path,option,'')+'Perhaps it was misplaced? Matching option found at: '+Validator.printLocation(globalSearch.path,globalSearch.closestMatch,'');}else if(localSearch.distance<=localSearchThreshold){msg='. Did you mean "'+localSearch.closestMatch+'"?'+Validator.printLocation(localSearch.path,option);}else{msg='. Did you mean one of these: '+Validator.print(Object.keys(options))+Validator.printLocation(path,option);}console.log('%cUnknown option detected: "'+option+'"'+msg,printStyle$1);errorFound$1=true;}/**
       * traverse the options in search for a match.
       * @param {string} option
       * @param {Object} options
       * @param {Array} path    | where to look for the actual option
       * @param {boolean} [recursive=false]
       * @returns {{closestMatch: string, path: Array, distance: number}}
       * @static
       */},{key:"findInOptions",value:function findInOptions(option,options,path){var recursive=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var min=1e9;var closestMatch='';var closestMatchPath=[];var lowerCaseOption=option.toLowerCase();var indexMatch=undefined;for(var op in options){// eslint-disable-line guard-for-in
  var distance=void 0;if(options[op].__type__!==undefined&&recursive===true){var result=Validator.findInOptions(option,options[op],util$3.copyAndExtendArray(path,op));if(min>result.distance){closestMatch=result.closestMatch;closestMatchPath=result.path;min=result.distance;indexMatch=result.indexMatch;}}else{if(op.toLowerCase().indexOf(lowerCaseOption)!==-1){indexMatch=op;}distance=Validator.levenshteinDistance(option,op);if(min>distance){closestMatch=op;closestMatchPath=util$3.copyArray(path);min=distance;}}}return {closestMatch:closestMatch,path:closestMatchPath,distance:min,indexMatch:indexMatch};}/**
       * @param {Array.<string>} path
       * @param {Object} option
       * @param {string} prefix
       * @returns {String}
       * @static
       */},{key:"printLocation",value:function printLocation(path,option){var prefix=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'Problem value found at: \n';var str='\n\n'+prefix+'options = {\n';for(var i=0;i<path.length;i++){for(var j=0;j<i+1;j++){str+='  ';}str+=path[i]+': {\n';}for(var _j=0;_j<path.length+1;_j++){str+='  ';}str+=option+'\n';for(var _i=0;_i<path.length+1;_i++){for(var _j2=0;_j2<path.length-_i;_j2++){str+='  ';}str+='}\n';}return str+'\n\n';}/**
       * @param {Object} options
       * @returns {String}
       * @static
       */},{key:"print",value:function print(options){return JSON.stringify(options).replace(/(\")|(\[)|(\])|(,"__type__")/g,"").replace(/(\,)/g,', ');}/**
       *  Compute the edit distance between the two given strings
       * http://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance#JavaScript
       *
       * Copyright (c) 2011 Andrei Mackenzie
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
       *
       * @param {string} a
       * @param {string} b
       * @returns {Array.<Array.<number>>}}
       * @static
       */},{key:"levenshteinDistance",value:function levenshteinDistance(a,b){if(a.length===0)return b.length;if(b.length===0)return a.length;var matrix=[];// increment along the first column of each row
  var i;for(i=0;i<=b.length;i++){matrix[i]=[i];}// increment each column in the first row
  var j;for(j=0;j<=a.length;j++){matrix[0][j]=j;}// Fill in the rest of the matrix
  for(i=1;i<=b.length;i++){for(j=1;j<=a.length;j++){if(b.charAt(i-1)==a.charAt(j-1)){matrix[i][j]=matrix[i-1][j-1];}else{matrix[i][j]=Math.min(matrix[i-1][j-1]+1,// substitution
  Math.min(matrix[i][j-1]+1,// insertion
  matrix[i-1][j]+1));// deletion
  }}}return matrix[b.length][a.length];}}]);return Validator;}();var Validator$1$1=/*#__PURE__*/Object.freeze({Validator:Validator$1,printStyle:printStyle$1});/**
   * This object contains all possible options. It will check if the types are correct, if required if the option is one
   * of the allowed values.
   *
   * __any__ means that the name of the property does not matter.
   * __type__ is a required field for all objects and contains the allowed types of all objects
   */var string$1='string';var bool$1='boolean';var number$1='number';var object$1='object';// should only be in a __type__ property
  // Following not used here, but useful for reference
  //let array    = 'array';
  //let dom      = 'dom';
  //let any      = 'any';
  var colorOptions={fill:{string:string$1},stroke:{string:string$1},strokeWidth:{number:number$1},__type__:{string:string$1,object:object$1,'undefined':'undefined'}};/**
   * Order attempted to be alphabetical.
   *   - x/y/z-prefixes ignored in sorting
   *   - __type__ always at end
   *   - globals at end
   */var allOptions$1$1={animationAutoStart:{boolean:bool$1,'undefined':'undefined'},animationInterval:{number:number$1},animationPreload:{boolean:bool$1},axisColor:{string:string$1},backgroundColor:colorOptions,xBarWidth:{number:number$1,'undefined':'undefined'},yBarWidth:{number:number$1,'undefined':'undefined'},cameraPosition:{distance:{number:number$1},horizontal:{number:number$1},vertical:{number:number$1},__type__:{object:object$1}},zoomable:{boolean:bool$1},ctrlToZoom:{boolean:bool$1},xCenter:{string:string$1},yCenter:{string:string$1},dataColor:colorOptions,dotSizeMinFraction:{number:number$1},dotSizeMaxFraction:{number:number$1},dotSizeRatio:{number:number$1},filterLabel:{string:string$1},gridColor:{string:string$1},onclick:{'function':'function'},keepAspectRatio:{boolean:bool$1},xLabel:{string:string$1},yLabel:{string:string$1},zLabel:{string:string$1},legendLabel:{string:string$1},xMin:{number:number$1,'undefined':'undefined'},yMin:{number:number$1,'undefined':'undefined'},zMin:{number:number$1,'undefined':'undefined'},xMax:{number:number$1,'undefined':'undefined'},yMax:{number:number$1,'undefined':'undefined'},zMax:{number:number$1,'undefined':'undefined'},showAnimationControls:{boolean:bool$1,'undefined':'undefined'},showGrid:{boolean:bool$1},showLegend:{boolean:bool$1,'undefined':'undefined'},showPerspective:{boolean:bool$1},showShadow:{boolean:bool$1},showXAxis:{boolean:bool$1},showYAxis:{boolean:bool$1},showZAxis:{boolean:bool$1},xStep:{number:number$1,'undefined':'undefined'},yStep:{number:number$1,'undefined':'undefined'},zStep:{number:number$1,'undefined':'undefined'},style:{number:number$1,// TODO: either Graph3d.DEFAULT has string, or number allowed in documentation
  string:['bar','bar-color','bar-size','dot','dot-line','dot-color','dot-size','line','grid','surface']},tooltip:{boolean:bool$1,'function':'function'},tooltipStyle:{content:{color:{string:string$1},background:{string:string$1},border:{string:string$1},borderRadius:{string:string$1},boxShadow:{string:string$1},padding:{string:string$1},__type__:{object:object$1}},line:{borderLeft:{string:string$1},height:{string:string$1},width:{string:string$1},pointerEvents:{string:string$1},__type__:{object:object$1}},dot:{border:{string:string$1},borderRadius:{string:string$1},height:{string:string$1},width:{string:string$1},pointerEvents:{string:string$1},__type__:{object:object$1}},__type__:{object:object$1}},xValueLabel:{'function':'function'},yValueLabel:{'function':'function'},zValueLabel:{'function':'function'},valueMax:{number:number$1,'undefined':'undefined'},valueMin:{number:number$1,'undefined':'undefined'},verticalRatio:{number:number$1},//globals :
  height:{string:string$1},width:{string:string$1},__type__:{object:object$1}};var options=/*#__PURE__*/Object.freeze({allOptions:allOptions$1$1});/**
   * @prototype Range
   *
   * Helper class to make working with related min and max values easier.
   *
   * The range is inclusive; a given value is considered part of the range if:
   *
   *    this.min <= value <= this.max
   */function Range(){this.min=undefined;this.max=undefined;}/**
   * Adjust the range so that the passed value fits in it.
   *
   * If the value is outside of the current extremes, adjust
   * the min or max so that the value is within the range.
   *
   * @param {number} value Numeric value to fit in range
   */Range.prototype.adjust=function(value){if(value===undefined)return;if(this.min===undefined||this.min>value){this.min=value;}if(this.max===undefined||this.max<value){this.max=value;}};/**
   * Adjust the current range so that the passed range fits in it.
   *
   * @param {Range} range Range instance to fit in current instance
   */Range.prototype.combine=function(range){this.add(range.min);this.add(range.max);};/**
   * Expand the range by the given value
   *
   * min will be lowered by given value;
   * max will be raised by given value
   *
   * Shrinking by passing a negative value is allowed.
   *
   * @param {number} val Amount by which to expand or shrink current range with
   */Range.prototype.expand=function(val){if(val===undefined){return;}var newMin=this.min-val;var newMax=this.max+val;// Note that following allows newMin === newMax.
  // This should be OK, since method expand() allows this also.
  if(newMin>newMax){throw new Error('Passed expansion value makes range invalid');}this.min=newMin;this.max=newMax;};/**
   * Determine the full range width of current instance.
   *
   * @returns {num} The calculated width of this range
   */Range.prototype.range=function(){return this.max-this.min;};/**
   * Determine the central point of current instance.
   *
   * @returns {number} the value in the middle of min and max
   */Range.prototype.center=function(){return (this.min+this.max)/2;};var Range_1=Range;var DataView$2$1=visData.DataView;/**
   * @class Filter
   *
   * @param {DataGroup} dataGroup the data group 
   * @param {number}  column             The index of the column to be filtered
   * @param {Graph3d} graph              The graph
   */function Filter(dataGroup,column,graph){this.dataGroup=dataGroup;this.column=column;this.graph=graph;// the parent graph
  this.index=undefined;this.value=undefined;// read all distinct values and select the first one
  this.values=dataGroup.getDistinctValues(this.column);if(this.values.length>0){this.selectValue(0);}// create an array with the filtered datapoints. this will be loaded afterwards
  this.dataPoints=[];this.loaded=false;this.onLoadCallback=undefined;if(graph.animationPreload){this.loaded=false;this.loadInBackground();}else{this.loaded=true;}}/**
   * Return the label
   * @return {string} label
   */Filter.prototype.isLoaded=function(){return this.loaded;};/**
   * Return the loaded progress
   * @return {number} percentage between 0 and 100
   */Filter.prototype.getLoadedProgress=function(){var len=this.values.length;var i=0;while(this.dataPoints[i]){i++;}return Math.round(i/len*100);};/**
   * Return the label
   * @return {string} label
   */Filter.prototype.getLabel=function(){return this.graph.filterLabel;};/**
   * Return the columnIndex of the filter
   * @return {number} columnIndex
   */Filter.prototype.getColumn=function(){return this.column;};/**
   * Return the currently selected value. Returns undefined if there is no selection
   * @return {*} value
   */Filter.prototype.getSelectedValue=function(){if(this.index===undefined)return undefined;return this.values[this.index];};/**
   * Retrieve all values of the filter
   * @return {Array} values
   */Filter.prototype.getValues=function(){return this.values;};/**
   * Retrieve one value of the filter
   * @param {number}  index
   * @return {*} value
   */Filter.prototype.getValue=function(index){if(index>=this.values.length)throw new Error('Index out of range');return this.values[index];};/**
   * Retrieve the (filtered) dataPoints for the currently selected filter index
   * @param {number} [index] (optional)
   * @return {Array} dataPoints
   */Filter.prototype._getDataPoints=function(index){if(index===undefined)index=this.index;if(index===undefined)return [];var dataPoints;if(this.dataPoints[index]){dataPoints=this.dataPoints[index];}else{var f={};f.column=this.column;f.value=this.values[index];var dataView=new DataView$2$1(this.dataGroup.getDataSet(),{filter:function filter(item){return item[f.column]==f.value;}}).get();dataPoints=this.dataGroup._getDataPoints(dataView);this.dataPoints[index]=dataPoints;}return dataPoints;};/**
   * Set a callback function when the filter is fully loaded.
   *
   * @param {function} callback
   */Filter.prototype.setOnLoadCallback=function(callback){this.onLoadCallback=callback;};/**
   * Add a value to the list with available values for this filter
   * No double entries will be created.
   * @param {number} index
   */Filter.prototype.selectValue=function(index){if(index>=this.values.length)throw new Error('Index out of range');this.index=index;this.value=this.values[index];};/**
   * Load all filtered rows in the background one by one
   * Start this method without providing an index!
   *
   * @param {number} [index=0]
   */Filter.prototype.loadInBackground=function(index){if(index===undefined)index=0;var frame=this.graph.frame;if(index<this.values.length){// create a progress box
  if(frame.progress===undefined){frame.progress=document.createElement('DIV');frame.progress.style.position='absolute';frame.progress.style.color='gray';frame.appendChild(frame.progress);}var progress=this.getLoadedProgress();frame.progress.innerHTML='Loading animation... '+progress+'%';// TODO: this is no nice solution...
  frame.progress.style.bottom=60+'px';// TODO: use height of slider
  frame.progress.style.left=10+'px';var me=this;setTimeout(function(){me.loadInBackground(index+1);},10);this.loaded=false;}else{this.loaded=true;// remove the progress box
  if(frame.progress!==undefined){frame.removeChild(frame.progress);frame.progress=undefined;}if(this.onLoadCallback)this.onLoadCallback();}};var Filter_1=Filter;var DataSet$2$1=visData.DataSet;var DataView$3=visData.DataView;/**
   * Creates a container for all data of one specific 3D-graph.
   *
   * On construction, the container is totally empty; the data
   * needs to be initialized with method initializeData().
   * Failure to do so will result in the following exception begin thrown
   * on instantiation of Graph3D:
   *
   *     Error: Array, DataSet, or DataView expected
   *
   * @constructor DataGroup
   */function DataGroup(){this.dataTable=null;// The original data table
  }/**
   * Initializes the instance from the passed data.
   *
   * Calculates minimum and maximum values and column index values.
   *
   * The graph3d instance is used internally to access the settings for
   * the given instance.
   * TODO: Pass settings only instead.
   *
   * @param {vis.Graph3d}  graph3d Reference to the calling Graph3D instance.
   * @param {Array | DataSet | DataView} rawData The data containing the items for
   *                                             the Graph.
   * @param {number}   style   Style Number
   * @returns {Array.<Object>}
   */DataGroup.prototype.initializeData=function(graph3d,rawData,style){if(rawData===undefined)return;if(Array.isArray(rawData)){rawData=new DataSet$2$1(rawData);}var data;if(rawData instanceof DataSet$2$1||rawData instanceof DataView$3){data=rawData.get();}else{throw new Error('Array, DataSet, or DataView expected');}if(data.length==0)return;this.style=style;// unsubscribe from the dataTable
  if(this.dataSet){this.dataSet.off('*',this._onChange);}this.dataSet=rawData;this.dataTable=data;// subscribe to changes in the dataset
  var me=this;this._onChange=function(){graph3d.setData(me.dataSet);};this.dataSet.on('*',this._onChange);// determine the location of x,y,z,value,filter columns
  this.colX='x';this.colY='y';this.colZ='z';var withBars=graph3d.hasBars(style);// determine barWidth from data
  if(withBars){if(graph3d.defaultXBarWidth!==undefined){this.xBarWidth=graph3d.defaultXBarWidth;}else{this.xBarWidth=this.getSmallestDifference(data,this.colX)||1;}if(graph3d.defaultYBarWidth!==undefined){this.yBarWidth=graph3d.defaultYBarWidth;}else{this.yBarWidth=this.getSmallestDifference(data,this.colY)||1;}}// calculate minima and maxima
  this._initializeRange(data,this.colX,graph3d,withBars);this._initializeRange(data,this.colY,graph3d,withBars);this._initializeRange(data,this.colZ,graph3d,false);if(data[0].hasOwnProperty('style')){this.colValue='style';var valueRange=this.getColumnRange(data,this.colValue);this._setRangeDefaults(valueRange,graph3d.defaultValueMin,graph3d.defaultValueMax);this.valueRange=valueRange;}// Initialize data filter if a filter column is provided
  var table=this.getDataTable();if(table[0].hasOwnProperty('filter')){if(this.dataFilter===undefined){this.dataFilter=new Filter_1(this,'filter',graph3d);this.dataFilter.setOnLoadCallback(function(){graph3d.redraw();});}}var dataPoints;if(this.dataFilter){// apply filtering
  dataPoints=this.dataFilter._getDataPoints();}else{// no filtering. load all data
  dataPoints=this._getDataPoints(this.getDataTable());}return dataPoints;};/**
   * Collect the range settings for the given data column.
   *
   * This internal method is intended to make the range 
   * initalization more generic.
   *
   * TODO: if/when combined settings per axis defined, get rid of this.
   *
   * @private
   *
   * @param {'x'|'y'|'z'} column  The data column to process
   * @param {vis.Graph3d} graph3d Reference to the calling Graph3D instance;
   *                              required for access to settings
   * @returns {Object}
   */DataGroup.prototype._collectRangeSettings=function(column,graph3d){var index=['x','y','z'].indexOf(column);if(index==-1){throw new Error('Column \''+column+'\' invalid');}var upper=column.toUpperCase();return {barWidth:this[column+'BarWidth'],min:graph3d['default'+upper+'Min'],max:graph3d['default'+upper+'Max'],step:graph3d['default'+upper+'Step'],range_label:column+'Range',// Name of instance field to write to
  step_label:column+'Step'// Name of instance field to write to
  };};/**
   * Initializes the settings per given column.
   *
   * TODO: if/when combined settings per axis defined, rewrite this.
   *
   * @private
   *
   * @param {DataSet | DataView} data     The data containing the items for the Graph
   * @param {'x'|'y'|'z'}        column   The data column to process
   * @param {vis.Graph3d}        graph3d  Reference to the calling Graph3D instance;
   *                                      required for access to settings
   * @param {boolean}            withBars True if initializing for bar graph
   */DataGroup.prototype._initializeRange=function(data,column,graph3d,withBars){var NUMSTEPS=5;var settings=this._collectRangeSettings(column,graph3d);var range=this.getColumnRange(data,column);if(withBars&&column!='z'){// Safeguard for 'z'; it doesn't have a bar width
  range.expand(settings.barWidth/2);}this._setRangeDefaults(range,settings.min,settings.max);this[settings.range_label]=range;this[settings.step_label]=settings.step!==undefined?settings.step:range.range()/NUMSTEPS;};/**
   * Creates a list with all the different values in the data for the given column.
   *
   * If no data passed, use the internal data of this instance.
   *
   * @param {'x'|'y'|'z'}                column The data column to process
   * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph
   *
   * @returns {Array} All distinct values in the given column data, sorted ascending.
   */DataGroup.prototype.getDistinctValues=function(column,data){if(data===undefined){data=this.dataTable;}var values=[];for(var i=0;i<data.length;i++){var value=data[i][column]||0;if(values.indexOf(value)===-1){values.push(value);}}return values.sort(function(a,b){return a-b;});};/**
   * Determine the smallest difference between the values for given
   * column in the passed data set.
   *
   * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph
   * @param {'x'|'y'|'z'}                column The data column to process
   *
   * @returns {number|null} Smallest difference value or
   *                        null, if it can't be determined.
   */DataGroup.prototype.getSmallestDifference=function(data,column){var values=this.getDistinctValues(data,column);// Get all the distinct diffs
  // Array values is assumed to be sorted here
  var smallest_diff=null;for(var i=1;i<values.length;i++){var diff=values[i]-values[i-1];if(smallest_diff==null||smallest_diff>diff){smallest_diff=diff;}}return smallest_diff;};/**
   * Get the absolute min/max values for the passed data column.
   *
   * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph
   * @param {'x'|'y'|'z'}                column The data column to process
   *
   * @returns {Range} A Range instance with min/max members properly set.
   */DataGroup.prototype.getColumnRange=function(data,column){var range=new Range_1();// Adjust the range so that it covers all values in the passed data elements.
  for(var i=0;i<data.length;i++){var item=data[i][column];range.adjust(item);}return range;};/**
   * Determines the number of rows in the current data.
   *
   * @returns {number}
   */DataGroup.prototype.getNumberOfRows=function(){return this.dataTable.length;};/**
   * Set default values for range
   *
   * The default values override the range values, if defined.
   *
   * Because it's possible that only defaultMin or defaultMax is set, it's better
   * to pass in a range already set with the min/max set from the data. Otherwise,
   * it's quite hard to process the min/max properly.
   *
   * @param {vis.Range} range
   * @param {number} [defaultMin=range.min]
   * @param {number} [defaultMax=range.max]
   * @private
   */DataGroup.prototype._setRangeDefaults=function(range,defaultMin,defaultMax){if(defaultMin!==undefined){range.min=defaultMin;}if(defaultMax!==undefined){range.max=defaultMax;}// This is the original way that the default min/max values were adjusted.
  // TODO: Perhaps it's better if an error is thrown if the values do not agree.
  //       But this will change the behaviour.
  if(range.max<=range.min)range.max=range.min+1;};DataGroup.prototype.getDataTable=function(){return this.dataTable;};DataGroup.prototype.getDataSet=function(){return this.dataSet;};/**
   * Return all data values as a list of Point3d objects
   * @param {Array.<Object>} data
   * @returns {Array.<Object>}
   */DataGroup.prototype.getDataPoints=function(data){var dataPoints=[];for(var i=0;i<data.length;i++){var point=new Point3d_1();point.x=data[i][this.colX]||0;point.y=data[i][this.colY]||0;point.z=data[i][this.colZ]||0;point.data=data[i];if(this.colValue!==undefined){point.value=data[i][this.colValue]||0;}var obj={};obj.point=point;obj.bottom=new Point3d_1(point.x,point.y,this.zRange.min);obj.trans=undefined;obj.screen=undefined;dataPoints.push(obj);}return dataPoints;};/**
   * Copy all values from the data table to a matrix.
   *
   * The provided values are supposed to form a grid of (x,y) positions.
   * @param {Array.<Object>} data
   * @returns {Array.<Object>}
   * @private
   */DataGroup.prototype.initDataAsMatrix=function(data){// TODO: store the created matrix dataPoints in the filters instead of
  //       reloading each time.
  var x,y,i,obj;// create two lists with all present x and y values
  var dataX=this.getDistinctValues(this.colX,data);var dataY=this.getDistinctValues(this.colY,data);var dataPoints=this.getDataPoints(data);// create a grid, a 2d matrix, with all values.
  var dataMatrix=[];// temporary data matrix
  for(i=0;i<dataPoints.length;i++){obj=dataPoints[i];// TODO: implement Array().indexOf() for Internet Explorer
  var xIndex=dataX.indexOf(obj.point.x);var yIndex=dataY.indexOf(obj.point.y);if(dataMatrix[xIndex]===undefined){dataMatrix[xIndex]=[];}dataMatrix[xIndex][yIndex]=obj;}// fill in the pointers to the neighbors.
  for(x=0;x<dataMatrix.length;x++){for(y=0;y<dataMatrix[x].length;y++){if(dataMatrix[x][y]){dataMatrix[x][y].pointRight=x<dataMatrix.length-1?dataMatrix[x+1][y]:undefined;dataMatrix[x][y].pointTop=y<dataMatrix[x].length-1?dataMatrix[x][y+1]:undefined;dataMatrix[x][y].pointCross=x<dataMatrix.length-1&&y<dataMatrix[x].length-1?dataMatrix[x+1][y+1]:undefined;}}}return dataPoints;};/**
   * Return common information, if present
   *
   * @returns {string}
   */DataGroup.prototype.getInfo=function(){var dataFilter=this.dataFilter;if(!dataFilter)return undefined;return dataFilter.getLabel()+': '+dataFilter.getSelectedValue();};/**
   * Reload the data
   */DataGroup.prototype.reload=function(){if(this.dataTable){this.setData(this.dataTable);}};/**
   * Filter the data based on the current filter
   *
   * @param   {Array} data
   * @returns {Array} dataPoints Array with point objects which can be drawn on
   *                             screen
   */DataGroup.prototype._getDataPoints=function(data){var dataPoints=[];if(this.style===Settings.STYLE.GRID||this.style===Settings.STYLE.SURFACE){dataPoints=this.initDataAsMatrix(data);}else{// 'dot', 'dot-line', etc.
  this._checkValueField(data);dataPoints=this.getDataPoints(data);if(this.style===Settings.STYLE.LINE){// Add next member points for line drawing
  for(var i=0;i<dataPoints.length;i++){if(i>0){dataPoints[i-1].pointNext=dataPoints[i];}}}}return dataPoints;};/**
   * Check if the state is consistent for the use of the value field.
   *
   * Throws if a problem is detected.
   *
   * @param {Array.<Object>} data
   * @private
   */DataGroup.prototype._checkValueField=function(data){var hasValueField=this.style===Settings.STYLE.BARCOLOR||this.style===Settings.STYLE.BARSIZE||this.style===Settings.STYLE.DOTCOLOR||this.style===Settings.STYLE.DOTSIZE;if(!hasValueField){return;// No need to check further
  }// Following field must be present for the current graph style
  if(this.colValue===undefined){throw new Error('Expected data to have '+' field \'style\' '+' for graph style \''+this.style+'\'');}// The data must also contain this field.
  // Note that only first data element is checked.
  if(data[0][this.colValue]===undefined){throw new Error('Expected data to have '+' field \''+this.colValue+'\' '+' for graph style \''+this.style+'\'');}};var DataGroup_1=DataGroup;var Validator$2=Validator$1$1.Validator;var printStyle$1$1=Validator$1$1.printStyle;var allOptions$2$1=options.allOptions;/// enumerate the available styles
  Graph3d.STYLE=Settings.STYLE;/**
   * Following label is used in the settings to describe values which should be
   * determined by the code while running, from the current data and graph style.
   *
   * Using 'undefined' directly achieves the same thing, but this is more
   * descriptive by describing the intent.
   */var autoByDefault=undefined;/**
   * Default values for option settings.
   *
   * These are the values used when a Graph3d instance is initialized without
   * custom settings.
   *
   * If a field is not in this list, a default value of 'autoByDefault' is assumed,
   * which is just an alias for 'undefined'.
   */Graph3d.DEFAULTS={width:'400px',height:'400px',filterLabel:'time',legendLabel:'value',xLabel:'x',yLabel:'y',zLabel:'z',xValueLabel:function xValueLabel(v){return v;},yValueLabel:function yValueLabel(v){return v;},zValueLabel:function zValueLabel(v){return v;},showXAxis:true,showYAxis:true,showZAxis:true,showGrid:true,showPerspective:true,showShadow:false,keepAspectRatio:true,verticalRatio:0.5,// 0.1 to 1.0, where 1.0 results in a 'cube'
  dotSizeRatio:0.02,// size of the dots as a fraction of the graph width
  dotSizeMinFraction:0.5,// size of min-value dot as a fraction of dotSizeRatio	
  dotSizeMaxFraction:2.5,// size of max-value dot as a fraction of dotSizeRatio	
  showAnimationControls:autoByDefault,animationInterval:1000,// milliseconds
  animationPreload:false,animationAutoStart:autoByDefault,axisColor:'#4D4D4D',gridColor:'#D3D3D3',xCenter:'55%',yCenter:'50%',style:Graph3d.STYLE.DOT,tooltip:false,tooltipStyle:{content:{padding:'10px',border:'1px solid #4d4d4d',color:'#1a1a1a',background:'rgba(255,255,255,0.7)',borderRadius:'2px',boxShadow:'5px 5px 10px rgba(128,128,128,0.5)'},line:{height:'40px',width:'0',borderLeft:'1px solid #4d4d4d',pointerEvents:'none'},dot:{height:'0',width:'0',border:'5px solid #4d4d4d',borderRadius:'5px',pointerEvents:'none'}},dataColor:{fill:'#7DC1FF',stroke:'#3267D2',strokeWidth:1// px
  },cameraPosition:{horizontal:1.0,vertical:0.5,distance:1.7},zoomable:true,ctrlToZoom:false,/*
      The following fields are 'auto by default', see above.
     */showLegend:autoByDefault,// determined by graph style
  backgroundColor:autoByDefault,xBarWidth:autoByDefault,yBarWidth:autoByDefault,valueMin:autoByDefault,valueMax:autoByDefault,xMin:autoByDefault,xMax:autoByDefault,xStep:autoByDefault,yMin:autoByDefault,yMax:autoByDefault,yStep:autoByDefault,zMin:autoByDefault,zMax:autoByDefault,zStep:autoByDefault};// -----------------------------------------------------------------------------
  // Class Graph3d
  // -----------------------------------------------------------------------------
  /**
   * Graph3d displays data in 3d.
   *
   * Graph3d is developed in javascript as a Google Visualization Chart.
   *
   * @constructor Graph3d
   * @param {Element} container   The DOM element in which the Graph3d will
   *                              be created. Normally a div element.
   * @param {DataSet | DataView | Array} [data]
   * @param {Object} [options]
   */function Graph3d(container,data,options){if(!(this instanceof Graph3d)){throw new SyntaxError('Constructor must be called with the new operator');}// create variables and set default values
  this.containerElement=container;this.dataGroup=new DataGroup_1();this.dataPoints=null;// The table with point objects
  // create a frame and canvas
  this.create();Settings.setDefaults(Graph3d.DEFAULTS,this);// the column indexes
  this.colX=undefined;this.colY=undefined;this.colZ=undefined;this.colValue=undefined;// TODO: customize axis range
  // apply options (also when undefined)
  this.setOptions(options);// apply data
  this.setData(data);}// Extend Graph3d with an Emitter mixin
  emitterComponent(Graph3d.prototype);/**
   * Calculate the scaling values, dependent on the range in x, y, and z direction
   */Graph3d.prototype._setScale=function(){this.scale=new Point3d_1(1/this.xRange.range(),1/this.yRange.range(),1/this.zRange.range());// keep aspect ration between x and y scale if desired
  if(this.keepAspectRatio){if(this.scale.x<this.scale.y){//noinspection JSSuspiciousNameCombination
  this.scale.y=this.scale.x;}else{//noinspection JSSuspiciousNameCombination
  this.scale.x=this.scale.y;}}// scale the vertical axis
  this.scale.z*=this.verticalRatio;// TODO: can this be automated? verticalRatio?
  // determine scale for (optional) value
  if(this.valueRange!==undefined){this.scale.value=1/this.valueRange.range();}// position the camera arm
  var xCenter=this.xRange.center()*this.scale.x;var yCenter=this.yRange.center()*this.scale.y;var zCenter=this.zRange.center()*this.scale.z;this.camera.setArmLocation(xCenter,yCenter,zCenter);};/**
   * Convert a 3D location to a 2D location on screen
   * Source: ttp://en.wikipedia.org/wiki/3D_projection
   *
   * @param   {Point3d} point3d  A 3D point with parameters x, y, z
   * @returns {Point2d} point2d  A 2D point with parameters x, y
   */Graph3d.prototype._convert3Dto2D=function(point3d){var translation=this._convertPointToTranslation(point3d);return this._convertTranslationToScreen(translation);};/**
   * Convert a 3D location its translation seen from the camera
   * Source: http://en.wikipedia.org/wiki/3D_projection
   *
   * @param   {Point3d} point3d     A 3D point with parameters x, y, z
   * @returns {Point3d} translation A 3D point with parameters x, y, z This is
   *                                the translation of the point, seen from the
   *                                camera.
   */Graph3d.prototype._convertPointToTranslation=function(point3d){var cameraLocation=this.camera.getCameraLocation(),cameraRotation=this.camera.getCameraRotation(),ax=point3d.x*this.scale.x,ay=point3d.y*this.scale.y,az=point3d.z*this.scale.z,cx=cameraLocation.x,cy=cameraLocation.y,cz=cameraLocation.z,// calculate angles
  sinTx=Math.sin(cameraRotation.x),cosTx=Math.cos(cameraRotation.x),sinTy=Math.sin(cameraRotation.y),cosTy=Math.cos(cameraRotation.y),sinTz=Math.sin(cameraRotation.z),cosTz=Math.cos(cameraRotation.z),// calculate translation
  dx=cosTy*(sinTz*(ay-cy)+cosTz*(ax-cx))-sinTy*(az-cz),dy=sinTx*(cosTy*(az-cz)+sinTy*(sinTz*(ay-cy)+cosTz*(ax-cx)))+cosTx*(cosTz*(ay-cy)-sinTz*(ax-cx)),dz=cosTx*(cosTy*(az-cz)+sinTy*(sinTz*(ay-cy)+cosTz*(ax-cx)))-sinTx*(cosTz*(ay-cy)-sinTz*(ax-cx));return new Point3d_1(dx,dy,dz);};/**
   * Convert a translation point to a point on the screen
   *
   * @param   {Point3d} translation A 3D point with parameters x, y, z This is
   *                                the translation of the point, seen from the
   *                                camera.
   * @returns {Point2d} point2d     A 2D point with parameters x, y
   */Graph3d.prototype._convertTranslationToScreen=function(translation){var ex=this.eye.x,ey=this.eye.y,ez=this.eye.z,dx=translation.x,dy=translation.y,dz=translation.z;// calculate position on screen from translation
  var bx;var by;if(this.showPerspective){bx=(dx-ex)*(ez/dz);by=(dy-ey)*(ez/dz);}else{bx=dx*-(ez/this.camera.getArmLength());by=dy*-(ez/this.camera.getArmLength());}// shift and scale the point to the center of the screen
  // use the width of the graph to scale both horizontally and vertically.
  return new Point2d_1(this.currentXCenter+bx*this.frame.canvas.clientWidth,this.currentYCenter-by*this.frame.canvas.clientWidth);};/**
   * Calculate the translations and screen positions of all points
   *
   * @param {Array.<Point3d>} points
   * @private
   */Graph3d.prototype._calcTranslations=function(points){for(var i=0;i<points.length;i++){var point=points[i];point.trans=this._convertPointToTranslation(point.point);point.screen=this._convertTranslationToScreen(point.trans);// calculate the translation of the point at the bottom (needed for sorting)
  var transBottom=this._convertPointToTranslation(point.bottom);point.dist=this.showPerspective?transBottom.length():-transBottom.z;}// sort the points on depth of their (x,y) position (not on z)
  var sortDepth=function sortDepth(a,b){return b.dist-a.dist;};points.sort(sortDepth);};/**
   * Transfer min/max values to the Graph3d instance.
   */Graph3d.prototype._initializeRanges=function(){// TODO: later on, all min/maxes of all datagroups will be combined here
  var dg=this.dataGroup;this.xRange=dg.xRange;this.yRange=dg.yRange;this.zRange=dg.zRange;this.valueRange=dg.valueRange;// Values currently needed but which need to be sorted out for
  // the multiple graph case.
  this.xStep=dg.xStep;this.yStep=dg.yStep;this.zStep=dg.zStep;this.xBarWidth=dg.xBarWidth;this.yBarWidth=dg.yBarWidth;this.colX=dg.colX;this.colY=dg.colY;this.colZ=dg.colZ;this.colValue=dg.colValue;// set the scale dependent on the ranges.
  this._setScale();};/**
   * Return all data values as a list of Point3d objects
   *
   * @param {vis.DataSet} data
   * @returns {Array.<Object>}
   */Graph3d.prototype.getDataPoints=function(data){var dataPoints=[];for(var i=0;i<data.length;i++){var point=new Point3d_1();point.x=data[i][this.colX]||0;point.y=data[i][this.colY]||0;point.z=data[i][this.colZ]||0;point.data=data[i];if(this.colValue!==undefined){point.value=data[i][this.colValue]||0;}var obj={};obj.point=point;obj.bottom=new Point3d_1(point.x,point.y,this.zRange.min);obj.trans=undefined;obj.screen=undefined;dataPoints.push(obj);}return dataPoints;};/**
   * Filter the data based on the current filter
   *
   * @param   {Array} data
   * @returns {Array} dataPoints Array with point objects which can be drawn on
   *                             screen
   */Graph3d.prototype._getDataPoints=function(data){// TODO: store the created matrix dataPoints in the filters instead of
  //       reloading each time.
  var x,y,i,obj;var dataPoints=[];if(this.style===Graph3d.STYLE.GRID||this.style===Graph3d.STYLE.SURFACE){// copy all values from the data table to a matrix
  // the provided values are supposed to form a grid of (x,y) positions
  // create two lists with all present x and y values
  var dataX=this.dataGroup.getDistinctValues(this.colX,data);var dataY=this.dataGroup.getDistinctValues(this.colY,data);dataPoints=this.getDataPoints(data);// create a grid, a 2d matrix, with all values.
  var dataMatrix=[];// temporary data matrix
  for(i=0;i<dataPoints.length;i++){obj=dataPoints[i];// TODO: implement Array().indexOf() for Internet Explorer
  var xIndex=dataX.indexOf(obj.point.x);var yIndex=dataY.indexOf(obj.point.y);if(dataMatrix[xIndex]===undefined){dataMatrix[xIndex]=[];}dataMatrix[xIndex][yIndex]=obj;}// fill in the pointers to the neighbors.
  for(x=0;x<dataMatrix.length;x++){for(y=0;y<dataMatrix[x].length;y++){if(dataMatrix[x][y]){dataMatrix[x][y].pointRight=x<dataMatrix.length-1?dataMatrix[x+1][y]:undefined;dataMatrix[x][y].pointTop=y<dataMatrix[x].length-1?dataMatrix[x][y+1]:undefined;dataMatrix[x][y].pointCross=x<dataMatrix.length-1&&y<dataMatrix[x].length-1?dataMatrix[x+1][y+1]:undefined;}}}}else{// 'dot', 'dot-line', etc.
  this._checkValueField(data);dataPoints=this.getDataPoints(data);if(this.style===Graph3d.STYLE.LINE){// Add next member points for line drawing
  for(i=0;i<dataPoints.length;i++){if(i>0){dataPoints[i-1].pointNext=dataPoints[i];}}}}return dataPoints;};/**
   * Create the main frame for the Graph3d.
   *
   * This function is executed once when a Graph3d object is created. The frame
   * contains a canvas, and this canvas contains all objects like the axis and
   * nodes.
   */Graph3d.prototype.create=function(){// remove all elements from the container element.
  while(this.containerElement.hasChildNodes()){this.containerElement.removeChild(this.containerElement.firstChild);}this.frame=document.createElement('div');this.frame.style.position='relative';this.frame.style.overflow='hidden';// create the graph canvas (HTML canvas element)
  this.frame.canvas=document.createElement('canvas');this.frame.canvas.style.position='relative';this.frame.appendChild(this.frame.canvas);//if (!this.frame.canvas.getContext) {
  {var noCanvas=document.createElement('DIV');noCanvas.style.color='red';noCanvas.style.fontWeight='bold';noCanvas.style.padding='10px';noCanvas.innerHTML='Error: your browser does not support HTML canvas';this.frame.canvas.appendChild(noCanvas);}this.frame.filter=document.createElement('div');this.frame.filter.style.position='absolute';this.frame.filter.style.bottom='0px';this.frame.filter.style.left='0px';this.frame.filter.style.width='100%';this.frame.appendChild(this.frame.filter);// add event listeners to handle moving and zooming the contents
  var me=this;var onmousedown=function onmousedown(event){me._onMouseDown(event);};var ontouchstart=function ontouchstart(event){me._onTouchStart(event);};var onmousewheel=function onmousewheel(event){me._onWheel(event);};var ontooltip=function ontooltip(event){me._onTooltip(event);};var onclick=function onclick(event){me._onClick(event);};// TODO: these events are never cleaned up... can give a 'memory leakage'
  util$3.addEventListener(this.frame.canvas,'mousedown',onmousedown);util$3.addEventListener(this.frame.canvas,'touchstart',ontouchstart);util$3.addEventListener(this.frame.canvas,'mousewheel',onmousewheel);util$3.addEventListener(this.frame.canvas,'mousemove',ontooltip);util$3.addEventListener(this.frame.canvas,'click',onclick);// add the new graph to the container element
  this.containerElement.appendChild(this.frame);};/**
   * Set a new size for the graph
   *
   * @param {number} width
   * @param {number} height
   * @private
   */Graph3d.prototype._setSize=function(width,height){this.frame.style.width=width;this.frame.style.height=height;this._resizeCanvas();};/**
   * Resize the canvas to the current size of the frame
   */Graph3d.prototype._resizeCanvas=function(){this.frame.canvas.style.width='100%';this.frame.canvas.style.height='100%';this.frame.canvas.width=this.frame.canvas.clientWidth;this.frame.canvas.height=this.frame.canvas.clientHeight;// adjust with for margin
  this.frame.filter.style.width=this.frame.canvas.clientWidth-2*10+'px';};/**
   * Start playing the animation, if requested and filter present. Only applicable
   * when animation data is available.
   */Graph3d.prototype.animationStart=function(){// start animation when option is true
  if(!this.animationAutoStart||!this.dataGroup.dataFilter)return;if(!this.frame.filter||!this.frame.filter.slider)throw new Error('No animation available');this.frame.filter.slider.play();};/**
   * Stop animation
   */Graph3d.prototype.animationStop=function(){if(!this.frame.filter||!this.frame.filter.slider)return;this.frame.filter.slider.stop();};/**
   * Resize the center position based on the current values in this.xCenter
   * and this.yCenter (which are strings with a percentage or a value
   * in pixels). The center positions are the variables this.currentXCenter
   * and this.currentYCenter
   */Graph3d.prototype._resizeCenter=function(){// calculate the horizontal center position
  if(this.xCenter.charAt(this.xCenter.length-1)==='%'){this.currentXCenter=parseFloat(this.xCenter)/100*this.frame.canvas.clientWidth;}else{this.currentXCenter=parseFloat(this.xCenter);// supposed to be in px
  }// calculate the vertical center position
  if(this.yCenter.charAt(this.yCenter.length-1)==='%'){this.currentYCenter=parseFloat(this.yCenter)/100*(this.frame.canvas.clientHeight-this.frame.filter.clientHeight);}else{this.currentYCenter=parseFloat(this.yCenter);// supposed to be in px
  }};/**
   * Retrieve the current camera rotation
   *
   * @returns {object} An object with parameters horizontal, vertical, and
   *                   distance
   */Graph3d.prototype.getCameraPosition=function(){var pos=this.camera.getArmRotation();pos.distance=this.camera.getArmLength();return pos;};/**
   * Load data into the 3D Graph
   *
   * @param {vis.DataSet} data
   * @private
   */Graph3d.prototype._readData=function(data){// read the data
  this.dataPoints=this.dataGroup.initializeData(this,data,this.style);this._initializeRanges();this._redrawFilter();};/**
   * Replace the dataset of the Graph3d
   *
   * @param {Array | DataSet | DataView} data
   */Graph3d.prototype.setData=function(data){if(data===undefined||data===null)return;this._readData(data);this.redraw();this.animationStart();};/**
   * Update the options. Options will be merged with current options
   *
   * @param {Object} options
   */Graph3d.prototype.setOptions=function(options){if(options===undefined)return;var errorFound=Validator$2.validate(options,allOptions$2$1);if(errorFound===true){console.log('%cErrors have been found in the supplied options object.',printStyle$1$1);}this.animationStop();Settings.setOptions(options,this);this.setPointDrawingMethod();this._setSize(this.width,this.height);this.setData(this.dataGroup.getDataTable());this.animationStart();};/**
   * Determine which point drawing method to use for the current graph style.
   */Graph3d.prototype.setPointDrawingMethod=function(){var method=undefined;switch(this.style){case Graph3d.STYLE.BAR:method=Graph3d.prototype._redrawBarGraphPoint;break;case Graph3d.STYLE.BARCOLOR:method=Graph3d.prototype._redrawBarColorGraphPoint;break;case Graph3d.STYLE.BARSIZE:method=Graph3d.prototype._redrawBarSizeGraphPoint;break;case Graph3d.STYLE.DOT:method=Graph3d.prototype._redrawDotGraphPoint;break;case Graph3d.STYLE.DOTLINE:method=Graph3d.prototype._redrawDotLineGraphPoint;break;case Graph3d.STYLE.DOTCOLOR:method=Graph3d.prototype._redrawDotColorGraphPoint;break;case Graph3d.STYLE.DOTSIZE:method=Graph3d.prototype._redrawDotSizeGraphPoint;break;case Graph3d.STYLE.SURFACE:method=Graph3d.prototype._redrawSurfaceGraphPoint;break;case Graph3d.STYLE.GRID:method=Graph3d.prototype._redrawGridGraphPoint;break;case Graph3d.STYLE.LINE:method=Graph3d.prototype._redrawLineGraphPoint;break;default:throw new Error('Can not determine point drawing method '+'for graph style \''+this.style+'\'');}this._pointDrawingMethod=method;};/**
   * Redraw the Graph.
   */Graph3d.prototype.redraw=function(){if(this.dataPoints===undefined){throw new Error('Graph data not initialized');}this._resizeCanvas();this._resizeCenter();this._redrawSlider();this._redrawClear();this._redrawAxis();this._redrawDataGraph();this._redrawInfo();this._redrawLegend();};/**
   * Get drawing context without exposing canvas
   *
   * @returns {CanvasRenderingContext2D}
   * @private
   */Graph3d.prototype._getContext=function(){var canvas=this.frame.canvas;var ctx=canvas.getContext('2d');ctx.lineJoin='round';ctx.lineCap='round';return ctx;};/**
   * Clear the canvas before redrawing
   */Graph3d.prototype._redrawClear=function(){var canvas=this.frame.canvas;var ctx=canvas.getContext('2d');ctx.clearRect(0,0,canvas.width,canvas.height);};Graph3d.prototype._dotSize=function(){return this.frame.clientWidth*this.dotSizeRatio;};/**
   * Get legend width
   *
   * @returns {*}
   * @private
   */Graph3d.prototype._getLegendWidth=function(){var width;if(this.style===Graph3d.STYLE.DOTSIZE){var dotSize=this._dotSize();//width =  dotSize / 2 + dotSize * 2;
  width=dotSize*this.dotSizeMaxFraction;}else if(this.style===Graph3d.STYLE.BARSIZE){width=this.xBarWidth;}else{width=20;}return width;};/**
   * Redraw the legend based on size, dot color, or surface height
   */Graph3d.prototype._redrawLegend=function(){//Return without drawing anything, if no legend is specified
  if(this.showLegend!==true){return;}// Do not draw legend when graph style does not support
  if(this.style===Graph3d.STYLE.LINE||this.style===Graph3d.STYLE.BARSIZE//TODO add legend support for BARSIZE
  ){return;}// Legend types - size and color. Determine if size legend.
  var isSizeLegend=this.style===Graph3d.STYLE.BARSIZE||this.style===Graph3d.STYLE.DOTSIZE;// Legend is either tracking z values or style values. This flag if false means use z values.
  var isValueLegend=this.style===Graph3d.STYLE.DOTSIZE||this.style===Graph3d.STYLE.DOTCOLOR||this.style===Graph3d.STYLE.BARCOLOR;var height=Math.max(this.frame.clientHeight*0.25,100);var top=this.margin;var width=this._getLegendWidth();// px - overwritten by size legend
  var right=this.frame.clientWidth-this.margin;var left=right-width;var bottom=top+height;var ctx=this._getContext();ctx.lineWidth=1;ctx.font='14px arial';// TODO: put in options
  if(isSizeLegend===false){// draw the color bar
  var ymin=0;var ymax=height;// Todo: make height customizable
  var y;for(y=ymin;y<ymax;y++){var f=(y-ymin)/(ymax-ymin);var hue=f*240;var color=this._hsv2rgb(hue,1,1);ctx.strokeStyle=color;ctx.beginPath();ctx.moveTo(left,top+y);ctx.lineTo(right,top+y);ctx.stroke();}ctx.strokeStyle=this.axisColor;ctx.strokeRect(left,top,width,height);}else{// draw the size legend box
  var widthMin;if(this.style===Graph3d.STYLE.DOTSIZE){// Get the proportion to max and min right
  widthMin=width*(this.dotSizeMinFraction/this.dotSizeMaxFraction);}else if(this.style===Graph3d.STYLE.BARSIZE);ctx.strokeStyle=this.axisColor;ctx.fillStyle=this.dataColor.fill;ctx.beginPath();ctx.moveTo(left,top);ctx.lineTo(right,top);ctx.lineTo(left+widthMin,bottom);ctx.lineTo(left,bottom);ctx.closePath();ctx.fill();ctx.stroke();}// print value text along the legend edge
  var gridLineLen=5;// px
  var legendMin=isValueLegend?this.valueRange.min:this.zRange.min;var legendMax=isValueLegend?this.valueRange.max:this.zRange.max;var step=new StepNumber_1(legendMin,legendMax,(legendMax-legendMin)/5,true);step.start(true);var from;var to;while(!step.end()){y=bottom-(step.getCurrent()-legendMin)/(legendMax-legendMin)*height;from=new Point2d_1(left-gridLineLen,y);to=new Point2d_1(left,y);this._line(ctx,from,to);ctx.textAlign='right';ctx.textBaseline='middle';ctx.fillStyle=this.axisColor;ctx.fillText(step.getCurrent(),left-2*gridLineLen,y);step.next();}ctx.textAlign='right';ctx.textBaseline='top';var label=this.legendLabel;ctx.fillText(label,right,bottom+this.margin);};/**
   * Redraw the filter
   */Graph3d.prototype._redrawFilter=function(){var dataFilter=this.dataGroup.dataFilter;var filter=this.frame.filter;filter.innerHTML='';if(!dataFilter){filter.slider=undefined;return;}var options={'visible':this.showAnimationControls};var slider=new Slider_1(filter,options);filter.slider=slider;// TODO: css here is not nice here...
  filter.style.padding='10px';//this.frame.filter.style.backgroundColor = '#EFEFEF';
  slider.setValues(dataFilter.values);slider.setPlayInterval(this.animationInterval);// create an event handler
  var me=this;var onchange=function onchange(){var dataFilter=me.dataGroup.dataFilter;var index=slider.getIndex();dataFilter.selectValue(index);me.dataPoints=dataFilter._getDataPoints();me.redraw();};slider.setOnChangeCallback(onchange);};/**
   * Redraw the slider
   */Graph3d.prototype._redrawSlider=function(){if(this.frame.filter.slider!==undefined){this.frame.filter.slider.redraw();}};/**
   * Redraw common information
   */Graph3d.prototype._redrawInfo=function(){var info=this.dataGroup.getInfo();if(info===undefined)return;var ctx=this._getContext();ctx.font='14px arial';// TODO: put in options
  ctx.lineStyle='gray';ctx.fillStyle='gray';ctx.textAlign='left';ctx.textBaseline='top';var x=this.margin;var y=this.margin;ctx.fillText(info,x,y);};/**
   * Draw a line between 2d points 'from' and 'to'.
   *
   * If stroke style specified, set that as well.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {vis.Point2d} from
   * @param {vis.Point2d} to
   * @param {string} [strokeStyle]
   * @private
   */Graph3d.prototype._line=function(ctx,from,to,strokeStyle){if(strokeStyle!==undefined){ctx.strokeStyle=strokeStyle;}ctx.beginPath();ctx.moveTo(from.x,from.y);ctx.lineTo(to.x,to.y);ctx.stroke();};/**
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {vis.Point3d} point3d
   * @param {string} text
   * @param {number} armAngle
   * @param {number} [yMargin=0]
   */Graph3d.prototype.drawAxisLabelX=function(ctx,point3d,text,armAngle,yMargin){if(yMargin===undefined){yMargin=0;}var point2d=this._convert3Dto2D(point3d);if(Math.cos(armAngle*2)>0){ctx.textAlign='center';ctx.textBaseline='top';point2d.y+=yMargin;}else if(Math.sin(armAngle*2)<0){ctx.textAlign='right';ctx.textBaseline='middle';}else{ctx.textAlign='left';ctx.textBaseline='middle';}ctx.fillStyle=this.axisColor;ctx.fillText(text,point2d.x,point2d.y);};/**
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {vis.Point3d} point3d
   * @param {string} text
   * @param {number} armAngle
   * @param {number} [yMargin=0]
   */Graph3d.prototype.drawAxisLabelY=function(ctx,point3d,text,armAngle,yMargin){if(yMargin===undefined){yMargin=0;}var point2d=this._convert3Dto2D(point3d);if(Math.cos(armAngle*2)<0){ctx.textAlign='center';ctx.textBaseline='top';point2d.y+=yMargin;}else if(Math.sin(armAngle*2)>0){ctx.textAlign='right';ctx.textBaseline='middle';}else{ctx.textAlign='left';ctx.textBaseline='middle';}ctx.fillStyle=this.axisColor;ctx.fillText(text,point2d.x,point2d.y);};/**
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {vis.Point3d} point3d
   * @param {string} text
   * @param {number} [offset=0]
   */Graph3d.prototype.drawAxisLabelZ=function(ctx,point3d,text,offset){if(offset===undefined){offset=0;}var point2d=this._convert3Dto2D(point3d);ctx.textAlign='right';ctx.textBaseline='middle';ctx.fillStyle=this.axisColor;ctx.fillText(text,point2d.x-offset,point2d.y);};/**


  /**
   * Draw a line between 2d points 'from' and 'to'.
   *
   * If stroke style specified, set that as well.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {vis.Point2d} from
   * @param {vis.Point2d} to
   * @param {string} [strokeStyle]
   * @private
   */Graph3d.prototype._line3d=function(ctx,from,to,strokeStyle){var from2d=this._convert3Dto2D(from);var to2d=this._convert3Dto2D(to);this._line(ctx,from2d,to2d,strokeStyle);};/**
   * Redraw the axis
   */Graph3d.prototype._redrawAxis=function(){var ctx=this._getContext(),from,to,step,prettyStep,text,xText,yText,zText,offset,xOffset,yOffset;// TODO: get the actual rendered style of the containerElement
  //ctx.font = this.containerElement.style.font;
  ctx.font=24/this.camera.getArmLength()+'px arial';// calculate the length for the short grid lines
  var gridLenX=0.025/this.scale.x;var gridLenY=0.025/this.scale.y;var textMargin=5/this.camera.getArmLength();// px
  var armAngle=this.camera.getArmRotation().horizontal;var armVector=new Point2d_1(Math.cos(armAngle),Math.sin(armAngle));var xRange=this.xRange;var yRange=this.yRange;var zRange=this.zRange;var point3d;// draw x-grid lines
  ctx.lineWidth=1;prettyStep=this.defaultXStep===undefined;step=new StepNumber_1(xRange.min,xRange.max,this.xStep,prettyStep);step.start(true);while(!step.end()){var x=step.getCurrent();if(this.showGrid){from=new Point3d_1(x,yRange.min,zRange.min);to=new Point3d_1(x,yRange.max,zRange.min);this._line3d(ctx,from,to,this.gridColor);}else if(this.showXAxis){from=new Point3d_1(x,yRange.min,zRange.min);to=new Point3d_1(x,yRange.min+gridLenX,zRange.min);this._line3d(ctx,from,to,this.axisColor);from=new Point3d_1(x,yRange.max,zRange.min);to=new Point3d_1(x,yRange.max-gridLenX,zRange.min);this._line3d(ctx,from,to,this.axisColor);}if(this.showXAxis){yText=armVector.x>0?yRange.min:yRange.max;point3d=new Point3d_1(x,yText,zRange.min);var msg='  '+this.xValueLabel(x)+'  ';this.drawAxisLabelX(ctx,point3d,msg,armAngle,textMargin);}step.next();}// draw y-grid lines
  ctx.lineWidth=1;prettyStep=this.defaultYStep===undefined;step=new StepNumber_1(yRange.min,yRange.max,this.yStep,prettyStep);step.start(true);while(!step.end()){var y=step.getCurrent();if(this.showGrid){from=new Point3d_1(xRange.min,y,zRange.min);to=new Point3d_1(xRange.max,y,zRange.min);this._line3d(ctx,from,to,this.gridColor);}else if(this.showYAxis){from=new Point3d_1(xRange.min,y,zRange.min);to=new Point3d_1(xRange.min+gridLenY,y,zRange.min);this._line3d(ctx,from,to,this.axisColor);from=new Point3d_1(xRange.max,y,zRange.min);to=new Point3d_1(xRange.max-gridLenY,y,zRange.min);this._line3d(ctx,from,to,this.axisColor);}if(this.showYAxis){xText=armVector.y>0?xRange.min:xRange.max;point3d=new Point3d_1(xText,y,zRange.min);var _msg='  '+this.yValueLabel(y)+'  ';this.drawAxisLabelY(ctx,point3d,_msg,armAngle,textMargin);}step.next();}// draw z-grid lines and axis
  if(this.showZAxis){ctx.lineWidth=1;prettyStep=this.defaultZStep===undefined;step=new StepNumber_1(zRange.min,zRange.max,this.zStep,prettyStep);step.start(true);xText=armVector.x>0?xRange.min:xRange.max;yText=armVector.y<0?yRange.min:yRange.max;while(!step.end()){var z=step.getCurrent();// TODO: make z-grid lines really 3d?
  var from3d=new Point3d_1(xText,yText,z);var from2d=this._convert3Dto2D(from3d);to=new Point2d_1(from2d.x-textMargin,from2d.y);this._line(ctx,from2d,to,this.axisColor);var _msg2=this.zValueLabel(z)+' ';this.drawAxisLabelZ(ctx,from3d,_msg2,5);step.next();}ctx.lineWidth=1;from=new Point3d_1(xText,yText,zRange.min);to=new Point3d_1(xText,yText,zRange.max);this._line3d(ctx,from,to,this.axisColor);}// draw x-axis
  if(this.showXAxis){var xMin2d;var xMax2d;ctx.lineWidth=1;// line at yMin
  xMin2d=new Point3d_1(xRange.min,yRange.min,zRange.min);xMax2d=new Point3d_1(xRange.max,yRange.min,zRange.min);this._line3d(ctx,xMin2d,xMax2d,this.axisColor);// line at ymax
  xMin2d=new Point3d_1(xRange.min,yRange.max,zRange.min);xMax2d=new Point3d_1(xRange.max,yRange.max,zRange.min);this._line3d(ctx,xMin2d,xMax2d,this.axisColor);}// draw y-axis
  if(this.showYAxis){ctx.lineWidth=1;// line at xMin
  from=new Point3d_1(xRange.min,yRange.min,zRange.min);to=new Point3d_1(xRange.min,yRange.max,zRange.min);this._line3d(ctx,from,to,this.axisColor);// line at xMax
  from=new Point3d_1(xRange.max,yRange.min,zRange.min);to=new Point3d_1(xRange.max,yRange.max,zRange.min);this._line3d(ctx,from,to,this.axisColor);}// draw x-label
  var xLabel=this.xLabel;if(xLabel.length>0&&this.showXAxis){yOffset=0.1/this.scale.y;xText=(xRange.max+3*xRange.min)/4;yText=armVector.x>0?yRange.min-yOffset:yRange.max+yOffset;text=new Point3d_1(xText,yText,zRange.min);this.drawAxisLabelX(ctx,text,xLabel,armAngle);}// draw y-label
  var yLabel=this.yLabel;if(yLabel.length>0&&this.showYAxis){xOffset=0.1/this.scale.x;xText=armVector.y>0?xRange.min-xOffset:xRange.max+xOffset;yText=(yRange.max+3*yRange.min)/4;text=new Point3d_1(xText,yText,zRange.min);this.drawAxisLabelY(ctx,text,yLabel,armAngle);}// draw z-label
  var zLabel=this.zLabel;if(zLabel.length>0&&this.showZAxis){offset=30;// pixels.  // TODO: relate to the max width of the values on the z axis?
  xText=armVector.x>0?xRange.min:xRange.max;yText=armVector.y<0?yRange.min:yRange.max;zText=(zRange.max+3*zRange.min)/4;text=new Point3d_1(xText,yText,zText);this.drawAxisLabelZ(ctx,text,zLabel,offset);}};/**
   * Calculate the color based on the given value.
   * @param {number} H   Hue, a value be between 0 and 360
   * @param {number} S   Saturation, a value between 0 and 1
   * @param {number} V   Value, a value between 0 and 1
   * @returns {string}
   * @private
   */Graph3d.prototype._hsv2rgb=function(H,S,V){var R,G,B,C,Hi,X;C=V*S;Hi=Math.floor(H/60);// hi = 0,1,2,3,4,5
  X=C*(1-Math.abs(H/60%2-1));switch(Hi){case 0:R=C;G=X;B=0;break;case 1:R=X;G=C;B=0;break;case 2:R=0;G=C;B=X;break;case 3:R=0;G=X;B=C;break;case 4:R=X;G=0;B=C;break;case 5:R=C;G=0;B=X;break;default:R=0;G=0;B=0;break;}return 'RGB('+parseInt(R*255)+','+parseInt(G*255)+','+parseInt(B*255)+')';};/**
   *
   * @param {vis.Point3d} point
   * @returns {*}
   * @private
   */Graph3d.prototype._getStrokeWidth=function(point){if(point!==undefined){if(this.showPerspective){return 1/-point.trans.z*this.dataColor.strokeWidth;}else{return -(this.eye.z/this.camera.getArmLength())*this.dataColor.strokeWidth;}}return this.dataColor.strokeWidth;};// -----------------------------------------------------------------------------
  // Drawing primitives for the graphs
  // -----------------------------------------------------------------------------
  /**
   * Draw a bar element in the view with the given properties.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @param {number} xWidth
   * @param {number} yWidth
   * @param {string} color
   * @param {string} borderColor
   * @private
   */Graph3d.prototype._redrawBar=function(ctx,point,xWidth,yWidth,color,borderColor){var surface;// calculate all corner points
  var me=this;var point3d=point.point;var zMin=this.zRange.min;var top=[{point:new Point3d_1(point3d.x-xWidth,point3d.y-yWidth,point3d.z)},{point:new Point3d_1(point3d.x+xWidth,point3d.y-yWidth,point3d.z)},{point:new Point3d_1(point3d.x+xWidth,point3d.y+yWidth,point3d.z)},{point:new Point3d_1(point3d.x-xWidth,point3d.y+yWidth,point3d.z)}];var bottom=[{point:new Point3d_1(point3d.x-xWidth,point3d.y-yWidth,zMin)},{point:new Point3d_1(point3d.x+xWidth,point3d.y-yWidth,zMin)},{point:new Point3d_1(point3d.x+xWidth,point3d.y+yWidth,zMin)},{point:new Point3d_1(point3d.x-xWidth,point3d.y+yWidth,zMin)}];// calculate screen location of the points
  top.forEach(function(obj){obj.screen=me._convert3Dto2D(obj.point);});bottom.forEach(function(obj){obj.screen=me._convert3Dto2D(obj.point);});// create five sides, calculate both corner points and center points
  var surfaces=[{corners:top,center:Point3d_1.avg(bottom[0].point,bottom[2].point)},{corners:[top[0],top[1],bottom[1],bottom[0]],center:Point3d_1.avg(bottom[1].point,bottom[0].point)},{corners:[top[1],top[2],bottom[2],bottom[1]],center:Point3d_1.avg(bottom[2].point,bottom[1].point)},{corners:[top[2],top[3],bottom[3],bottom[2]],center:Point3d_1.avg(bottom[3].point,bottom[2].point)},{corners:[top[3],top[0],bottom[0],bottom[3]],center:Point3d_1.avg(bottom[0].point,bottom[3].point)}];point.surfaces=surfaces;// calculate the distance of each of the surface centers to the camera
  for(var j=0;j<surfaces.length;j++){surface=surfaces[j];var transCenter=this._convertPointToTranslation(surface.center);surface.dist=this.showPerspective?transCenter.length():-transCenter.z;// TODO: this dept calculation doesn't work 100% of the cases due to perspective,
  //     but the current solution is fast/simple and works in 99.9% of all cases
  //     the issue is visible in example 14, with graph.setCameraPosition({horizontal: 2.97, vertical: 0.5, distance: 0.9})
  }// order the surfaces by their (translated) depth
  surfaces.sort(function(a,b){var diff=b.dist-a.dist;if(diff)return diff;// if equal depth, sort the top surface last
  if(a.corners===top)return 1;if(b.corners===top)return -1;// both are equal
  return 0;});// draw the ordered surfaces
  ctx.lineWidth=this._getStrokeWidth(point);ctx.strokeStyle=borderColor;ctx.fillStyle=color;// NOTE: we start at j=2 instead of j=0 as we don't need to draw the two surfaces at the backside
  for(var _j=2;_j<surfaces.length;_j++){surface=surfaces[_j];this._polygon(ctx,surface.corners);}};/**
   * Draw a polygon using the passed points and fill it with the passed style and stroke.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Array.<vis.Point3d>} points      an array of points.
   * @param {string} [fillStyle] the fill style to set
   * @param {string} [strokeStyle] the stroke style to set
   */Graph3d.prototype._polygon=function(ctx,points,fillStyle,strokeStyle){if(points.length<2){return;}if(fillStyle!==undefined){ctx.fillStyle=fillStyle;}if(strokeStyle!==undefined){ctx.strokeStyle=strokeStyle;}ctx.beginPath();ctx.moveTo(points[0].screen.x,points[0].screen.y);for(var i=1;i<points.length;++i){var point=points[i];ctx.lineTo(point.screen.x,point.screen.y);}ctx.closePath();ctx.fill();ctx.stroke();// TODO: only draw stroke when strokeWidth > 0
  };/**
   * @param {CanvasRenderingContext2D} ctx
   * @param {object} point
   * @param {string} color
   * @param {string} borderColor
   * @param {number} [size=this._dotSize()]
   * @private
   */Graph3d.prototype._drawCircle=function(ctx,point,color,borderColor,size){var radius=this._calcRadius(point,size);ctx.lineWidth=this._getStrokeWidth(point);ctx.strokeStyle=borderColor;ctx.fillStyle=color;ctx.beginPath();ctx.arc(point.screen.x,point.screen.y,radius,0,Math.PI*2,true);ctx.fill();ctx.stroke();};/**
   * Determine the colors for the 'regular' graph styles.
   *
   * @param {object} point
   * @returns {{fill, border}}
   * @private
   */Graph3d.prototype._getColorsRegular=function(point){// calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
  var hue=(1-(point.point.z-this.zRange.min)*this.scale.z/this.verticalRatio)*240;var color=this._hsv2rgb(hue,1,1);var borderColor=this._hsv2rgb(hue,1,0.8);return {fill:color,border:borderColor};};/**
   * Get the colors for the 'color' graph styles.
   * These styles are currently: 'bar-color' and 'dot-color'
   * Color may be set as a string representation of HTML color, like #ff00ff,
   * or calculated from a number, for example, distance from this point
   * The first option is useful when we have some pre-given legend, to which we have to adjust ourselves
   * The second option is useful when we are interested in automatically setting the color, from some value,
   * using some color scale
   * @param {object} point
   * @returns {{fill: *, border: *}}
   * @private
   */Graph3d.prototype._getColorsColor=function(point){// calculate the color based on the value
  var color,borderColor;if(typeof point.point.value==="string"){color=point.point.value;borderColor=point.point.value;}else{var hue=(1-(point.point.value-this.valueRange.min)*this.scale.value)*240;color=this._hsv2rgb(hue,1,1);borderColor=this._hsv2rgb(hue,1,0.8);}return {fill:color,border:borderColor};};/**
   * Get the colors for the 'size' graph styles.
   * These styles are currently: 'bar-size' and 'dot-size'
   *
   * @returns {{fill: *, border: (string|colorOptions.stroke|{string, undefined}|string|colorOptions.stroke|{string}|*)}}
   * @private
   */Graph3d.prototype._getColorsSize=function(){return {fill:this.dataColor.fill,border:this.dataColor.stroke};};/**
   * Determine the size of a point on-screen, as determined by the
   * distance to the camera.
   *
   * @param {Object} point
   * @param {number} [size=this._dotSize()] the size that needs to be translated to screen coordinates.
   *             optional; if not passed, use the default point size.
   * @returns {number}
   * @private
   */Graph3d.prototype._calcRadius=function(point,size){if(size===undefined){size=this._dotSize();}var radius;if(this.showPerspective){radius=size/-point.trans.z;}else{radius=size*-(this.eye.z/this.camera.getArmLength());}if(radius<0){radius=0;}return radius;};// -----------------------------------------------------------------------------
  // Methods for drawing points per graph style.
  // -----------------------------------------------------------------------------
  /**
   * Draw single datapoint for graph style 'bar'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawBarGraphPoint=function(ctx,point){var xWidth=this.xBarWidth/2;var yWidth=this.yBarWidth/2;var colors=this._getColorsRegular(point);this._redrawBar(ctx,point,xWidth,yWidth,colors.fill,colors.border);};/**
   * Draw single datapoint for graph style 'bar-color'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawBarColorGraphPoint=function(ctx,point){var xWidth=this.xBarWidth/2;var yWidth=this.yBarWidth/2;var colors=this._getColorsColor(point);this._redrawBar(ctx,point,xWidth,yWidth,colors.fill,colors.border);};/**
   * Draw single datapoint for graph style 'bar-size'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawBarSizeGraphPoint=function(ctx,point){// calculate size for the bar
  var fraction=(point.point.value-this.valueRange.min)/this.valueRange.range();var xWidth=this.xBarWidth/2*(fraction*0.8+0.2);var yWidth=this.yBarWidth/2*(fraction*0.8+0.2);var colors=this._getColorsSize();this._redrawBar(ctx,point,xWidth,yWidth,colors.fill,colors.border);};/**
   * Draw single datapoint for graph style 'dot'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawDotGraphPoint=function(ctx,point){var colors=this._getColorsRegular(point);this._drawCircle(ctx,point,colors.fill,colors.border);};/**
   * Draw single datapoint for graph style 'dot-line'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawDotLineGraphPoint=function(ctx,point){// draw a vertical line from the XY-plane to the graph value
  var from=this._convert3Dto2D(point.bottom);ctx.lineWidth=1;this._line(ctx,from,point.screen,this.gridColor);this._redrawDotGraphPoint(ctx,point);};/**
   * Draw single datapoint for graph style 'dot-color'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawDotColorGraphPoint=function(ctx,point){var colors=this._getColorsColor(point);this._drawCircle(ctx,point,colors.fill,colors.border);};/**
   * Draw single datapoint for graph style 'dot-size'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawDotSizeGraphPoint=function(ctx,point){var dotSize=this._dotSize();var fraction=(point.point.value-this.valueRange.min)/this.valueRange.range();var sizeMin=dotSize*this.dotSizeMinFraction;var sizeRange=dotSize*this.dotSizeMaxFraction-sizeMin;var size=sizeMin+sizeRange*fraction;var colors=this._getColorsSize();this._drawCircle(ctx,point,colors.fill,colors.border,size);};/**
   * Draw single datapoint for graph style 'surface'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawSurfaceGraphPoint=function(ctx,point){var right=point.pointRight;var top=point.pointTop;var cross=point.pointCross;if(point===undefined||right===undefined||top===undefined||cross===undefined){return;}var topSideVisible=true;var fillStyle;var strokeStyle;if(this.showGrayBottom||this.showShadow){// calculate the cross product of the two vectors from center
  // to left and right, in order to know whether we are looking at the
  // bottom or at the top side. We can also use the cross product
  // for calculating light intensity
  var aDiff=Point3d_1.subtract(cross.trans,point.trans);var bDiff=Point3d_1.subtract(top.trans,right.trans);var crossproduct=Point3d_1.crossProduct(aDiff,bDiff);var len=crossproduct.length();// FIXME: there is a bug with determining the surface side (shadow or colored)
  topSideVisible=crossproduct.z>0;}if(topSideVisible){// calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
  var zAvg=(point.point.z+right.point.z+top.point.z+cross.point.z)/4;var h=(1-(zAvg-this.zRange.min)*this.scale.z/this.verticalRatio)*240;var s=1;// saturation
  var v;if(this.showShadow){v=Math.min(1+crossproduct.x/len/2,1);// value. TODO: scale
  fillStyle=this._hsv2rgb(h,s,v);strokeStyle=fillStyle;}else{v=1;fillStyle=this._hsv2rgb(h,s,v);strokeStyle=this.axisColor;// TODO: should be customizable
  }}else{fillStyle='gray';strokeStyle=this.axisColor;}ctx.lineWidth=this._getStrokeWidth(point);// TODO: only draw stroke when strokeWidth > 0
  var points=[point,right,cross,top];this._polygon(ctx,points,fillStyle,strokeStyle);};/**
   * Helper method for _redrawGridGraphPoint()
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} from
   * @param {Object} to
   * @private
   */Graph3d.prototype._drawGridLine=function(ctx,from,to){if(from===undefined||to===undefined){return;}// calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
  var zAvg=(from.point.z+to.point.z)/2;var h=(1-(zAvg-this.zRange.min)*this.scale.z/this.verticalRatio)*240;ctx.lineWidth=this._getStrokeWidth(from)*2;ctx.strokeStyle=this._hsv2rgb(h,1,1);this._line(ctx,from.screen,to.screen);};/**
   * Draw single datapoint for graph style 'Grid'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawGridGraphPoint=function(ctx,point){this._drawGridLine(ctx,point,point.pointRight);this._drawGridLine(ctx,point,point.pointTop);};/**
   * Draw single datapoint for graph style 'line'.
   *
   * @param {CanvasRenderingContext2D} ctx
   * @param {Object} point
   * @private
   */Graph3d.prototype._redrawLineGraphPoint=function(ctx,point){if(point.pointNext===undefined){return;}ctx.lineWidth=this._getStrokeWidth(point);ctx.strokeStyle=this.dataColor.stroke;this._line(ctx,point.screen,point.pointNext.screen);};/**
   * Draw all datapoints for currently selected graph style.
   *
   */Graph3d.prototype._redrawDataGraph=function(){var ctx=this._getContext();var i;if(this.dataPoints===undefined||this.dataPoints.length<=0)return;// TODO: throw exception?
  this._calcTranslations(this.dataPoints);for(i=0;i<this.dataPoints.length;i++){var point=this.dataPoints[i];// Using call() ensures that the correct context is used
  this._pointDrawingMethod.call(this,ctx,point);}};// -----------------------------------------------------------------------------
  // End methods for drawing points per graph style.
  // -----------------------------------------------------------------------------
  /**
   * Store startX, startY and startOffset for mouse operations
   *
   * @param {Event}     event     The event that occurred
   */Graph3d.prototype._storeMousePosition=function(event){// get mouse position (different code for IE and all other browsers)
  this.startMouseX=getMouseX(event);this.startMouseY=getMouseY(event);this._startCameraOffset=this.camera.getOffset();};/**
   * Start a moving operation inside the provided parent element
   * @param {Event}     event     The event that occurred (required for
   *                  retrieving the  mouse position)
   */Graph3d.prototype._onMouseDown=function(event){event=event||window.event;// check if mouse is still down (may be up when focus is lost for example
  // in an iframe)
  if(this.leftButtonDown){this._onMouseUp(event);}// only react on left mouse button down
  this.leftButtonDown=event.which?event.which===1:event.button===1;if(!this.leftButtonDown&&!this.touchDown)return;this._storeMousePosition(event);this.startStart=new Date(this.start);this.startEnd=new Date(this.end);this.startArmRotation=this.camera.getArmRotation();this.frame.style.cursor='move';// add event listeners to handle moving the contents
  // we store the function onmousemove and onmouseup in the graph, so we can
  // remove the eventlisteners lateron in the function mouseUp()
  var me=this;this.onmousemove=function(event){me._onMouseMove(event);};this.onmouseup=function(event){me._onMouseUp(event);};util$3.addEventListener(document,'mousemove',me.onmousemove);util$3.addEventListener(document,'mouseup',me.onmouseup);util$3.preventDefault(event);};/**
   * Perform moving operating.
   * This function activated from within the funcion Graph.mouseDown().
   * @param {Event}   event  Well, eehh, the event
   */Graph3d.prototype._onMouseMove=function(event){this.moving=true;event=event||window.event;// calculate change in mouse position
  var diffX=parseFloat(getMouseX(event))-this.startMouseX;var diffY=parseFloat(getMouseY(event))-this.startMouseY;// move with ctrl or rotate by other
  if(event&&event.ctrlKey===true){// calculate change in mouse position
  var scaleX=this.frame.clientWidth*0.5;var scaleY=this.frame.clientHeight*0.5;var offXNew=(this._startCameraOffset.x||0)-diffX/scaleX*this.camera.armLength*0.8;var offYNew=(this._startCameraOffset.y||0)+diffY/scaleY*this.camera.armLength*0.8;this.camera.setOffset(offXNew,offYNew);this._storeMousePosition(event);}else{var horizontalNew=this.startArmRotation.horizontal+diffX/200;var verticalNew=this.startArmRotation.vertical+diffY/200;var snapAngle=4;// degrees
  var snapValue=Math.sin(snapAngle/360*2*Math.PI);// snap horizontally to nice angles at 0pi, 0.5pi, 1pi, 1.5pi, etc...
  // the -0.001 is to take care that the vertical axis is always drawn at the left front corner
  if(Math.abs(Math.sin(horizontalNew))<snapValue){horizontalNew=Math.round(horizontalNew/Math.PI)*Math.PI-0.001;}if(Math.abs(Math.cos(horizontalNew))<snapValue){horizontalNew=(Math.round(horizontalNew/Math.PI-0.5)+0.5)*Math.PI-0.001;}// snap vertically to nice angles
  if(Math.abs(Math.sin(verticalNew))<snapValue){verticalNew=Math.round(verticalNew/Math.PI)*Math.PI;}if(Math.abs(Math.cos(verticalNew))<snapValue){verticalNew=(Math.round(verticalNew/Math.PI-0.5)+0.5)*Math.PI;}this.camera.setArmRotation(horizontalNew,verticalNew);}this.redraw();// fire a cameraPositionChange event
  var parameters=this.getCameraPosition();this.emit('cameraPositionChange',parameters);util$3.preventDefault(event);};/**
   * Stop moving operating.
   * This function activated from within the funcion Graph.mouseDown().
   * @param {Event}  event   The event
   */Graph3d.prototype._onMouseUp=function(event){this.frame.style.cursor='auto';this.leftButtonDown=false;// remove event listeners here
  util$3.removeEventListener(document,'mousemove',this.onmousemove);util$3.removeEventListener(document,'mouseup',this.onmouseup);util$3.preventDefault(event);};/**
   * @param {Event}  event   The event
   */Graph3d.prototype._onClick=function(event){if(!this.onclick_callback)return;if(!this.moving){var boundingRect=this.frame.getBoundingClientRect();var mouseX=getMouseX(event)-boundingRect.left;var mouseY=getMouseY(event)-boundingRect.top;var dataPoint=this._dataPointFromXY(mouseX,mouseY);if(dataPoint)this.onclick_callback(dataPoint.point.data);}else{// disable onclick callback, if it came immediately after rotate/pan
  this.moving=false;}util$3.preventDefault(event);};/**
   * After having moved the mouse, a tooltip should pop up when the mouse is resting on a data point
   * @param {Event}  event   A mouse move event
   */Graph3d.prototype._onTooltip=function(event){var delay=300;// ms
  var boundingRect=this.frame.getBoundingClientRect();var mouseX=getMouseX(event)-boundingRect.left;var mouseY=getMouseY(event)-boundingRect.top;if(!this.showTooltip){return;}if(this.tooltipTimeout){clearTimeout(this.tooltipTimeout);}// (delayed) display of a tooltip only if no mouse button is down
  if(this.leftButtonDown){this._hideTooltip();return;}if(this.tooltip&&this.tooltip.dataPoint){// tooltip is currently visible
  var dataPoint=this._dataPointFromXY(mouseX,mouseY);if(dataPoint!==this.tooltip.dataPoint){// datapoint changed
  if(dataPoint){this._showTooltip(dataPoint);}else{this._hideTooltip();}}}else{// tooltip is currently not visible
  var me=this;this.tooltipTimeout=setTimeout(function(){me.tooltipTimeout=null;// show a tooltip if we have a data point
  var dataPoint=me._dataPointFromXY(mouseX,mouseY);if(dataPoint){me._showTooltip(dataPoint);}},delay);}};/**
   * Event handler for touchstart event on mobile devices
   * @param {Event}  event   The event
   */Graph3d.prototype._onTouchStart=function(event){this.touchDown=true;var me=this;this.ontouchmove=function(event){me._onTouchMove(event);};this.ontouchend=function(event){me._onTouchEnd(event);};util$3.addEventListener(document,'touchmove',me.ontouchmove);util$3.addEventListener(document,'touchend',me.ontouchend);this._onMouseDown(event);};/**
   * Event handler for touchmove event on mobile devices
   * @param {Event}  event   The event
   */Graph3d.prototype._onTouchMove=function(event){this._onMouseMove(event);};/**
   * Event handler for touchend event on mobile devices
   * @param {Event}  event   The event
   */Graph3d.prototype._onTouchEnd=function(event){this.touchDown=false;util$3.removeEventListener(document,'touchmove',this.ontouchmove);util$3.removeEventListener(document,'touchend',this.ontouchend);this._onMouseUp(event);};/**
   * Event handler for mouse wheel event, used to zoom the graph
   * Code from http://adomas.org/javascript-mouse-wheel/
   * @param {Event}  event   The event
   */Graph3d.prototype._onWheel=function(event){if(!event)/* For IE. */event=window.event;if(this.zoomable&&(!this.ctrlToZoom||event.ctrlKey)){// retrieve delta
  var delta=0;if(event.wheelDelta){/* IE/Opera. */delta=event.wheelDelta/120;}else if(event.detail){/* Mozilla case. */ // In Mozilla, sign of delta is different than in IE.
  // Also, delta is multiple of 3.
  delta=-event.detail/3;}// If delta is nonzero, handle it.
  // Basically, delta is now positive if wheel was scrolled up,
  // and negative, if wheel was scrolled down.
  if(delta){var oldLength=this.camera.getArmLength();var newLength=oldLength*(1-delta/10);this.camera.setArmLength(newLength);this.redraw();this._hideTooltip();}// fire a cameraPositionChange event
  var parameters=this.getCameraPosition();this.emit('cameraPositionChange',parameters);// Prevent default actions caused by mouse wheel.
  // That might be ugly, but we handle scrolls somehow
  // anyway, so don't bother here..
  util$3.preventDefault(event);}};/**
   * Test whether a point lies inside given 2D triangle
   *
   * @param   {vis.Point2d}   point
   * @param   {vis.Point2d[]} triangle
   * @returns {boolean}   true if given point lies inside or on the edge of the
   *                      triangle, false otherwise
   * @private
   */Graph3d.prototype._insideTriangle=function(point,triangle){var a=triangle[0],b=triangle[1],c=triangle[2];/**
     *
     * @param {number} x
     * @returns {number}
     */function sign(x){return x>0?1:x<0?-1:0;}var as=sign((b.x-a.x)*(point.y-a.y)-(b.y-a.y)*(point.x-a.x));var bs=sign((c.x-b.x)*(point.y-b.y)-(c.y-b.y)*(point.x-b.x));var cs=sign((a.x-c.x)*(point.y-c.y)-(a.y-c.y)*(point.x-c.x));// each of the three signs must be either equal to each other or zero
  return (as==0||bs==0||as==bs)&&(bs==0||cs==0||bs==cs)&&(as==0||cs==0||as==cs);};/**
   * Find a data point close to given screen position (x, y)
   *
   * @param   {number} x
   * @param   {number} y
   * @returns {Object | null} The closest data point or null if not close to any
   *                          data point
   * @private
   */Graph3d.prototype._dataPointFromXY=function(x,y){var i,distMax=100,// px
  dataPoint=null,closestDataPoint=null,closestDist=null,center=new Point2d_1(x,y);if(this.style===Graph3d.STYLE.BAR||this.style===Graph3d.STYLE.BARCOLOR||this.style===Graph3d.STYLE.BARSIZE){// the data points are ordered from far away to closest
  for(i=this.dataPoints.length-1;i>=0;i--){dataPoint=this.dataPoints[i];var surfaces=dataPoint.surfaces;if(surfaces){for(var s=surfaces.length-1;s>=0;s--){// split each surface in two triangles, and see if the center point is inside one of these
  var surface=surfaces[s];var corners=surface.corners;var triangle1=[corners[0].screen,corners[1].screen,corners[2].screen];var triangle2=[corners[2].screen,corners[3].screen,corners[0].screen];if(this._insideTriangle(center,triangle1)||this._insideTriangle(center,triangle2)){// return immediately at the first hit
  return dataPoint;}}}}}else{// find the closest data point, using distance to the center of the point on 2d screen
  for(i=0;i<this.dataPoints.length;i++){dataPoint=this.dataPoints[i];var point=dataPoint.screen;if(point){var distX=Math.abs(x-point.x);var distY=Math.abs(y-point.y);var dist=Math.sqrt(distX*distX+distY*distY);if((closestDist===null||dist<closestDist)&&dist<distMax){closestDist=dist;closestDataPoint=dataPoint;}}}}return closestDataPoint;};/**
   * Determine if the given style has bars
   *
   * @param   {number} style the style to check
   * @returns {boolean} true if bar style, false otherwise
   */Graph3d.prototype.hasBars=function(style){return style==Graph3d.STYLE.BAR||style==Graph3d.STYLE.BARCOLOR||style==Graph3d.STYLE.BARSIZE;};/**
   * Display a tooltip for given data point
   * @param {Object} dataPoint
   * @private
   */Graph3d.prototype._showTooltip=function(dataPoint){var content,line,dot;if(!this.tooltip){content=document.createElement('div');Object.assign(content.style,{},this.tooltipStyle.content);content.style.position='absolute';line=document.createElement('div');Object.assign(line.style,{},this.tooltipStyle.line);line.style.position='absolute';dot=document.createElement('div');Object.assign(dot.style,{},this.tooltipStyle.dot);dot.style.position='absolute';this.tooltip={dataPoint:null,dom:{content:content,line:line,dot:dot}};}else{content=this.tooltip.dom.content;line=this.tooltip.dom.line;dot=this.tooltip.dom.dot;}this._hideTooltip();this.tooltip.dataPoint=dataPoint;if(typeof this.showTooltip==='function'){content.innerHTML=this.showTooltip(dataPoint.point);}else{content.innerHTML='<table>'+'<tr><td>'+this.xLabel+':</td><td>'+dataPoint.point.x+'</td></tr>'+'<tr><td>'+this.yLabel+':</td><td>'+dataPoint.point.y+'</td></tr>'+'<tr><td>'+this.zLabel+':</td><td>'+dataPoint.point.z+'</td></tr>'+'</table>';}content.style.left='0';content.style.top='0';this.frame.appendChild(content);this.frame.appendChild(line);this.frame.appendChild(dot);// calculate sizes
  var contentWidth=content.offsetWidth;var contentHeight=content.offsetHeight;var lineHeight=line.offsetHeight;var dotWidth=dot.offsetWidth;var dotHeight=dot.offsetHeight;var left=dataPoint.screen.x-contentWidth/2;left=Math.min(Math.max(left,10),this.frame.clientWidth-10-contentWidth);line.style.left=dataPoint.screen.x+'px';line.style.top=dataPoint.screen.y-lineHeight+'px';content.style.left=left+'px';content.style.top=dataPoint.screen.y-lineHeight-contentHeight+'px';dot.style.left=dataPoint.screen.x-dotWidth/2+'px';dot.style.top=dataPoint.screen.y-dotHeight/2+'px';};/**
   * Hide the tooltip when displayed
   * @private
   */Graph3d.prototype._hideTooltip=function(){if(this.tooltip){this.tooltip.dataPoint=null;for(var prop in this.tooltip.dom){if(this.tooltip.dom.hasOwnProperty(prop)){var elem=this.tooltip.dom[prop];if(elem&&elem.parentNode){elem.parentNode.removeChild(elem);}}}}};/**--------------------------------------------------------------------------**/ /**
   * Get the horizontal mouse position from a mouse event
   *
   * @param   {Event}  event
   * @returns {number} mouse x
   */function getMouseX(event){if('clientX'in event)return event.clientX;return event.targetTouches[0]&&event.targetTouches[0].clientX||0;}/**
   * Get the vertical mouse position from a mouse event
   *
   * @param   {Event}  event
   * @returns {number} mouse y
   */function getMouseY(event){if('clientY'in event)return event.clientY;return event.targetTouches[0]&&event.targetTouches[0].clientY||0;}// -----------------------------------------------------------------------------
  //  Public methods for specific settings
  // -----------------------------------------------------------------------------
  /**
   * Set the rotation and distance of the camera
   *
   * @param {Object}  pos            An object with the camera position
   * @param {number} [pos.horizontal] The horizontal rotation, between 0 and 2*PI.
   *                                 Optional, can be left undefined.
   * @param {number} [pos.vertical]  The vertical rotation, between 0 and 0.5*PI.
   *                                 if vertical=0.5*PI, the graph is shown from
   *                                 the top. Optional, can be left undefined.
   * @param {number} [pos.distance]  The (normalized) distance of the camera to the
   *                                 center of the graph, a value between 0.71 and
   *                                 5.0. Optional, can be left undefined.
   */Graph3d.prototype.setCameraPosition=function(pos){Settings.setCameraPosition(pos,this);this.redraw();};/**
   * Set a new size for the graph
   *
   * @param {string} width  Width in pixels or percentage (for example '800px'
   *                        or '50%')
   * @param {string} height Height in pixels or percentage  (for example '400px'
   *                        or '30%')
   */Graph3d.prototype.setSize=function(width,height){this._setSize(width,height);this.redraw();};// -----------------------------------------------------------------------------
  //  End public methods for specific settings
  // -----------------------------------------------------------------------------
  var Graph3d_1=Graph3d;var moment$2$2=createCommonjsModule$1$3(function(module,exports){(function(global,factory){module.exports=factory();})(commonjsGlobal$1$2,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else{var k;for(k in obj){if(obj.hasOwnProperty(k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
  return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m);var parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties=hooks.momentProperties=[];function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i=0;i<momentProperties.length;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}var updateInProgress=false;// Moment prototype object
  function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
  // objects.
  if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function absFloor(number){if(number<0){// -0 -> 0
  return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}// compare two arrays, return the number of differences
  function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg='';if(typeof arguments[i]==='object'){arg+='\n['+i+'] ';for(var key in arguments[0]){arg+=key+': '+arguments[0][key]+', ';}arg=arg.slice(0,-2);// Remove trailing comma and space
  }else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
  // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
  // TODO: Remove "ordinalParse" fallback in next major release.
  this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
  res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d';var defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj){units.push({unit:u,priority:priorities[u]});}units.sort(function(a,b){return a.priority-b.priority;});return units;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions={};var formatTokenFunctions={};// token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
  function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var match1=/\d/;//       0 - 9
  var match2=/\d\d/;//      00 - 99
  var match3=/\d{3}/;//     000 - 999
  var match4=/\d{4}/;//    0000 - 9999
  var match6=/[+-]?\d{6}/;// -999999 - 999999
  var match1to2=/\d\d?/;//       0 - 99
  var match3to4=/\d\d\d\d?/;//     999 - 9999
  var match5to6=/\d\d\d\d\d\d?/;//   99999 - 999999
  var match1to3=/\d{1,3}/;//       0 - 999
  var match1to4=/\d{1,4}/;//       0 - 9999
  var match1to6=/[+-]?\d{1,6}/;// -999999 - 999999
  var matchUnsigned=/\d+/;//       0 - inf
  var matchSigned=/[+-]?\d+/;//    -inf - inf
  var matchOffset=/Z|[+-]\d\d:?\d\d/gi;// +00:00 -00:00 +0000 -0000 or Z
  var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;// +00 -00 +00:00 -00:00 +0000 -0000 or Z
  var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;// 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  var matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;var regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0;var MONTH=1;var DATE=2;var HOUR=3;var MINUTE=4;var SECOND=5;var MILLISECOND=6;var WEEK=7;var WEEKDAY=8;// FORMATTING
  addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?''+y:'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
  addUnitAlias('year','y');// PRIORITIES
  addUnitPriority('year',1);// PARSING
  addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
  function daysInYear(year){return isLeapYear(year)?366:365;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}// HOOKS
  hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
  var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else{return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else{mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
  function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(typeof units==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units);for(var i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function(o){// I know
  var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
  addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
  addUnitAlias('month','M');// PRIORITY
  addUnitPriority('month',8);// PARSING
  addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
  if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
  var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
  this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
  // Sorting makes sure if one month (or abbr) is a prefix of another
  // see sorting in computeMonthsParse
  for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
  function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
  return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
  if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else{return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}var defaultMonthsShortRegex=matchWord;function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}var defaultMonthsRegex=matchWord;function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
  // will match the longer piece.
  shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
  // https://stackoverflow.com/q/181348
  var date;// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else{date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date;// the Date.UTC function remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){var args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
  args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else{date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
  function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
  fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
  fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
  addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
  addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
  addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
  addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
  // LOCALES
  function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
  doy:6// The week that contains Jan 6th is the first week of the year.
  };function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
  function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
  addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
  addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
  addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
  addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
  if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
  function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
  function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
  function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
  // as a setter, sunday should belong to the previous week.
  if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}var defaultWeekdaysRegex=matchWord;function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}var defaultWeekdaysShortRegex=matchWord;function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}var defaultWeekdaysMinRegex=matchWord;function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);minp=this.weekdaysMin(mom,'');shortp=this.weekdaysShort(mom,'');longp=this.weekdays(mom,'');minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
  // will match the longer piece.
  minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);mixedPieces[i]=regexEscape(mixedPieces[i]);}this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
  function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
  addUnitAlias('hour','h');// PRIORITY
  addUnitPriority('hour',13);// PARSING
  function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
  function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
  // Using charAt should be more compatible.
  return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}// MOMENTS
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour=makeGetSet('Hours',true);var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
  var locales={};var localeFamilies={};var globalLocale;function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){//the next array item is better than a shallower substring of this one
  break;}j--;}i++;}return globalLocale;}function loadLocale(name){var oldLocale=null;// TODO: Find a better way to register and load all the locales in Node
  if(!locales[name]&&'object'!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;var aliasedRequire=commonjsRequire$1$2;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){}}return locales[name];}// This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
  globalLocale=data;}else{if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
  console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else{if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
  // make sure we set the locale AFTER all child locales have been
  // created, so we won't end up with the child locale set.
  getSetGlobalLocale(name);return locales[name];}else{// useful for testing
  delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;// MERGE
  tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;// backwards compat for now: also set the locale
  getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
  if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
  function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
  locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow;var a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// Pick the first defined of two or three arguments.
  function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
  var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
  if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
  if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
  // * if no year, month, day of month are given, default to today
  // * if day of month is given, default month and year
  // * if month is given, default only year
  // * if year is given, don't default anything
  for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
  for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
  if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
  // with parseZone.
  if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
  if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
  // how we interpret now (local, utc, fixed offset). So create
  // a now version of current config (take local/utc/offset flags, and
  // create now).
  weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;var curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
  week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
  weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
  weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to beginning of week
  weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;var isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],// YYYYMM is NOT allowed by the standard
  ['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/]];// iso time formats and regexes
  var isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]];var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;// date from iso format
  function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
  timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
  var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}var obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
  return 0;}else{var hm=parseInt(numOffset,10);var m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
  function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i));if(match){var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else{config._isValid=false;}}// date from iso format or fallback
  function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else{return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else{return;}// Final attempt, use Input Fallback
  hooks.createFromInputFallback(config);}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged and will be removed in an upcoming major release. Please refer to '+'http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// constant that refers to the ISO standard
  hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
  hooks.RFC_2822=function(){};// date from string and format string
  function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
  if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
  var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];// console.log('token', token, 'parsedInput', parsedInput,
  //         'regex', getParseRegexForToken(token, config));
  if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
  if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
  getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
  if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
  config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
  return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
  isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
  return hour;}}// date from string and array of format strings
  function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(!isValid(tempConfig)){continue;}// if there is any input that was not parsed add a penalty for that format
  currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
  currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
  res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
  config._d=new Date(input);}else{hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
  // https://github.com/moment/moment/issues/1423
  c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return createInvalid();}});var prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
  function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){for(var key in m){if(!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}var unitHasDecimal=false;for(var i=0;i<ordering.length;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
  }if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
  this._milliseconds=+milliseconds+seconds*1e3+// 1000
  minutes*6e4+// 1000 * 60
  hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
  // Because of dateAddRemove treats 24 hours as different from a
  // day when working around DST, we need to store them separately
  this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
  // which months you are are talking about, so we have to store
  // it separately.
  this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// FORMATTING
  function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset();var sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
  addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher);if(matches===null){return null;}var chunk=matches[matches.length-1]||[];var parts=(chunk+'').match(chunkOffset)||['-',0,0];var minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
  res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else{return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
  // https://github.com/moment/moment/pull/1871
  return -Math.round(m._d.getTimezoneOffset()/15)*15;}// HOOKS
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset=function(){};// MOMENTS
  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else{this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={};copyConfig(c,this);c=prepareConfig(c);if(c._a){var other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
  var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  var isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
  match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
  };}else if(!!(match=isoRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
  duration={};}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
  // converts floats to ints.
  // inp may be undefined, so careful calling replace on it.
  var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
  return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
  if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}val=typeof val==='string'?+val:val;dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
  return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add');var subtract=createAdder(-1,'subtract');function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// We want to compare the start of today, vs this.
  // Getting start-of-today depends on whether we're local/utc/offset or not.
  var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse';var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
  case'minute':output=(this-that)/6e4;break;// 1000 * 60
  case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
  case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
  case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
  default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){// difference in months
  var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
  anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
  adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
  adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
  return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true;var m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
  if(utc){return this.toDate().toISOString();}else{return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment';var zone='';if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}var prefix='['+func+'("]';var year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';var datetime='-MM-DD[T]HH:mm:ss.SSS';var suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000;var MS_PER_MINUTE=60*MS_PER_SECOND;var MS_PER_HOUR=60*MS_PER_MINUTE;var MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return new Date(y+400,m,d)-MS_PER_400_YEARS;}else{return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else{return Date.UTC(y,m,d);}}function startOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
  return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}// FORMATTING
  addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
  addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
  addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
  addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
  function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
  addFormatToken('Q',0,'Qo','quarter');// ALIASES
  addUnitAlias('quarter','Q');// PRIORITY
  addUnitPriority('quarter',7);// PARSING
  addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
  function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
  addFormatToken('D',['DD',2],'Do','date');// ALIASES
  addUnitAlias('date','D');// PRIORITY
  addUnitPriority('date',9);// PARSING
  addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
  return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
  var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
  addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
  addUnitAlias('dayOfYear','DDD');// PRIORITY
  addUnitPriority('dayOfYear',4);// PARSING
  addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
  // MOMENTS
  function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
  addFormatToken('m',['mm',2],0,'minute');// ALIASES
  addUnitAlias('minute','m');// PRIORITY
  addUnitPriority('minute',14);// PARSING
  addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
  var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
  addFormatToken('s',['ss',2],0,'second');// ALIASES
  addUnitAlias('second','s');// PRIORITY
  addUnitPriority('second',15);// PARSING
  addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
  var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
  addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
  addUnitAlias('millisecond','ms');// PRIORITY
  addUnitPriority('millisecond',16);// PARSING
  addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}// MOMENTS
  var getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
  addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
  function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale();var utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i;var out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0;if(index!=null){return get$1(format,(index+shift)%7,field,'day');}var i;var out=[];for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
  hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
  // check: https://github.com/moment/moment/issues/2166
  if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
  // examples of what that means.
  data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
  monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
  years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
  return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else{// handle milliseconds separately because of floating point math errors (issue #1867)
  days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
  case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
  function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms');var asSeconds=makeAs('s');var asMinutes=makeAs('m');var asHours=makeAs('h');var asDays=makeAs('d');var asWeeks=makeAs('w');var asMonths=makeAs('M');var asQuarters=makeAs('Q');var asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds');var seconds=makeGetter('seconds');var minutes=makeGetter('minutes');var hours=makeGetter('hours');var days=makeGetter('days');var months=makeGetter('months');var years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round;var thresholds={ss:44,// a few seconds to seconds
  s:45,// seconds to minute
  m:45,// minutes to hour
  h:22,// hours to day
  d:26,// days to month
  M:11// months to year
  };// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,locale){var duration=createDuration(posNegDuration).abs();var seconds=round(duration.as('s'));var minutes=round(duration.as('m'));var hours=round(duration.as('h'));var days=round(duration.as('d'));var months=round(duration.as('M'));var years=round(duration.as('y'));var a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days]||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(withSuffix){if(!this.isValid()){return this.localeData().invalidDate();}var locale=this.localeData();var output=relativeTime$1(this,!withSuffix,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
  //  * milliseconds bubble up until they become hours
  //  * days do not bubble at all
  //  * months bubble up until they become years
  // This is because there is no context-free conversion between hours and days
  // (think of clock changes)
  // and also not between days and months (28-31 days per month)
  if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000;var days=abs$1(this._days);var months=abs$1(this._months);var minutes,hours,years;// 3600 seconds -> 60 minutes -> 1 hour
  minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
  years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
  var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';var total=this.asSeconds();if(!total){// this is the same as C#'s (Noda) and python (isodate)...
  // but not other JS (goog.date)
  return 'P0D';}var totalSign=total<0?'-':'';var ymSign=sign(this._months)!==sign(total)?'-':'';var daysSign=sign(this._days)!==sign(total)?'-':'';var hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(Y?ymSign+Y+'Y':'')+(M?ymSign+M+'M':'')+(D?daysSign+D+'D':'')+(h||m||s?'T':'')+(h?hmsSign+h+'H':'')+(m?hmsSign+m+'M':'')+(s?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// Side effect imports
  // FORMATTING
  addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
  addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input,10)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});// Side effect imports
  hooks.version='2.24.0';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
  DATE:'YYYY-MM-DD',// <input type="date" />
  TIME:'HH:mm',// <input type="time" />
  TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
  TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
  WEEK:'GGGG-[W]WW',// <input type="week" />
  MONTH:'YYYY-MM'// <input type="month" />
  };return hooks;});});// use this instance. Else, load via commonjs.
  var moment$3$1=typeof window!=='undefined'&&window['moment']||moment$2$2;var propagating=createCommonjsModule$1$3(function(module,exports){(function(factory){{// Node. Does not work with strict CommonJS, but
  // only CommonJS-like environments that support module.exports,
  // like Node.
  module.exports=factory();}})(function(){var _firstTarget=null;// singleton, will contain the target element where the touch event started
  /**
       * Extend an Hammer.js instance with event propagation.
       *
       * Features:
       * - Events emitted by hammer will propagate in order from child to parent
       *   elements.
       * - Events are extended with a function `event.stopPropagation()` to stop
       *   propagation to parent elements.
       * - An option `preventDefault` to stop all default browser behavior.
       *
       * Usage:
       *   var hammer = propagatingHammer(new Hammer(element));
       *   var hammer = propagatingHammer(new Hammer(element), {preventDefault: true});
       *
       * @param {Hammer.Manager} hammer   An hammer instance.
       * @param {Object} [options]        Available options:
       *                                  - `preventDefault: true | false | 'mouse' | 'touch' | 'pen'`.
       *                                    Enforce preventing the default browser behavior.
       *                                    Cannot be set to `false`.
       * @return {Hammer.Manager} Returns the same hammer instance with extended
       *                          functionality
       */return function propagating(hammer,options){var _options=options||{preventDefault:false};if(hammer.Manager){// This looks like the Hammer constructor.
  // Overload the constructors with our own.
  var Hammer=hammer;var PropagatingHammer=function(element,options){var o=Object.create(_options);if(options)Hammer.assign(o,options);return propagating(new Hammer(element,o),o);};Hammer.assign(PropagatingHammer,Hammer);PropagatingHammer.Manager=function(element,options){var o=Object.create(_options);if(options)Hammer.assign(o,options);return propagating(new Hammer.Manager(element,o),o);};return PropagatingHammer;}// create a wrapper object which will override the functions
  // `on`, `off`, `destroy`, and `emit` of the hammer instance
  var wrapper=Object.create(hammer);// attach to DOM element
  var element=hammer.element;if(!element.hammer)element.hammer=[];element.hammer.push(wrapper);// register an event to catch the start of a gesture and store the
  // target in a singleton
  hammer.on('hammer.input',function(event){if(_options.preventDefault===true||_options.preventDefault===event.pointerType){event.preventDefault();}if(event.isFirst){_firstTarget=event.target;}});/** @type {Object.<String, Array.<function>>} */wrapper._handlers={};/**
         * Register a handler for one or multiple events
         * @param {String} events    A space separated string with events
         * @param {function} handler A callback function, called as handler(event)
         * @returns {Hammer.Manager} Returns the hammer instance
         */wrapper.on=function(events,handler){// register the handler
  split(events).forEach(function(event){var _handlers=wrapper._handlers[event];if(!_handlers){wrapper._handlers[event]=_handlers=[];// register the static, propagated handler
  hammer.on(event,propagatedHandler);}_handlers.push(handler);});return wrapper;};/**
         * Unregister a handler for one or multiple events
         * @param {String} events      A space separated string with events
         * @param {function} [handler] Optional. The registered handler. If not
         *                             provided, all handlers for given events
         *                             are removed.
         * @returns {Hammer.Manager}   Returns the hammer instance
         */wrapper.off=function(events,handler){// unregister the handler
  split(events).forEach(function(event){var _handlers=wrapper._handlers[event];if(_handlers){_handlers=handler?_handlers.filter(function(h){return h!==handler;}):[];if(_handlers.length>0){wrapper._handlers[event]=_handlers;}else{// remove static, propagated handler
  hammer.off(event,propagatedHandler);delete wrapper._handlers[event];}}});return wrapper;};/**
         * Emit to the event listeners
         * @param {string} eventType
         * @param {Event} event
         */wrapper.emit=function(eventType,event){_firstTarget=event.target;hammer.emit(eventType,event);};wrapper.destroy=function(){// Detach from DOM element
  var hammers=hammer.element.hammer;var idx=hammers.indexOf(wrapper);if(idx!==-1)hammers.splice(idx,1);if(!hammers.length)delete hammer.element.hammer;// clear all handlers
  wrapper._handlers={};// call original hammer destroy
  hammer.destroy();};// split a string with space separated words
  function split(events){return events.match(/[^ ]+/g);}/**
         * A static event handler, applying event propagation.
         * @param {Object} event
         */function propagatedHandler(event){// let only a single hammer instance handle this event
  if(event.type!=='hammer.input'){// it is possible that the same srcEvent is used with multiple hammer events,
  // we keep track on which events are handled in an object _handled
  if(!event.srcEvent._handled){event.srcEvent._handled={};}if(event.srcEvent._handled[event.type]){return;}else{event.srcEvent._handled[event.type]=true;}}// attach a stopPropagation function to the event
  var stopped=false;event.stopPropagation=function(){stopped=true;};//wrap the srcEvent's stopPropagation to also stop hammer propagation:
  var srcStop=event.srcEvent.stopPropagation.bind(event.srcEvent);if(typeof srcStop=="function"){event.srcEvent.stopPropagation=function(){srcStop();event.stopPropagation();};}// attach firstTarget property to the event
  event.firstTarget=_firstTarget;// propagate over all elements (until stopped)
  var elem=_firstTarget;while(elem&&!stopped){var elemHammer=elem.hammer;if(elemHammer){var _handlers;for(var k=0;k<elemHammer.length;k++){_handlers=elemHammer[k]._handlers[event.type];if(_handlers)for(var i=0;i<_handlers.length&&!stopped;i++){_handlers[i](event);}}}elem=elem.parentNode;}}return wrapper;};});});var hammer$2=createCommonjsModule$1$3(function(module){/*! Hammer.JS - v2.0.7 - 2016-04-22
     * http://hammerjs.github.io/
     *
     * Copyright (c) 2016 Jorik Tangelder;
     * Licensed under the MIT license */(function(window,document,exportName,undefined$1){var VENDOR_PREFIXES=['','webkit','Moz','MS','ms','o'];var TEST_ELEMENT=document.createElement('div');var TYPE_FUNCTION='function';var round=Math.round;var abs=Math.abs;var now=Date.now;/**
       * set a timeout with a given scope
       * @param {Function} fn
       * @param {Number} timeout
       * @param {Object} context
       * @returns {number}
       */function setTimeoutContext(fn,timeout,context){return setTimeout(bindFn(fn,context),timeout);}/**
       * if the argument is an array, we want to execute the fn on each entry
       * if it aint an array we don't want to do a thing.
       * this is used by all the methods that accept a single and array argument.
       * @param {*|Array} arg
       * @param {String} fn
       * @param {Object} [context]
       * @returns {Boolean}
       */function invokeArrayArg(arg,fn,context){if(Array.isArray(arg)){each(arg,context[fn],context);return true;}return false;}/**
       * walk objects and arrays
       * @param {Object} obj
       * @param {Function} iterator
       * @param {Object} context
       */function each(obj,iterator,context){var i;if(!obj){return;}if(obj.forEach){obj.forEach(iterator,context);}else if(obj.length!==undefined$1){i=0;while(i<obj.length){iterator.call(context,obj[i],i,obj);i++;}}else{for(i in obj){obj.hasOwnProperty(i)&&iterator.call(context,obj[i],i,obj);}}}/**
       * wrap a method with a deprecation warning and stack trace
       * @param {Function} method
       * @param {String} name
       * @param {String} message
       * @returns {Function} A new function wrapping the supplied method.
       */function deprecate(method,name,message){var deprecationMessage='DEPRECATED METHOD: '+name+'\n'+message+' AT \n';return function(){var e=new Error('get-stack-trace');var stack=e&&e.stack?e.stack.replace(/^[^\(]+?[\n$]/gm,'').replace(/^\s+at\s+/gm,'').replace(/^Object.<anonymous>\s*\(/gm,'{anonymous}()@'):'Unknown Stack Trace';var log=window.console&&(window.console.warn||window.console.log);if(log){log.call(window.console,deprecationMessage,stack);}return method.apply(this,arguments);};}/**
       * extend object.
       * means that properties in dest will be overwritten by the ones in src.
       * @param {Object} target
       * @param {...Object} objects_to_assign
       * @returns {Object} target
       */var assign;if(typeof Object.assign!=='function'){assign=function assign(target){if(target===undefined$1||target===null){throw new TypeError('Cannot convert undefined or null to object');}var output=Object(target);for(var index=1;index<arguments.length;index++){var source=arguments[index];if(source!==undefined$1&&source!==null){for(var nextKey in source){if(source.hasOwnProperty(nextKey)){output[nextKey]=source[nextKey];}}}}return output;};}else{assign=Object.assign;}/**
       * extend object.
       * means that properties in dest will be overwritten by the ones in src.
       * @param {Object} dest
       * @param {Object} src
       * @param {Boolean} [merge=false]
       * @returns {Object} dest
       */var extend=deprecate(function extend(dest,src,merge){var keys=Object.keys(src);var i=0;while(i<keys.length){if(!merge||merge&&dest[keys[i]]===undefined$1){dest[keys[i]]=src[keys[i]];}i++;}return dest;},'extend','Use `assign`.');/**
       * merge the values from src in the dest.
       * means that properties that exist in dest will not be overwritten by src
       * @param {Object} dest
       * @param {Object} src
       * @returns {Object} dest
       */var merge=deprecate(function merge(dest,src){return extend(dest,src,true);},'merge','Use `assign`.');/**
       * simple class inheritance
       * @param {Function} child
       * @param {Function} base
       * @param {Object} [properties]
       */function inherit(child,base,properties){var baseP=base.prototype,childP;childP=child.prototype=Object.create(baseP);childP.constructor=child;childP._super=baseP;if(properties){assign(childP,properties);}}/**
       * simple function bind
       * @param {Function} fn
       * @param {Object} context
       * @returns {Function}
       */function bindFn(fn,context){return function boundFn(){return fn.apply(context,arguments);};}/**
       * let a boolean value also be a function that must return a boolean
       * this first item in args will be used as the context
       * @param {Boolean|Function} val
       * @param {Array} [args]
       * @returns {Boolean}
       */function boolOrFn(val,args){if(typeof val==TYPE_FUNCTION){return val.apply(args?args[0]||undefined$1:undefined$1,args);}return val;}/**
       * use the val2 when val1 is undefined
       * @param {*} val1
       * @param {*} val2
       * @returns {*}
       */function ifUndefined(val1,val2){return val1===undefined$1?val2:val1;}/**
       * addEventListener with multiple events at once
       * @param {EventTarget} target
       * @param {String} types
       * @param {Function} handler
       */function addEventListeners(target,types,handler){each(splitStr(types),function(type){target.addEventListener(type,handler,false);});}/**
       * removeEventListener with multiple events at once
       * @param {EventTarget} target
       * @param {String} types
       * @param {Function} handler
       */function removeEventListeners(target,types,handler){each(splitStr(types),function(type){target.removeEventListener(type,handler,false);});}/**
       * find if a node is in the given parent
       * @method hasParent
       * @param {HTMLElement} node
       * @param {HTMLElement} parent
       * @return {Boolean} found
       */function hasParent(node,parent){while(node){if(node==parent){return true;}node=node.parentNode;}return false;}/**
       * small indexOf wrapper
       * @param {String} str
       * @param {String} find
       * @returns {Boolean} found
       */function inStr(str,find){return str.indexOf(find)>-1;}/**
       * split string on whitespace
       * @param {String} str
       * @returns {Array} words
       */function splitStr(str){return str.trim().split(/\s+/g);}/**
       * find if a array contains the object using indexOf or a simple polyFill
       * @param {Array} src
       * @param {String} find
       * @param {String} [findByKey]
       * @return {Boolean|Number} false when not found, or the index
       */function inArray(src,find,findByKey){if(src.indexOf&&!findByKey){return src.indexOf(find);}else{var i=0;while(i<src.length){if(findByKey&&src[i][findByKey]==find||!findByKey&&src[i]===find){return i;}i++;}return -1;}}/**
       * convert array-like objects to real arrays
       * @param {Object} obj
       * @returns {Array}
       */function toArray(obj){return Array.prototype.slice.call(obj,0);}/**
       * unique array with objects based on a key (like 'id') or just by the array's value
       * @param {Array} src [{id:1},{id:2},{id:1}]
       * @param {String} [key]
       * @param {Boolean} [sort=False]
       * @returns {Array} [{id:1},{id:2}]
       */function uniqueArray(src,key,sort){var results=[];var values=[];var i=0;while(i<src.length){var val=key?src[i][key]:src[i];if(inArray(values,val)<0){results.push(src[i]);}values[i]=val;i++;}if(sort){if(!key){results=results.sort();}else{results=results.sort(function sortUniqueArray(a,b){return a[key]>b[key];});}}return results;}/**
       * get the prefixed property
       * @param {Object} obj
       * @param {String} property
       * @returns {String|Undefined} prefixed
       */function prefixed(obj,property){var prefix,prop;var camelProp=property[0].toUpperCase()+property.slice(1);var i=0;while(i<VENDOR_PREFIXES.length){prefix=VENDOR_PREFIXES[i];prop=prefix?prefix+camelProp:property;if(prop in obj){return prop;}i++;}return undefined$1;}/**
       * get a unique id
       * @returns {number} uniqueId
       */var _uniqueId=1;function uniqueId(){return _uniqueId++;}/**
       * get the window object of an element
       * @param {HTMLElement} element
       * @returns {DocumentView|Window}
       */function getWindowForElement(element){var doc=element.ownerDocument||element;return doc.defaultView||doc.parentWindow||window;}var MOBILE_REGEX=/mobile|tablet|ip(ad|hone|od)|android/i;var SUPPORT_TOUCH='ontouchstart'in window;var SUPPORT_POINTER_EVENTS=prefixed(window,'PointerEvent')!==undefined$1;var SUPPORT_ONLY_TOUCH=SUPPORT_TOUCH&&MOBILE_REGEX.test(navigator.userAgent);var INPUT_TYPE_TOUCH='touch';var INPUT_TYPE_PEN='pen';var INPUT_TYPE_MOUSE='mouse';var INPUT_TYPE_KINECT='kinect';var COMPUTE_INTERVAL=25;var INPUT_START=1;var INPUT_MOVE=2;var INPUT_END=4;var INPUT_CANCEL=8;var DIRECTION_NONE=1;var DIRECTION_LEFT=2;var DIRECTION_RIGHT=4;var DIRECTION_UP=8;var DIRECTION_DOWN=16;var DIRECTION_HORIZONTAL=DIRECTION_LEFT|DIRECTION_RIGHT;var DIRECTION_VERTICAL=DIRECTION_UP|DIRECTION_DOWN;var DIRECTION_ALL=DIRECTION_HORIZONTAL|DIRECTION_VERTICAL;var PROPS_XY=['x','y'];var PROPS_CLIENT_XY=['clientX','clientY'];/**
       * create new input type manager
       * @param {Manager} manager
       * @param {Function} callback
       * @returns {Input}
       * @constructor
       */function Input(manager,callback){var self=this;this.manager=manager;this.callback=callback;this.element=manager.element;this.target=manager.options.inputTarget;// smaller wrapper around the handler, for the scope and the enabled state of the manager,
  // so when disabled the input events are completely bypassed.
  this.domHandler=function(ev){if(boolOrFn(manager.options.enable,[manager])){self.handler(ev);}};this.init();}Input.prototype={/**
         * should handle the inputEvent data and trigger the callback
         * @virtual
         */handler:function(){},/**
         * bind the events
         */init:function(){this.evEl&&addEventListeners(this.element,this.evEl,this.domHandler);this.evTarget&&addEventListeners(this.target,this.evTarget,this.domHandler);this.evWin&&addEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler);},/**
         * unbind the events
         */destroy:function(){this.evEl&&removeEventListeners(this.element,this.evEl,this.domHandler);this.evTarget&&removeEventListeners(this.target,this.evTarget,this.domHandler);this.evWin&&removeEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler);}};/**
       * create new input type manager
       * called by the Manager constructor
       * @param {Hammer} manager
       * @returns {Input}
       */function createInputInstance(manager){var Type;var inputClass=manager.options.inputClass;if(inputClass){Type=inputClass;}else if(SUPPORT_POINTER_EVENTS){Type=PointerEventInput;}else if(SUPPORT_ONLY_TOUCH){Type=TouchInput;}else if(!SUPPORT_TOUCH){Type=MouseInput;}else{Type=TouchMouseInput;}return new Type(manager,inputHandler);}/**
       * handle input events
       * @param {Manager} manager
       * @param {String} eventType
       * @param {Object} input
       */function inputHandler(manager,eventType,input){var pointersLen=input.pointers.length;var changedPointersLen=input.changedPointers.length;var isFirst=eventType&INPUT_START&&pointersLen-changedPointersLen===0;var isFinal=eventType&(INPUT_END|INPUT_CANCEL)&&pointersLen-changedPointersLen===0;input.isFirst=!!isFirst;input.isFinal=!!isFinal;if(isFirst){manager.session={};}// source event is the normalized value of the domEvents
  // like 'touchstart, mouseup, pointerdown'
  input.eventType=eventType;// compute scale, rotation etc
  computeInputData(manager,input);// emit secret event
  manager.emit('hammer.input',input);manager.recognize(input);manager.session.prevInput=input;}/**
       * extend the data with some usable properties like scale, rotate, velocity etc
       * @param {Object} manager
       * @param {Object} input
       */function computeInputData(manager,input){var session=manager.session;var pointers=input.pointers;var pointersLength=pointers.length;// store the first input to calculate the distance and direction
  if(!session.firstInput){session.firstInput=simpleCloneInputData(input);}// to compute scale and rotation we need to store the multiple touches
  if(pointersLength>1&&!session.firstMultiple){session.firstMultiple=simpleCloneInputData(input);}else if(pointersLength===1){session.firstMultiple=false;}var firstInput=session.firstInput;var firstMultiple=session.firstMultiple;var offsetCenter=firstMultiple?firstMultiple.center:firstInput.center;var center=input.center=getCenter(pointers);input.timeStamp=now();input.deltaTime=input.timeStamp-firstInput.timeStamp;input.angle=getAngle(offsetCenter,center);input.distance=getDistance(offsetCenter,center);computeDeltaXY(session,input);input.offsetDirection=getDirection(input.deltaX,input.deltaY);var overallVelocity=getVelocity(input.deltaTime,input.deltaX,input.deltaY);input.overallVelocityX=overallVelocity.x;input.overallVelocityY=overallVelocity.y;input.overallVelocity=abs(overallVelocity.x)>abs(overallVelocity.y)?overallVelocity.x:overallVelocity.y;input.scale=firstMultiple?getScale(firstMultiple.pointers,pointers):1;input.rotation=firstMultiple?getRotation(firstMultiple.pointers,pointers):0;input.maxPointers=!session.prevInput?input.pointers.length:input.pointers.length>session.prevInput.maxPointers?input.pointers.length:session.prevInput.maxPointers;computeIntervalInputData(session,input);// find the correct target
  var target=manager.element;if(hasParent(input.srcEvent.target,target)){target=input.srcEvent.target;}input.target=target;}function computeDeltaXY(session,input){var center=input.center;var offset=session.offsetDelta||{};var prevDelta=session.prevDelta||{};var prevInput=session.prevInput||{};if(input.eventType===INPUT_START||prevInput.eventType===INPUT_END){prevDelta=session.prevDelta={x:prevInput.deltaX||0,y:prevInput.deltaY||0};offset=session.offsetDelta={x:center.x,y:center.y};}input.deltaX=prevDelta.x+(center.x-offset.x);input.deltaY=prevDelta.y+(center.y-offset.y);}/**
       * velocity is calculated every x ms
       * @param {Object} session
       * @param {Object} input
       */function computeIntervalInputData(session,input){var last=session.lastInterval||input,deltaTime=input.timeStamp-last.timeStamp,velocity,velocityX,velocityY,direction;if(input.eventType!=INPUT_CANCEL&&(deltaTime>COMPUTE_INTERVAL||last.velocity===undefined$1)){var deltaX=input.deltaX-last.deltaX;var deltaY=input.deltaY-last.deltaY;var v=getVelocity(deltaTime,deltaX,deltaY);velocityX=v.x;velocityY=v.y;velocity=abs(v.x)>abs(v.y)?v.x:v.y;direction=getDirection(deltaX,deltaY);session.lastInterval=input;}else{// use latest velocity info if it doesn't overtake a minimum period
  velocity=last.velocity;velocityX=last.velocityX;velocityY=last.velocityY;direction=last.direction;}input.velocity=velocity;input.velocityX=velocityX;input.velocityY=velocityY;input.direction=direction;}/**
       * create a simple clone from the input used for storage of firstInput and firstMultiple
       * @param {Object} input
       * @returns {Object} clonedInputData
       */function simpleCloneInputData(input){// make a simple copy of the pointers because we will get a reference if we don't
  // we only need clientXY for the calculations
  var pointers=[];var i=0;while(i<input.pointers.length){pointers[i]={clientX:round(input.pointers[i].clientX),clientY:round(input.pointers[i].clientY)};i++;}return {timeStamp:now(),pointers:pointers,center:getCenter(pointers),deltaX:input.deltaX,deltaY:input.deltaY};}/**
       * get the center of all the pointers
       * @param {Array} pointers
       * @return {Object} center contains `x` and `y` properties
       */function getCenter(pointers){var pointersLength=pointers.length;// no need to loop when only one touch
  if(pointersLength===1){return {x:round(pointers[0].clientX),y:round(pointers[0].clientY)};}var x=0,y=0,i=0;while(i<pointersLength){x+=pointers[i].clientX;y+=pointers[i].clientY;i++;}return {x:round(x/pointersLength),y:round(y/pointersLength)};}/**
       * calculate the velocity between two points. unit is in px per ms.
       * @param {Number} deltaTime
       * @param {Number} x
       * @param {Number} y
       * @return {Object} velocity `x` and `y`
       */function getVelocity(deltaTime,x,y){return {x:x/deltaTime||0,y:y/deltaTime||0};}/**
       * get the direction between two points
       * @param {Number} x
       * @param {Number} y
       * @return {Number} direction
       */function getDirection(x,y){if(x===y){return DIRECTION_NONE;}if(abs(x)>=abs(y)){return x<0?DIRECTION_LEFT:DIRECTION_RIGHT;}return y<0?DIRECTION_UP:DIRECTION_DOWN;}/**
       * calculate the absolute distance between two points
       * @param {Object} p1 {x, y}
       * @param {Object} p2 {x, y}
       * @param {Array} [props] containing x and y keys
       * @return {Number} distance
       */function getDistance(p1,p2,props){if(!props){props=PROPS_XY;}var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return Math.sqrt(x*x+y*y);}/**
       * calculate the angle between two coordinates
       * @param {Object} p1
       * @param {Object} p2
       * @param {Array} [props] containing x and y keys
       * @return {Number} angle
       */function getAngle(p1,p2,props){if(!props){props=PROPS_XY;}var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return Math.atan2(y,x)*180/Math.PI;}/**
       * calculate the rotation degrees between two pointersets
       * @param {Array} start array of pointers
       * @param {Array} end array of pointers
       * @return {Number} rotation
       */function getRotation(start,end){return getAngle(end[1],end[0],PROPS_CLIENT_XY)+getAngle(start[1],start[0],PROPS_CLIENT_XY);}/**
       * calculate the scale factor between two pointersets
       * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
       * @param {Array} start array of pointers
       * @param {Array} end array of pointers
       * @return {Number} scale
       */function getScale(start,end){return getDistance(end[0],end[1],PROPS_CLIENT_XY)/getDistance(start[0],start[1],PROPS_CLIENT_XY);}var MOUSE_INPUT_MAP={mousedown:INPUT_START,mousemove:INPUT_MOVE,mouseup:INPUT_END};var MOUSE_ELEMENT_EVENTS='mousedown';var MOUSE_WINDOW_EVENTS='mousemove mouseup';/**
       * Mouse events input
       * @constructor
       * @extends Input
       */function MouseInput(){this.evEl=MOUSE_ELEMENT_EVENTS;this.evWin=MOUSE_WINDOW_EVENTS;this.pressed=false;// mousedown state
  Input.apply(this,arguments);}inherit(MouseInput,Input,{/**
         * handle mouse events
         * @param {Object} ev
         */handler:function MEhandler(ev){var eventType=MOUSE_INPUT_MAP[ev.type];// on start we want to have the left mouse button down
  if(eventType&INPUT_START&&ev.button===0){this.pressed=true;}if(eventType&INPUT_MOVE&&ev.which!==1){eventType=INPUT_END;}// mouse must be down
  if(!this.pressed){return;}if(eventType&INPUT_END){this.pressed=false;}this.callback(this.manager,eventType,{pointers:[ev],changedPointers:[ev],pointerType:INPUT_TYPE_MOUSE,srcEvent:ev});}});var POINTER_INPUT_MAP={pointerdown:INPUT_START,pointermove:INPUT_MOVE,pointerup:INPUT_END,pointercancel:INPUT_CANCEL,pointerout:INPUT_CANCEL};// in IE10 the pointer types is defined as an enum
  var IE10_POINTER_TYPE_ENUM={2:INPUT_TYPE_TOUCH,3:INPUT_TYPE_PEN,4:INPUT_TYPE_MOUSE,5:INPUT_TYPE_KINECT// see https://twitter.com/jacobrossi/status/480596438489890816
  };var POINTER_ELEMENT_EVENTS='pointerdown';var POINTER_WINDOW_EVENTS='pointermove pointerup pointercancel';// IE10 has prefixed support, and case-sensitive
  if(window.MSPointerEvent&&!window.PointerEvent){POINTER_ELEMENT_EVENTS='MSPointerDown';POINTER_WINDOW_EVENTS='MSPointerMove MSPointerUp MSPointerCancel';}/**
       * Pointer events input
       * @constructor
       * @extends Input
       */function PointerEventInput(){this.evEl=POINTER_ELEMENT_EVENTS;this.evWin=POINTER_WINDOW_EVENTS;Input.apply(this,arguments);this.store=this.manager.session.pointerEvents=[];}inherit(PointerEventInput,Input,{/**
         * handle mouse events
         * @param {Object} ev
         */handler:function PEhandler(ev){var store=this.store;var removePointer=false;var eventTypeNormalized=ev.type.toLowerCase().replace('ms','');var eventType=POINTER_INPUT_MAP[eventTypeNormalized];var pointerType=IE10_POINTER_TYPE_ENUM[ev.pointerType]||ev.pointerType;var isTouch=pointerType==INPUT_TYPE_TOUCH;// get index of the event in the store
  var storeIndex=inArray(store,ev.pointerId,'pointerId');// start and mouse must be down
  if(eventType&INPUT_START&&(ev.button===0||isTouch)){if(storeIndex<0){store.push(ev);storeIndex=store.length-1;}}else if(eventType&(INPUT_END|INPUT_CANCEL)){removePointer=true;}// it not found, so the pointer hasn't been down (so it's probably a hover)
  if(storeIndex<0){return;}// update the event in the store
  store[storeIndex]=ev;this.callback(this.manager,eventType,{pointers:store,changedPointers:[ev],pointerType:pointerType,srcEvent:ev});if(removePointer){// remove from the store
  store.splice(storeIndex,1);}}});var SINGLE_TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:INPUT_MOVE,touchend:INPUT_END,touchcancel:INPUT_CANCEL};var SINGLE_TOUCH_TARGET_EVENTS='touchstart';var SINGLE_TOUCH_WINDOW_EVENTS='touchstart touchmove touchend touchcancel';/**
       * Touch events input
       * @constructor
       * @extends Input
       */function SingleTouchInput(){this.evTarget=SINGLE_TOUCH_TARGET_EVENTS;this.evWin=SINGLE_TOUCH_WINDOW_EVENTS;this.started=false;Input.apply(this,arguments);}inherit(SingleTouchInput,Input,{handler:function TEhandler(ev){var type=SINGLE_TOUCH_INPUT_MAP[ev.type];// should we handle the touch events?
  if(type===INPUT_START){this.started=true;}if(!this.started){return;}var touches=normalizeSingleTouches.call(this,ev,type);// when done, reset the started state
  if(type&(INPUT_END|INPUT_CANCEL)&&touches[0].length-touches[1].length===0){this.started=false;}this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:INPUT_TYPE_TOUCH,srcEvent:ev});}});/**
       * @this {TouchInput}
       * @param {Object} ev
       * @param {Number} type flag
       * @returns {undefined|Array} [all, changed]
       */function normalizeSingleTouches(ev,type){var all=toArray(ev.touches);var changed=toArray(ev.changedTouches);if(type&(INPUT_END|INPUT_CANCEL)){all=uniqueArray(all.concat(changed),'identifier',true);}return [all,changed];}var TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:INPUT_MOVE,touchend:INPUT_END,touchcancel:INPUT_CANCEL};var TOUCH_TARGET_EVENTS='touchstart touchmove touchend touchcancel';/**
       * Multi-user touch events input
       * @constructor
       * @extends Input
       */function TouchInput(){this.evTarget=TOUCH_TARGET_EVENTS;this.targetIds={};Input.apply(this,arguments);}inherit(TouchInput,Input,{handler:function MTEhandler(ev){var type=TOUCH_INPUT_MAP[ev.type];var touches=getTouches.call(this,ev,type);if(!touches){return;}this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:INPUT_TYPE_TOUCH,srcEvent:ev});}});/**
       * @this {TouchInput}
       * @param {Object} ev
       * @param {Number} type flag
       * @returns {undefined|Array} [all, changed]
       */function getTouches(ev,type){var allTouches=toArray(ev.touches);var targetIds=this.targetIds;// when there is only one touch, the process can be simplified
  if(type&(INPUT_START|INPUT_MOVE)&&allTouches.length===1){targetIds[allTouches[0].identifier]=true;return [allTouches,allTouches];}var i,targetTouches,changedTouches=toArray(ev.changedTouches),changedTargetTouches=[],target=this.target;// get target touches from touches
  targetTouches=allTouches.filter(function(touch){return hasParent(touch.target,target);});// collect touches
  if(type===INPUT_START){i=0;while(i<targetTouches.length){targetIds[targetTouches[i].identifier]=true;i++;}}// filter changed touches to only contain touches that exist in the collected target ids
  i=0;while(i<changedTouches.length){if(targetIds[changedTouches[i].identifier]){changedTargetTouches.push(changedTouches[i]);}// cleanup removed touches
  if(type&(INPUT_END|INPUT_CANCEL)){delete targetIds[changedTouches[i].identifier];}i++;}if(!changedTargetTouches.length){return;}return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
  uniqueArray(targetTouches.concat(changedTargetTouches),'identifier',true),changedTargetTouches];}/**
       * Combined touch and mouse input
       *
       * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
       * This because touch devices also emit mouse events while doing a touch.
       *
       * @constructor
       * @extends Input
       */var DEDUP_TIMEOUT=2500;var DEDUP_DISTANCE=25;function TouchMouseInput(){Input.apply(this,arguments);var handler=bindFn(this.handler,this);this.touch=new TouchInput(this.manager,handler);this.mouse=new MouseInput(this.manager,handler);this.primaryTouch=null;this.lastTouches=[];}inherit(TouchMouseInput,Input,{/**
         * handle mouse and touch events
         * @param {Hammer} manager
         * @param {String} inputEvent
         * @param {Object} inputData
         */handler:function TMEhandler(manager,inputEvent,inputData){var isTouch=inputData.pointerType==INPUT_TYPE_TOUCH,isMouse=inputData.pointerType==INPUT_TYPE_MOUSE;if(isMouse&&inputData.sourceCapabilities&&inputData.sourceCapabilities.firesTouchEvents){return;}// when we're in a touch event, record touches to  de-dupe synthetic mouse event
  if(isTouch){recordTouches.call(this,inputEvent,inputData);}else if(isMouse&&isSyntheticEvent.call(this,inputData)){return;}this.callback(manager,inputEvent,inputData);},/**
         * remove the event listeners
         */destroy:function destroy(){this.touch.destroy();this.mouse.destroy();}});function recordTouches(eventType,eventData){if(eventType&INPUT_START){this.primaryTouch=eventData.changedPointers[0].identifier;setLastTouch.call(this,eventData);}else if(eventType&(INPUT_END|INPUT_CANCEL)){setLastTouch.call(this,eventData);}}function setLastTouch(eventData){var touch=eventData.changedPointers[0];if(touch.identifier===this.primaryTouch){var lastTouch={x:touch.clientX,y:touch.clientY};this.lastTouches.push(lastTouch);var lts=this.lastTouches;var removeLastTouch=function(){var i=lts.indexOf(lastTouch);if(i>-1){lts.splice(i,1);}};setTimeout(removeLastTouch,DEDUP_TIMEOUT);}}function isSyntheticEvent(eventData){var x=eventData.srcEvent.clientX,y=eventData.srcEvent.clientY;for(var i=0;i<this.lastTouches.length;i++){var t=this.lastTouches[i];var dx=Math.abs(x-t.x),dy=Math.abs(y-t.y);if(dx<=DEDUP_DISTANCE&&dy<=DEDUP_DISTANCE){return true;}}return false;}var PREFIXED_TOUCH_ACTION=prefixed(TEST_ELEMENT.style,'touchAction');var NATIVE_TOUCH_ACTION=PREFIXED_TOUCH_ACTION!==undefined$1;// magical touchAction value
  var TOUCH_ACTION_COMPUTE='compute';var TOUCH_ACTION_AUTO='auto';var TOUCH_ACTION_MANIPULATION='manipulation';// not implemented
  var TOUCH_ACTION_NONE='none';var TOUCH_ACTION_PAN_X='pan-x';var TOUCH_ACTION_PAN_Y='pan-y';var TOUCH_ACTION_MAP=getTouchActionProps();/**
       * Touch Action
       * sets the touchAction property or uses the js alternative
       * @param {Manager} manager
       * @param {String} value
       * @constructor
       */function TouchAction(manager,value){this.manager=manager;this.set(value);}TouchAction.prototype={/**
         * set the touchAction value on the element or enable the polyfill
         * @param {String} value
         */set:function(value){// find out the touch-action by the event handlers
  if(value==TOUCH_ACTION_COMPUTE){value=this.compute();}if(NATIVE_TOUCH_ACTION&&this.manager.element.style&&TOUCH_ACTION_MAP[value]){this.manager.element.style[PREFIXED_TOUCH_ACTION]=value;}this.actions=value.toLowerCase().trim();},/**
         * just re-set the touchAction value
         */update:function(){this.set(this.manager.options.touchAction);},/**
         * compute the value for the touchAction property based on the recognizer's settings
         * @returns {String} value
         */compute:function(){var actions=[];each(this.manager.recognizers,function(recognizer){if(boolOrFn(recognizer.options.enable,[recognizer])){actions=actions.concat(recognizer.getTouchAction());}});return cleanTouchActions(actions.join(' '));},/**
         * this method is called on each input cycle and provides the preventing of the browser behavior
         * @param {Object} input
         */preventDefaults:function(input){var srcEvent=input.srcEvent;var direction=input.offsetDirection;// if the touch action did prevented once this session
  if(this.manager.session.prevented){srcEvent.preventDefault();return;}var actions=this.actions;var hasNone=inStr(actions,TOUCH_ACTION_NONE)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];var hasPanY=inStr(actions,TOUCH_ACTION_PAN_Y)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];var hasPanX=inStr(actions,TOUCH_ACTION_PAN_X)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];if(hasNone){//do not prevent defaults if this is a tap gesture
  var isTapPointer=input.pointers.length===1;var isTapMovement=input.distance<2;var isTapTouchTime=input.deltaTime<250;if(isTapPointer&&isTapMovement&&isTapTouchTime){return;}}if(hasPanX&&hasPanY){// `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
  return;}if(hasNone||hasPanY&&direction&DIRECTION_HORIZONTAL||hasPanX&&direction&DIRECTION_VERTICAL){return this.preventSrc(srcEvent);}},/**
         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
         * @param {Object} srcEvent
         */preventSrc:function(srcEvent){this.manager.session.prevented=true;srcEvent.preventDefault();}};/**
       * when the touchActions are collected they are not a valid value, so we need to clean things up. *
       * @param {String} actions
       * @returns {*}
       */function cleanTouchActions(actions){// none
  if(inStr(actions,TOUCH_ACTION_NONE)){return TOUCH_ACTION_NONE;}var hasPanX=inStr(actions,TOUCH_ACTION_PAN_X);var hasPanY=inStr(actions,TOUCH_ACTION_PAN_Y);// if both pan-x and pan-y are set (different recognizers
  // for different directions, e.g. horizontal pan but vertical swipe?)
  // we need none (as otherwise with pan-x pan-y combined none of these
  // recognizers will work, since the browser would handle all panning
  if(hasPanX&&hasPanY){return TOUCH_ACTION_NONE;}// pan-x OR pan-y
  if(hasPanX||hasPanY){return hasPanX?TOUCH_ACTION_PAN_X:TOUCH_ACTION_PAN_Y;}// manipulation
  if(inStr(actions,TOUCH_ACTION_MANIPULATION)){return TOUCH_ACTION_MANIPULATION;}return TOUCH_ACTION_AUTO;}function getTouchActionProps(){if(!NATIVE_TOUCH_ACTION){return false;}var touchMap={};var cssSupports=window.CSS&&window.CSS.supports;['auto','manipulation','pan-y','pan-x','pan-x pan-y','none'].forEach(function(val){// If css.supports is not supported but there is native touch-action assume it supports
  // all values. This is the case for IE 10 and 11.
  touchMap[val]=cssSupports?window.CSS.supports('touch-action',val):true;});return touchMap;}/**
       * Recognizer flow explained; *
       * All recognizers have the initial state of POSSIBLE when a input session starts.
       * The definition of a input session is from the first input until the last input, with all it's movement in it. *
       * Example session for mouse-input: mousedown -> mousemove -> mouseup
       *
       * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
       * which determines with state it should be.
       *
       * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
       * POSSIBLE to give it another change on the next cycle.
       *
       *               Possible
       *                  |
       *            +-----+---------------+
       *            |                     |
       *      +-----+-----+               |
       *      |           |               |
       *   Failed      Cancelled          |
       *                          +-------+------+
       *                          |              |
       *                      Recognized       Began
       *                                         |
       *                                      Changed
       *                                         |
       *                                  Ended/Recognized
       */var STATE_POSSIBLE=1;var STATE_BEGAN=2;var STATE_CHANGED=4;var STATE_ENDED=8;var STATE_RECOGNIZED=STATE_ENDED;var STATE_CANCELLED=16;var STATE_FAILED=32;/**
       * Recognizer
       * Every recognizer needs to extend from this class.
       * @constructor
       * @param {Object} options
       */function Recognizer(options){this.options=assign({},this.defaults,options||{});this.id=uniqueId();this.manager=null;// default is enable true
  this.options.enable=ifUndefined(this.options.enable,true);this.state=STATE_POSSIBLE;this.simultaneous={};this.requireFail=[];}Recognizer.prototype={/**
         * @virtual
         * @type {Object}
         */defaults:{},/**
         * set options
         * @param {Object} options
         * @return {Recognizer}
         */set:function(options){assign(this.options,options);// also update the touchAction, in case something changed about the directions/enabled state
  this.manager&&this.manager.touchAction.update();return this;},/**
         * recognize simultaneous with an other recognizer.
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */recognizeWith:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'recognizeWith',this)){return this;}var simultaneous=this.simultaneous;otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);if(!simultaneous[otherRecognizer.id]){simultaneous[otherRecognizer.id]=otherRecognizer;otherRecognizer.recognizeWith(this);}return this;},/**
         * drop the simultaneous link. it doesnt remove the link on the other recognizer.
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */dropRecognizeWith:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'dropRecognizeWith',this)){return this;}otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);delete this.simultaneous[otherRecognizer.id];return this;},/**
         * recognizer can only run when an other is failing
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */requireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'requireFailure',this)){return this;}var requireFail=this.requireFail;otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);if(inArray(requireFail,otherRecognizer)===-1){requireFail.push(otherRecognizer);otherRecognizer.requireFailure(this);}return this;},/**
         * drop the requireFailure link. it does not remove the link on the other recognizer.
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */dropRequireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'dropRequireFailure',this)){return this;}otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);var index=inArray(this.requireFail,otherRecognizer);if(index>-1){this.requireFail.splice(index,1);}return this;},/**
         * has require failures boolean
         * @returns {boolean}
         */hasRequireFailures:function(){return this.requireFail.length>0;},/**
         * if the recognizer can recognize simultaneous with an other recognizer
         * @param {Recognizer} otherRecognizer
         * @returns {Boolean}
         */canRecognizeWith:function(otherRecognizer){return !!this.simultaneous[otherRecognizer.id];},/**
         * You should use `tryEmit` instead of `emit` directly to check
         * that all the needed recognizers has failed before emitting.
         * @param {Object} input
         */emit:function(input){var self=this;var state=this.state;function emit(event){self.manager.emit(event,input);}// 'panstart' and 'panmove'
  if(state<STATE_ENDED){emit(self.options.event+stateStr(state));}emit(self.options.event);// simple 'eventName' events
  if(input.additionalEvent){// additional event(panleft, panright, pinchin, pinchout...)
  emit(input.additionalEvent);}// panend and pancancel
  if(state>=STATE_ENDED){emit(self.options.event+stateStr(state));}},/**
         * Check that all the require failure recognizers has failed,
         * if true, it emits a gesture event,
         * otherwise, setup the state to FAILED.
         * @param {Object} input
         */tryEmit:function(input){if(this.canEmit()){return this.emit(input);}// it's failing anyway
  this.state=STATE_FAILED;},/**
         * can we emit?
         * @returns {boolean}
         */canEmit:function(){var i=0;while(i<this.requireFail.length){if(!(this.requireFail[i].state&(STATE_FAILED|STATE_POSSIBLE))){return false;}i++;}return true;},/**
         * update the recognizer
         * @param {Object} inputData
         */recognize:function(inputData){// make a new copy of the inputData
  // so we can change the inputData without messing up the other recognizers
  var inputDataClone=assign({},inputData);// is is enabled and allow recognizing?
  if(!boolOrFn(this.options.enable,[this,inputDataClone])){this.reset();this.state=STATE_FAILED;return;}// reset when we've reached the end
  if(this.state&(STATE_RECOGNIZED|STATE_CANCELLED|STATE_FAILED)){this.state=STATE_POSSIBLE;}this.state=this.process(inputDataClone);// the recognizer has recognized a gesture
  // so trigger an event
  if(this.state&(STATE_BEGAN|STATE_CHANGED|STATE_ENDED|STATE_CANCELLED)){this.tryEmit(inputDataClone);}},/**
         * return the state of the recognizer
         * the actual recognizing happens in this method
         * @virtual
         * @param {Object} inputData
         * @returns {Const} STATE
         */process:function(inputData){},// jshint ignore:line
  /**
         * return the preferred touch-action
         * @virtual
         * @returns {Array}
         */getTouchAction:function(){},/**
         * called when the gesture isn't allowed to recognize
         * like when another is being recognized or it is disabled
         * @virtual
         */reset:function(){}};/**
       * get a usable string, used as event postfix
       * @param {Const} state
       * @returns {String} state
       */function stateStr(state){if(state&STATE_CANCELLED){return 'cancel';}else if(state&STATE_ENDED){return 'end';}else if(state&STATE_CHANGED){return 'move';}else if(state&STATE_BEGAN){return 'start';}return '';}/**
       * direction cons to string
       * @param {Const} direction
       * @returns {String}
       */function directionStr(direction){if(direction==DIRECTION_DOWN){return 'down';}else if(direction==DIRECTION_UP){return 'up';}else if(direction==DIRECTION_LEFT){return 'left';}else if(direction==DIRECTION_RIGHT){return 'right';}return '';}/**
       * get a recognizer by name if it is bound to a manager
       * @param {Recognizer|String} otherRecognizer
       * @param {Recognizer} recognizer
       * @returns {Recognizer}
       */function getRecognizerByNameIfManager(otherRecognizer,recognizer){var manager=recognizer.manager;if(manager){return manager.get(otherRecognizer);}return otherRecognizer;}/**
       * This recognizer is just used as a base for the simple attribute recognizers.
       * @constructor
       * @extends Recognizer
       */function AttrRecognizer(){Recognizer.apply(this,arguments);}inherit(AttrRecognizer,Recognizer,{/**
         * @namespace
         * @memberof AttrRecognizer
         */defaults:{/**
           * @type {Number}
           * @default 1
           */pointers:1},/**
         * Used to check if it the recognizer receives valid input, like input.distance > 10.
         * @memberof AttrRecognizer
         * @param {Object} input
         * @returns {Boolean} recognized
         */attrTest:function(input){var optionPointers=this.options.pointers;return optionPointers===0||input.pointers.length===optionPointers;},/**
         * Process the input and return the state for the recognizer
         * @memberof AttrRecognizer
         * @param {Object} input
         * @returns {*} State
         */process:function(input){var state=this.state;var eventType=input.eventType;var isRecognized=state&(STATE_BEGAN|STATE_CHANGED);var isValid=this.attrTest(input);// on cancel input and we've recognized before, return STATE_CANCELLED
  if(isRecognized&&(eventType&INPUT_CANCEL||!isValid)){return state|STATE_CANCELLED;}else if(isRecognized||isValid){if(eventType&INPUT_END){return state|STATE_ENDED;}else if(!(state&STATE_BEGAN)){return STATE_BEGAN;}return state|STATE_CHANGED;}return STATE_FAILED;}});/**
       * Pan
       * Recognized when the pointer is down and moved in the allowed direction.
       * @constructor
       * @extends AttrRecognizer
       */function PanRecognizer(){AttrRecognizer.apply(this,arguments);this.pX=null;this.pY=null;}inherit(PanRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof PanRecognizer
         */defaults:{event:'pan',threshold:10,pointers:1,direction:DIRECTION_ALL},getTouchAction:function(){var direction=this.options.direction;var actions=[];if(direction&DIRECTION_HORIZONTAL){actions.push(TOUCH_ACTION_PAN_Y);}if(direction&DIRECTION_VERTICAL){actions.push(TOUCH_ACTION_PAN_X);}return actions;},directionTest:function(input){var options=this.options;var hasMoved=true;var distance=input.distance;var direction=input.direction;var x=input.deltaX;var y=input.deltaY;// lock to axis?
  if(!(direction&options.direction)){if(options.direction&DIRECTION_HORIZONTAL){direction=x===0?DIRECTION_NONE:x<0?DIRECTION_LEFT:DIRECTION_RIGHT;hasMoved=x!=this.pX;distance=Math.abs(input.deltaX);}else{direction=y===0?DIRECTION_NONE:y<0?DIRECTION_UP:DIRECTION_DOWN;hasMoved=y!=this.pY;distance=Math.abs(input.deltaY);}}input.direction=direction;return hasMoved&&distance>options.threshold&&direction&options.direction;},attrTest:function(input){return AttrRecognizer.prototype.attrTest.call(this,input)&&(this.state&STATE_BEGAN||!(this.state&STATE_BEGAN)&&this.directionTest(input));},emit:function(input){this.pX=input.deltaX;this.pY=input.deltaY;var direction=directionStr(input.direction);if(direction){input.additionalEvent=this.options.event+direction;}this._super.emit.call(this,input);}});/**
       * Pinch
       * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
       * @constructor
       * @extends AttrRecognizer
       */function PinchRecognizer(){AttrRecognizer.apply(this,arguments);}inherit(PinchRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof PinchRecognizer
         */defaults:{event:'pinch',threshold:0,pointers:2},getTouchAction:function(){return [TOUCH_ACTION_NONE];},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.scale-1)>this.options.threshold||this.state&STATE_BEGAN);},emit:function(input){if(input.scale!==1){var inOut=input.scale<1?'in':'out';input.additionalEvent=this.options.event+inOut;}this._super.emit.call(this,input);}});/**
       * Press
       * Recognized when the pointer is down for x ms without any movement.
       * @constructor
       * @extends Recognizer
       */function PressRecognizer(){Recognizer.apply(this,arguments);this._timer=null;this._input=null;}inherit(PressRecognizer,Recognizer,{/**
         * @namespace
         * @memberof PressRecognizer
         */defaults:{event:'press',pointers:1,time:251,// minimal time of the pointer to be pressed
  threshold:9// a minimal movement is ok, but keep it low
  },getTouchAction:function(){return [TOUCH_ACTION_AUTO];},process:function(input){var options=this.options;var validPointers=input.pointers.length===options.pointers;var validMovement=input.distance<options.threshold;var validTime=input.deltaTime>options.time;this._input=input;// we only allow little movement
  // and we've reached an end event, so a tap is possible
  if(!validMovement||!validPointers||input.eventType&(INPUT_END|INPUT_CANCEL)&&!validTime){this.reset();}else if(input.eventType&INPUT_START){this.reset();this._timer=setTimeoutContext(function(){this.state=STATE_RECOGNIZED;this.tryEmit();},options.time,this);}else if(input.eventType&INPUT_END){return STATE_RECOGNIZED;}return STATE_FAILED;},reset:function(){clearTimeout(this._timer);},emit:function(input){if(this.state!==STATE_RECOGNIZED){return;}if(input&&input.eventType&INPUT_END){this.manager.emit(this.options.event+'up',input);}else{this._input.timeStamp=now();this.manager.emit(this.options.event,this._input);}}});/**
       * Rotate
       * Recognized when two or more pointer are moving in a circular motion.
       * @constructor
       * @extends AttrRecognizer
       */function RotateRecognizer(){AttrRecognizer.apply(this,arguments);}inherit(RotateRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof RotateRecognizer
         */defaults:{event:'rotate',threshold:0,pointers:2},getTouchAction:function(){return [TOUCH_ACTION_NONE];},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.rotation)>this.options.threshold||this.state&STATE_BEGAN);}});/**
       * Swipe
       * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
       * @constructor
       * @extends AttrRecognizer
       */function SwipeRecognizer(){AttrRecognizer.apply(this,arguments);}inherit(SwipeRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof SwipeRecognizer
         */defaults:{event:'swipe',threshold:10,velocity:0.3,direction:DIRECTION_HORIZONTAL|DIRECTION_VERTICAL,pointers:1},getTouchAction:function(){return PanRecognizer.prototype.getTouchAction.call(this);},attrTest:function(input){var direction=this.options.direction;var velocity;if(direction&(DIRECTION_HORIZONTAL|DIRECTION_VERTICAL)){velocity=input.overallVelocity;}else if(direction&DIRECTION_HORIZONTAL){velocity=input.overallVelocityX;}else if(direction&DIRECTION_VERTICAL){velocity=input.overallVelocityY;}return this._super.attrTest.call(this,input)&&direction&input.offsetDirection&&input.distance>this.options.threshold&&input.maxPointers==this.options.pointers&&abs(velocity)>this.options.velocity&&input.eventType&INPUT_END;},emit:function(input){var direction=directionStr(input.offsetDirection);if(direction){this.manager.emit(this.options.event+direction,input);}this.manager.emit(this.options.event,input);}});/**
       * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
       * between the given interval and position. The delay option can be used to recognize multi-taps without firing
       * a single tap.
       *
       * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
       * multi-taps being recognized.
       * @constructor
       * @extends Recognizer
       */function TapRecognizer(){Recognizer.apply(this,arguments);// previous time and center,
  // used for tap counting
  this.pTime=false;this.pCenter=false;this._timer=null;this._input=null;this.count=0;}inherit(TapRecognizer,Recognizer,{/**
         * @namespace
         * @memberof PinchRecognizer
         */defaults:{event:'tap',pointers:1,taps:1,interval:300,// max time between the multi-tap taps
  time:250,// max time of the pointer to be down (like finger on the screen)
  threshold:9,// a minimal movement is ok, but keep it low
  posThreshold:10// a multi-tap can be a bit off the initial position
  },getTouchAction:function(){return [TOUCH_ACTION_MANIPULATION];},process:function(input){var options=this.options;var validPointers=input.pointers.length===options.pointers;var validMovement=input.distance<options.threshold;var validTouchTime=input.deltaTime<options.time;this.reset();if(input.eventType&INPUT_START&&this.count===0){return this.failTimeout();}// we only allow little movement
  // and we've reached an end event, so a tap is possible
  if(validMovement&&validTouchTime&&validPointers){if(input.eventType!=INPUT_END){return this.failTimeout();}var validInterval=this.pTime?input.timeStamp-this.pTime<options.interval:true;var validMultiTap=!this.pCenter||getDistance(this.pCenter,input.center)<options.posThreshold;this.pTime=input.timeStamp;this.pCenter=input.center;if(!validMultiTap||!validInterval){this.count=1;}else{this.count+=1;}this._input=input;// if tap count matches we have recognized it,
  // else it has began recognizing...
  var tapCount=this.count%options.taps;if(tapCount===0){// no failing requirements, immediately trigger the tap event
  // or wait as long as the multitap interval to trigger
  if(!this.hasRequireFailures()){return STATE_RECOGNIZED;}else{this._timer=setTimeoutContext(function(){this.state=STATE_RECOGNIZED;this.tryEmit();},options.interval,this);return STATE_BEGAN;}}}return STATE_FAILED;},failTimeout:function(){this._timer=setTimeoutContext(function(){this.state=STATE_FAILED;},this.options.interval,this);return STATE_FAILED;},reset:function(){clearTimeout(this._timer);},emit:function(){if(this.state==STATE_RECOGNIZED){this._input.tapCount=this.count;this.manager.emit(this.options.event,this._input);}}});/**
       * Simple way to create a manager with a default set of recognizers.
       * @param {HTMLElement} element
       * @param {Object} [options]
       * @constructor
       */function Hammer(element,options){options=options||{};options.recognizers=ifUndefined(options.recognizers,Hammer.defaults.preset);return new Manager(element,options);}/**
       * @const {string}
       */Hammer.VERSION='2.0.7';/**
       * default settings
       * @namespace
       */Hammer.defaults={/**
         * set if DOM events are being triggered.
         * But this is slower and unused by simple implementations, so disabled by default.
         * @type {Boolean}
         * @default false
         */domEvents:false,/**
         * The value for the touchAction property/fallback.
         * When set to `compute` it will magically set the correct value based on the added recognizers.
         * @type {String}
         * @default compute
         */touchAction:TOUCH_ACTION_COMPUTE,/**
         * @type {Boolean}
         * @default true
         */enable:true,/**
         * EXPERIMENTAL FEATURE -- can be removed/changed
         * Change the parent input target element.
         * If Null, then it is being set the to main element.
         * @type {Null|EventTarget}
         * @default null
         */inputTarget:null,/**
         * force an input class
         * @type {Null|Function}
         * @default null
         */inputClass:null,/**
         * Default recognizer setup when calling `Hammer()`
         * When creating a new Manager these will be skipped.
         * @type {Array}
         */preset:[// RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
  [RotateRecognizer,{enable:false}],[PinchRecognizer,{enable:false},['rotate']],[SwipeRecognizer,{direction:DIRECTION_HORIZONTAL}],[PanRecognizer,{direction:DIRECTION_HORIZONTAL},['swipe']],[TapRecognizer],[TapRecognizer,{event:'doubletap',taps:2},['tap']],[PressRecognizer]],/**
         * Some CSS properties can be used to improve the working of Hammer.
         * Add them to this method and they will be set when creating a new Manager.
         * @namespace
         */cssProps:{/**
           * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
           * @type {String}
           * @default 'none'
           */userSelect:'none',/**
           * Disable the Windows Phone grippers when pressing an element.
           * @type {String}
           * @default 'none'
           */touchSelect:'none',/**
           * Disables the default callout shown when you touch and hold a touch target.
           * On iOS, when you touch and hold a touch target such as a link, Safari displays
           * a callout containing information about the link. This property allows you to disable that callout.
           * @type {String}
           * @default 'none'
           */touchCallout:'none',/**
           * Specifies whether zooming is enabled. Used by IE10>
           * @type {String}
           * @default 'none'
           */contentZooming:'none',/**
           * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
           * @type {String}
           * @default 'none'
           */userDrag:'none',/**
           * Overrides the highlight color shown when the user taps a link or a JavaScript
           * clickable element in iOS. This property obeys the alpha value, if specified.
           * @type {String}
           * @default 'rgba(0,0,0,0)'
           */tapHighlightColor:'rgba(0,0,0,0)'}};var STOP=1;var FORCED_STOP=2;/**
       * Manager
       * @param {HTMLElement} element
       * @param {Object} [options]
       * @constructor
       */function Manager(element,options){this.options=assign({},Hammer.defaults,options||{});this.options.inputTarget=this.options.inputTarget||element;this.handlers={};this.session={};this.recognizers=[];this.oldCssProps={};this.element=element;this.input=createInputInstance(this);this.touchAction=new TouchAction(this,this.options.touchAction);toggleCssProps(this,true);each(this.options.recognizers,function(item){var recognizer=this.add(new item[0](item[1]));item[2]&&recognizer.recognizeWith(item[2]);item[3]&&recognizer.requireFailure(item[3]);},this);}Manager.prototype={/**
         * set options
         * @param {Object} options
         * @returns {Manager}
         */set:function(options){assign(this.options,options);// Options that need a little more setup
  if(options.touchAction){this.touchAction.update();}if(options.inputTarget){// Clean up existing event listeners and reinitialize
  this.input.destroy();this.input.target=options.inputTarget;this.input.init();}return this;},/**
         * stop recognizing for this session.
         * This session will be discarded, when a new [input]start event is fired.
         * When forced, the recognizer cycle is stopped immediately.
         * @param {Boolean} [force]
         */stop:function(force){this.session.stopped=force?FORCED_STOP:STOP;},/**
         * run the recognizers!
         * called by the inputHandler function on every movement of the pointers (touches)
         * it walks through all the recognizers and tries to detect the gesture that is being made
         * @param {Object} inputData
         */recognize:function(inputData){var session=this.session;if(session.stopped){return;}// run the touch-action polyfill
  this.touchAction.preventDefaults(inputData);var recognizer;var recognizers=this.recognizers;// this holds the recognizer that is being recognized.
  // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
  // if no recognizer is detecting a thing, it is set to `null`
  var curRecognizer=session.curRecognizer;// reset when the last recognizer is recognized
  // or when we're in a new session
  if(!curRecognizer||curRecognizer&&curRecognizer.state&STATE_RECOGNIZED){curRecognizer=session.curRecognizer=null;}var i=0;while(i<recognizers.length){recognizer=recognizers[i];// find out if we are allowed try to recognize the input for this one.
  // 1.   allow if the session is NOT forced stopped (see the .stop() method)
  // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
  //      that is being recognized.
  // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
  //      this can be setup with the `recognizeWith()` method on the recognizer.
  if(session.stopped!==FORCED_STOP&&(// 1
  !curRecognizer||recognizer==curRecognizer||// 2
  recognizer.canRecognizeWith(curRecognizer))){// 3
  recognizer.recognize(inputData);}else{recognizer.reset();}// if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
  // current active recognizer. but only if we don't already have an active recognizer
  if(!curRecognizer&&recognizer.state&(STATE_BEGAN|STATE_CHANGED|STATE_ENDED)){curRecognizer=session.curRecognizer=recognizer;}i++;}},/**
         * get a recognizer by its event name.
         * @param {Recognizer|String} recognizer
         * @returns {Recognizer|Null}
         */get:function(recognizer){if(recognizer instanceof Recognizer){return recognizer;}var recognizers=this.recognizers;for(var i=0;i<recognizers.length;i++){if(recognizers[i].options.event==recognizer){return recognizers[i];}}return null;},/**
         * add a recognizer to the manager
         * existing recognizers with the same event name will be removed
         * @param {Recognizer} recognizer
         * @returns {Recognizer|Manager}
         */add:function(recognizer){if(invokeArrayArg(recognizer,'add',this)){return this;}// remove existing
  var existing=this.get(recognizer.options.event);if(existing){this.remove(existing);}this.recognizers.push(recognizer);recognizer.manager=this;this.touchAction.update();return recognizer;},/**
         * remove a recognizer by name or instance
         * @param {Recognizer|String} recognizer
         * @returns {Manager}
         */remove:function(recognizer){if(invokeArrayArg(recognizer,'remove',this)){return this;}recognizer=this.get(recognizer);// let's make sure this recognizer exists
  if(recognizer){var recognizers=this.recognizers;var index=inArray(recognizers,recognizer);if(index!==-1){recognizers.splice(index,1);this.touchAction.update();}}return this;},/**
         * bind event
         * @param {String} events
         * @param {Function} handler
         * @returns {EventEmitter} this
         */on:function(events,handler){if(events===undefined$1){return;}if(handler===undefined$1){return;}var handlers=this.handlers;each(splitStr(events),function(event){handlers[event]=handlers[event]||[];handlers[event].push(handler);});return this;},/**
         * unbind event, leave emit blank to remove all handlers
         * @param {String} events
         * @param {Function} [handler]
         * @returns {EventEmitter} this
         */off:function(events,handler){if(events===undefined$1){return;}var handlers=this.handlers;each(splitStr(events),function(event){if(!handler){delete handlers[event];}else{handlers[event]&&handlers[event].splice(inArray(handlers[event],handler),1);}});return this;},/**
         * emit event to the listeners
         * @param {String} event
         * @param {Object} data
         */emit:function(event,data){// we also want to trigger dom events
  if(this.options.domEvents){triggerDomEvent(event,data);}// no handlers, so skip it all
  var handlers=this.handlers[event]&&this.handlers[event].slice();if(!handlers||!handlers.length){return;}data.type=event;data.preventDefault=function(){data.srcEvent.preventDefault();};var i=0;while(i<handlers.length){handlers[i](data);i++;}},/**
         * destroy the manager and unbinds all events
         * it doesn't unbind dom events, that is the user own responsibility
         */destroy:function(){this.element&&toggleCssProps(this,false);this.handlers={};this.session={};this.input.destroy();this.element=null;}};/**
       * add/remove the css properties as defined in manager.options.cssProps
       * @param {Manager} manager
       * @param {Boolean} add
       */function toggleCssProps(manager,add){var element=manager.element;if(!element.style){return;}var prop;each(manager.options.cssProps,function(value,name){prop=prefixed(element.style,name);if(add){manager.oldCssProps[prop]=element.style[prop];element.style[prop]=value;}else{element.style[prop]=manager.oldCssProps[prop]||'';}});if(!add){manager.oldCssProps={};}}/**
       * trigger dom event
       * @param {String} event
       * @param {Object} data
       */function triggerDomEvent(event,data){var gestureEvent=document.createEvent('Event');gestureEvent.initEvent(event,true,true);gestureEvent.gesture=data;data.target.dispatchEvent(gestureEvent);}assign(Hammer,{INPUT_START:INPUT_START,INPUT_MOVE:INPUT_MOVE,INPUT_END:INPUT_END,INPUT_CANCEL:INPUT_CANCEL,STATE_POSSIBLE:STATE_POSSIBLE,STATE_BEGAN:STATE_BEGAN,STATE_CHANGED:STATE_CHANGED,STATE_ENDED:STATE_ENDED,STATE_RECOGNIZED:STATE_RECOGNIZED,STATE_CANCELLED:STATE_CANCELLED,STATE_FAILED:STATE_FAILED,DIRECTION_NONE:DIRECTION_NONE,DIRECTION_LEFT:DIRECTION_LEFT,DIRECTION_RIGHT:DIRECTION_RIGHT,DIRECTION_UP:DIRECTION_UP,DIRECTION_DOWN:DIRECTION_DOWN,DIRECTION_HORIZONTAL:DIRECTION_HORIZONTAL,DIRECTION_VERTICAL:DIRECTION_VERTICAL,DIRECTION_ALL:DIRECTION_ALL,Manager:Manager,Input:Input,TouchAction:TouchAction,TouchInput:TouchInput,MouseInput:MouseInput,PointerEventInput:PointerEventInput,TouchMouseInput:TouchMouseInput,SingleTouchInput:SingleTouchInput,Recognizer:Recognizer,AttrRecognizer:AttrRecognizer,Tap:TapRecognizer,Pan:PanRecognizer,Swipe:SwipeRecognizer,Pinch:PinchRecognizer,Rotate:RotateRecognizer,Press:PressRecognizer,on:addEventListeners,off:removeEventListeners,each:each,merge:merge,extend:extend,assign:assign,inherit:inherit,bindFn:bindFn,prefixed:prefixed});// this prevents errors when Hammer is loaded in the presence of an AMD
  //  style loader but by script tag, not by the loader.
  var freeGlobal=typeof window!=='undefined'?window:typeof self!=='undefined'?self:{};// jshint ignore:line
  freeGlobal.Hammer=Hammer;if(typeof undefined$1==='function'&&undefined$1.amd){undefined$1(function(){return Hammer;});}else if(module.exports){module.exports=Hammer;}else{window[exportName]=Hammer;}})(window,document,'Hammer');});var hammer$1$1=createCommonjsModule$1$3(function(module){/**
     * Setup a mock hammer.js object, for unit testing.
     *
     * Inspiration: https://github.com/uber/deck.gl/pull/658
     *
     * @returns {{on: noop, off: noop, destroy: noop, emit: noop, get: get}}
     */function hammerMock(){var noop=function noop(){};return {on:noop,off:noop,destroy:noop,emit:noop,get:function get(m){//eslint-disable-line no-unused-vars
  return {set:noop};}};}if(typeof window!=='undefined'){var propagating$1=propagating;var Hammer=window['Hammer']||hammer$2;module.exports=propagating$1(Hammer,{preventDefault:'mouse'});}else{module.exports=function(){// hammer.js is only available in a browser, not in node.js. Replacing it with a mock object.
  return hammerMock();};}});var keycharm$2=createCommonjsModule$1$3(function(module,exports){/**
     * Created by Alex on 11/6/2014.
     */ // https://github.com/umdjs/umd/blob/master/returnExports.js#L40-L60
  // if the module has no dependencies, the above pattern can be simplified to
  (function(root,factory){{// Node. Does not work with strict CommonJS, but
  // only CommonJS-like environments that support module.exports,
  // like Node.
  module.exports=factory();}})(commonjsGlobal$1$2,function(){function keycharm(options){var preventDefault=options&&options.preventDefault||false;var container=options&&options.container||window;var _exportFunctions={};var _bound={keydown:{},keyup:{}};var _keys={};var i;// a - z
  for(i=97;i<=122;i++){_keys[String.fromCharCode(i)]={code:65+(i-97),shift:false};}// A - Z
  for(i=65;i<=90;i++){_keys[String.fromCharCode(i)]={code:i,shift:true};}// 0 - 9
  for(i=0;i<=9;i++){_keys[''+i]={code:48+i,shift:false};}// F1 - F12
  for(i=1;i<=12;i++){_keys['F'+i]={code:111+i,shift:false};}// num0 - num9
  for(i=0;i<=9;i++){_keys['num'+i]={code:96+i,shift:false};}// numpad misc
  _keys['num*']={code:106,shift:false};_keys['num+']={code:107,shift:false};_keys['num-']={code:109,shift:false};_keys['num/']={code:111,shift:false};_keys['num.']={code:110,shift:false};// arrows
  _keys['left']={code:37,shift:false};_keys['up']={code:38,shift:false};_keys['right']={code:39,shift:false};_keys['down']={code:40,shift:false};// extra keys
  _keys['space']={code:32,shift:false};_keys['enter']={code:13,shift:false};_keys['shift']={code:16,shift:undefined};_keys['esc']={code:27,shift:false};_keys['backspace']={code:8,shift:false};_keys['tab']={code:9,shift:false};_keys['ctrl']={code:17,shift:false};_keys['alt']={code:18,shift:false};_keys['delete']={code:46,shift:false};_keys['pageup']={code:33,shift:false};_keys['pagedown']={code:34,shift:false};// symbols
  _keys['=']={code:187,shift:false};_keys['-']={code:189,shift:false};_keys[']']={code:221,shift:false};_keys['[']={code:219,shift:false};var down=function(event){handleEvent(event,'keydown');};var up=function(event){handleEvent(event,'keyup');};// handle the actualy bound key with the event
  var handleEvent=function(event,type){if(_bound[type][event.keyCode]!==undefined){var bound=_bound[type][event.keyCode];for(var i=0;i<bound.length;i++){if(bound[i].shift===undefined){bound[i].fn(event);}else if(bound[i].shift==true&&event.shiftKey==true){bound[i].fn(event);}else if(bound[i].shift==false&&event.shiftKey==false){bound[i].fn(event);}}if(preventDefault==true){event.preventDefault();}}};// bind a key to a callback
  _exportFunctions.bind=function(key,callback,type){if(type===undefined){type='keydown';}if(_keys[key]===undefined){throw new Error("unsupported key: "+key);}if(_bound[type][_keys[key].code]===undefined){_bound[type][_keys[key].code]=[];}_bound[type][_keys[key].code].push({fn:callback,shift:_keys[key].shift});};// bind all keys to a call back (demo purposes)
  _exportFunctions.bindAll=function(callback,type){if(type===undefined){type='keydown';}for(var key in _keys){if(_keys.hasOwnProperty(key)){_exportFunctions.bind(key,callback,type);}}};// get the key label from an event
  _exportFunctions.getKey=function(event){for(var key in _keys){if(_keys.hasOwnProperty(key)){if(event.shiftKey==true&&_keys[key].shift==true&&event.keyCode==_keys[key].code){return key;}else if(event.shiftKey==false&&_keys[key].shift==false&&event.keyCode==_keys[key].code){return key;}else if(event.keyCode==_keys[key].code&&key=='shift'){return key;}}}return "unknown key, currently not supported";};// unbind either a specific callback from a key or all of them (by leaving callback undefined)
  _exportFunctions.unbind=function(key,callback,type){if(type===undefined){type='keydown';}if(_keys[key]===undefined){throw new Error("unsupported key: "+key);}if(callback!==undefined){var newBindings=[];var bound=_bound[type][_keys[key].code];if(bound!==undefined){for(var i=0;i<bound.length;i++){if(!(bound[i].fn==callback&&bound[i].shift==_keys[key].shift)){newBindings.push(_bound[type][_keys[key].code][i]);}}}_bound[type][_keys[key].code]=newBindings;}else{_bound[type][_keys[key].code]=[];}};// reset all bound variables.
  _exportFunctions.reset=function(){_bound={keydown:{},keyup:{}};};// unbind all listeners and reset all variables.
  _exportFunctions.destroy=function(){_bound={keydown:{},keyup:{}};container.removeEventListener('keydown',down,true);container.removeEventListener('keyup',up,true);};// create listeners.
  container.addEventListener('keydown',down,true);container.addEventListener('keyup',up,true);// return the public functions.
  return _exportFunctions;}return keycharm;});});var Graph3d$1=Graph3d_1;var graph3d={Camera:Camera_1,Filter:Filter_1,Point2d:Point2d_1,Point3d:Point3d_1,Slider:Slider_1,StepNumber:StepNumber_1};// bundled external libraries

  /**
   * vis-timeline - timeline-graph2d
   * https://github.com/visjs/vis-timeline
   *
   * Create a fully customizable, interactive timeline with items and ranges.
   *
   * @version 5.1.0
   * @date    2019-08-02T15:25:33Z
   *
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
   *
   * @license 
   * vis.js is dual licensed under both
   *
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   *   and
   *
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   *
   * vis.js may be distributed under either license.
   */function _defineProperty$4(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var defineProperty$3=_defineProperty$4;function _arrayWithoutHoles$4(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}var arrayWithoutHoles$3=_arrayWithoutHoles$4;function _iterableToArray$4(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}var iterableToArray$3=_iterableToArray$4;function _nonIterableSpread$4(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var nonIterableSpread$3=_nonIterableSpread$4;function _toConsumableArray$4(arr){return arrayWithoutHoles$3(arr)||iterableToArray$3(arr)||nonIterableSpread$3();}var toConsumableArray$3=_toConsumableArray$4;var commonjsGlobal$4=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function commonjsRequire$4(){throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');}function createCommonjsModule$4(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var _typeof_1$3=createCommonjsModule$4(function(module){function _typeof2(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof2=function _typeof2(obj){return typeof obj;};}else{_typeof2=function _typeof2(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof2(obj);}function _typeof(obj){if(typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"){module.exports=_typeof=function _typeof(obj){return _typeof2(obj);};}else{module.exports=_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof2(obj);};}return _typeof(obj);}module.exports=_typeof;});var moment$6=createCommonjsModule$4(function(module,exports){(function(global,factory){module.exports=factory();})(commonjsGlobal$4,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else{var k;for(k in obj){if(obj.hasOwnProperty(k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
  return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m);var parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties=hooks.momentProperties=[];function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i=0;i<momentProperties.length;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}var updateInProgress=false;// Moment prototype object
  function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
  // objects.
  if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function absFloor(number){if(number<0){// -0 -> 0
  return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}// compare two arrays, return the number of differences
  function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg='';if(typeof arguments[i]==='object'){arg+='\n['+i+'] ';for(var key in arguments[0]){arg+=key+': '+arguments[0][key]+', ';}arg=arg.slice(0,-2);// Remove trailing comma and space
  }else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
  // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
  // TODO: Remove "ordinalParse" fallback in next major release.
  this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
  res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d';var defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj){units.push({unit:u,priority:priorities[u]});}units.sort(function(a,b){return a.priority-b.priority;});return units;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions={};var formatTokenFunctions={};// token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
  function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var match1=/\d/;//       0 - 9
  var match2=/\d\d/;//      00 - 99
  var match3=/\d{3}/;//     000 - 999
  var match4=/\d{4}/;//    0000 - 9999
  var match6=/[+-]?\d{6}/;// -999999 - 999999
  var match1to2=/\d\d?/;//       0 - 99
  var match3to4=/\d\d\d\d?/;//     999 - 9999
  var match5to6=/\d\d\d\d\d\d?/;//   99999 - 999999
  var match1to3=/\d{1,3}/;//       0 - 999
  var match1to4=/\d{1,4}/;//       0 - 9999
  var match1to6=/[+-]?\d{1,6}/;// -999999 - 999999
  var matchUnsigned=/\d+/;//       0 - inf
  var matchSigned=/[+-]?\d+/;//    -inf - inf
  var matchOffset=/Z|[+-]\d\d:?\d\d/gi;// +00:00 -00:00 +0000 -0000 or Z
  var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;// +00 -00 +00:00 -00:00 +0000 -0000 or Z
  var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;// 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  var matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;var regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0;var MONTH=1;var DATE=2;var HOUR=3;var MINUTE=4;var SECOND=5;var MILLISECOND=6;var WEEK=7;var WEEKDAY=8;// FORMATTING
  addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?''+y:'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
  addUnitAlias('year','y');// PRIORITIES
  addUnitPriority('year',1);// PARSING
  addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
  function daysInYear(year){return isLeapYear(year)?366:365;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}// HOOKS
  hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
  var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else{return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else{mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
  function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(typeof units==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units);for(var i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function(o){// I know
  var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
  addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
  addUnitAlias('month','M');// PRIORITY
  addUnitPriority('month',8);// PARSING
  addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
  if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
  var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
  this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
  // Sorting makes sure if one month (or abbr) is a prefix of another
  // see sorting in computeMonthsParse
  for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
  function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
  return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
  if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else{return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}var defaultMonthsShortRegex=matchWord;function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}var defaultMonthsRegex=matchWord;function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
  // will match the longer piece.
  shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
  // https://stackoverflow.com/q/181348
  var date;// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else{date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date;// the Date.UTC function remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){var args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
  args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else{date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
  function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
  fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
  fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
  addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
  addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
  addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
  addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
  // LOCALES
  function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
  doy:6// The week that contains Jan 6th is the first week of the year.
  };function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
  function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
  addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
  addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
  addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
  addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
  if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
  function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
  function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
  function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
  // as a setter, sunday should belong to the previous week.
  if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}var defaultWeekdaysRegex=matchWord;function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}var defaultWeekdaysShortRegex=matchWord;function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}var defaultWeekdaysMinRegex=matchWord;function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);minp=this.weekdaysMin(mom,'');shortp=this.weekdaysShort(mom,'');longp=this.weekdays(mom,'');minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
  // will match the longer piece.
  minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);mixedPieces[i]=regexEscape(mixedPieces[i]);}this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
  function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
  addUnitAlias('hour','h');// PRIORITY
  addUnitPriority('hour',13);// PARSING
  function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
  function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
  // Using charAt should be more compatible.
  return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}// MOMENTS
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour=makeGetSet('Hours',true);var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
  var locales={};var localeFamilies={};var globalLocale;function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){//the next array item is better than a shallower substring of this one
  break;}j--;}i++;}return globalLocale;}function loadLocale(name){var oldLocale=null;// TODO: Find a better way to register and load all the locales in Node
  if(!locales[name]&&'object'!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;var aliasedRequire=commonjsRequire$4;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){}}return locales[name];}// This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
  globalLocale=data;}else{if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
  console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else{if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
  // make sure we set the locale AFTER all child locales have been
  // created, so we won't end up with the child locale set.
  getSetGlobalLocale(name);return locales[name];}else{// useful for testing
  delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;// MERGE
  tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;// backwards compat for now: also set the locale
  getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
  if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
  function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
  locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow;var a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// Pick the first defined of two or three arguments.
  function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
  var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
  if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
  if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
  // * if no year, month, day of month are given, default to today
  // * if day of month is given, default month and year
  // * if month is given, default only year
  // * if year is given, don't default anything
  for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
  for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
  if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
  // with parseZone.
  if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
  if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
  // how we interpret now (local, utc, fixed offset). So create
  // a now version of current config (take local/utc/offset flags, and
  // create now).
  weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;var curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
  week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
  weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
  weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to beginning of week
  weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;var isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],// YYYYMM is NOT allowed by the standard
  ['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/]];// iso time formats and regexes
  var isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]];var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;// date from iso format
  function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
  timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
  var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}var obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
  return 0;}else{var hm=parseInt(numOffset,10);var m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
  function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i));if(match){var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else{config._isValid=false;}}// date from iso format or fallback
  function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else{return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else{return;}// Final attempt, use Input Fallback
  hooks.createFromInputFallback(config);}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged and will be removed in an upcoming major release. Please refer to '+'http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// constant that refers to the ISO standard
  hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
  hooks.RFC_2822=function(){};// date from string and format string
  function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
  if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
  var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];// console.log('token', token, 'parsedInput', parsedInput,
  //         'regex', getParseRegexForToken(token, config));
  if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
  if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
  getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
  if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
  config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
  return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
  isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
  return hour;}}// date from string and array of format strings
  function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(!isValid(tempConfig)){continue;}// if there is any input that was not parsed add a penalty for that format
  currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
  currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
  res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
  config._d=new Date(input);}else{hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
  // https://github.com/moment/moment/issues/1423
  c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return createInvalid();}});var prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
  function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){for(var key in m){if(!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}var unitHasDecimal=false;for(var i=0;i<ordering.length;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
  }if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
  this._milliseconds=+milliseconds+seconds*1e3+// 1000
  minutes*6e4+// 1000 * 60
  hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
  // Because of dateAddRemove treats 24 hours as different from a
  // day when working around DST, we need to store them separately
  this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
  // which months you are are talking about, so we have to store
  // it separately.
  this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// FORMATTING
  function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset();var sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
  addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher);if(matches===null){return null;}var chunk=matches[matches.length-1]||[];var parts=(chunk+'').match(chunkOffset)||['-',0,0];var minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
  res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else{return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
  // https://github.com/moment/moment/pull/1871
  return -Math.round(m._d.getTimezoneOffset()/15)*15;}// HOOKS
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset=function(){};// MOMENTS
  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else{this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={};copyConfig(c,this);c=prepareConfig(c);if(c._a){var other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
  var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  var isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
  match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
  };}else if(!!(match=isoRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
  duration={};}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
  // converts floats to ints.
  // inp may be undefined, so careful calling replace on it.
  var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
  return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
  if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}val=typeof val==='string'?+val:val;dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
  return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add');var subtract=createAdder(-1,'subtract');function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// We want to compare the start of today, vs this.
  // Getting start-of-today depends on whether we're local/utc/offset or not.
  var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse';var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
  case'minute':output=(this-that)/6e4;break;// 1000 * 60
  case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
  case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
  case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
  default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){// difference in months
  var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
  anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
  adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
  adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
  return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true;var m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
  if(utc){return this.toDate().toISOString();}else{return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment';var zone='';if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}var prefix='['+func+'("]';var year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';var datetime='-MM-DD[T]HH:mm:ss.SSS';var suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000;var MS_PER_MINUTE=60*MS_PER_SECOND;var MS_PER_HOUR=60*MS_PER_MINUTE;var MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return new Date(y+400,m,d)-MS_PER_400_YEARS;}else{return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else{return Date.UTC(y,m,d);}}function startOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
  return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}// FORMATTING
  addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
  addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
  addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
  addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
  function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
  addFormatToken('Q',0,'Qo','quarter');// ALIASES
  addUnitAlias('quarter','Q');// PRIORITY
  addUnitPriority('quarter',7);// PARSING
  addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
  function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
  addFormatToken('D',['DD',2],'Do','date');// ALIASES
  addUnitAlias('date','D');// PRIORITY
  addUnitPriority('date',9);// PARSING
  addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
  return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
  var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
  addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
  addUnitAlias('dayOfYear','DDD');// PRIORITY
  addUnitPriority('dayOfYear',4);// PARSING
  addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
  // MOMENTS
  function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
  addFormatToken('m',['mm',2],0,'minute');// ALIASES
  addUnitAlias('minute','m');// PRIORITY
  addUnitPriority('minute',14);// PARSING
  addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
  var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
  addFormatToken('s',['ss',2],0,'second');// ALIASES
  addUnitAlias('second','s');// PRIORITY
  addUnitPriority('second',15);// PARSING
  addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
  var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
  addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
  addUnitAlias('millisecond','ms');// PRIORITY
  addUnitPriority('millisecond',16);// PARSING
  addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}// MOMENTS
  var getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
  addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
  function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale();var utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i;var out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0;if(index!=null){return get$1(format,(index+shift)%7,field,'day');}var i;var out=[];for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
  hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
  // check: https://github.com/moment/moment/issues/2166
  if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
  // examples of what that means.
  data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
  monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
  years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
  return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else{// handle milliseconds separately because of floating point math errors (issue #1867)
  days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
  case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
  function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms');var asSeconds=makeAs('s');var asMinutes=makeAs('m');var asHours=makeAs('h');var asDays=makeAs('d');var asWeeks=makeAs('w');var asMonths=makeAs('M');var asQuarters=makeAs('Q');var asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds');var seconds=makeGetter('seconds');var minutes=makeGetter('minutes');var hours=makeGetter('hours');var days=makeGetter('days');var months=makeGetter('months');var years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round;var thresholds={ss:44,// a few seconds to seconds
  s:45,// seconds to minute
  m:45,// minutes to hour
  h:22,// hours to day
  d:26,// days to month
  M:11// months to year
  };// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,locale){var duration=createDuration(posNegDuration).abs();var seconds=round(duration.as('s'));var minutes=round(duration.as('m'));var hours=round(duration.as('h'));var days=round(duration.as('d'));var months=round(duration.as('M'));var years=round(duration.as('y'));var a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days]||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(withSuffix){if(!this.isValid()){return this.localeData().invalidDate();}var locale=this.localeData();var output=relativeTime$1(this,!withSuffix,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
  //  * milliseconds bubble up until they become hours
  //  * days do not bubble at all
  //  * months bubble up until they become years
  // This is because there is no context-free conversion between hours and days
  // (think of clock changes)
  // and also not between days and months (28-31 days per month)
  if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000;var days=abs$1(this._days);var months=abs$1(this._months);var minutes,hours,years;// 3600 seconds -> 60 minutes -> 1 hour
  minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
  years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
  var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';var total=this.asSeconds();if(!total){// this is the same as C#'s (Noda) and python (isodate)...
  // but not other JS (goog.date)
  return 'P0D';}var totalSign=total<0?'-':'';var ymSign=sign(this._months)!==sign(total)?'-':'';var daysSign=sign(this._days)!==sign(total)?'-':'';var hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(Y?ymSign+Y+'Y':'')+(M?ymSign+M+'M':'')+(D?daysSign+D+'D':'')+(h||m||s?'T':'')+(h?hmsSign+h+'H':'')+(m?hmsSign+m+'M':'')+(s?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// Side effect imports
  // FORMATTING
  addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
  addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input,10)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});// Side effect imports
  hooks.version='2.24.0';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
  DATE:'YYYY-MM-DD',// <input type="date" />
  TIME:'HH:mm',// <input type="time" />
  TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
  TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
  WEEK:'GGGG-[W]WW',// <input type="week" />
  MONTH:'YYYY-MM'// <input type="month" />
  };return hooks;});});// Maps for number <-> hex string conversion
  var byteToHex$5=[];for(var i$5=0;i$5<256;i$5++){byteToHex$5[i$5]=(i$5+0x100).toString(16).substr(1);}/**
   * Represent binary UUID into it's string representation.
   *
   * @param buf - Buffer containing UUID bytes.
   * @param offset - Offset from the start of the buffer where the UUID is saved (not needed if the buffer starts with the UUID).
   *
   * @returns String representation of the UUID.
   */function stringifyUUID$4(buf,offset){var i=offset||0;var bth=byteToHex$5;return bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]];}/**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */var random$4=function(){if(typeof crypto!=='undefined'&&crypto.getRandomValues){// WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
  // Moderately fast, high quality
  var _rnds8=new Uint8Array(16);return function whatwgRNG(){crypto.getRandomValues(_rnds8);return _rnds8;};}// Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().
  // It's fast, but is of unspecified quality.
  var _rnds=new Array(16);return function(){for(var i=0,r;i<16;i++){if((i&0x03)===0){r=Math.random()*0x100000000;}_rnds[i]=r>>>((i&0x03)<<3)&0xff;}return _rnds;};//     uuid.js
  //
  //     Copyright (c) 2010-2012 Robert Kieffer
  //     MIT License - http://opensource.org/licenses/mit-license.php
  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  // return require('./rng');
  }();var byteToHex$1$4=[];for(var i$1$4=0;i$1$4<256;i$1$4++){byteToHex$1$4[i$1$4]=(i$1$4+0x100).toString(16).substr(1);}// **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq
  var seedBytes$4=random$4();// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var defaultNodeId$4=[seedBytes$4[0]|0x01,seedBytes$4[1],seedBytes$4[2],seedBytes$4[3],seedBytes$4[4],seedBytes$4[5]];// Per 4.2.2, randomize (14 bit) clockseq
  var defaultClockseq$4=(seedBytes$4[6]<<8|seedBytes$4[7])&0x3fff;// Previous uuid creation time
  /**
   * UUIDv4 options.
   */ /**
   * Generate UUIDv4
   *
   * @param options - Options to be used instead of default generated values.
   * String 'binary' is a shorthand for uuid4({}, new Array(16)).
   * @param buf - If present the buffer will be filled with the generated UUID.
   * @param offset - Offset of the UUID from the start of the buffer.
   *
   * @returns UUIDv4
   */function uuid4$4(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var buf=arguments.length>1?arguments[1]:undefined;var offset=arguments.length>2?arguments[2]:undefined;// Deprecated - 'format' argument, as supported in v1.2
  var i=buf&&offset||0;if(typeof options==='string'){buf=options==='binary'?new Array(16):undefined;options={};}var rnds=options.random||(options.rng||random$4)();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;// Copy bytes to buffer, if provided
  if(buf){for(var ii=0;ii<16;ii++){buf[i+ii]=rnds[ii];}}return buf||stringifyUUID$4(rnds);}// Rollup will complain about mixing default and named exports in UMD build,
  function ownKeys$4(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){keys.push.apply(keys,Object.getOwnPropertySymbols(object));}if(enumerableOnly)keys=keys.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});return keys;}function _objectSpread$3(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys$4(source,true).forEach(function(key){defineProperty$3(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys$4(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'
  // code from http://momentjs.com/
  var ASPDateRegex$4=/^\/?Date\((-?\d+)/i;// Hex color
  var fullHexRE$3=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;var shortHexRE$3=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;/**
   * Hue, Saturation, Value.
   */ /**
   * Test whether given object is a number
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if number, false otherwise.
   */function isNumber$4(value){return value instanceof Number||typeof value==='number';}/**
   * Remove everything in the DOM object
   *
   * @param DOMobject - Node whose child nodes will be recursively deleted.
   */function recursiveDOMDelete$3(DOMobject){if(DOMobject){while(DOMobject.hasChildNodes()===true){var child=DOMobject.firstChild;if(child){recursiveDOMDelete$3(child);DOMobject.removeChild(child);}}}}/**
   * Test whether given object is a string
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if string, false otherwise.
   */function isString$4(value){return value instanceof String||typeof value==='string';}/**
   * Test whether given object is a object (not primitive or null).
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if not null object, false otherwise.
   */function isObject$3(value){return _typeof_1$3(value)==='object'&&value!==null;}/**
   * Test whether given object is a Date, or a String containing a Date
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Date instance or string date representation, false otherwise.
   */function isDate$3(value){if(value instanceof Date){return true;}else if(isString$4(value)){// test whether this string contains a date
  var match=ASPDateRegex$4.exec(value);if(match){return true;}else if(!isNaN(Date.parse(value))){return true;}}return false;}/**
   * Test whether given object is a Moment date.
   * @TODO: This is basically a workaround, if Moment was imported property it wouldn't necessary as moment.isMoment is a TS type guard.
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Moment instance, false otherwise.
   */function isMoment$4(value){return moment$6.isMoment(value);}/**
   * Copy property from b to a if property present in a.
   * If property in b explicitly set to null, delete it if `allowDeletion` set.
   *
   * Internal helper routine, should not be exported. Not added to `exports` for that reason.
   *
   * @param a - Target object.
   * @param b - Source object.
   * @param prop - Name of property to copy from b to a.
   * @param allowDeletion  if true, delete property in a if explicitly set to null in b
   */function copyOrDelete$3(a,b,prop,allowDeletion){var doDeletion=false;if(allowDeletion===true){doDeletion=b[prop]===null&&a[prop]!==undefined;}if(doDeletion){delete a[prop];}else{a[prop]=b[prop];// Remember, this is a reference copy!
  }}/**
   * Fill an object with a possibly partially defined other object.
   *
   * Only copies values for the properties already present in a.
   * That means an object is not created on a property if only the b object has it.
   *
   * @param a - The object that will have it's properties updated.
   * @param b - The object with property updates.
   * @param allowDeletion - if true, delete properties in a that are explicitly set to null in b
   */function fillIfDefined$3(a,b){var allowDeletion=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;// NOTE: iteration of properties of a
  // NOTE: prototype properties iterated over as well
  for(var prop in a){if(b[prop]!==undefined){if(b[prop]===null||_typeof_1$3(b[prop])!=='object'){// Note: typeof null === 'object'
  copyOrDelete$3(a,b,prop,allowDeletion);}else{var aProp=a[prop];var bProp=b[prop];if(isObject$3(aProp)&&isObject$3(bProp)){fillIfDefined$3(aProp,bProp,allowDeletion);}}}}}/**
   * Copy the values of all of the enumerable own properties from one or more source objects to a
   * target object. Returns the target object.
   *
   * @param target - The target object to copy to.
   * @param source - The source object from which to copy properties.
   *
   * @return The target object.
   */var extend$3=Object.assign;/**
   * Extend object a with selected properties of object b or a series of objects
   * Only properties with defined values are copied
   *
   * @param props - Properties to be copied to a.
   * @param a - The target.
   * @param others - The sources.
   *
   * @returns Argument a.
   */function selectiveExtend$3(props,a){if(!Array.isArray(props)){throw new Error('Array with property names expected as first argument');}for(var _len=arguments.length,others=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){others[_key-2]=arguments[_key];}for(var _i=0,_others=others;_i<_others.length;_i++){var other=_others[_i];for(var p=0;p<props.length;p++){var prop=props[p];if(other&&Object.prototype.hasOwnProperty.call(other,prop)){a[prop]=other[prop];}}}return a;}/**
   * Extend object a with selected properties of object b.
   * Only properties with defined values are copied.
   *
   * **Note:** Previous version of this routine implied that multiple source objects
   *           could be used; however, the implementation was **wrong**.
   *           Since multiple (>1) sources weren't used anywhere in the `vis.js` code,
   *           this has been removed
   *
   * @param props - Names of first-level properties to copy over.
   * @param a - Target object.
   * @param b - Source object.
   * @param allowDeletion - If true, delete property in a if explicitly set to null in b.
   *
   * @returns Argument a.
   */function selectiveDeepExtend$3(props,a,b){var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// TODO: add support for Arrays to deepExtend
  if(Array.isArray(b)){throw new TypeError('Arrays are not supported by deepExtend');}for(var p=0;p<props.length;p++){var prop=props[p];if(Object.prototype.hasOwnProperty.call(b,prop)){if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){deepExtend$3(a[prop],b[prop],false,allowDeletion);}else{copyOrDelete$3(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){throw new TypeError('Arrays are not supported by deepExtend');}else{copyOrDelete$3(a,b,prop,allowDeletion);}}}return a;}/**
   * Extend object `a` with properties of object `b`, ignoring properties which are explicitly
   * specified to be excluded.
   *
   * The properties of `b` are considered for copying.
   * Properties which are themselves objects are are also extended.
   * Only properties with defined values are copied
   *
   * @param propsToExclude - Names of properties which should *not* be copied.
   * @param a - Object to extend.
   * @param b - Object to take properties from for extension.
   * @param allowDeletion - If true, delete properties in a that are explicitly set to null in b.
   *
   * @returns Argument a.
   */function selectiveNotDeepExtend$3(propsToExclude,a,b){var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// TODO: add support for Arrays to deepExtend
  // NOTE: array properties have an else-below; apparently, there is a problem here.
  if(Array.isArray(b)){throw new TypeError('Arrays are not supported by deepExtend');}for(var prop in b){if(!Object.prototype.hasOwnProperty.call(b,prop)){continue;}// Handle local properties only
  if(propsToExclude.indexOf(prop)!==-1){continue;}// In exclusion list, skip
  if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){deepExtend$3(a[prop],b[prop]);// NOTE: allowDeletion not propagated!
  }else{copyOrDelete$3(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){a[prop]=[];for(var i=0;i<b[prop].length;i++){a[prop].push(b[prop][i]);}}else{copyOrDelete$3(a,b,prop,allowDeletion);}}return a;}/**
   * Deep extend an object a with the properties of object b
   *
   * @param a - Target object.
   * @param b - Source object.
   * @param protoExtend - If true, the prototype values will also be extended
   * (ie. the options objects that inherit from others will also get the inherited options).
   * @param allowDeletion - If true, the values of fields that are null will be deleted.
   *
   * @returns Argument a.
   */function deepExtend$3(a,b){var protoExtend=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var allowDeletion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;for(var prop in b){if(Object.prototype.hasOwnProperty.call(b,prop)||protoExtend===true){if(b[prop]&&b[prop].constructor===Object){if(a[prop]===undefined){a[prop]={};}if(a[prop].constructor===Object){deepExtend$3(a[prop],b[prop],protoExtend);// NOTE: allowDeletion not propagated!
  }else{copyOrDelete$3(a,b,prop,allowDeletion);}}else if(Array.isArray(b[prop])){a[prop]=[];for(var i=0;i<b[prop].length;i++){a[prop].push(b[prop][i]);}}else{copyOrDelete$3(a,b,prop,allowDeletion);}}}return a;}/**
   * Test whether all elements in two arrays are equal.
   *
   * @param a - First array.
   * @param b - Second array.
   *
   * @returns True if both arrays have the same length and same elements (1 = '1').
   */function equalArray$3(a,b){if(a.length!==b.length){return false;}for(var i=0,len=a.length;i<len;i++){if(a[i]!=b[i]){return false;}}return true;}/**
   * Convert an object into another type
   *
   * @param object - Value of unknown type.
   * @param type - Name of the desired type.
   *
   * @returns Object in the desired type.
   * @throws Error
   */function convert$4(object,type){var match;if(object===undefined){return undefined;}if(object===null){return null;}if(!type){return object;}if(!(typeof type==='string')&&!(type instanceof String)){throw new Error('Type must be a string');}//noinspection FallthroughInSwitchStatementJS
  switch(type){case'boolean':case'Boolean':return Boolean(object);case'number':case'Number':if(isString$4(object)&&!isNaN(Date.parse(object))){return moment$6(object).valueOf();}else{// @TODO: I don't think that Number and String constructors are a good idea.
  // This could also fail if the object doesn't have valueOf method or if it's redefined.
  // For example: Object.create(null) or { valueOf: 7 }.
  return Number(object.valueOf());}case'string':case'String':return String(object);case'Date':if(isNumber$4(object)){return new Date(object);}if(object instanceof Date){return new Date(object.valueOf());}else if(isMoment$4(object)){return new Date(object.valueOf());}if(isString$4(object)){match=ASPDateRegex$4.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1]));// parse number
  }else{return moment$6(new Date(object)).toDate();// parse string
  }}else{throw new Error('Cannot convert object of type '+getType$4(object)+' to type Date');}case'Moment':if(isNumber$4(object)){return moment$6(object);}if(object instanceof Date){return moment$6(object.valueOf());}else if(isMoment$4(object)){return moment$6(object);}if(isString$4(object)){match=ASPDateRegex$4.exec(object);if(match){// object is an ASP date
  return moment$6(Number(match[1]));// parse number
  }else{return moment$6(object);// parse string
  }}else{throw new Error('Cannot convert object of type '+getType$4(object)+' to type Date');}case'ISODate':if(isNumber$4(object)){return new Date(object);}else if(object instanceof Date){return object.toISOString();}else if(isMoment$4(object)){return object.toDate().toISOString();}else if(isString$4(object)){match=ASPDateRegex$4.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1])).toISOString();// parse number
  }else{return moment$6(object).format();// ISO 8601
  }}else{throw new Error('Cannot convert object of type '+getType$4(object)+' to type ISODate');}case'ASPDate':if(isNumber$4(object)){return '/Date('+object+')/';}else if(object instanceof Date||isMoment$4(object)){return '/Date('+object.valueOf()+')/';}else if(isString$4(object)){match=ASPDateRegex$4.exec(object);var _value;if(match){// object is an ASP date
  _value=new Date(Number(match[1])).valueOf();// parse number
  }else{_value=new Date(object).valueOf();// parse string
  }return '/Date('+_value+')/';}else{throw new Error('Cannot convert object of type '+getType$4(object)+' to type ASPDate');}default:var never=type;throw new Error("Unknown type ".concat(never));}}/**
   * Get the type of an object, for example exports.getType([]) returns 'Array'
   *
   * @param object - Input value of unknown type.
   *
   * @returns Detected type.
   */function getType$4(object){var type=_typeof_1$3(object);if(type==='object'){if(object===null){return 'null';}if(object instanceof Boolean){return 'Boolean';}if(object instanceof Number){return 'Number';}if(object instanceof String){return 'String';}if(Array.isArray(object)){return 'Array';}if(object instanceof Date){return 'Date';}return 'Object';}if(type==='number'){return 'Number';}if(type==='boolean'){return 'Boolean';}if(type==='string'){return 'String';}if(type===undefined){return 'undefined';}return type;}/**
   * Used to extend an array and copy it. This is used to propagate paths recursively.
   *
   * @param arr - First part.
   * @param newValue - The value to be aadded into the array.
   *
   * @returns A new array with all items from arr and newValue (which is last).
   */function copyAndExtendArray$3(arr,newValue){return [].concat(toConsumableArray$3(arr),[newValue]);}/**
   * Used to extend an array and copy it. This is used to propagate paths recursively.
   *
   * @param arr - The array to be copied.
   *
   * @returns Shallow copy of arr.
   */function copyArray$3(arr){return arr.slice();}/**
   * Retrieve the absolute left value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute left position of this element in the browser page.
   */function getAbsoluteLeft$3(elem){return elem.getBoundingClientRect().left;}/**
   * Retrieve the absolute right value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute right position of this element in the browser page.
   */function getAbsoluteRight$3(elem){return elem.getBoundingClientRect().right;}/**
   * Retrieve the absolute top value of a DOM element
   *
   * @param elem - A dom element, for example a div.
   *
   * @returns The absolute top position of this element in the browser page.
   */function getAbsoluteTop$3(elem){return elem.getBoundingClientRect().top;}/**
   * Add a className to the given elements style.
   *
   * @param elem - The element to which the classes will be added.
   * @param classNames - Space separated list of classes.
   */function addClassName$3(elem,classNames){var classes=elem.className.split(' ');var newClasses=classNames.split(' ');classes=classes.concat(newClasses.filter(function(className){return classes.indexOf(className)<0;}));elem.className=classes.join(' ');}/**
   * Remove a className from the given elements style.
   *
   * @param elem - The element from which the classes will be removed.
   * @param classNames - Space separated list of classes.
   */function removeClassName$3(elem,classNames){var classes=elem.className.split(' ');var oldClasses=classNames.split(' ');classes=classes.filter(function(className){return oldClasses.indexOf(className)<0;});elem.className=classes.join(' ');}/**
   * For each method for both arrays and objects.
   * In case of an array, the built-in Array.forEach() is applied (**No, it's not!**).
   * In case of an Object, the method loops over all properties of the object.
   *
   * @param object - An Object or Array to be iterated over.
   * @param callback - Array.forEach-like callback.
   */function forEach$3(object,callback){if(Array.isArray(object)){// array
  var len=object.length;for(var i=0;i<len;i++){callback(object[i],i,object);}}else{// object
  for(var _key2 in object){if(Object.prototype.hasOwnProperty.call(object,_key2)){callback(object[_key2],_key2,object);}}}}/**
   * Convert an object into an array: all objects properties are put into the array. The resulting array is unordered.
   *
   * @param o - Object that contains the properties and methods.
   *
   * @returns An array of unordered values.
   */var toArray$3=Object.values;/**
   * Update a property in an object
   *
   * @param object - The object whose property will be updated.
   * @param key - Name of the property to be updated.
   * @param value - The new value to be assigned.
   *
   * @returns Whether the value was updated (true) or already strictly the same in the original object (false).
   */function updateProperty$3(object,key,value){if(object[key]!==value){object[key]=value;return true;}else{return false;}}/**
   * Throttle the given function to be only executed once per animation frame.
   *
   * @param fn - The original function.
   *
   * @returns The throttled function.
   */function throttle$3(fn){var scheduled=false;return function(){if(!scheduled){scheduled=true;requestAnimationFrame(function(){scheduled=false;fn();});}};}/**
   * Add and event listener. Works for all browsers.
   *
   * @param element - The element to bind the event listener to.
   * @param action - Same as Element.addEventListener(action, —, —).
   * @param listener - Same as Element.addEventListener(—, listener, —).
   * @param useCapture - Same as Element.addEventListener(—, —, useCapture).
   */function addEventListener$3(element,action,listener,useCapture){if(element.addEventListener){if(useCapture===undefined){useCapture=false;}if(action==='mousewheel'&&navigator.userAgent.indexOf('Firefox')>=0){action='DOMMouseScroll';// For Firefox
  }element.addEventListener(action,listener,useCapture);}else{element.attachEvent('on'+action,listener);// IE browsers
  }}/**
   * Remove an event listener from an element
   *
   * @param element - The element to bind the event listener to.
   * @param action - Same as Element.removeEventListener(action, —, —).
   * @param listener - Same as Element.removeEventListener(—, listener, —).
   * @param useCapture - Same as Element.removeEventListener(—, —, useCapture).
   */function removeEventListener$3(element,action,listener,useCapture){if(element.removeEventListener){// non-IE browsers
  if(useCapture===undefined){useCapture=false;}if(action==='mousewheel'&&navigator.userAgent.indexOf('Firefox')>=0){action='DOMMouseScroll';// For Firefox
  }element.removeEventListener(action,listener,useCapture);}else{element.detachEvent('on'+action,listener);// IE browsers
  }}/**
   * Cancels the event's default action if it is cancelable, without stopping further propagation of the event.
   *
   * @param event - The event whose default action should be prevented.
   */function preventDefault$3(event){if(!event){event=window.event;}if(!event);else if(event.preventDefault){event.preventDefault();// non-IE browsers
  }else{event.returnValue=false;// IE browsers
  }}/**
   * Get HTML element which is the target of the event.
   *
   * @param event - The event.
   *
   * @returns The element or null if not obtainable.
   */function getTarget$3(){var event=arguments.length>0&&arguments[0]!==undefined?arguments[0]:window.event;// code from http://www.quirksmode.org/js/events_properties.html
  // @TODO: EventTarget can be almost anything, is it okay to return only Elements?
  var target=null;if(!event);else if(event.target){target=event.target;}else if(event.srcElement){target=event.srcElement;}if(!(target instanceof Element)){return null;}if(target.nodeType!=null&&target.nodeType==3){// defeat Safari bug
  target=target.parentNode;if(!(target instanceof Element)){return null;}}return target;}/**
   * Check if given element contains given parent somewhere in the DOM tree
   *
   * @param element - The element to be tested.
   * @param parent - The ancestor (not necessarily parent) of the element.
   *
   * @returns True if parent is an ancestor of the element, false otherwise.
   */function hasParent$3(element,parent){var elem=element;while(elem){if(elem===parent){return true;}else if(elem.parentNode){elem=elem.parentNode;}else{return false;}}return false;}var option$3={/**
     * Convert a value into a boolean.
     *
     * @param value - Value to be converted intoboolean, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding boolean value, if none then the default value, if none then null.
     */asBoolean:function asBoolean(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return value!=false;}return defaultValue||null;},/**
     * Convert a value into a number.
     *
     * @param value - Value to be converted intonumber, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding **boxed** number value, if none then the default value, if none then null.
     */asNumber:function asNumber(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return Number(value)||defaultValue||null;}return defaultValue||null;},/**
     * Convert a value into a string.
     *
     * @param value - Value to be converted intostring, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding **boxed** string value, if none then the default value, if none then null.
     */asString:function asString(value,defaultValue){if(typeof value=='function'){value=value();}if(value!=null){return String(value);}return defaultValue||null;},/**
     * Convert a value into a size.
     *
     * @param value - Value to be converted intosize, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns Corresponding string value (number + 'px'), if none then the default value, if none then null.
     */asSize:function asSize(value,defaultValue){if(typeof value=='function'){value=value();}if(isString$4(value)){return value;}else if(isNumber$4(value)){return value+'px';}else{return defaultValue||null;}},/**
     * Convert a value into a DOM Element.
     *
     * @param value - Value to be converted into DOM Element, a function will be executed as (() => unknown).
     * @param defaultValue - If the value or the return value of the function == null then this will be returned.
     *
     * @returns The DOM Element, if none then the default value, if none then null.
     */asElement:function asElement(value,defaultValue){if(typeof value=='function'){value=value();}return value||defaultValue||null;}};/**
   * Convert hex color string into RGB color object.
   * http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb
   *
   * @param hex - Hex color string (3 or 6 digits, with or without #).
   *
   * @returns RGB color object.
   */function hexToRGB$3(hex){var result;switch(hex.length){case 3:case 4:result=shortHexRE$3.exec(hex);return result?{r:parseInt(result[1]+result[1],16),g:parseInt(result[2]+result[2],16),b:parseInt(result[3]+result[3],16)}:null;case 6:case 7:result=fullHexRE$3.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null;default:return null;}}/**
   * This function takes string color in hex or RGB format and adds the opacity, RGBA is passed through unchanged.
   *
   * @param color - The color string (hex, RGB, RGBA).
   * @param opacity - The new opacity.
   *
   * @returns RGBA string, for example 'rgba(255, 0, 127, 0.3)'.
   */function overrideOpacity$3(color,opacity){if(color.indexOf('rgba')!==-1){return color;}else if(color.indexOf('rgb')!==-1){var rgb=color.substr(color.indexOf('(')+1).replace(')','').split(',');return 'rgba('+rgb[0]+','+rgb[1]+','+rgb[2]+','+opacity+')';}else{var _rgb=hexToRGB$3(color);if(_rgb==null){return color;}else{return 'rgba('+_rgb.r+','+_rgb.g+','+_rgb.b+','+opacity+')';}}}/**
   * Convert RGB <0, 255> into hex color string.
   *
   * @param red - Red channel.
   * @param green - Green channel.
   * @param blue - Blue channel.
   *
   * @returns Hex color string (for example: '#0acdc0').
   */function RGBToHex$3(red,green,blue){return '#'+((1<<24)+(red<<16)+(green<<8)+blue).toString(16).slice(1);}/**
   * Parse a color property into an object with border, background, and highlight colors
   *
   * @param inputColor - Shorthand color string or input color object.
   * @param defaultColor - Full color object to fill in missing values in inputColor.
   *
   * @returns Color object.
   */function parseColor$3(inputColor,defaultColor){if(isString$4(inputColor)){var colorStr=inputColor;if(isValidRGB$3(colorStr)){var rgb=colorStr.substr(4).substr(0,colorStr.length-5).split(',').map(function(value){return parseInt(value);});colorStr=RGBToHex$3(rgb[0],rgb[1],rgb[2]);}if(isValidHex$3(colorStr)===true){var hsv=hexToHSV$3(colorStr);var lighterColorHSV={h:hsv.h,s:hsv.s*0.8,v:Math.min(1,hsv.v*1.02)};var darkerColorHSV={h:hsv.h,s:Math.min(1,hsv.s*1.25),v:hsv.v*0.8};var darkerColorHex=HSVToHex$3(darkerColorHSV.h,darkerColorHSV.s,darkerColorHSV.v);var lighterColorHex=HSVToHex$3(lighterColorHSV.h,lighterColorHSV.s,lighterColorHSV.v);return {background:colorStr,border:darkerColorHex,highlight:{background:lighterColorHex,border:darkerColorHex},hover:{background:lighterColorHex,border:darkerColorHex}};}else{return {background:colorStr,border:colorStr,highlight:{background:colorStr,border:colorStr},hover:{background:colorStr,border:colorStr}};}}else{if(defaultColor){var color={background:inputColor.background||defaultColor.background,border:inputColor.border||defaultColor.border,highlight:isString$4(inputColor.highlight)?{border:inputColor.highlight,background:inputColor.highlight}:{background:inputColor.highlight&&inputColor.highlight.background||defaultColor.highlight.background,border:inputColor.highlight&&inputColor.highlight.border||defaultColor.highlight.border},hover:isString$4(inputColor.hover)?{border:inputColor.hover,background:inputColor.hover}:{border:inputColor.hover&&inputColor.hover.border||defaultColor.hover.border,background:inputColor.hover&&inputColor.hover.background||defaultColor.hover.background}};return color;}else{var _color={background:inputColor.background||undefined,border:inputColor.border||undefined,highlight:isString$4(inputColor.highlight)?{border:inputColor.highlight,background:inputColor.highlight}:{background:inputColor.highlight&&inputColor.highlight.background||undefined,border:inputColor.highlight&&inputColor.highlight.border||undefined},hover:isString$4(inputColor.hover)?{border:inputColor.hover,background:inputColor.hover}:{border:inputColor.hover&&inputColor.hover.border||undefined,background:inputColor.hover&&inputColor.hover.background||undefined}};return _color;}}}/**
   * Convert RGB <0, 255> into HSV object.
   * http://www.javascripter.net/faq/rgb2hsv.htm
   *
   * @param red - Red channel.
   * @param green - Green channel.
   * @param blue - Blue channel.
   *
   * @returns HSV color object.
   */function RGBToHSV$3(red,green,blue){red=red/255;green=green/255;blue=blue/255;var minRGB=Math.min(red,Math.min(green,blue));var maxRGB=Math.max(red,Math.max(green,blue));// Black-gray-white
  if(minRGB===maxRGB){return {h:0,s:0,v:minRGB};}// Colors other than black-gray-white:
  var d=red===minRGB?green-blue:blue===minRGB?red-green:blue-red;var h=red===minRGB?3:blue===minRGB?1:5;var hue=60*(h-d/(maxRGB-minRGB))/360;var saturation=(maxRGB-minRGB)/maxRGB;var value=maxRGB;return {h:hue,s:saturation,v:value};}var cssUtil$3={// split a string with css styles into an object with key/values
  split:function split(cssText){var styles={};cssText.split(';').forEach(function(style){if(style.trim()!=''){var parts=style.split(':');var _key3=parts[0].trim();var _value2=parts[1].trim();styles[_key3]=_value2;}});return styles;},// build a css text string from an object with key/values
  join:function join(styles){return Object.keys(styles).map(function(key){return key+': '+styles[key];}).join('; ');}};/**
   * Append a string with css styles to an element
   *
   * @param element - The element that will receive new styles.
   * @param cssText - The styles to be appended.
   */function addCssText$3(element,cssText){var currentStyles=cssUtil$3.split(element.style.cssText);var newStyles=cssUtil$3.split(cssText);var styles=_objectSpread$3({},currentStyles,{},newStyles);element.style.cssText=cssUtil$3.join(styles);}/**
   * Remove a string with css styles from an element
   *
   * @param element - The element from which styles should be removed.
   * @param cssText - The styles to be removed.
   */function removeCssText$3(element,cssText){var styles=cssUtil$3.split(element.style.cssText);var removeStyles=cssUtil$3.split(cssText);for(var _key4 in removeStyles){if(Object.prototype.hasOwnProperty.call(removeStyles,_key4)){delete styles[_key4];}}element.style.cssText=cssUtil$3.join(styles);}/**
   * Convert HSV <0, 1> into RGB color object.
   * https://gist.github.com/mjijackson/5311256
   *
   * @param h - Hue
   * @param s - Saturation
   * @param v - Value
   *
   * @returns RGB color object.
   */function HSVToRGB$3(h,s,v){var r;var g;var b;var i=Math.floor(h*6);var f=h*6-i;var p=v*(1-s);var q=v*(1-f*s);var t=v*(1-(1-f)*s);switch(i%6){case 0:r=v,g=t,b=p;break;case 1:r=q,g=v,b=p;break;case 2:r=p,g=v,b=t;break;case 3:r=p,g=q,b=v;break;case 4:r=t,g=p,b=v;break;case 5:r=v,g=p,b=q;break;}return {r:Math.floor(r*255),g:Math.floor(g*255),b:Math.floor(b*255)};}/**
   * Convert HSV <0, 1> into hex color string.
   *
   * @param h - Hue
   * @param s - Saturation
   * @param v - Value
   *
   * @returns Hex color string.
   */function HSVToHex$3(h,s,v){var rgb=HSVToRGB$3(h,s,v);return RGBToHex$3(rgb.r,rgb.g,rgb.b);}/**
   * Convert hex color string into HSV <0, 1>.
   *
   * @param hex - Hex color string.
   *
   * @returns HSV color object.
   */function hexToHSV$3(hex){var rgb=hexToRGB$3(hex);if(!rgb){throw new TypeError("'".concat(hex,"' is not a valid color."));}return RGBToHSV$3(rgb.r,rgb.g,rgb.b);}/**
   * Validate hex color string.
   *
   * @param hex - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */function isValidHex$3(hex){var isOk=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);return isOk;}/**
   * Validate RGB color string.
   *
   * @param rgb - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */function isValidRGB$3(rgb){rgb=rgb.replace(' ','');var isOk=/rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/i.test(rgb);return isOk;}/**
   * Validate RGBA color string.
   *
   * @param rgba - Unknown string that may contain a color.
   *
   * @returns True if the string is valid, false otherwise.
   */function isValidRGBA$3(rgba){rgba=rgba.replace(' ','');var isOk=/rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),(0?.{1,3})\)/i.test(rgba);return isOk;}/**
   * This recursively redirects the prototype of JSON objects to the referenceObject.
   * This is used for default options.
   *
   * @param fields - Names of properties to be bridged.
   * @param referenceObject - The original object.
   *
   * @returns A new object inheriting from the referenceObject.
   */function selectiveBridgeObject$3(fields,referenceObject){if(referenceObject!==null&&_typeof_1$3(referenceObject)==='object'){// !!! typeof null === 'object'
  var objectTo=Object.create(referenceObject);for(var i=0;i<fields.length;i++){if(Object.prototype.hasOwnProperty.call(referenceObject,fields[i])){if(_typeof_1$3(referenceObject[fields[i]])=='object'){objectTo[fields[i]]=bridgeObject$3(referenceObject[fields[i]]);}}}return objectTo;}else{return null;}}/**
   * This recursively redirects the prototype of JSON objects to the referenceObject.
   * This is used for default options.
   *
   * @param referenceObject - The original object.
   *
   * @returns The Element if the referenceObject is an Element, or a new object inheriting from the referenceObject.
   */function bridgeObject$3(referenceObject){if(referenceObject===null||_typeof_1$3(referenceObject)!=='object'){return null;}if(referenceObject instanceof Element){// Avoid bridging DOM objects
  return referenceObject;}var objectTo=Object.create(referenceObject);for(var i in referenceObject){if(Object.prototype.hasOwnProperty.call(referenceObject,i)){if(_typeof_1$3(referenceObject[i])=='object'){objectTo[i]=bridgeObject$3(referenceObject[i]);}}}return objectTo;}/**
   * This method provides a stable sort implementation, very fast for presorted data.
   *
   * @param a - The array to be sorted (in-place).
   * @param compare - An order comparator.
   *
   * @returns The argument a.
   */function insertSort$3(a,compare){for(var i=0;i<a.length;i++){var k=a[i];var j=void 0;for(j=i;j>0&&compare(k,a[j-1])<0;j--){a[j]=a[j-1];}a[j]=k;}return a;}/**
   * This is used to set the options of subobjects in the options object.
   *
   * A requirement of these subobjects is that they have an 'enabled' element
   * which is optional for the user but mandatory for the program.
   *
   * The added value here of the merge is that option 'enabled' is set as required.
   *
   * @param mergeTarget - Either this.options or the options used for the groups.
   * @param options - Options.
   * @param option - Option key in the options argument.
   * @param globalOptions - Global options, passed in to determine value of option 'enabled'.
   */function mergeOptions$3(mergeTarget,options,option){var globalOptions=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// Local helpers
  var isPresent=function isPresent(obj){return obj!==null&&obj!==undefined;};var isObject=function isObject(obj){return obj!==null&&_typeof_1$3(obj)==='object';};// https://stackoverflow.com/a/34491287/1223531
  var isEmpty=function isEmpty(obj){for(var x in obj){if(Object.prototype.hasOwnProperty.call(obj,x)){return false;}}return true;};// Guards
  if(!isObject(mergeTarget)){throw new Error('Parameter mergeTarget must be an object');}if(!isObject(options)){throw new Error('Parameter options must be an object');}if(!isPresent(option)){throw new Error('Parameter option must have a value');}if(!isObject(globalOptions)){throw new Error('Parameter globalOptions must be an object');}//
  // Actual merge routine, separated from main logic
  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.
  //
  var doMerge=function doMerge(target,options,option){if(!isObject(target[option])){target[option]={};}var src=options[option];var dst=target[option];for(var prop in src){if(Object.prototype.hasOwnProperty.call(src,prop)){dst[prop]=src[prop];}}};// Local initialization
  var srcOption=options[option];var globalPassed=isObject(globalOptions)&&!isEmpty(globalOptions);var globalOption=globalPassed?globalOptions[option]:undefined;var globalEnabled=globalOption?globalOption.enabled:undefined;/////////////////////////////////////////
  // Main routine
  /////////////////////////////////////////
  if(srcOption===undefined){return;// Nothing to do
  }if(typeof srcOption==='boolean'){if(!isObject(mergeTarget[option])){mergeTarget[option]={};}mergeTarget[option].enabled=srcOption;return;}if(srcOption===null&&!isObject(mergeTarget[option])){// If possible, explicit copy from globals
  if(isPresent(globalOption)){mergeTarget[option]=Object.create(globalOption);}else{return;// Nothing to do
  }}if(!isObject(srcOption)){return;}//
  // Ensure that 'enabled' is properly set. It is required internally
  // Note that the value from options will always overwrite the existing value
  //
  var enabled=true;// default value
  if(srcOption.enabled!==undefined){enabled=srcOption.enabled;}else{// Take from globals, if present
  if(globalEnabled!==undefined){enabled=globalOption.enabled;}}doMerge(mergeTarget,options,option);mergeTarget[option].enabled=enabled;}/**
   * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses
   * this function will then iterate in both directions over this sorted list to find all visible items.
   *
   * @param orderedItems - Items ordered by start
   * @param comparator - -1 is lower, 0 is equal, 1 is higher
   * @param field - Property name on an item (i.e. item[field]).
   * @param field2 - Second property name on an item (i.e. item[field][field2]).
   *
   * @returns Index of the found item or -1 if nothing was found.
   */function binarySearchCustom$3(orderedItems,comparator,field,field2){var maxIterations=10000;var iteration=0;var low=0;var high=orderedItems.length-1;while(low<=high&&iteration<maxIterations){var middle=Math.floor((low+high)/2);var item=orderedItems[middle];var _value3=field2===undefined?item[field]:item[field][field2];var searchResult=comparator(_value3);if(searchResult==0){// jihaa, found a visible item!
  return middle;}else if(searchResult==-1){// it is too small --> increase low
  low=middle+1;}else{// it is too big --> decrease high
  high=middle-1;}iteration++;}return -1;}/**
   * This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of
   * two values, we return either the one before or the one after, depending on user input
   * If it is found, we return the index, else -1.
   *
   * @param orderedItems - Sorted array.
   * @param target - The searched value.
   * @param field - Name of the property in items to be searched.
   * @param sidePreference - If the target is between two values, should the index of the before or the after be returned?
   * @param comparator - An optional comparator, returning -1, 0, 1 for <, ===, >.
   *
   * @returns The index of found value or -1 if nothing was found.
   */function binarySearchValue$3(orderedItems,target,field,sidePreference,comparator){var maxIterations=10000;var iteration=0;var low=0;var high=orderedItems.length-1;var prevValue;var value;var nextValue;var middle;comparator=comparator!=undefined?comparator:function(a,b){return a==b?0:a<b?-1:1;};while(low<=high&&iteration<maxIterations){// get a new guess
  middle=Math.floor(0.5*(high+low));prevValue=orderedItems[Math.max(0,middle-1)][field];value=orderedItems[middle][field];nextValue=orderedItems[Math.min(orderedItems.length-1,middle+1)][field];if(comparator(value,target)==0){// we found the target
  return middle;}else if(comparator(prevValue,target)<0&&comparator(value,target)>0){// target is in between of the previous and the current
  return sidePreference=='before'?Math.max(0,middle-1):middle;}else if(comparator(value,target)<0&&comparator(nextValue,target)>0){// target is in between of the current and the next
  return sidePreference=='before'?middle:Math.min(orderedItems.length-1,middle+1);}else{// didnt find the target, we need to change our boundaries.
  if(comparator(value,target)<0){// it is too small --> increase low
  low=middle+1;}else{// it is too big --> decrease high
  high=middle-1;}}iteration++;}// didnt find anything. Return -1.
  return -1;}/*
   * Easing Functions.
   * Only considering the t value for the range [0, 1] => [0, 1].
   *
   * Inspiration: from http://gizma.com/easing/
   * https://gist.github.com/gre/1650294
   */var easingFunctions$3={/**
     * no easing, no acceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */linear:function linear(t){return t;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInQuad:function easeInQuad(t){return t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutQuad:function easeOutQuad(t){return t*(2-t);},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutQuad:function easeInOutQuad(t){return t<0.5?2*t*t:-1+(4-2*t)*t;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInCubic:function easeInCubic(t){return t*t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutCubic:function easeOutCubic(t){return --t*t*t+1;},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutCubic:function easeInOutCubic(t){return t<0.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInQuart:function easeInQuart(t){return t*t*t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutQuart:function easeOutQuart(t){return 1- --t*t*t*t;},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutQuart:function easeInOutQuart(t){return t<0.5?8*t*t*t*t:1-8*--t*t*t*t;},/**
     * accelerating from zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInQuint:function easeInQuint(t){return t*t*t*t*t;},/**
     * decelerating to zero velocity
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeOutQuint:function easeOutQuint(t){return 1+--t*t*t*t*t;},/**
     * acceleration until halfway, then deceleration
     *
     * @param t - Time.
     *
     * @returns Value at time t.
     */easeInOutQuint:function easeInOutQuint(t){return t<0.5?16*t*t*t*t*t:1+16*--t*t*t*t*t;}};/**
   * Experimentaly compute the width of the scrollbar for this browser.
   *
   * @returns The width in pixels.
   */function getScrollBarWidth$3(){var inner=document.createElement('p');inner.style.width='100%';inner.style.height='200px';var outer=document.createElement('div');outer.style.position='absolute';outer.style.top='0px';outer.style.left='0px';outer.style.visibility='hidden';outer.style.width='200px';outer.style.height='150px';outer.style.overflow='hidden';outer.appendChild(inner);document.body.appendChild(outer);var w1=inner.offsetWidth;outer.style.overflow='scroll';var w2=inner.offsetWidth;if(w1==w2){w2=outer.clientWidth;}document.body.removeChild(outer);return w1-w2;}// @TODO: This doesn't work properly.
  // It works only for single property objects,
  // otherwise it combines all of the types in a union.
  // export function topMost<K1 extends string, V1> (
  //   pile: Record<K1, undefined | V1>[],
  //   accessors: K1 | [K1]
  // ): undefined | V1
  // export function topMost<K1 extends string, K2 extends string, V1, V2> (
  //   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2>>[],
  //   accessors: [K1, K2]
  // ): undefined | V1 | V2
  // export function topMost<K1 extends string, K2 extends string, K3 extends string, V1, V2, V3> (
  //   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2 | Record<K3, undefined | V3>>>[],
  //   accessors: [K1, K2, K3]
  // ): undefined | V1 | V2 | V3
  /**
   * Get the top most property value from a pile of objects.
   *
   * @param pile - Array of objects, no required format.
   * @param accessors - Array of property names (e.g. object['foo']['bar'] → ['foo', 'bar']).
   *
   * @returns Value of the property with given accessors path from the first pile item where it's not undefined.
   */function topMost$3(pile,accessors){var candidate;if(!Array.isArray(accessors)){accessors=[accessors];}var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=pile[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var member=_step.value;if(member){candidate=member[accessors[0]];for(var i=1;i<accessors.length;i++){if(candidate){candidate=candidate[accessors[i]];}}if(typeof candidate!=='undefined'){break;}}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return candidate;}var util$4=/*#__PURE__*/Object.freeze({isNumber:isNumber$4,recursiveDOMDelete:recursiveDOMDelete$3,isString:isString$4,isObject:isObject$3,isDate:isDate$3,isMoment:isMoment$4,fillIfDefined:fillIfDefined$3,extend:extend$3,selectiveExtend:selectiveExtend$3,selectiveDeepExtend:selectiveDeepExtend$3,selectiveNotDeepExtend:selectiveNotDeepExtend$3,deepExtend:deepExtend$3,equalArray:equalArray$3,convert:convert$4,getType:getType$4,copyAndExtendArray:copyAndExtendArray$3,copyArray:copyArray$3,getAbsoluteLeft:getAbsoluteLeft$3,getAbsoluteRight:getAbsoluteRight$3,getAbsoluteTop:getAbsoluteTop$3,addClassName:addClassName$3,removeClassName:removeClassName$3,forEach:forEach$3,toArray:toArray$3,updateProperty:updateProperty$3,throttle:throttle$3,addEventListener:addEventListener$3,removeEventListener:removeEventListener$3,preventDefault:preventDefault$3,getTarget:getTarget$3,hasParent:hasParent$3,option:option$3,hexToRGB:hexToRGB$3,overrideOpacity:overrideOpacity$3,RGBToHex:RGBToHex$3,parseColor:parseColor$3,RGBToHSV:RGBToHSV$3,addCssText:addCssText$3,removeCssText:removeCssText$3,HSVToRGB:HSVToRGB$3,HSVToHex:HSVToHex$3,hexToHSV:hexToHSV$3,isValidHex:isValidHex$3,isValidRGB:isValidRGB$3,isValidRGBA:isValidRGBA$3,selectiveBridgeObject:selectiveBridgeObject$3,bridgeObject:bridgeObject$3,insertSort:insertSort$3,mergeOptions:mergeOptions$3,binarySearchCustom:binarySearchCustom$3,binarySearchValue:binarySearchValue$3,easingFunctions:easingFunctions$3,getScrollBarWidth:getScrollBarWidth$3,topMost:topMost$3,randomUUID:uuid4$4});// New API (tree shakeable).
  var commonjsGlobal$1$3=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function commonjsRequire$1$3(){throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');}function createCommonjsModule$1$4(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var DOMutil$3=createCommonjsModule$1$4(function(module,exports){// DOM utility methods
  /**
     * this prepares the JSON container for allocating SVG elements
     * @param {Object} JSONcontainer
     * @private
     */exports.prepareElements=function(JSONcontainer){// cleanup the redundant svgElements;
  for(var elementType in JSONcontainer){if(JSONcontainer.hasOwnProperty(elementType)){JSONcontainer[elementType].redundant=JSONcontainer[elementType].used;JSONcontainer[elementType].used=[];}}};/**
     * this cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from
     * which to remove the redundant elements.
     *
     * @param {Object} JSONcontainer
     * @private
     */exports.cleanupElements=function(JSONcontainer){// cleanup the redundant svgElements;
  for(var elementType in JSONcontainer){if(JSONcontainer.hasOwnProperty(elementType)){if(JSONcontainer[elementType].redundant){for(var i=0;i<JSONcontainer[elementType].redundant.length;i++){JSONcontainer[elementType].redundant[i].parentNode.removeChild(JSONcontainer[elementType].redundant[i]);}JSONcontainer[elementType].redundant=[];}}}};/**
     * Ensures that all elements are removed first up so they can be recreated cleanly
     * @param {Object} JSONcontainer
     */exports.resetElements=function(JSONcontainer){exports.prepareElements(JSONcontainer);exports.cleanupElements(JSONcontainer);exports.prepareElements(JSONcontainer);};/**
     * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer
     * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.
     *
     * @param {string} elementType
     * @param {Object} JSONcontainer
     * @param {Object} svgContainer
     * @returns {Element}
     * @private
     */exports.getSVGElement=function(elementType,JSONcontainer,svgContainer){var element;// allocate SVG element, if it doesnt yet exist, create one.
  if(JSONcontainer.hasOwnProperty(elementType)){// this element has been created before
  // check if there is an redundant element
  if(JSONcontainer[elementType].redundant.length>0){element=JSONcontainer[elementType].redundant[0];JSONcontainer[elementType].redundant.shift();}else{// create a new element and add it to the SVG
  element=document.createElementNS('http://www.w3.org/2000/svg',elementType);svgContainer.appendChild(element);}}else{// create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.
  element=document.createElementNS('http://www.w3.org/2000/svg',elementType);JSONcontainer[elementType]={used:[],redundant:[]};svgContainer.appendChild(element);}JSONcontainer[elementType].used.push(element);return element;};/**
     * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer
     * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.
     *
     * @param {string} elementType
     * @param {Object} JSONcontainer
     * @param {Element} DOMContainer
     * @param {Element} insertBefore
     * @returns {*}
     */exports.getDOMElement=function(elementType,JSONcontainer,DOMContainer,insertBefore){var element;// allocate DOM element, if it doesnt yet exist, create one.
  if(JSONcontainer.hasOwnProperty(elementType)){// this element has been created before
  // check if there is an redundant element
  if(JSONcontainer[elementType].redundant.length>0){element=JSONcontainer[elementType].redundant[0];JSONcontainer[elementType].redundant.shift();}else{// create a new element and add it to the SVG
  element=document.createElement(elementType);if(insertBefore!==undefined){DOMContainer.insertBefore(element,insertBefore);}else{DOMContainer.appendChild(element);}}}else{// create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.
  element=document.createElement(elementType);JSONcontainer[elementType]={used:[],redundant:[]};if(insertBefore!==undefined){DOMContainer.insertBefore(element,insertBefore);}else{DOMContainer.appendChild(element);}}JSONcontainer[elementType].used.push(element);return element;};/**
     * Draw a point object. This is a separate function because it can also be called by the legend.
     * The reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions
     * as well.
     *
     * @param {number} x
     * @param {number} y
     * @param {Object} groupTemplate: A template containing the necessary information to draw the datapoint e.g., {style: 'circle', size: 5, className: 'className' }
     * @param {Object} JSONcontainer
     * @param {Object} svgContainer
     * @param {Object} labelObj
     * @returns {vis.PointItem}
     */exports.drawPoint=function(x,y,groupTemplate,JSONcontainer,svgContainer,labelObj){var point;if(groupTemplate.style=='circle'){point=exports.getSVGElement('circle',JSONcontainer,svgContainer);point.setAttributeNS(null,"cx",x);point.setAttributeNS(null,"cy",y);point.setAttributeNS(null,"r",0.5*groupTemplate.size);}else{point=exports.getSVGElement('rect',JSONcontainer,svgContainer);point.setAttributeNS(null,"x",x-0.5*groupTemplate.size);point.setAttributeNS(null,"y",y-0.5*groupTemplate.size);point.setAttributeNS(null,"width",groupTemplate.size);point.setAttributeNS(null,"height",groupTemplate.size);}if(groupTemplate.styles!==undefined){point.setAttributeNS(null,"style",groupTemplate.styles);}point.setAttributeNS(null,"class",groupTemplate.className+" vis-point");//handle label
  if(labelObj){var label=exports.getSVGElement('text',JSONcontainer,svgContainer);if(labelObj.xOffset){x=x+labelObj.xOffset;}if(labelObj.yOffset){y=y+labelObj.yOffset;}if(labelObj.content){label.textContent=labelObj.content;}if(labelObj.className){label.setAttributeNS(null,"class",labelObj.className+" vis-label");}label.setAttributeNS(null,"x",x);label.setAttributeNS(null,"y",y);}return point;};/**
     * draw a bar SVG element centered on the X coordinate
     *
     * @param {number} x
     * @param {number} y
     * @param {number} width
     * @param {number} height
     * @param {string} className
     * @param {Object} JSONcontainer
     * @param {Object} svgContainer
     * @param {string} style
     */exports.drawBar=function(x,y,width,height,className,JSONcontainer,svgContainer,style){if(height!=0){if(height<0){height*=-1;y-=height;}var rect=exports.getSVGElement('rect',JSONcontainer,svgContainer);rect.setAttributeNS(null,"x",x-0.5*width);rect.setAttributeNS(null,"y",y);rect.setAttributeNS(null,"width",width);rect.setAttributeNS(null,"height",height);rect.setAttributeNS(null,"class",className);if(style){rect.setAttributeNS(null,"style",style);}}};});var DOMutil_1$2=DOMutil$3.prepareElements;var DOMutil_2$2=DOMutil$3.cleanupElements;var DOMutil_3$2=DOMutil$3.resetElements;var DOMutil_4$2=DOMutil$3.getSVGElement;var DOMutil_5$2=DOMutil$3.getDOMElement;var DOMutil_6$2=DOMutil$3.drawPoint;var DOMutil_7$2=DOMutil$3.drawBar;/** 
   * vis-data - data
   * http://visjs.org/
   * 
   * Manage unstructured data using DataSet. Add, update, and remove data, and listen for changes in the data.
   * 
   * @version 6.1.0
   * @date    2019-07-16T13:37:00Z
   * 
   * @copyright (c) 2011-2017 Almende B.V, http://almende.com
   * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
   * 
   * @license 
   * vis.js is dual licensed under both
   * 
   *   1. The Apache 2.0 License
   *      http://www.apache.org/licenses/LICENSE-2.0
   * 
   *   and
   * 
   *   2. The MIT License
   *      http://opensource.org/licenses/MIT
   * 
   * vis.js may be distributed under either license.
   */function _defineProperty$1$2(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var defineProperty$1$2=_defineProperty$1$2;function createCommonjsModule$2$3(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var _typeof_1$1$2=createCommonjsModule$2$3(function(module){function _typeof2(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof2=function _typeof2(obj){return typeof obj;};}else{_typeof2=function _typeof2(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof2(obj);}function _typeof(obj){if(typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"){module.exports=_typeof=function _typeof(obj){return _typeof2(obj);};}else{module.exports=_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof2(obj);};}return _typeof(obj);}module.exports=_typeof;});function _classCallCheck$3(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var classCallCheck$2=_classCallCheck$3;function _defineProperties$3(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass$3(Constructor,protoProps,staticProps){if(protoProps)_defineProperties$3(Constructor.prototype,protoProps);if(staticProps)_defineProperties$3(Constructor,staticProps);return Constructor;}var createClass$2=_createClass$3;function _assertThisInitialized$3(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}var assertThisInitialized$2=_assertThisInitialized$3;function _possibleConstructorReturn$2(self,call){if(call&&(_typeof_1$1$2(call)==="object"||typeof call==="function")){return call;}return assertThisInitialized$2(self);}var possibleConstructorReturn$2=_possibleConstructorReturn$2;var getPrototypeOf$2=createCommonjsModule$2$3(function(module){function _getPrototypeOf(o){module.exports=_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}module.exports=_getPrototypeOf;});var setPrototypeOf$2=createCommonjsModule$2$3(function(module){function _setPrototypeOf(o,p){module.exports=_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}module.exports=_setPrototypeOf;});function _inherits$2(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)setPrototypeOf$2(subClass,superClass);}var inherits$2=_inherits$2;// Maps for number <-> hex string conversion
  var byteToHex$2$4=[];for(var i$2$4=0;i$2$4<256;i$2$4++){byteToHex$2$4[i$2$4]=(i$2$4+0x100).toString(16).substr(1);}/**
   * Represent binary UUID into it's string representation.
   *
   * @param buf - Buffer containing UUID bytes.
   * @param offset - Offset from the start of the buffer where the UUID is saved (not needed if the buffer starts with the UUID).
   *
   * @returns String representation of the UUID.
   */function stringifyUUID$1$3(buf,offset){var i=offset||0;var bth=byteToHex$2$4;return bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]];}/**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */var random$1$4=function(){if(typeof crypto!=='undefined'&&crypto.getRandomValues){// WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
  // Moderately fast, high quality
  var _rnds8=new Uint8Array(16);return function whatwgRNG(){crypto.getRandomValues(_rnds8);return _rnds8;};}// Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().
  // It's fast, but is of unspecified quality.
  var _rnds=new Array(16);return function(){for(var i=0,r;i<16;i++){if((i&0x03)===0){r=Math.random()*0x100000000;}_rnds[i]=r>>>((i&0x03)<<3)&0xff;}return _rnds;};//     uuid.js
  //
  //     Copyright (c) 2010-2012 Robert Kieffer
  //     MIT License - http://opensource.org/licenses/mit-license.php
  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  // return require('./rng');
  }();var byteToHex$1$1$4=[];for(var i$1$1$4=0;i$1$1$4<256;i$1$1$4++){byteToHex$1$1$4[i$1$1$4]=(i$1$1$4+0x100).toString(16).substr(1);}// **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq
  var seedBytes$1$4=random$1$4();// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var defaultNodeId$1$4=[seedBytes$1$4[0]|0x01,seedBytes$1$4[1],seedBytes$1$4[2],seedBytes$1$4[3],seedBytes$1$4[4],seedBytes$1$4[5]];// Per 4.2.2, randomize (14 bit) clockseq
  var defaultClockseq$1$4=(seedBytes$1$4[6]<<8|seedBytes$1$4[7])&0x3fff;// Previous uuid creation time
  /**
   * UUIDv4 options.
   */ /**
   * Generate UUIDv4
   *
   * @param options - Options to be used instead of default generated values.
   * String 'binary' is a shorthand for uuid4({}, new Array(16)).
   * @param buf - If present the buffer will be filled with the generated UUID.
   * @param offset - Offset of the UUID from the start of the buffer.
   *
   * @returns UUIDv4
   */function uuid4$1$3(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var buf=arguments.length>1?arguments[1]:undefined;var offset=arguments.length>2?arguments[2]:undefined;// Deprecated - 'format' argument, as supported in v1.2
  var i=buf&&offset||0;if(typeof options==='string'){buf=options==='binary'?new Array(16):undefined;options={};}var rnds=options.random||(options.rng||random$1$4)();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;// Copy bytes to buffer, if provided
  if(buf){for(var ii=0;ii<16;ii++){buf[i+ii]=rnds[ii];}}return buf||stringifyUUID$1$3(rnds);}// Rollup will complain about mixing default and named exports in UMD build,
  function _typeof$3(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$3=function(obj){return typeof obj;};}else{_typeof$3=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$3(obj);}var commonjsGlobal$2$3=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function commonjsRequire$2$3(){throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');}function createCommonjsModule$1$1$2(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var moment$1$3=createCommonjsModule$1$1$2(function(module,exports){(function(global,factory){module.exports=factory();})(commonjsGlobal$2$3,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else{var k;for(k in obj){if(obj.hasOwnProperty(k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
  return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m);var parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties=hooks.momentProperties=[];function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i=0;i<momentProperties.length;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}var updateInProgress=false;// Moment prototype object
  function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
  // objects.
  if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function absFloor(number){if(number<0){// -0 -> 0
  return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}// compare two arrays, return the number of differences
  function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg='';if(typeof arguments[i]==='object'){arg+='\n['+i+'] ';for(var key in arguments[0]){arg+=key+': '+arguments[0][key]+', ';}arg=arg.slice(0,-2);// Remove trailing comma and space
  }else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
  // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
  // TODO: Remove "ordinalParse" fallback in next major release.
  this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
  res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d';var defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj){units.push({unit:u,priority:priorities[u]});}units.sort(function(a,b){return a.priority-b.priority;});return units;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions={};var formatTokenFunctions={};// token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
  function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var match1=/\d/;//       0 - 9
  var match2=/\d\d/;//      00 - 99
  var match3=/\d{3}/;//     000 - 999
  var match4=/\d{4}/;//    0000 - 9999
  var match6=/[+-]?\d{6}/;// -999999 - 999999
  var match1to2=/\d\d?/;//       0 - 99
  var match3to4=/\d\d\d\d?/;//     999 - 9999
  var match5to6=/\d\d\d\d\d\d?/;//   99999 - 999999
  var match1to3=/\d{1,3}/;//       0 - 999
  var match1to4=/\d{1,4}/;//       0 - 9999
  var match1to6=/[+-]?\d{1,6}/;// -999999 - 999999
  var matchUnsigned=/\d+/;//       0 - inf
  var matchSigned=/[+-]?\d+/;//    -inf - inf
  var matchOffset=/Z|[+-]\d\d:?\d\d/gi;// +00:00 -00:00 +0000 -0000 or Z
  var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;// +00 -00 +00:00 -00:00 +0000 -0000 or Z
  var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;// 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  var matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;var regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0;var MONTH=1;var DATE=2;var HOUR=3;var MINUTE=4;var SECOND=5;var MILLISECOND=6;var WEEK=7;var WEEKDAY=8;// FORMATTING
  addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?''+y:'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
  addUnitAlias('year','y');// PRIORITIES
  addUnitPriority('year',1);// PARSING
  addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
  function daysInYear(year){return isLeapYear(year)?366:365;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}// HOOKS
  hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
  var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else{return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else{mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
  function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(typeof units==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units);for(var i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function(o){// I know
  var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
  addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
  addUnitAlias('month','M');// PRIORITY
  addUnitPriority('month',8);// PARSING
  addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
  if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
  var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
  this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
  // Sorting makes sure if one month (or abbr) is a prefix of another
  // see sorting in computeMonthsParse
  for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
  function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
  return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
  if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else{return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}var defaultMonthsShortRegex=matchWord;function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}var defaultMonthsRegex=matchWord;function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
  // will match the longer piece.
  shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
  // https://stackoverflow.com/q/181348
  var date;// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else{date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date;// the Date.UTC function remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){var args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
  args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else{date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
  function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
  fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
  fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
  addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
  addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
  addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
  addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
  // LOCALES
  function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
  doy:6// The week that contains Jan 6th is the first week of the year.
  };function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
  function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
  addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
  addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
  addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
  addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
  if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
  function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
  function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
  function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
  // as a setter, sunday should belong to the previous week.
  if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}var defaultWeekdaysRegex=matchWord;function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}var defaultWeekdaysShortRegex=matchWord;function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}var defaultWeekdaysMinRegex=matchWord;function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);minp=this.weekdaysMin(mom,'');shortp=this.weekdaysShort(mom,'');longp=this.weekdays(mom,'');minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
  // will match the longer piece.
  minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);mixedPieces[i]=regexEscape(mixedPieces[i]);}this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
  function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
  addUnitAlias('hour','h');// PRIORITY
  addUnitPriority('hour',13);// PARSING
  function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
  function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
  // Using charAt should be more compatible.
  return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}// MOMENTS
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour=makeGetSet('Hours',true);var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
  var locales={};var localeFamilies={};var globalLocale;function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){//the next array item is better than a shallower substring of this one
  break;}j--;}i++;}return globalLocale;}function loadLocale(name){var oldLocale=null;// TODO: Find a better way to register and load all the locales in Node
  if(!locales[name]&&'object'!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;var aliasedRequire=commonjsRequire$2$3;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){}}return locales[name];}// This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
  globalLocale=data;}else{if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
  console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else{if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
  // make sure we set the locale AFTER all child locales have been
  // created, so we won't end up with the child locale set.
  getSetGlobalLocale(name);return locales[name];}else{// useful for testing
  delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;// MERGE
  tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;// backwards compat for now: also set the locale
  getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
  if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
  function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
  locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow;var a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// Pick the first defined of two or three arguments.
  function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
  var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
  if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
  if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
  // * if no year, month, day of month are given, default to today
  // * if day of month is given, default month and year
  // * if month is given, default only year
  // * if year is given, don't default anything
  for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
  for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
  if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
  // with parseZone.
  if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
  if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
  // how we interpret now (local, utc, fixed offset). So create
  // a now version of current config (take local/utc/offset flags, and
  // create now).
  weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;var curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
  week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
  weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
  weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to beginning of week
  weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;var isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],// YYYYMM is NOT allowed by the standard
  ['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/]];// iso time formats and regexes
  var isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]];var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;// date from iso format
  function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
  timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
  var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}var obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
  return 0;}else{var hm=parseInt(numOffset,10);var m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
  function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i));if(match){var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else{config._isValid=false;}}// date from iso format or fallback
  function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else{return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else{return;}// Final attempt, use Input Fallback
  hooks.createFromInputFallback(config);}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged and will be removed in an upcoming major release. Please refer to '+'http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// constant that refers to the ISO standard
  hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
  hooks.RFC_2822=function(){};// date from string and format string
  function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
  if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
  var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];// console.log('token', token, 'parsedInput', parsedInput,
  //         'regex', getParseRegexForToken(token, config));
  if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
  if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
  getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
  if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
  config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
  return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
  isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
  return hour;}}// date from string and array of format strings
  function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(!isValid(tempConfig)){continue;}// if there is any input that was not parsed add a penalty for that format
  currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
  currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
  res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
  config._d=new Date(input);}else{hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
  // https://github.com/moment/moment/issues/1423
  c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return createInvalid();}});var prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
  function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){for(var key in m){if(!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}var unitHasDecimal=false;for(var i=0;i<ordering.length;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
  }if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
  this._milliseconds=+milliseconds+seconds*1e3+// 1000
  minutes*6e4+// 1000 * 60
  hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
  // Because of dateAddRemove treats 24 hours as different from a
  // day when working around DST, we need to store them separately
  this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
  // which months you are are talking about, so we have to store
  // it separately.
  this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// FORMATTING
  function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset();var sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
  addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher);if(matches===null){return null;}var chunk=matches[matches.length-1]||[];var parts=(chunk+'').match(chunkOffset)||['-',0,0];var minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
  res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else{return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
  // https://github.com/moment/moment/pull/1871
  return -Math.round(m._d.getTimezoneOffset()/15)*15;}// HOOKS
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset=function(){};// MOMENTS
  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else{this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={};copyConfig(c,this);c=prepareConfig(c);if(c._a){var other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
  var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  var isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
  match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
  };}else if(!!(match=isoRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
  duration={};}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
  // converts floats to ints.
  // inp may be undefined, so careful calling replace on it.
  var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
  return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
  if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}val=typeof val==='string'?+val:val;dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
  return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add');var subtract=createAdder(-1,'subtract');function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// We want to compare the start of today, vs this.
  // Getting start-of-today depends on whether we're local/utc/offset or not.
  var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse';var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
  case'minute':output=(this-that)/6e4;break;// 1000 * 60
  case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
  case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
  case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
  default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){// difference in months
  var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
  anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
  adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
  adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
  return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true;var m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
  if(utc){return this.toDate().toISOString();}else{return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment';var zone='';if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}var prefix='['+func+'("]';var year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';var datetime='-MM-DD[T]HH:mm:ss.SSS';var suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000;var MS_PER_MINUTE=60*MS_PER_SECOND;var MS_PER_HOUR=60*MS_PER_MINUTE;var MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return new Date(y+400,m,d)-MS_PER_400_YEARS;}else{return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else{return Date.UTC(y,m,d);}}function startOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
  return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}// FORMATTING
  addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
  addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
  addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
  addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
  function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
  addFormatToken('Q',0,'Qo','quarter');// ALIASES
  addUnitAlias('quarter','Q');// PRIORITY
  addUnitPriority('quarter',7);// PARSING
  addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
  function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
  addFormatToken('D',['DD',2],'Do','date');// ALIASES
  addUnitAlias('date','D');// PRIORITY
  addUnitPriority('date',9);// PARSING
  addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
  return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
  var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
  addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
  addUnitAlias('dayOfYear','DDD');// PRIORITY
  addUnitPriority('dayOfYear',4);// PARSING
  addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
  // MOMENTS
  function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
  addFormatToken('m',['mm',2],0,'minute');// ALIASES
  addUnitAlias('minute','m');// PRIORITY
  addUnitPriority('minute',14);// PARSING
  addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
  var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
  addFormatToken('s',['ss',2],0,'second');// ALIASES
  addUnitAlias('second','s');// PRIORITY
  addUnitPriority('second',15);// PARSING
  addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
  var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
  addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
  addUnitAlias('millisecond','ms');// PRIORITY
  addUnitPriority('millisecond',16);// PARSING
  addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}// MOMENTS
  var getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
  addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
  function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale();var utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i;var out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0;if(index!=null){return get$1(format,(index+shift)%7,field,'day');}var i;var out=[];for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
  hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
  // check: https://github.com/moment/moment/issues/2166
  if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
  // examples of what that means.
  data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
  monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
  years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
  return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else{// handle milliseconds separately because of floating point math errors (issue #1867)
  days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
  case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
  function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms');var asSeconds=makeAs('s');var asMinutes=makeAs('m');var asHours=makeAs('h');var asDays=makeAs('d');var asWeeks=makeAs('w');var asMonths=makeAs('M');var asQuarters=makeAs('Q');var asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds');var seconds=makeGetter('seconds');var minutes=makeGetter('minutes');var hours=makeGetter('hours');var days=makeGetter('days');var months=makeGetter('months');var years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round;var thresholds={ss:44,// a few seconds to seconds
  s:45,// seconds to minute
  m:45,// minutes to hour
  h:22,// hours to day
  d:26,// days to month
  M:11// months to year
  };// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,locale){var duration=createDuration(posNegDuration).abs();var seconds=round(duration.as('s'));var minutes=round(duration.as('m'));var hours=round(duration.as('h'));var days=round(duration.as('d'));var months=round(duration.as('M'));var years=round(duration.as('y'));var a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days]||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(withSuffix){if(!this.isValid()){return this.localeData().invalidDate();}var locale=this.localeData();var output=relativeTime$1(this,!withSuffix,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
  //  * milliseconds bubble up until they become hours
  //  * days do not bubble at all
  //  * months bubble up until they become years
  // This is because there is no context-free conversion between hours and days
  // (think of clock changes)
  // and also not between days and months (28-31 days per month)
  if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000;var days=abs$1(this._days);var months=abs$1(this._months);var minutes,hours,years;// 3600 seconds -> 60 minutes -> 1 hour
  minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
  years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
  var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';var total=this.asSeconds();if(!total){// this is the same as C#'s (Noda) and python (isodate)...
  // but not other JS (goog.date)
  return 'P0D';}var totalSign=total<0?'-':'';var ymSign=sign(this._months)!==sign(total)?'-':'';var daysSign=sign(this._days)!==sign(total)?'-':'';var hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(Y?ymSign+Y+'Y':'')+(M?ymSign+M+'M':'')+(D?daysSign+D+'D':'')+(h||m||s?'T':'')+(h?hmsSign+h+'H':'')+(m?hmsSign+m+'M':'')+(s?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// Side effect imports
  // FORMATTING
  addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
  addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input,10)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});// Side effect imports
  hooks.version='2.24.0';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
  DATE:'YYYY-MM-DD',// <input type="date" />
  TIME:'HH:mm',// <input type="time" />
  TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
  TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
  WEEK:'GGGG-[W]WW',// <input type="week" />
  MONTH:'YYYY-MM'// <input type="month" />
  };return hooks;});});// Maps for number <-> hex string conversion
  var byteToHex$2$1$2=[];for(var i$2$1$2=0;i$2$1$2<256;i$2$1$2++){byteToHex$2$1$2[i$2$1$2]=(i$2$1$2+0x100).toString(16).substr(1);}/**
   * Generate 16 random bytes to be used as a base for UUID.
   *
   * @ignore
   */var random$1$1$2=function(){if(typeof crypto!=='undefined'&&crypto.getRandomValues){// WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
  // Moderately fast, high quality
  var _rnds8=new Uint8Array(16);return function whatwgRNG(){crypto.getRandomValues(_rnds8);return _rnds8;};}// Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().
  // It's fast, but is of unspecified quality.
  var _rnds=new Array(16);return function(){for(var i=0,r;i<16;i++){if((i&0x03)===0){r=Math.random()*0x100000000;}_rnds[i]=r>>>((i&0x03)<<3)&0xff;}return _rnds;};//     uuid.js
  //
  //     Copyright (c) 2010-2012 Robert Kieffer
  //     MIT License - http://opensource.org/licenses/mit-license.php
  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  // return require('./rng');
  }();var byteToHex$1$1$1$2=[];for(var i$1$1$1$2=0;i$1$1$1$2<256;i$1$1$1$2++){byteToHex$1$1$1$2[i$1$1$1$2]=(i$1$1$1$2+0x100).toString(16).substr(1);}// **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html
  // random #'s we need to init node and clockseq
  var seedBytes$1$1$2=random$1$1$2();// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var defaultNodeId$1$1$2=[seedBytes$1$1$2[0]|0x01,seedBytes$1$1$2[1],seedBytes$1$1$2[2],seedBytes$1$1$2[3],seedBytes$1$1$2[4],seedBytes$1$1$2[5]];// Per 4.2.2, randomize (14 bit) clockseq
  var defaultClockseq$1$1$2=(seedBytes$1$1$2[6]<<8|seedBytes$1$1$2[7])&0x3fff;// Previous uuid creation time
  // for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'
  // code from http://momentjs.com/
  var ASPDateRegex$1$2=/^\/?Date\((-?\d+)/i;// Hex color
  /**
   * Hue, Saturation, Value.
   */ /**
   * Test whether given object is a number
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if number, false otherwise.
   */function isNumber$1$2(value){return value instanceof Number||typeof value==='number';}/**
   * Test whether given object is a string
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if string, false otherwise.
   */function isString$1$2(value){return value instanceof String||typeof value==='string';}/**
   * Test whether given object is a Moment date.
   * @TODO: This is basically a workaround, if Moment was imported property it wouldn't necessary as moment.isMoment is a TS type guard.
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if Moment instance, false otherwise.
   */function isMoment$1$2(value){return moment$1$3.isMoment(value);}/**
   * Convert an object into another type
   *
   * @param object - Value of unknown type.
   * @param type - Name of the desired type.
   *
   * @returns Object in the desired type.
   * @throws Error
   */function convert$1$2(object,type){var match;if(object===undefined){return undefined;}if(object===null){return null;}if(!type){return object;}if(!(typeof type==='string')&&!(type instanceof String)){throw new Error('Type must be a string');}//noinspection FallthroughInSwitchStatementJS
  switch(type){case'boolean':case'Boolean':return Boolean(object);case'number':case'Number':if(isString$1$2(object)&&!isNaN(Date.parse(object))){return moment$1$3(object).valueOf();}else{// @TODO: I don't think that Number and String constructors are a good idea.
  // This could also fail if the object doesn't have valueOf method or if it's redefined.
  // For example: Object.create(null) or { valueOf: 7 }.
  return Number(object.valueOf());}case'string':case'String':return String(object);case'Date':if(isNumber$1$2(object)){return new Date(object);}if(object instanceof Date){return new Date(object.valueOf());}else if(isMoment$1$2(object)){return new Date(object.valueOf());}if(isString$1$2(object)){match=ASPDateRegex$1$2.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1]));// parse number
  }else{return moment$1$3(new Date(object)).toDate();// parse string
  }}else{throw new Error('Cannot convert object of type '+getType$1$2(object)+' to type Date');}case'Moment':if(isNumber$1$2(object)){return moment$1$3(object);}if(object instanceof Date){return moment$1$3(object.valueOf());}else if(isMoment$1$2(object)){return moment$1$3(object);}if(isString$1$2(object)){match=ASPDateRegex$1$2.exec(object);if(match){// object is an ASP date
  return moment$1$3(Number(match[1]));// parse number
  }else{return moment$1$3(object);// parse string
  }}else{throw new Error('Cannot convert object of type '+getType$1$2(object)+' to type Date');}case'ISODate':if(isNumber$1$2(object)){return new Date(object);}else if(object instanceof Date){return object.toISOString();}else if(isMoment$1$2(object)){return object.toDate().toISOString();}else if(isString$1$2(object)){match=ASPDateRegex$1$2.exec(object);if(match){// object is an ASP date
  return new Date(Number(match[1])).toISOString();// parse number
  }else{return moment$1$3(object).format();// ISO 8601
  }}else{throw new Error('Cannot convert object of type '+getType$1$2(object)+' to type ISODate');}case'ASPDate':if(isNumber$1$2(object)){return '/Date('+object+')/';}else if(object instanceof Date){return '/Date('+object.valueOf()+')/';}else if(isString$1$2(object)){match=ASPDateRegex$1$2.exec(object);var _value;if(match){// object is an ASP date
  _value=new Date(Number(match[1])).valueOf();// parse number
  }else{_value=new Date(object).valueOf();// parse string
  }return '/Date('+_value+')/';}else{throw new Error('Cannot convert object of type '+getType$1$2(object)+' to type ASPDate');}default:var never=type;throw new Error("Unknown type ".concat(never));}}/**
   * Get the type of an object, for example exports.getType([]) returns 'Array'
   *
   * @param object - Input value of unknown type.
   *
   * @returns Detected type.
   */function getType$1$2(object){var type=_typeof$3(object);if(type==='object'){if(object===null){return 'null';}if(object instanceof Boolean){return 'Boolean';}if(object instanceof Number){return 'Number';}if(object instanceof String){return 'String';}if(Array.isArray(object)){return 'Array';}if(object instanceof Date){return 'Date';}return 'Object';}if(type==='number'){return 'Number';}if(type==='boolean'){return 'Boolean';}if(type==='string'){return 'String';}if(type===undefined){return 'undefined';}return type;}/**
   * Determine whether a value can be used as an id.
   *
   * @param value - Input value of unknown type.
   *
   * @returns True if the value is valid id, false otherwise.
   */function isId$2(value){return typeof value==='string'||typeof value==='number';}/**
   * A queue.
   *
   * @typeParam T - The type of method names to be replaced by queued versions.
   */var Queue$3=/*#__PURE__*/function(){/**
     * Construct a new Queue.
     *
     * @param options - Queue configuration.
     */function Queue(options){classCallCheck$2(this,Queue);this._queue=[];this._timeout=null;this._extended=null;// options
  this.delay=null;this.max=Infinity;this.setOptions(options);}/**
     * Update the configuration of the queue.
     *
     * @param options - Queue configuration.
     */createClass$2(Queue,[{key:"setOptions",value:function setOptions(options){if(options&&typeof options.delay!=='undefined'){this.delay=options.delay;}if(options&&typeof options.max!=='undefined'){this.max=options.max;}this._flushIfNeeded();}/**
       * Extend an object with queuing functionality.
       * The object will be extended with a function flush, and the methods provided in options.replace will be replaced with queued ones.
       *
       * @param object - The object to be extended.
       * @param options - Additional options.
       *
       * @returns The created queue.
       */},{key:"destroy",/**
       * Destroy the queue. The queue will first flush all queued actions, and in case it has extended an object, will restore the original object.
       */value:function destroy(){this.flush();if(this._extended){var object=this._extended.object;var methods=this._extended.methods;for(var i=0;i<methods.length;i++){var method=methods[i];if(method.original){object[method.name]=method.original;}else{// @TODO: better solution?
  delete object[method.name];}}this._extended=null;}}/**
       * Replace a method on an object with a queued version.
       *
       * @param object - Object having the method.
       * @param method - The method name.
       */},{key:"replace",value:function replace(object,method){var me=this;var original=object[method];if(!original){throw new Error('Method '+method+' undefined');}object[method]=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}// add this call to the queue
  me.queue({args:args,fn:original,context:this});};}/**
       * Queue a call.
       *
       * @param entry - The function or entry to be queued.
       */},{key:"queue",value:function queue(entry){if(typeof entry==='function'){this._queue.push({fn:entry});}else{this._queue.push(entry);}this._flushIfNeeded();}/**
       * Check whether the queue needs to be flushed.
       */},{key:"_flushIfNeeded",value:function _flushIfNeeded(){var _this=this;// flush when the maximum is exceeded.
  if(this._queue.length>this.max){this.flush();}// flush after a period of inactivity when a delay is configured
  if(this._timeout!=null){clearTimeout(this._timeout);this._timeout=null;}if(this.queue.length>0&&typeof this.delay==='number'){this._timeout=setTimeout(function(){_this.flush();},this.delay);}}/**
       * Flush all queued calls
       */},{key:"flush",value:function flush(){this._queue.splice(0).forEach(function(entry){entry.fn.apply(entry.context||entry.fn,entry.args||[]);});}}],[{key:"extend",value:function extend(object,options){var queue=new Queue(options);if(object.flush!==undefined){throw new Error('Target object already has a property flush');}object.flush=function(){queue.flush();};var methods=[{name:'flush',original:undefined}];if(options&&options.replace){for(var i=0;i<options.replace.length;i++){var name=options.replace[i];methods.push({name:name,// @TODO: better solution?
  original:object[name]});// @TODO: better solution?
  queue.replace(object,name);}}queue._extended={object:object,methods:methods};return queue;}}]);return Queue;}();function _arrayWithoutHoles$1$2(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}var arrayWithoutHoles$1$2=_arrayWithoutHoles$1$2;function _iterableToArray$1$2(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}var iterableToArray$1$2=_iterableToArray$1$2;function _nonIterableSpread$1$2(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var nonIterableSpread$1$2=_nonIterableSpread$1$2;function _toConsumableArray$1$2(arr){return arrayWithoutHoles$1$2(arr)||iterableToArray$1$2(arr)||nonIterableSpread$1$2();}var toConsumableArray$1$2=_toConsumableArray$1$2;/**
   * [[DataSet]] code that can be reused in [[DataView]] or other similar implementations of [[DataInterface]].
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */var DataSetPart$2=/*#__PURE__*/function(){function DataSetPart(){classCallCheck$2(this,DataSetPart);this._subscribers={'*':[],add:[],remove:[],update:[]};/**
       * @deprecated Use on instead (PS: DataView.subscribe === DataView.on).
       */this.subscribe=DataSetPart.prototype.on;/**
       * @deprecated Use off instead (PS: DataView.unsubscribe === DataView.off).
       */this.unsubscribe=DataSetPart.prototype.off;}/**
     * Trigger an event
     *
     * @param event - Event name.
     * @param payload - Event payload.
     * @param senderId - Id of the sender.
     */createClass$2(DataSetPart,[{key:"_trigger",value:function _trigger(event,payload,senderId){if(event==='*'){throw new Error('Cannot trigger event *');}var subscribers=[].concat(toConsumableArray$1$2(this._subscribers[event]),toConsumableArray$1$2(this._subscribers['*']));for(var i=0,len=subscribers.length;i<len;i++){var subscriber=subscribers[i];if(subscriber.callback){subscriber.callback(event,payload,senderId!=null?senderId:null);}}}/**
       * Subscribe to an event, add an event listener.
       *
       * @param event - Event name.
       * @param callback - Callback method.
       */},{key:"on",value:function on(event,callback){this._subscribers[event].push({callback:callback});}/**
       * Unsubscribe from an event, remove an event listener.
       *
       * @remarks If the same callback was subscribed more than once **all** occurences will be removed.
       *
       * @param event - Event name.
       * @param callback - Callback method.
       */},{key:"off",value:function off(event,callback){this._subscribers[event]=this._subscribers[event].filter(function(listener){return listener.callback!==callback;});}}]);return DataSetPart;}();function ownKeys$1$2(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){keys.push.apply(keys,Object.getOwnPropertySymbols(object));}if(enumerableOnly)keys=keys.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});return keys;}function _objectSpread$1$2(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys$1$2(source,true).forEach(function(key){defineProperty$1$2(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys$1$2(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/**
   * # DataSet
   *
   * Vis.js comes with a flexible DataSet, which can be used to hold and manipulate unstructured data and listen for changes in the data. The DataSet is key/value based. Data items can be added, updated and removed from the DataSet, and one can subscribe to changes in the DataSet. The data in the DataSet can be filtered and ordered, and fields (like dates) can be converted to a specific type. Data can be normalized when appending it to the DataSet as well.
   *
   * ## Example
   *
   * The following example shows how to use a DataSet.
   *
   * ```javascript
   * // create a DataSet
   * var options = {};
   * var data = new vis.DataSet(options);
   *
   * // add items
   * // note that the data items can contain different properties and data formats
   * data.add([
   *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},
   *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},
   *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},
   *   {id: 4, text: 'item 4'}
   * ]);
   *
   * // subscribe to any change in the DataSet
   * data.on('*', function (event, properties, senderId) {
   *   console.log('event', event, properties);
   * });
   *
   * // update an existing item
   * data.update({id: 2, group: 1});
   *
   * // remove an item
   * data.remove(4);
   *
   * // get all ids
   * var ids = data.getIds();
   * console.log('ids', ids);
   *
   * // get a specific item
   * var item1 = data.get(1);
   * console.log('item1', item1);
   *
   * // retrieve a filtered subset of the data
   * var items = data.get({
   *   filter: function (item) {
   *     return item.group == 1;
   *   }
   * });
   * console.log('filtered items', items);
   *
   * // retrieve formatted items
   * var items = data.get({
   *   fields: ['id', 'date'],
   *   type: {
   *     date: 'ISODate'
   *   }
   * });
   * console.log('formatted items', items);
   * ```
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */var DataSet$3=/*#__PURE__*/function(_DataSetPart){inherits$2(DataSet,_DataSetPart);/**
     * Construct a new DataSet.
     *
     * @param data - Initial data or options.
     * @param options - Options (type error if data is also options).
     */function DataSet(data,options){var _this;classCallCheck$2(this,DataSet);_this=possibleConstructorReturn$2(this,getPrototypeOf$2(DataSet).call(this));// correctly read optional arguments
  if(data&&!Array.isArray(data)){options=data;data=[];}_this._options=options||{};_this._data=Object.create({});// map with data indexed by id
  _this.length=0;// number of items in the DataSet
  _this._idProp=_this._options.fieldId||'id';// name of the field containing id
  _this._type={};// internal field types (NOTE: this can differ from this._options.type)
  // all variants of a Date are internally stored as Date, so we can convert
  // from everything to everything (also from ISODate to Number for example)
  if(_this._options.type){var fields=Object.keys(_this._options.type);for(var i=0,len=fields.length;i<len;i++){var field=fields[i];var value=_this._options.type[field];if(value=='Date'||value=='ISODate'||value=='ASPDate'){_this._type[field]='Date';}else{_this._type[field]=value;}}}// add initial data when provided
  if(data&&data.length){_this.add(data);}_this.setOptions(options);return _this;}/**
     * Set new options.
     *
     * @param options - The new options.
     */createClass$2(DataSet,[{key:"setOptions",value:function setOptions(options){if(options&&options.queue!==undefined){if(options.queue===false){// delete queue if loaded
  if(this._queue){this._queue.destroy();delete this._queue;}}else{// create queue and update its options
  if(!this._queue){this._queue=Queue$3.extend(this,{replace:['add','update','remove']});}if(options.queue&&_typeof_1$1$2(options.queue)==='object'){this._queue.setOptions(options.queue);}}}}/**
       * Add a data item or an array with items.
       *
       * After the items are added to the DataSet, the DataSet will trigger an event `add`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       *
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet()
       *
       * // add items
       * const ids = data.add([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { text: 'item without an id' }
       * ])
       *
       * console.log(ids) // [1, 2, '<UUIDv4>']
       * ```
       *
       * @param data - Items to be added (ids will be generated if missing).
       * @param senderId - Sender id.
       *
       * @returns addedIds - Array with the ids (generated if not present) of the added items.
       *
       * @throws When an item with the same id as any of the added items already exists.
       */},{key:"add",value:function add(data,senderId){var addedIds=[];var id;if(Array.isArray(data)){// Array
  for(var i=0,len=data.length;i<len;i++){id=this._addItem(data[i]);addedIds.push(id);}}else if(data&&_typeof_1$1$2(data)==='object'){// Single item
  id=this._addItem(data);addedIds.push(id);}else{throw new Error('Unknown dataType');}if(addedIds.length){this._trigger('add',{items:addedIds},senderId);}return addedIds;}/**
       * Update existing items. When an item does not exist, it will be created
       *
       * The provided properties will be merged in the existing item. When an item does not exist, it will be created.
       *
       * After the items are updated, the DataSet will trigger an event `add` for the added items, and an event `update`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       *
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { id: 3, text: 'item 3' }
       * ])
       *
       * // update items
       * const ids = data.update([
       *   { id: 2, text: 'item 2 (updated)' },
       *   { id: 4, text: 'item 4 (new)' }
       * ])
       *
       * console.log(ids) // [2, 4]
       * ```
       *
       * @param data - Items to be updated (if the id is already present) or added (if the id is missing).
       * @param senderId - Sender id.
       *
       * @returns updatedIds - The ids of the added (these may be newly generated if there was no id in the item from the data) or updated items.
       *
       * @throws When the supplied data is neither an item nor an array of items.
       */},{key:"update",value:function update(data,senderId){var _this2=this;var addedIds=[];var updatedIds=[];var oldData=[];var updatedData=[];var idProp=this._idProp;var addOrUpdate=function addOrUpdate(item){var origId=item[idProp];if(origId!=null&&_this2._data[origId]){var fullItem=item;// it has an id, therefore it is a fullitem
  var oldItem=Object.assign({},_this2._data[origId]);// update item
  var id=_this2._updateItem(fullItem);updatedIds.push(id);updatedData.push(fullItem);oldData.push(oldItem);}else{// add new item
  var _id=_this2._addItem(item);addedIds.push(_id);}};if(Array.isArray(data)){// Array
  for(var i=0,len=data.length;i<len;i++){if(data[i]&&_typeof_1$1$2(data[i])==='object'){addOrUpdate(data[i]);}else{console.warn('Ignoring input item, which is not an object at index '+i);}}}else if(data&&_typeof_1$1$2(data)==='object'){// Single item
  addOrUpdate(data);}else{throw new Error('Unknown dataType');}if(addedIds.length){this._trigger('add',{items:addedIds},senderId);}if(updatedIds.length){var props={items:updatedIds,oldData:oldData,data:updatedData};// TODO: remove deprecated property 'data' some day
  //Object.defineProperty(props, 'data', {
  //  'get': (function() {
  //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');
  //    return updatedData;
  //  }).bind(this)
  //});
  this._trigger('update',props,senderId);}return addedIds.concat(updatedIds);}/** @inheritdoc */},{key:"get",value:function get(first,second){// @TODO: Woudn't it be better to split this into multiple methods?
  // parse the arguments
  var id=undefined;var ids=undefined;var options=undefined;if(isId$2(first)){// get(id [, options])
  id=first;options=second;}else if(Array.isArray(first)){// get(ids [, options])
  ids=first;options=second;}else{// get([, options])
  options=first;}// determine the return type
  var returnType=options&&options.returnType==='Object'?'Object':'Array';// @TODO: WTF is this? Or am I missing something?
  // var returnType
  // if (options && options.returnType) {
  //   var allowedValues = ['Array', 'Object']
  //   returnType =
  //     allowedValues.indexOf(options.returnType) == -1
  //       ? 'Array'
  //       : options.returnType
  // } else {
  //   returnType = 'Array'
  // }
  // build options
  var type=options&&options.type||this._options.type;var filter=options&&options.filter;var items=[];var item=null;var itemIds=null;var itemId=null;// convert items
  if(id!=null){// return a single item
  item=this._getItem(id,type);if(item&&filter&&!filter(item)){item=null;}}else if(ids!=null){// return a subset of items
  for(var i=0,len=ids.length;i<len;i++){item=this._getItem(ids[i],type);if(item!=null&&(!filter||filter(item))){items.push(item);}}}else{// return all items
  itemIds=Object.keys(this._data);for(var _i=0,_len=itemIds.length;_i<_len;_i++){itemId=itemIds[_i];item=this._getItem(itemId,type);if(item!=null&&(!filter||filter(item))){items.push(item);}}}// order the results
  if(options&&options.order&&id==undefined){this._sort(items,options.order);}// filter fields of the items
  if(options&&options.fields){var fields=options.fields;if(id!=undefined&&item!=null){item=this._filterFields(item,fields);}else{for(var _i2=0,_len2=items.length;_i2<_len2;_i2++){items[_i2]=this._filterFields(items[_i2],fields);}}}// return the results
  if(returnType=='Object'){var result={};for(var _i3=0,_len3=items.length;_i3<_len3;_i3++){var resultant=items[_i3];// @TODO: Shoudn't this be this._fieldId?
  // result[resultant.id] = resultant
  var _id2=resultant[this._idProp];result[_id2]=resultant;}return result;}else{if(id!=null){// a single item
  return item;}else{// just return our array
  return items;}}}/** @inheritdoc */},{key:"getIds",value:function getIds(options){var data=this._data;var filter=options&&options.filter;var order=options&&options.order;var type=options&&options.type||this._options.type;var itemIds=Object.keys(data);var ids=[];var item;var items;if(filter){// get filtered items
  if(order){// create ordered list
  items=[];for(var i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];item=this._getItem(id,type);if(filter(item)){items.push(item);}}this._sort(items,order);for(var _i4=0,_len4=items.length;_i4<_len4;_i4++){ids.push(items[_i4][this._idProp]);}}else{// create unordered list
  for(var _i5=0,_len5=itemIds.length;_i5<_len5;_i5++){var _id3=itemIds[_i5];item=this._getItem(_id3,type);if(filter(item)){ids.push(item[this._idProp]);}}}}else{// get all items
  if(order){// create an ordered list
  items=[];for(var _i6=0,_len6=itemIds.length;_i6<_len6;_i6++){var _id4=itemIds[_i6];items.push(data[_id4]);}this._sort(items,order);for(var _i7=0,_len7=items.length;_i7<_len7;_i7++){ids.push(items[_i7][this._idProp]);}}else{// create unordered list
  for(var _i8=0,_len8=itemIds.length;_i8<_len8;_i8++){var _id5=itemIds[_i8];item=data[_id5];ids.push(item[this._idProp]);}}}return ids;}/** @inheritdoc */},{key:"getDataSet",value:function getDataSet(){return this;}/** @inheritdoc */},{key:"forEach",value:function forEach(callback,options){var filter=options&&options.filter;var type=options&&options.type||this._options.type;var data=this._data;var itemIds=Object.keys(data);if(options&&options.order){// execute forEach on ordered list
  var items=this.get(options);for(var i=0,len=items.length;i<len;i++){var item=items[i];var id=item[this._idProp];callback(item,id);}}else{// unordered
  for(var _i9=0,_len9=itemIds.length;_i9<_len9;_i9++){var _id6=itemIds[_i9];var _item=this._getItem(_id6,type);if(!filter||filter(_item)){callback(_item,_id6);}}}}/** @inheritdoc */},{key:"map",value:function map(callback,options){var filter=options&&options.filter;var type=options&&options.type||this._options.type;var mappedItems=[];var data=this._data;var itemIds=Object.keys(data);// convert and filter items
  for(var i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];var item=this._getItem(id,type);if(!filter||filter(item)){mappedItems.push(callback(item,id));}}// order items
  if(options&&options.order){this._sort(mappedItems,options.order);}return mappedItems;}/**
       * Filter the fields of an item.
       *
       * @param item - The item whose fields should be filtered.
       * @param fields - The names of the fields that will be kept.
       *
       * @typeParam K - Field name type.
       *
       * @returns The item without any additional fields.
       */},{key:"_filterFields",value:function _filterFields(item,fields){if(!item){// item is null
  return item;}return (Array.isArray(fields)?// Use the supplied array
  fields:// Use the keys of the supplied object
  Object.keys(fields)).reduce(function(filteredItem,field){filteredItem[field]=item[field];return filteredItem;},{});}/**
       * Sort the provided array with items.
       *
       * @param items - Items to be sorted in place.
       * @param order - A field name or custom sort function.
       *
       * @typeParam T - The type of the items in the items array.
       */},{key:"_sort",value:function _sort(items,order){if(typeof order==='string'){// order by provided field name
  var name=order;// field name
  items.sort(function(a,b){// @TODO: How to treat missing properties?
  var av=a[name];var bv=b[name];return av>bv?1:av<bv?-1:0;});}else if(typeof order==='function'){// order by sort function
  items.sort(order);}else{// TODO: extend order by an Object {field:string, direction:string}
  //       where direction can be 'asc' or 'desc'
  throw new TypeError('Order must be a function or a string');}}/**
       * Remove an item or multiple items by “reference” (only the id is used) or by id.
       *
       * The method ignores removal of non-existing items, and returns an array containing the ids of the items which are actually removed from the DataSet.
       *
       * After the items are removed, the DataSet will trigger an event `remove` for the removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { id: 3, text: 'item 3' }
       * ])
       *
       * // remove items
       * const ids = data.remove([2, { id: 3 }, 4])
       *
       * console.log(ids) // [2, 3]
       * ```
       *
       * @param id - One or more items or ids of items to be removed.
       * @param senderId - Sender id.
       *
       * @returns The ids of the removed items.
       */},{key:"remove",value:function remove(id,senderId){var removedIds=[];var removedItems=[];// force everything to be an array for simplicity
  var ids=Array.isArray(id)?id:[id];for(var i=0,len=ids.length;i<len;i++){var item=this._remove(ids[i]);if(item){var itemId=item[this._idProp];if(itemId!=null){removedIds.push(itemId);removedItems.push(item);}}}if(removedIds.length){this._trigger('remove',{items:removedIds,oldData:removedItems},senderId);}return removedIds;}/**
       * Remove an item by its id or reference.
       *
       * @param id - Id of an item or the item itself.
       *
       * @returns The removed item if removed, null otherwise.
       */},{key:"_remove",value:function _remove(id){// @TODO: It origianlly returned the item although the docs say id.
  // The code expects the item, so probably an error in the docs.
  var ident;// confirm the id to use based on the args type
  if(isId$2(id)){ident=id;}else if(id&&_typeof_1$1$2(id)==='object'){ident=id[this._idProp];// look for the identifier field using ._idProp
  }// do the removing if the item is found
  if(ident!=null&&this._data[ident]){var item=this._data[ident];delete this._data[ident];--this.length;return item;}return null;}/**
       * Clear the entire data set.
       *
       * After the items are removed, the [[DataSet]] will trigger an event `remove` for all removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * @param senderId - Sender id.
       *
       * @returns removedIds - The ids of all removed items.
       */},{key:"clear",value:function clear(senderId){var ids=Object.keys(this._data);var items=[];for(var i=0,len=ids.length;i<len;i++){items.push(this._data[ids[i]]);}this._data={};this.length=0;this._trigger('remove',{items:ids,oldData:items},senderId);return ids;}/**
       * Find the item with maximum value of a specified field.
       *
       * @param field - Name of the property that should be searched for max value.
       *
       * @returns Item containing max value, or null if no items.
       */},{key:"max",value:function max(field){var data=this._data;var itemIds=Object.keys(data);var max=null;var maxField=null;for(var i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];var item=data[id];var itemField=item[field];if(itemField!=null&&(maxField==null||itemField>maxField)){max=item;maxField=itemField;}}return max;}/**
       * Find the item with minimum value of a specified field.
       *
       * @param field - Name of the property that should be searched for min value.
       *
       * @returns Item containing min value, or null if no items.
       */},{key:"min",value:function min(field){var data=this._data;var itemIds=Object.keys(data);var min=null;var minField=null;for(var i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];var item=data[id];var itemField=item[field];if(itemField!=null&&(minField==null||itemField<minField)){min=item;minField=itemField;}}return min;}/**
       * Find all distinct values of a specified field
       *
       * @param prop - The property name whose distinct values should be returned.
       *
       * @returns Unordered array containing all distinct values. Items without specified property are ignored.
       */},{key:"distinct",value:function distinct(prop){var data=this._data;var itemIds=Object.keys(data);var values=[];var fieldType=this._options.type&&this._options.type[prop]||null;var count=0;for(var i=0,len=itemIds.length;i<len;i++){var id=itemIds[i];var item=data[id];var value=item[prop];var exists=false;for(var j=0;j<count;j++){if(values[j]==value){exists=true;break;}}if(!exists&&value!==undefined){values[count]=value;count++;}}if(fieldType){for(var _i10=0,_len10=values.length;_i10<_len10;_i10++){values[_i10]=convert$1$2(values[_i10],fieldType);}}return values;}/**
       * Add a single item. Will fail when an item with the same id already exists.
       *
       * @param item - A new item to be added.
       *
       * @returns Added item's id. An id is generated when it is not present in the item.
       */},{key:"_addItem",value:function _addItem(item){var id=item[this._idProp];if(id!=null){// check whether this id is already taken
  if(this._data[id]){// item already exists
  throw new Error('Cannot add item: item with id '+id+' already exists');}}else{// generate an id
  id=uuid4$1$3();item[this._idProp]=id;}var d={};var fields=Object.keys(item);for(var i=0,len=fields.length;i<len;i++){var field=fields[i];var fieldType=this._type[field];// type may be undefined
  d[field]=convert$1$2(item[field],fieldType);}this._data[id]=d;this.length++;return id;}/**
       * Get an item. Fields can be converted to a specific type
       *
       * @param id - Id of the requested item.
       * @param types - Property name to type name object map of type converstions.
       *
       * @returns The item, optionally after type conversion.
       */},{key:"_getItem",value:function _getItem(id,types){// @TODO: I have no idea how to type this.
  // get the item from the dataset
  var raw=this._data[id];if(!raw){return null;}// convert the items field types
  var converted;var fields=Object.keys(raw);if(types){converted={};for(var i=0,len=fields.length;i<len;i++){var field=fields[i];var value=raw[field];converted[field]=convert$1$2(value,types[field]);}}else{// no field types specified, no converting needed
  converted=_objectSpread$1$2({},raw);}if(converted[this._idProp]==null){converted[this._idProp]=raw.id;}return converted;}/**
       * Update a single item: merge with existing item.
       * Will fail when the item has no id, or when there does not exist an item with the same id.
       *
       * @param item - The new item
       *
       * @returns The id of the updated item.
       */},{key:"_updateItem",value:function _updateItem(item){var id=item[this._idProp];if(id==null){throw new Error('Cannot update item: item has no id (item: '+JSON.stringify(item)+')');}var d=this._data[id];if(!d){// item doesn't exist
  throw new Error('Cannot update item: no item with id '+id+' found');}// merge with current item
  var fields=Object.keys(item);for(var i=0,len=fields.length;i<len;i++){var field=fields[i];var fieldType=this._type[field]// type may be undefined
  ;d[field]=convert$1$2(item[field],fieldType);}return id;}}]);return DataSet;}(DataSetPart$2);/**
   * DataView
   *
   * A DataView offers a filtered and/or formatted view on a DataSet. One can subscribe to changes in a DataView, and easily get filtered or formatted data without having to specify filters and field types all the time.
   *
   * ## Example
   * ```javascript
   * // create a DataSet
   * var data = new vis.DataSet();
   * data.add([
   *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},
   *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},
   *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},
   *   {id: 4, text: 'item 4'}
   * ]);
   *
   * // create a DataView
   * // the view will only contain items having a property group with value 1,
   * // and will only output fields id, text, and date.
   * var view = new vis.DataView(data, {
   *   filter: function (item) {
   *     return (item.group == 1);
   *   },
   *   fields: ['id', 'text', 'date']
   * });
   *
   * // subscribe to any change in the DataView
   * view.on('*', function (event, properties, senderId) {
   *   console.log('event', event, properties);
   * });
   *
   * // update an item in the data set
   * data.update({id: 2, group: 1});
   *
   * // get all ids in the view
   * var ids = view.getIds();
   * console.log('ids', ids); // will output [1, 2]
   *
   * // get all items in the view
   * var items = view.get();
   * ```
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */var DataView$4=/*#__PURE__*/function(_DataSetPart){inherits$2(DataView,_DataSetPart);/**
     * Create a DataView.
     *
     * @param data - The instance containing data (directly or indirectly).
     * @param options - Options to configure this data view.
     */function DataView(data,options){var _this;classCallCheck$2(this,DataView);_this=possibleConstructorReturn$2(this,getPrototypeOf$2(DataView).call(this));/** @inheritdoc */_this.length=0;_this._ids={};// ids of the items currently in memory (just contains a boolean true)
  _this._options=options||{};_this.listener=_this._onEvent.bind(assertThisInitialized$2(_this));_this.setData(data);return _this;}// TODO: implement a function .config() to dynamically update things like configured filter
  // and trigger changes accordingly
  /**
     * Set a data source for the view.
     *
     * @param data - The instance containing data (directly or indirectly).
     */createClass$2(DataView,[{key:"setData",value:function setData(data){if(this._data){// unsubscribe from current dataset
  if(this._data.off){this._data.off('*',this.listener);}// trigger a remove of all items in memory
  var ids=this._data.getIds({filter:this._options.filter});var items=this._data.get(ids);this._ids={};this.length=0;this._trigger('remove',{items:ids,oldData:items});}if(data!=null){this._data=data;// trigger an add of all added items
  var _ids=this._data.getIds({filter:this._options.filter});for(var i=0,len=_ids.length;i<len;i++){var id=_ids[i];this._ids[id]=true;}this.length=_ids.length;this._trigger('add',{items:_ids});}else{this._data=new DataSet$3();}// subscribe to new dataset
  if(this._data.on){this._data.on('*',this.listener);}}/**
       * Refresh the DataView.
       * Useful when the DataView has a filter function containing a variable parameter.
       */},{key:"refresh",value:function refresh(){var ids=this._data.getIds({filter:this._options.filter});var oldIds=Object.keys(this._ids);var newIds={};var addedIds=[];var removedIds=[];var removedItems=[];// check for additions
  for(var i=0,len=ids.length;i<len;i++){var id=ids[i];newIds[id]=true;if(!this._ids[id]){addedIds.push(id);this._ids[id]=true;}}// check for removals
  for(var _i=0,_len=oldIds.length;_i<_len;_i++){var _id=oldIds[_i];var item=this._data.get(_id);if(item==null){// @TODO: Investigate.
  // Doesn't happen during tests or examples.
  // Is it really impossible or could it eventually happen?
  // How to handle it if it does? The types guarantee non-nullable items.
  console.error('If you see this, report it please.');}else if(!newIds[_id]){removedIds.push(_id);removedItems.push(item);delete this._ids[_id];}}this.length+=addedIds.length-removedIds.length;// trigger events
  if(addedIds.length){this._trigger('add',{items:addedIds});}if(removedIds.length){this._trigger('remove',{items:removedIds,oldData:removedItems});}}/** @inheritdoc */},{key:"get",value:function get(first,second){if(this._data==null){return null;}// parse the arguments
  var ids=null;var options;if(isId$2(first)||Array.isArray(first)){ids=first;options=second;}else{options=first;}// extend the options with the default options and provided options
  var viewOptions=Object.assign({},this._options,options);// create a combined filter method when needed
  var thisFilter=this._options.filter;var optionsFilter=options&&options.filter;if(thisFilter&&optionsFilter){viewOptions.filter=function(item){return thisFilter(item)&&optionsFilter(item);};}if(ids==null){return this._data.get(viewOptions);}else{return this._data.get(ids,viewOptions);}}/** @inheritdoc */},{key:"getIds",value:function getIds(options){if(this._data.length){var defaultFilter=this._options.filter;var optionsFilter=options!=null?options.filter:null;var filter;if(optionsFilter){if(defaultFilter){filter=function filter(item){return defaultFilter(item)&&optionsFilter(item);};}else{filter=optionsFilter;}}else{filter=defaultFilter;}return this._data.getIds({filter:filter,order:options&&options.order});}else{return [];}}/** @inheritdoc */},{key:"forEach",value:function forEach(callback,options){if(this._data){var defaultFilter=this._options.filter;var optionsFilter=options&&options.filter;var filter;if(optionsFilter){if(defaultFilter){filter=function filter(item){return defaultFilter(item)&&optionsFilter(item);};}else{filter=optionsFilter;}}else{filter=defaultFilter;}this._data.forEach(callback,{filter:filter,order:options&&options.order});}}/** @inheritdoc */},{key:"map",value:function map(callback,options){if(this._data){var defaultFilter=this._options.filter;var optionsFilter=options&&options.filter;var filter;if(optionsFilter){if(defaultFilter){filter=function filter(item){return defaultFilter(item)&&optionsFilter(item);};}else{filter=optionsFilter;}}else{filter=defaultFilter;}return this._data.map(callback,{filter:filter,order:options&&options.order});}else{return [];}}/** @inheritdoc */},{key:"getDataSet",value:function getDataSet(){return this._data.getDataSet();}/**
       * Event listener. Will propagate all events from the connected data set to the subscribers of the DataView, but will filter the items and only trigger when there are changes in the filtered data set.
       *
       * @param event - The name of the event.
       * @param params - Parameters of the event.
       * @param senderId - Id supplied by the sender.
       */},{key:"_onEvent",value:function _onEvent(event,params,senderId){if(!params||!params.items||!this._data){return;}var ids=params.items;var addedIds=[];var updatedIds=[];var removedIds=[];var oldItems=[];var updatedItems=[];var removedItems=[];switch(event){case'add':// filter the ids of the added items
  for(var i=0,len=ids.length;i<len;i++){var id=ids[i];var item=this.get(id);if(item){this._ids[id]=true;addedIds.push(id);}}break;case'update':// determine the event from the views viewpoint: an updated
  // item can be added, updated, or removed from this view.
  for(var _i2=0,_len2=ids.length;_i2<_len2;_i2++){var _id2=ids[_i2];var _item=this.get(_id2);if(_item){if(this._ids[_id2]){updatedIds.push(_id2);updatedItems.push(params.data[_i2]);oldItems.push(params.oldData[_i2]);}else{this._ids[_id2]=true;addedIds.push(_id2);}}else{if(this._ids[_id2]){delete this._ids[_id2];removedIds.push(_id2);removedItems.push(params.oldData[_i2]);}}}break;case'remove':// filter the ids of the removed items
  for(var _i3=0,_len3=ids.length;_i3<_len3;_i3++){var _id3=ids[_i3];if(this._ids[_id3]){delete this._ids[_id3];removedIds.push(_id3);removedItems.push(params.oldData[_i3]);}}break;}this.length+=addedIds.length-removedIds.length;if(addedIds.length){this._trigger('add',{items:addedIds},senderId);}if(updatedIds.length){this._trigger('update',{items:updatedIds,oldData:oldItems,data:updatedItems},senderId);}if(removedIds.length){this._trigger('remove',{items:removedIds,oldData:removedItems},senderId);}}}]);return DataView;}(DataSetPart$2);var index$3={DataSet:DataSet$3,DataView:DataView$4,Queue:Queue$3};var moment$2$3=createCommonjsModule$1$4(function(module,exports){(function(global,factory){module.exports=factory();})(commonjsGlobal$1$3,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else{var k;for(k in obj){if(obj.hasOwnProperty(k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
  return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m);var parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties=hooks.momentProperties=[];function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i=0;i<momentProperties.length;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}var updateInProgress=false;// Moment prototype object
  function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
  // objects.
  if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function absFloor(number){if(number<0){// -0 -> 0
  return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}// compare two arrays, return the number of differences
  function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg='';if(typeof arguments[i]==='object'){arg+='\n['+i+'] ';for(var key in arguments[0]){arg+=key+': '+arguments[0][key]+', ';}arg=arg.slice(0,-2);// Remove trailing comma and space
  }else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
  // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
  // TODO: Remove "ordinalParse" fallback in next major release.
  this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
  res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d';var defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj){units.push({unit:u,priority:priorities[u]});}units.sort(function(a,b){return a.priority-b.priority;});return units;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions={};var formatTokenFunctions={};// token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
  function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var match1=/\d/;//       0 - 9
  var match2=/\d\d/;//      00 - 99
  var match3=/\d{3}/;//     000 - 999
  var match4=/\d{4}/;//    0000 - 9999
  var match6=/[+-]?\d{6}/;// -999999 - 999999
  var match1to2=/\d\d?/;//       0 - 99
  var match3to4=/\d\d\d\d?/;//     999 - 9999
  var match5to6=/\d\d\d\d\d\d?/;//   99999 - 999999
  var match1to3=/\d{1,3}/;//       0 - 999
  var match1to4=/\d{1,4}/;//       0 - 9999
  var match1to6=/[+-]?\d{1,6}/;// -999999 - 999999
  var matchUnsigned=/\d+/;//       0 - inf
  var matchSigned=/[+-]?\d+/;//    -inf - inf
  var matchOffset=/Z|[+-]\d\d:?\d\d/gi;// +00:00 -00:00 +0000 -0000 or Z
  var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;// +00 -00 +00:00 -00:00 +0000 -0000 or Z
  var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;// 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  var matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;var regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0;var MONTH=1;var DATE=2;var HOUR=3;var MINUTE=4;var SECOND=5;var MILLISECOND=6;var WEEK=7;var WEEKDAY=8;// FORMATTING
  addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?''+y:'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
  addUnitAlias('year','y');// PRIORITIES
  addUnitPriority('year',1);// PARSING
  addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
  function daysInYear(year){return isLeapYear(year)?366:365;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}// HOOKS
  hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
  var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else{return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else{mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
  function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(typeof units==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units);for(var i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function(o){// I know
  var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
  addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
  addUnitAlias('month','M');// PRIORITY
  addUnitPriority('month',8);// PARSING
  addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
  if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
  var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
  this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
  // Sorting makes sure if one month (or abbr) is a prefix of another
  // see sorting in computeMonthsParse
  for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
  function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
  return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
  if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else{return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}var defaultMonthsShortRegex=matchWord;function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}var defaultMonthsRegex=matchWord;function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
  // will match the longer piece.
  shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
  // https://stackoverflow.com/q/181348
  var date;// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else{date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date;// the Date.UTC function remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){var args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
  args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else{date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
  function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
  fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
  fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
  addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
  addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
  addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
  addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
  // LOCALES
  function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
  doy:6// The week that contains Jan 6th is the first week of the year.
  };function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
  function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
  addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
  addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
  addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
  addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
  if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
  function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
  function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
  function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
  // as a setter, sunday should belong to the previous week.
  if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}var defaultWeekdaysRegex=matchWord;function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}var defaultWeekdaysShortRegex=matchWord;function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}var defaultWeekdaysMinRegex=matchWord;function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);minp=this.weekdaysMin(mom,'');shortp=this.weekdaysShort(mom,'');longp=this.weekdays(mom,'');minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
  // will match the longer piece.
  minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);mixedPieces[i]=regexEscape(mixedPieces[i]);}this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
  function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
  addUnitAlias('hour','h');// PRIORITY
  addUnitPriority('hour',13);// PARSING
  function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
  function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
  // Using charAt should be more compatible.
  return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}// MOMENTS
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour=makeGetSet('Hours',true);var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
  var locales={};var localeFamilies={};var globalLocale;function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){//the next array item is better than a shallower substring of this one
  break;}j--;}i++;}return globalLocale;}function loadLocale(name){var oldLocale=null;// TODO: Find a better way to register and load all the locales in Node
  if(!locales[name]&&'object'!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;var aliasedRequire=commonjsRequire$1$3;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){}}return locales[name];}// This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
  globalLocale=data;}else{if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
  console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else{if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
  // make sure we set the locale AFTER all child locales have been
  // created, so we won't end up with the child locale set.
  getSetGlobalLocale(name);return locales[name];}else{// useful for testing
  delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;// MERGE
  tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;// backwards compat for now: also set the locale
  getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
  if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
  function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
  locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow;var a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// Pick the first defined of two or three arguments.
  function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
  var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
  if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
  if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
  // * if no year, month, day of month are given, default to today
  // * if day of month is given, default month and year
  // * if month is given, default only year
  // * if year is given, don't default anything
  for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
  for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
  if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
  // with parseZone.
  if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
  if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
  // how we interpret now (local, utc, fixed offset). So create
  // a now version of current config (take local/utc/offset flags, and
  // create now).
  weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;var curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
  week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
  weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
  weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to beginning of week
  weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;var isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],// YYYYMM is NOT allowed by the standard
  ['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/]];// iso time formats and regexes
  var isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]];var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;// date from iso format
  function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
  timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
  var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}var obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
  return 0;}else{var hm=parseInt(numOffset,10);var m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
  function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i));if(match){var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else{config._isValid=false;}}// date from iso format or fallback
  function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else{return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else{return;}// Final attempt, use Input Fallback
  hooks.createFromInputFallback(config);}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged and will be removed in an upcoming major release. Please refer to '+'http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// constant that refers to the ISO standard
  hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
  hooks.RFC_2822=function(){};// date from string and format string
  function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
  if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
  var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];// console.log('token', token, 'parsedInput', parsedInput,
  //         'regex', getParseRegexForToken(token, config));
  if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
  if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
  getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
  if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
  config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
  return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
  isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
  return hour;}}// date from string and array of format strings
  function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(!isValid(tempConfig)){continue;}// if there is any input that was not parsed add a penalty for that format
  currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
  currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
  res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
  config._d=new Date(input);}else{hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
  // https://github.com/moment/moment/issues/1423
  c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return createInvalid();}});var prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
  function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){for(var key in m){if(!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}var unitHasDecimal=false;for(var i=0;i<ordering.length;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
  }if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
  this._milliseconds=+milliseconds+seconds*1e3+// 1000
  minutes*6e4+// 1000 * 60
  hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
  // Because of dateAddRemove treats 24 hours as different from a
  // day when working around DST, we need to store them separately
  this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
  // which months you are are talking about, so we have to store
  // it separately.
  this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// FORMATTING
  function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset();var sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
  addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher);if(matches===null){return null;}var chunk=matches[matches.length-1]||[];var parts=(chunk+'').match(chunkOffset)||['-',0,0];var minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
  res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else{return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
  // https://github.com/moment/moment/pull/1871
  return -Math.round(m._d.getTimezoneOffset()/15)*15;}// HOOKS
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset=function(){};// MOMENTS
  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else{this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={};copyConfig(c,this);c=prepareConfig(c);if(c._a){var other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
  var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  var isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
  match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
  };}else if(!!(match=isoRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
  duration={};}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
  // converts floats to ints.
  // inp may be undefined, so careful calling replace on it.
  var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
  return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
  if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}val=typeof val==='string'?+val:val;dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
  return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add');var subtract=createAdder(-1,'subtract');function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// We want to compare the start of today, vs this.
  // Getting start-of-today depends on whether we're local/utc/offset or not.
  var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse';var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
  case'minute':output=(this-that)/6e4;break;// 1000 * 60
  case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
  case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
  case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
  default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){// difference in months
  var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
  anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
  adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
  adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
  return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true;var m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
  if(utc){return this.toDate().toISOString();}else{return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment';var zone='';if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}var prefix='['+func+'("]';var year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';var datetime='-MM-DD[T]HH:mm:ss.SSS';var suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000;var MS_PER_MINUTE=60*MS_PER_SECOND;var MS_PER_HOUR=60*MS_PER_MINUTE;var MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return new Date(y+400,m,d)-MS_PER_400_YEARS;}else{return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else{return Date.UTC(y,m,d);}}function startOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
  return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}// FORMATTING
  addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
  addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
  addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
  addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
  function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
  addFormatToken('Q',0,'Qo','quarter');// ALIASES
  addUnitAlias('quarter','Q');// PRIORITY
  addUnitPriority('quarter',7);// PARSING
  addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
  function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
  addFormatToken('D',['DD',2],'Do','date');// ALIASES
  addUnitAlias('date','D');// PRIORITY
  addUnitPriority('date',9);// PARSING
  addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
  return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
  var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
  addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
  addUnitAlias('dayOfYear','DDD');// PRIORITY
  addUnitPriority('dayOfYear',4);// PARSING
  addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
  // MOMENTS
  function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
  addFormatToken('m',['mm',2],0,'minute');// ALIASES
  addUnitAlias('minute','m');// PRIORITY
  addUnitPriority('minute',14);// PARSING
  addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
  var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
  addFormatToken('s',['ss',2],0,'second');// ALIASES
  addUnitAlias('second','s');// PRIORITY
  addUnitPriority('second',15);// PARSING
  addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
  var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
  addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
  addUnitAlias('millisecond','ms');// PRIORITY
  addUnitPriority('millisecond',16);// PARSING
  addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}// MOMENTS
  var getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
  addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
  function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale();var utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i;var out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0;if(index!=null){return get$1(format,(index+shift)%7,field,'day');}var i;var out=[];for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
  hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
  // check: https://github.com/moment/moment/issues/2166
  if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
  // examples of what that means.
  data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
  monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
  years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
  return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else{// handle milliseconds separately because of floating point math errors (issue #1867)
  days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
  case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
  function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms');var asSeconds=makeAs('s');var asMinutes=makeAs('m');var asHours=makeAs('h');var asDays=makeAs('d');var asWeeks=makeAs('w');var asMonths=makeAs('M');var asQuarters=makeAs('Q');var asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds');var seconds=makeGetter('seconds');var minutes=makeGetter('minutes');var hours=makeGetter('hours');var days=makeGetter('days');var months=makeGetter('months');var years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round;var thresholds={ss:44,// a few seconds to seconds
  s:45,// seconds to minute
  m:45,// minutes to hour
  h:22,// hours to day
  d:26,// days to month
  M:11// months to year
  };// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,locale){var duration=createDuration(posNegDuration).abs();var seconds=round(duration.as('s'));var minutes=round(duration.as('m'));var hours=round(duration.as('h'));var days=round(duration.as('d'));var months=round(duration.as('M'));var years=round(duration.as('y'));var a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days]||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(withSuffix){if(!this.isValid()){return this.localeData().invalidDate();}var locale=this.localeData();var output=relativeTime$1(this,!withSuffix,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
  //  * milliseconds bubble up until they become hours
  //  * days do not bubble at all
  //  * months bubble up until they become years
  // This is because there is no context-free conversion between hours and days
  // (think of clock changes)
  // and also not between days and months (28-31 days per month)
  if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000;var days=abs$1(this._days);var months=abs$1(this._months);var minutes,hours,years;// 3600 seconds -> 60 minutes -> 1 hour
  minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
  years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
  var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';var total=this.asSeconds();if(!total){// this is the same as C#'s (Noda) and python (isodate)...
  // but not other JS (goog.date)
  return 'P0D';}var totalSign=total<0?'-':'';var ymSign=sign(this._months)!==sign(total)?'-':'';var daysSign=sign(this._days)!==sign(total)?'-':'';var hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(Y?ymSign+Y+'Y':'')+(M?ymSign+M+'M':'')+(D?daysSign+D+'D':'')+(h||m||s?'T':'')+(h?hmsSign+h+'H':'')+(m?hmsSign+m+'M':'')+(s?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// Side effect imports
  // FORMATTING
  addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
  addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input,10)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});// Side effect imports
  hooks.version='2.24.0';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
  DATE:'YYYY-MM-DD',// <input type="date" />
  TIME:'HH:mm',// <input type="time" />
  TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
  TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
  WEEK:'GGGG-[W]WW',// <input type="week" />
  MONTH:'YYYY-MM'// <input type="month" />
  };return hooks;});});// use this instance. Else, load via commonjs.
  var moment$3$2=typeof window!=='undefined'&&window['moment']||moment$2$3;function _typeof$1$2(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$1$2=function(obj){return typeof obj;};}else{_typeof$1$2=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$1$2(obj);}function _classCallCheck$1$2(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties$1$2(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass$1$2(Constructor,protoProps,staticProps){if(protoProps)_defineProperties$1$2(Constructor.prototype,protoProps);if(staticProps)_defineProperties$1$2(Constructor,staticProps);return Constructor;}/**
   * Prototype for visual components
   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} [body]
   * @param {Object} [options]
   */function Component(body,options){// eslint-disable-line no-unused-vars
  this.options=null;this.props=null;}/**
   * Set options for the component. The new options will be merged into the
   * current options.
   * @param {Object} options
   */Component.prototype.setOptions=function(options){if(options){util$4.extend(this.options,options);}};/**
   * Repaint the component
   * @return {boolean} Returns true if the component is resized
   */Component.prototype.redraw=function(){// should be implemented by the component
  return false;};/**
   * Destroy the component. Cleanup DOM and event listeners
   */Component.prototype.destroy=function(){// should be implemented by the component
  };/**
   * Test whether the component is resized since the last time _isResized() was
   * called.
   * @return {Boolean} Returns true if the component is resized
   * @protected
   */Component.prototype._isResized=function(){var resized=this.props._previousWidth!==this.props.width||this.props._previousHeight!==this.props.height;this.props._previousWidth=this.props.width;this.props._previousHeight=this.props.height;return resized;};var Component_1=Component;var DateUtil=createCommonjsModule$1$4(function(module,exports){/**
     * used in Core to convert the options into a volatile variable
     * 
     * @param {function} moment
     * @param {Object} body
     * @param {Array | Object} hiddenDates
     * @returns {number}
     */exports.convertHiddenOptions=function(moment,body,hiddenDates){if(hiddenDates&&!Array.isArray(hiddenDates)){return exports.convertHiddenOptions(moment,body,[hiddenDates]);}body.hiddenDates=[];if(hiddenDates){if(Array.isArray(hiddenDates)==true){for(var i=0;i<hiddenDates.length;i++){if(hiddenDates[i].repeat===undefined){var dateItem={};dateItem.start=moment(hiddenDates[i].start).toDate().valueOf();dateItem.end=moment(hiddenDates[i].end).toDate().valueOf();body.hiddenDates.push(dateItem);}}body.hiddenDates.sort(function(a,b){return a.start-b.start;});// sort by start time
  }}};/**
     * create new entrees for the repeating hidden dates
     *
     * @param {function} moment
     * @param {Object} body
     * @param {Array | Object} hiddenDates
     * @returns {null}
     */exports.updateHiddenDates=function(moment,body,hiddenDates){if(hiddenDates&&!Array.isArray(hiddenDates)){return exports.updateHiddenDates(moment,body,[hiddenDates]);}if(hiddenDates&&body.domProps.centerContainer.width!==undefined){exports.convertHiddenOptions(moment,body,hiddenDates);var start=moment(body.range.start);var end=moment(body.range.end);var totalRange=body.range.end-body.range.start;var pixelTime=totalRange/body.domProps.centerContainer.width;for(var i=0;i<hiddenDates.length;i++){if(hiddenDates[i].repeat!==undefined){var startDate=moment(hiddenDates[i].start);var endDate=moment(hiddenDates[i].end);if(startDate._d=="Invalid Date"){throw new Error("Supplied start date is not valid: "+hiddenDates[i].start);}if(endDate._d=="Invalid Date"){throw new Error("Supplied end date is not valid: "+hiddenDates[i].end);}var duration=endDate-startDate;if(duration>=4*pixelTime){var offset=0;var runUntil=end.clone();switch(hiddenDates[i].repeat){case"daily":// case of time
  if(startDate.day()!=endDate.day()){offset=1;}startDate.dayOfYear(start.dayOfYear());startDate.year(start.year());startDate.subtract(7,'days');endDate.dayOfYear(start.dayOfYear());endDate.year(start.year());endDate.subtract(7-offset,'days');runUntil.add(1,'weeks');break;case"weekly":var dayOffset=endDate.diff(startDate,'days');var day=startDate.day();// set the start date to the range.start
  startDate.date(start.date());startDate.month(start.month());startDate.year(start.year());endDate=startDate.clone();// force
  startDate.day(day);endDate.day(day);endDate.add(dayOffset,'days');startDate.subtract(1,'weeks');endDate.subtract(1,'weeks');runUntil.add(1,'weeks');break;case"monthly":if(startDate.month()!=endDate.month()){offset=1;}startDate.month(start.month());startDate.year(start.year());startDate.subtract(1,'months');endDate.month(start.month());endDate.year(start.year());endDate.subtract(1,'months');endDate.add(offset,'months');runUntil.add(1,'months');break;case"yearly":if(startDate.year()!=endDate.year()){offset=1;}startDate.year(start.year());startDate.subtract(1,'years');endDate.year(start.year());endDate.subtract(1,'years');endDate.add(offset,'years');runUntil.add(1,'years');break;default:console.log("Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:",hiddenDates[i].repeat);return;}while(startDate<runUntil){body.hiddenDates.push({start:startDate.valueOf(),end:endDate.valueOf()});switch(hiddenDates[i].repeat){case"daily":startDate.add(1,'days');endDate.add(1,'days');break;case"weekly":startDate.add(1,'weeks');endDate.add(1,'weeks');break;case"monthly":startDate.add(1,'months');endDate.add(1,'months');break;case"yearly":startDate.add(1,'y');endDate.add(1,'y');break;default:console.log("Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:",hiddenDates[i].repeat);return;}}body.hiddenDates.push({start:startDate.valueOf(),end:endDate.valueOf()});}}}// remove duplicates, merge where possible
  exports.removeDuplicates(body);// ensure the new positions are not on hidden dates
  var startHidden=exports.isHidden(body.range.start,body.hiddenDates);var endHidden=exports.isHidden(body.range.end,body.hiddenDates);var rangeStart=body.range.start;var rangeEnd=body.range.end;if(startHidden.hidden==true){rangeStart=body.range.startToFront==true?startHidden.startDate-1:startHidden.endDate+1;}if(endHidden.hidden==true){rangeEnd=body.range.endToFront==true?endHidden.startDate-1:endHidden.endDate+1;}if(startHidden.hidden==true||endHidden.hidden==true){body.range._applyRange(rangeStart,rangeEnd);}}};/**
     * remove duplicates from the hidden dates list. Duplicates are evil. They mess everything up.
     * Scales with N^2
     *
     * @param {Object} body
     */exports.removeDuplicates=function(body){var hiddenDates=body.hiddenDates;var safeDates=[];for(var i=0;i<hiddenDates.length;i++){for(var j=0;j<hiddenDates.length;j++){if(i!=j&&hiddenDates[j].remove!=true&&hiddenDates[i].remove!=true){// j inside i
  if(hiddenDates[j].start>=hiddenDates[i].start&&hiddenDates[j].end<=hiddenDates[i].end){hiddenDates[j].remove=true;}// j start inside i
  else if(hiddenDates[j].start>=hiddenDates[i].start&&hiddenDates[j].start<=hiddenDates[i].end){hiddenDates[i].end=hiddenDates[j].end;hiddenDates[j].remove=true;}// j end inside i
  else if(hiddenDates[j].end>=hiddenDates[i].start&&hiddenDates[j].end<=hiddenDates[i].end){hiddenDates[i].start=hiddenDates[j].start;hiddenDates[j].remove=true;}}}}for(i=0;i<hiddenDates.length;i++){if(hiddenDates[i].remove!==true){safeDates.push(hiddenDates[i]);}}body.hiddenDates=safeDates;body.hiddenDates.sort(function(a,b){return a.start-b.start;});// sort by start time
  };exports.printDates=function(dates){for(var i=0;i<dates.length;i++){console.log(i,new Date(dates[i].start),new Date(dates[i].end),dates[i].start,dates[i].end,dates[i].remove);}};/**
     * Used in TimeStep to avoid the hidden times.
     * @param {function} moment
     * @param {TimeStep} timeStep
     * @param {Date} previousTime
     */exports.stepOverHiddenDates=function(moment,timeStep,previousTime){var stepInHidden=false;var currentValue=timeStep.current.valueOf();for(var i=0;i<timeStep.hiddenDates.length;i++){var startDate=timeStep.hiddenDates[i].start;var endDate=timeStep.hiddenDates[i].end;if(currentValue>=startDate&&currentValue<endDate){stepInHidden=true;break;}}if(stepInHidden==true&&currentValue<timeStep._end.valueOf()&&currentValue!=previousTime){var prevValue=moment(previousTime);var newValue=moment(endDate);//check if the next step should be major
  if(prevValue.year()!=newValue.year()){timeStep.switchedYear=true;}else if(prevValue.month()!=newValue.month()){timeStep.switchedMonth=true;}else if(prevValue.dayOfYear()!=newValue.dayOfYear()){timeStep.switchedDay=true;}timeStep.current=newValue;}};///**
  // * Used in TimeStep to avoid the hidden times.
  // * @param timeStep
  // * @param previousTime
  // */
  //exports.checkFirstStep = function(timeStep) {
  //  var stepInHidden = false;
  //  var currentValue = timeStep.current.valueOf();
  //  for (var i = 0; i < timeStep.hiddenDates.length; i++) {
  //    var startDate = timeStep.hiddenDates[i].start;
  //    var endDate = timeStep.hiddenDates[i].end;
  //    if (currentValue >= startDate && currentValue < endDate) {
  //      stepInHidden = true;
  //      break;
  //    }
  //  }
  //
  //  if (stepInHidden == true && currentValue <= timeStep._end.valueOf()) {
  //    var newValue = moment(endDate);
  //    timeStep.current = newValue.toDate();
  //  }
  //};
  /**
     * replaces the Core toScreen methods
     *
     * @param {vis.Core} Core
     * @param {Date} time
     * @param {number} width
     * @returns {number}
     */exports.toScreen=function(Core,time,width){var conversion;if(Core.body.hiddenDates.length==0){conversion=Core.range.conversion(width);return (time.valueOf()-conversion.offset)*conversion.scale;}else{var hidden=exports.isHidden(time,Core.body.hiddenDates);if(hidden.hidden==true){time=hidden.startDate;}var duration=exports.getHiddenDurationBetween(Core.body.hiddenDates,Core.range.start,Core.range.end);if(time<Core.range.start){conversion=Core.range.conversion(width,duration);var hiddenBeforeStart=exports.getHiddenDurationBeforeStart(Core.body.hiddenDates,time,conversion.offset);time=Core.options.moment(time).toDate().valueOf();time=time+hiddenBeforeStart;return -(conversion.offset-time.valueOf())*conversion.scale;}else if(time>Core.range.end){var rangeAfterEnd={start:Core.range.start,end:time};time=exports.correctTimeForHidden(Core.options.moment,Core.body.hiddenDates,rangeAfterEnd,time);conversion=Core.range.conversion(width,duration);return (time.valueOf()-conversion.offset)*conversion.scale;}else{time=exports.correctTimeForHidden(Core.options.moment,Core.body.hiddenDates,Core.range,time);conversion=Core.range.conversion(width,duration);return (time.valueOf()-conversion.offset)*conversion.scale;}}};/**
     * Replaces the core toTime methods
     *
     * @param {vis.Core} Core
     * @param {number} x
     * @param {number} width
     * @returns {Date}
     */exports.toTime=function(Core,x,width){if(Core.body.hiddenDates.length==0){var conversion=Core.range.conversion(width);return new Date(x/conversion.scale+conversion.offset);}else{var hiddenDuration=exports.getHiddenDurationBetween(Core.body.hiddenDates,Core.range.start,Core.range.end);var totalDuration=Core.range.end-Core.range.start-hiddenDuration;var partialDuration=totalDuration*x/width;var accumulatedHiddenDuration=exports.getAccumulatedHiddenDuration(Core.body.hiddenDates,Core.range,partialDuration);return new Date(accumulatedHiddenDuration+partialDuration+Core.range.start);}};/**
     * Support function
     *
     * @param {Array.<{start: Window.start, end: *}>} hiddenDates
     * @param {number} start
     * @param {number} end
     * @returns {number}
     */exports.getHiddenDurationBetween=function(hiddenDates,start,end){var duration=0;for(var i=0;i<hiddenDates.length;i++){var startDate=hiddenDates[i].start;var endDate=hiddenDates[i].end;// if time after the cutout, and the
  if(startDate>=start&&endDate<end){duration+=endDate-startDate;}}return duration;};/**
     * Support function
     *
     * @param {Array.<{start: Window.start, end: *}>} hiddenDates
     * @param {number} start
     * @param {number} end
     * @returns {number}
     */exports.getHiddenDurationBeforeStart=function(hiddenDates,start,end){var duration=0;for(var i=0;i<hiddenDates.length;i++){var startDate=hiddenDates[i].start;var endDate=hiddenDates[i].end;if(startDate>=start&&endDate<=end){duration+=endDate-startDate;}}return duration;};/**
     * Support function
     * @param {function} moment
     * @param {Array.<{start: Window.start, end: *}>} hiddenDates
     * @param {{start: number, end: number}} range
     * @param {Date} time
     * @returns {number}
     */exports.correctTimeForHidden=function(moment,hiddenDates,range,time){time=moment(time).toDate().valueOf();time-=exports.getHiddenDurationBefore(moment,hiddenDates,range,time);return time;};exports.getHiddenDurationBefore=function(moment,hiddenDates,range,time){var timeOffset=0;time=moment(time).toDate().valueOf();for(var i=0;i<hiddenDates.length;i++){var startDate=hiddenDates[i].start;var endDate=hiddenDates[i].end;// if time after the cutout, and the
  if(startDate>=range.start&&endDate<range.end){if(time>=endDate){timeOffset+=endDate-startDate;}}}return timeOffset;};/**
     * sum the duration from start to finish, including the hidden duration,
     * until the required amount has been reached, return the accumulated hidden duration
     * @param {Array.<{start: Window.start, end: *}>} hiddenDates
     * @param {{start: number, end: number}} range
     * @param {number} [requiredDuration=0]
     * @returns {number}
     */exports.getAccumulatedHiddenDuration=function(hiddenDates,range,requiredDuration){var hiddenDuration=0;var duration=0;var previousPoint=range.start;//exports.printDates(hiddenDates)
  for(var i=0;i<hiddenDates.length;i++){var startDate=hiddenDates[i].start;var endDate=hiddenDates[i].end;// if time after the cutout, and the
  if(startDate>=range.start&&endDate<range.end){duration+=startDate-previousPoint;previousPoint=endDate;if(duration>=requiredDuration){break;}else{hiddenDuration+=endDate-startDate;}}}return hiddenDuration;};/**
     * used to step over to either side of a hidden block. Correction is disabled on tablets, might be set to true
     * @param {Array.<{start: Window.start, end: *}>} hiddenDates
     * @param {Date} time
     * @param {number} direction
     * @param {boolean} correctionEnabled
     * @returns {Date|number}
     */exports.snapAwayFromHidden=function(hiddenDates,time,direction,correctionEnabled){var isHidden=exports.isHidden(time,hiddenDates);if(isHidden.hidden==true){if(direction<0){if(correctionEnabled==true){return isHidden.startDate-(isHidden.endDate-time)-1;}else{return isHidden.startDate-1;}}else{if(correctionEnabled==true){return isHidden.endDate+(time-isHidden.startDate)+1;}else{return isHidden.endDate+1;}}}else{return time;}};/**
     * Check if a time is hidden
     *
     * @param {Date} time
     * @param {Array.<{start: Window.start, end: *}>} hiddenDates
     * @returns {{hidden: boolean, startDate: Window.start, endDate: *}}
     */exports.isHidden=function(time,hiddenDates){for(var i=0;i<hiddenDates.length;i++){var startDate=hiddenDates[i].start;var endDate=hiddenDates[i].end;if(time>=startDate&&time<endDate){// if the start is entering a hidden zone
  return {hidden:true,startDate:startDate,endDate:endDate};}}return {hidden:false,startDate:startDate,endDate:endDate};};});var DateUtil_1=DateUtil.convertHiddenOptions;var DateUtil_2=DateUtil.updateHiddenDates;var DateUtil_3=DateUtil.removeDuplicates;var DateUtil_4=DateUtil.printDates;var DateUtil_5=DateUtil.stepOverHiddenDates;var DateUtil_6=DateUtil.toScreen;var DateUtil_7=DateUtil.toTime;var DateUtil_8=DateUtil.getHiddenDurationBetween;var DateUtil_9=DateUtil.getHiddenDurationBeforeStart;var DateUtil_10=DateUtil.correctTimeForHidden;var DateUtil_11=DateUtil.getHiddenDurationBefore;var DateUtil_12=DateUtil.getAccumulatedHiddenDuration;var DateUtil_13=DateUtil.snapAwayFromHidden;var DateUtil_14=DateUtil.isHidden;/**
   * A Range controls a numeric range with a start and end value.
   * The Range adjusts the range based on mouse events or programmatic changes,
   * and triggers events when the range is changing or has been changed.
   * @param {{dom: Object, domProps: Object, emitter: Emitter}} body
   * @param {Object} [options]    See description at Range.setOptions
   * @constructor Range
   * @extends Component
   */function Range$1(body,options){var now=moment$3$2().hours(0).minutes(0).seconds(0).milliseconds(0);var start=now.clone().add(-3,'days').valueOf();var end=now.clone().add(3,'days').valueOf();this.millisecondsPerPixelCache=undefined;if(options===undefined){this.start=start;this.end=end;}else{this.start=options.start||start;this.end=options.end||end;}this.rolling=false;this.body=body;this.deltaDifference=0;this.scaleOffset=0;this.startToFront=false;this.endToFront=true;// default options
  this.defaultOptions={rtl:false,start:null,end:null,moment:moment$3$2,direction:'horizontal',// 'horizontal' or 'vertical'
  moveable:true,zoomable:true,min:null,max:null,zoomMin:10,// milliseconds
  zoomMax:1000*60*60*24*365*10000,// milliseconds
  rollingMode:{follow:false,offset:0.5}};this.options=util$4.extend({},this.defaultOptions);this.props={touch:{}};this.animationTimer=null;// drag listeners for dragging
  this.body.emitter.on('panstart',this._onDragStart.bind(this));this.body.emitter.on('panmove',this._onDrag.bind(this));this.body.emitter.on('panend',this._onDragEnd.bind(this));// mouse wheel for zooming
  this.body.emitter.on('mousewheel',this._onMouseWheel.bind(this));// pinch to zoom
  this.body.emitter.on('touch',this._onTouch.bind(this));this.body.emitter.on('pinch',this._onPinch.bind(this));// on click of rolling mode button
  this.body.dom.rollingModeBtn.addEventListener('click',this.startRolling.bind(this));this.setOptions(options);}Range$1.prototype=new Component_1();/**
   * Set options for the range controller
   * @param {Object} options      Available options:
   *                              {number | Date | String} start  Start date for the range
   *                              {number | Date | String} end    End date for the range
   *                              {number} min    Minimum value for start
   *                              {number} max    Maximum value for end
   *                              {number} zoomMin    Set a minimum value for
   *                                                  (end - start).
   *                              {number} zoomMax    Set a maximum value for
   *                                                  (end - start).
   *                              {boolean} moveable Enable moving of the range
   *                                                 by dragging. True by default
   *                              {boolean} zoomable Enable zooming of the range
   *                                                 by pinching/scrolling. True by default
   */Range$1.prototype.setOptions=function(options){if(options){// copy the options that we know
  var fields=['animation','direction','min','max','zoomMin','zoomMax','moveable','zoomable','moment','activate','hiddenDates','zoomKey','rtl','showCurrentTime','rollingMode','horizontalScroll'];util$4.selectiveExtend(fields,this.options,options);if(options.rollingMode&&options.rollingMode.follow){this.startRolling();}if('start'in options||'end'in options){// apply a new range. both start and end are optional
  this.setRange(options.start,options.end);}}};/**
   * Test whether direction has a valid value
   * @param {string} direction    'horizontal' or 'vertical'
   */function validateDirection(direction){if(direction!='horizontal'&&direction!='vertical'){throw new TypeError('Unknown direction "'+direction+'". '+'Choose "horizontal" or "vertical".');}}/**
   * Start auto refreshing the current time bar
   */Range$1.prototype.startRolling=function(){var me=this;/**
     *  Updates the current time.
     */function update(){me.stopRolling();me.rolling=true;var interval=me.end-me.start;var t=util$4.convert(new Date(),'Date').valueOf();var start=t-interval*me.options.rollingMode.offset;var end=t+interval*(1-me.options.rollingMode.offset);var options={animation:false};me.setRange(start,end,options);// determine interval to refresh
  var scale=me.conversion(me.body.domProps.center.width).scale;interval=1/scale/10;if(interval<30)interval=30;if(interval>1000)interval=1000;me.body.dom.rollingModeBtn.style.visibility="hidden";// start a renderTimer to adjust for the new time
  me.currentTimeTimer=setTimeout(update,interval);}update();};/**
   * Stop auto refreshing the current time bar
   */Range$1.prototype.stopRolling=function(){if(this.currentTimeTimer!==undefined){clearTimeout(this.currentTimeTimer);this.rolling=false;this.body.dom.rollingModeBtn.style.visibility="visible";}};/**
   * Set a new start and end range
   * @param {Date | number | string} [start]
   * @param {Date | number | string} [end]
   * @param {Object} options      Available options:
   *                              {boolean | {duration: number, easingFunction: string}} [animation=false]
   *                                    If true, the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   *                              {boolean} [byUser=false]
   *                              {Event}  event  Mouse event
   * @param {Function} callback     a callback function to be executed at the end of this function  
   * @param {Function} frameCallback    a callback function executed each frame of the range animation.
   *                                    The callback will be passed three parameters:
   *                                    {number} easeCoefficient    an easing coefficent
   *                                    {boolean} willDraw          If true the caller will redraw after the callback completes
   *                                    {boolean} done              If true then animation is ending after the current frame
   */Range$1.prototype.setRange=function(start,end,options,callback,frameCallback){if(!options){options={};}if(options.byUser!==true){options.byUser=false;}var me=this;var finalStart=start!=undefined?util$4.convert(start,'Date').valueOf():null;var finalEnd=end!=undefined?util$4.convert(end,'Date').valueOf():null;this._cancelAnimation();this.millisecondsPerPixelCache=undefined;if(options.animation){// true or an Object
  var initStart=this.start;var initEnd=this.end;var duration=_typeof$1$2(options.animation)==='object'&&'duration'in options.animation?options.animation.duration:500;var easingName=_typeof$1$2(options.animation)==='object'&&'easingFunction'in options.animation?options.animation.easingFunction:'easeInOutQuad';var easingFunction=util$4.easingFunctions[easingName];if(!easingFunction){throw new Error('Unknown easing function '+JSON.stringify(easingName)+'. '+'Choose from: '+Object.keys(util$4.easingFunctions).join(', '));}var initTime=new Date().valueOf();var anyChanged=false;var next=function next(){if(!me.props.touch.dragging){var now=new Date().valueOf();var time=now-initTime;var ease=easingFunction(time/duration);var done=time>duration;var s=done||finalStart===null?finalStart:initStart+(finalStart-initStart)*ease;var e=done||finalEnd===null?finalEnd:initEnd+(finalEnd-initEnd)*ease;changed=me._applyRange(s,e);DateUtil.updateHiddenDates(me.options.moment,me.body,me.options.hiddenDates);anyChanged=anyChanged||changed;var params={start:new Date(me.start),end:new Date(me.end),byUser:options.byUser,event:options.event};if(frameCallback){frameCallback(ease,changed,done);}if(changed){me.body.emitter.emit('rangechange',params);}if(done){if(anyChanged){me.body.emitter.emit('rangechanged',params);if(callback){return callback();}}}else{// animate with as high as possible frame rate, leave 20 ms in between
  // each to prevent the browser from blocking
  me.animationTimer=setTimeout(next,20);}}};return next();}else{var changed=this._applyRange(finalStart,finalEnd);DateUtil.updateHiddenDates(this.options.moment,this.body,this.options.hiddenDates);if(changed){var params={start:new Date(this.start),end:new Date(this.end),byUser:options.byUser,event:options.event};this.body.emitter.emit('rangechange',params);clearTimeout(me.timeoutID);me.timeoutID=setTimeout(function(){me.body.emitter.emit('rangechanged',params);},200);if(callback){return callback();}}}};/**
   * Get the number of milliseconds per pixel.
   *
   * @returns {undefined|number}
   */Range$1.prototype.getMillisecondsPerPixel=function(){if(this.millisecondsPerPixelCache===undefined){this.millisecondsPerPixelCache=(this.end-this.start)/this.body.dom.center.clientWidth;}return this.millisecondsPerPixelCache;};/**
   * Stop an animation
   * @private
   */Range$1.prototype._cancelAnimation=function(){if(this.animationTimer){clearTimeout(this.animationTimer);this.animationTimer=null;}};/**
   * Set a new start and end range. This method is the same as setRange, but
   * does not trigger a range change and range changed event, and it returns
   * true when the range is changed
   * @param {number} [start]
   * @param {number} [end]
   * @return {boolean} changed
   * @private
   */Range$1.prototype._applyRange=function(start,end){var newStart=start!=null?util$4.convert(start,'Date').valueOf():this.start,newEnd=end!=null?util$4.convert(end,'Date').valueOf():this.end,max=this.options.max!=null?util$4.convert(this.options.max,'Date').valueOf():null,min=this.options.min!=null?util$4.convert(this.options.min,'Date').valueOf():null,diff;// check for valid number
  if(isNaN(newStart)||newStart===null){throw new Error('Invalid start "'+start+'"');}if(isNaN(newEnd)||newEnd===null){throw new Error('Invalid end "'+end+'"');}// prevent end < start
  if(newEnd<newStart){newEnd=newStart;}// prevent start < min
  if(min!==null){if(newStart<min){diff=min-newStart;newStart+=diff;newEnd+=diff;// prevent end > max
  if(max!=null){if(newEnd>max){newEnd=max;}}}}// prevent end > max
  if(max!==null){if(newEnd>max){diff=newEnd-max;newStart-=diff;newEnd-=diff;// prevent start < min
  if(min!=null){if(newStart<min){newStart=min;}}}}// prevent (end-start) < zoomMin
  if(this.options.zoomMin!==null){var zoomMin=parseFloat(this.options.zoomMin);if(zoomMin<0){zoomMin=0;}if(newEnd-newStart<zoomMin){// compensate for a scale of 0.5 ms
  var compensation=0.5;if(this.end-this.start===zoomMin&&newStart>=this.start-compensation&&newEnd<=this.end){// ignore this action, we are already zoomed to the minimum
  newStart=this.start;newEnd=this.end;}else{// zoom to the minimum
  diff=zoomMin-(newEnd-newStart);newStart-=diff/2;newEnd+=diff/2;}}}// prevent (end-start) > zoomMax
  if(this.options.zoomMax!==null){var zoomMax=parseFloat(this.options.zoomMax);if(zoomMax<0){zoomMax=0;}if(newEnd-newStart>zoomMax){if(this.end-this.start===zoomMax&&newStart<this.start&&newEnd>this.end){// ignore this action, we are already zoomed to the maximum
  newStart=this.start;newEnd=this.end;}else{// zoom to the maximum
  diff=newEnd-newStart-zoomMax;newStart+=diff/2;newEnd-=diff/2;}}}var changed=this.start!=newStart||this.end!=newEnd;// if the new range does NOT overlap with the old range, emit checkRangedItems to avoid not showing ranged items (ranged meaning has end time, not necessarily of type Range)
  if(!(newStart>=this.start&&newStart<=this.end||newEnd>=this.start&&newEnd<=this.end)&&!(this.start>=newStart&&this.start<=newEnd||this.end>=newStart&&this.end<=newEnd)){this.body.emitter.emit('checkRangedItems');}this.start=newStart;this.end=newEnd;return changed;};/**
   * Retrieve the current range.
   * @return {Object} An object with start and end properties
   */Range$1.prototype.getRange=function(){return {start:this.start,end:this.end};};/**
   * Calculate the conversion offset and scale for current range, based on
   * the provided width
   * @param {number} width
   * @param {number} [totalHidden=0]
   * @returns {{offset: number, scale: number}} conversion
   */Range$1.prototype.conversion=function(width,totalHidden){return Range$1.conversion(this.start,this.end,width,totalHidden);};/**
   * Static method to calculate the conversion offset and scale for a range,
   * based on the provided start, end, and width
   * @param {number} start
   * @param {number} end
   * @param {number} width
   * @param {number} [totalHidden=0]
   * @returns {{offset: number, scale: number}} conversion
   */Range$1.conversion=function(start,end,width,totalHidden){if(totalHidden===undefined){totalHidden=0;}if(width!=0&&end-start!=0){return {offset:start,scale:width/(end-start-totalHidden)};}else{return {offset:0,scale:1};}};/**
   * Start dragging horizontally or vertically
   * @param {Event} event
   * @private
   */Range$1.prototype._onDragStart=function(event){this.deltaDifference=0;this.previousDelta=0;// only allow dragging when configured as movable
  if(!this.options.moveable)return;// only start dragging when the mouse is inside the current range
  if(!this._isInsideRange(event))return;// refuse to drag when we where pinching to prevent the timeline make a jump
  // when releasing the fingers in opposite order from the touch screen
  if(!this.props.touch.allowDragging)return;this.stopRolling();this.props.touch.start=this.start;this.props.touch.end=this.end;this.props.touch.dragging=true;if(this.body.dom.root){this.body.dom.root.style.cursor='move';}};/**
   * Perform dragging operation
   * @param {Event} event
   * @private
   */Range$1.prototype._onDrag=function(event){if(!event)return;if(!this.props.touch.dragging)return;// only allow dragging when configured as movable
  if(!this.options.moveable)return;// TODO: this may be redundant in hammerjs2
  // refuse to drag when we where pinching to prevent the timeline make a jump
  // when releasing the fingers in opposite order from the touch screen
  if(!this.props.touch.allowDragging)return;var direction=this.options.direction;validateDirection(direction);var delta=direction=='horizontal'?event.deltaX:event.deltaY;delta-=this.deltaDifference;var interval=this.props.touch.end-this.props.touch.start;// normalize dragging speed if cutout is in between.
  var duration=DateUtil.getHiddenDurationBetween(this.body.hiddenDates,this.start,this.end);interval-=duration;var width=direction=='horizontal'?this.body.domProps.center.width:this.body.domProps.center.height;var diffRange;if(this.options.rtl){diffRange=delta/width*interval;}else{diffRange=-delta/width*interval;}var newStart=this.props.touch.start+diffRange;var newEnd=this.props.touch.end+diffRange;// snapping times away from hidden zones
  var safeStart=DateUtil.snapAwayFromHidden(this.body.hiddenDates,newStart,this.previousDelta-delta,true);var safeEnd=DateUtil.snapAwayFromHidden(this.body.hiddenDates,newEnd,this.previousDelta-delta,true);if(safeStart!=newStart||safeEnd!=newEnd){this.deltaDifference+=delta;this.props.touch.start=safeStart;this.props.touch.end=safeEnd;this._onDrag(event);return;}this.previousDelta=delta;this._applyRange(newStart,newEnd);var startDate=new Date(this.start);var endDate=new Date(this.end);// fire a rangechange event
  this.body.emitter.emit('rangechange',{start:startDate,end:endDate,byUser:true,event:event});// fire a panmove event
  this.body.emitter.emit('panmove');};/**
   * Stop dragging operation
   * @param {event} event
   * @private
   */Range$1.prototype._onDragEnd=function(event){if(!this.props.touch.dragging)return;// only allow dragging when configured as movable
  if(!this.options.moveable)return;// TODO: this may be redundant in hammerjs2
  // refuse to drag when we where pinching to prevent the timeline make a jump
  // when releasing the fingers in opposite order from the touch screen
  if(!this.props.touch.allowDragging)return;this.props.touch.dragging=false;if(this.body.dom.root){this.body.dom.root.style.cursor='auto';}// fire a rangechanged event
  this.body.emitter.emit('rangechanged',{start:new Date(this.start),end:new Date(this.end),byUser:true,event:event});};/**
   * Event handler for mouse wheel event, used to zoom
   * Code from http://adomas.org/javascript-mouse-wheel/
   * @param {Event} event
   * @private
   */Range$1.prototype._onMouseWheel=function(event){// retrieve delta
  var delta=0;if(event.wheelDelta){/* IE/Opera. */delta=event.wheelDelta/120;}else if(event.detail){/* Mozilla case. */ // In Mozilla, sign of delta is different than in IE.
  // Also, delta is multiple of 3.
  delta=-event.detail/3;}else if(event.deltaY){delta=-event.deltaY/3;}// don't allow zoom when the according key is pressed and the zoomKey option or not zoomable but movable
  if(this.options.zoomKey&&!event[this.options.zoomKey]&&this.options.zoomable||!this.options.zoomable&&this.options.moveable){return;}// only allow zooming when configured as zoomable and moveable
  if(!(this.options.zoomable&&this.options.moveable))return;// only zoom when the mouse is inside the current range
  if(!this._isInsideRange(event))return;// If delta is nonzero, handle it.
  // Basically, delta is now positive if wheel was scrolled up,
  // and negative, if wheel was scrolled down.
  if(delta){// perform the zoom action. Delta is normally 1 or -1
  // adjust a negative delta such that zooming in with delta 0.1
  // equals zooming out with a delta -0.1
  var scale;if(delta<0){scale=1-delta/5;}else{scale=1/(1+delta/5);}// calculate center, the date to zoom around
  var pointerDate;if(this.rolling){pointerDate=this.start+(this.end-this.start)*this.options.rollingMode.offset;}else{var pointer=this.getPointer({x:event.clientX,y:event.clientY},this.body.dom.center);pointerDate=this._pointerToDate(pointer);}this.zoom(scale,pointerDate,delta,event);// Prevent default actions caused by mouse wheel
  // (else the page and timeline both scroll)
  event.preventDefault();}};/**
   * Start of a touch gesture
   * @param {Event} event
   * @private
   */Range$1.prototype._onTouch=function(event){// eslint-disable-line no-unused-vars
  this.props.touch.start=this.start;this.props.touch.end=this.end;this.props.touch.allowDragging=true;this.props.touch.center=null;this.scaleOffset=0;this.deltaDifference=0;// Disable the browser default handling of this event.
  util$4.preventDefault(event);};/**
   * Handle pinch event
   * @param {Event} event
   * @private
   */Range$1.prototype._onPinch=function(event){// only allow zooming when configured as zoomable and moveable
  if(!(this.options.zoomable&&this.options.moveable))return;// Disable the browser default handling of this event.
  util$4.preventDefault(event);this.props.touch.allowDragging=false;if(!this.props.touch.center){this.props.touch.center=this.getPointer(event.center,this.body.dom.center);}this.stopRolling();var scale=1/(event.scale+this.scaleOffset);var centerDate=this._pointerToDate(this.props.touch.center);var hiddenDuration=DateUtil.getHiddenDurationBetween(this.body.hiddenDates,this.start,this.end);var hiddenDurationBefore=DateUtil.getHiddenDurationBefore(this.options.moment,this.body.hiddenDates,this,centerDate);var hiddenDurationAfter=hiddenDuration-hiddenDurationBefore;// calculate new start and end
  var newStart=centerDate-hiddenDurationBefore+(this.props.touch.start-(centerDate-hiddenDurationBefore))*scale;var newEnd=centerDate+hiddenDurationAfter+(this.props.touch.end-(centerDate+hiddenDurationAfter))*scale;// snapping times away from hidden zones
  this.startToFront=1-scale<=0;// used to do the right auto correction with periodic hidden times
  this.endToFront=scale-1<=0;// used to do the right auto correction with periodic hidden times
  var safeStart=DateUtil.snapAwayFromHidden(this.body.hiddenDates,newStart,1-scale,true);var safeEnd=DateUtil.snapAwayFromHidden(this.body.hiddenDates,newEnd,scale-1,true);if(safeStart!=newStart||safeEnd!=newEnd){this.props.touch.start=safeStart;this.props.touch.end=safeEnd;this.scaleOffset=1-event.scale;newStart=safeStart;newEnd=safeEnd;}var options={animation:false,byUser:true,event:event};this.setRange(newStart,newEnd,options);this.startToFront=false;// revert to default
  this.endToFront=true;// revert to default
  };/**
   * Test whether the mouse from a mouse event is inside the visible window,
   * between the current start and end date
   * @param {Object} event
   * @return {boolean} Returns true when inside the visible window
   * @private
   */Range$1.prototype._isInsideRange=function(event){// calculate the time where the mouse is, check whether inside
  // and no scroll action should happen.
  var clientX=event.center?event.center.x:event.clientX;var x;if(this.options.rtl){x=clientX-util$4.getAbsoluteLeft(this.body.dom.centerContainer);}else{x=util$4.getAbsoluteRight(this.body.dom.centerContainer)-clientX;}var time=this.body.util.toTime(x);return time>=this.start&&time<=this.end;};/**
   * Helper function to calculate the center date for zooming
   * @param {{x: number, y: number}} pointer
   * @return {number} date
   * @private
   */Range$1.prototype._pointerToDate=function(pointer){var conversion;var direction=this.options.direction;validateDirection(direction);if(direction=='horizontal'){return this.body.util.toTime(pointer.x).valueOf();}else{var height=this.body.domProps.center.height;conversion=this.conversion(height);return pointer.y/conversion.scale+conversion.offset;}};/**
   * Get the pointer location relative to the location of the dom element
   * @param {{x: number, y: number}} touch
   * @param {Element} element   HTML DOM element
   * @return {{x: number, y: number}} pointer
   * @private
   */Range$1.prototype.getPointer=function(touch,element){if(this.options.rtl){return {x:util$4.getAbsoluteRight(element)-touch.x,y:touch.y-util$4.getAbsoluteTop(element)};}else{return {x:touch.x-util$4.getAbsoluteLeft(element),y:touch.y-util$4.getAbsoluteTop(element)};}};/**
   * Zoom the range the given scale in or out. Start and end date will
   * be adjusted, and the timeline will be redrawn. You can optionally give a
   * date around which to zoom.
   * For example, try scale = 0.9 or 1.1
   * @param {number} scale      Scaling factor. Values above 1 will zoom out,
   *                            values below 1 will zoom in.
   * @param {number} [center]   Value representing a date around which will
   *                            be zoomed.
   * @param {number} delta
   * @param {Event} event
   */Range$1.prototype.zoom=function(scale,center,delta,event){// if centerDate is not provided, take it half between start Date and end Date
  if(center==null){center=(this.start+this.end)/2;}var hiddenDuration=DateUtil.getHiddenDurationBetween(this.body.hiddenDates,this.start,this.end);var hiddenDurationBefore=DateUtil.getHiddenDurationBefore(this.options.moment,this.body.hiddenDates,this,center);var hiddenDurationAfter=hiddenDuration-hiddenDurationBefore;// calculate new start and end
  var newStart=center-hiddenDurationBefore+(this.start-(center-hiddenDurationBefore))*scale;var newEnd=center+hiddenDurationAfter+(this.end-(center+hiddenDurationAfter))*scale;// snapping times away from hidden zones
  this.startToFront=delta>0?false:true;// used to do the right autocorrection with periodic hidden times
  this.endToFront=-delta>0?false:true;// used to do the right autocorrection with periodic hidden times
  var safeStart=DateUtil.snapAwayFromHidden(this.body.hiddenDates,newStart,delta,true);var safeEnd=DateUtil.snapAwayFromHidden(this.body.hiddenDates,newEnd,-delta,true);if(safeStart!=newStart||safeEnd!=newEnd){newStart=safeStart;newEnd=safeEnd;}var options={animation:false,byUser:true,event:event};this.setRange(newStart,newEnd,options);this.startToFront=false;// revert to default
  this.endToFront=true;// revert to default
  };/**
   * Move the range with a given delta to the left or right. Start and end
   * value will be adjusted. For example, try delta = 0.1 or -0.1
   * @param {number}  delta     Moving amount. Positive value will move right,
   *                            negative value will move left
   */Range$1.prototype.move=function(delta){// zoom start Date and end Date relative to the centerDate
  var diff=this.end-this.start;// apply new values
  var newStart=this.start+diff*delta;var newEnd=this.end+diff*delta;// TODO: reckon with min and max range
  this.start=newStart;this.end=newEnd;};/**
   * Move the range to a new center point
   * @param {number} moveTo      New center point of the range
   */Range$1.prototype.moveTo=function(moveTo){var center=(this.start+this.end)/2;var diff=center-moveTo;// calculate new start and end
  var newStart=this.start-diff;var newEnd=this.end-diff;var options={animation:false,byUser:true,event:null};this.setRange(newStart,newEnd,options);};var Range_1$1=Range$1;/**
   * Expose `Emitter`.
   */var emitterComponent$1=Emitter$1;/**
   * Initialize a new `Emitter`.
   *
   * @api public
   */function Emitter$1(obj){if(obj)return mixin$1(obj);}/**
   * Mixin the emitter properties.
   *
   * @param {Object} obj
   * @return {Object}
   * @api private
   */function mixin$1(obj){for(var key in Emitter$1.prototype){obj[key]=Emitter$1.prototype[key];}return obj;}/**
   * Listen on the given `event` with `fn`.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */Emitter$1.prototype.on=Emitter$1.prototype.addEventListener=function(event,fn){this._callbacks=this._callbacks||{};(this._callbacks[event]=this._callbacks[event]||[]).push(fn);return this;};/**
   * Adds an `event` listener that will be invoked a single
   * time then automatically removed.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */Emitter$1.prototype.once=function(event,fn){var self=this;this._callbacks=this._callbacks||{};function on(){self.off(event,on);fn.apply(this,arguments);}on.fn=fn;this.on(event,on);return this;};/**
   * Remove the given callback for `event` or all
   * registered callbacks.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */Emitter$1.prototype.off=Emitter$1.prototype.removeListener=Emitter$1.prototype.removeAllListeners=Emitter$1.prototype.removeEventListener=function(event,fn){this._callbacks=this._callbacks||{};// all
  if(0==arguments.length){this._callbacks={};return this;}// specific event
  var callbacks=this._callbacks[event];if(!callbacks)return this;// remove all handlers
  if(1==arguments.length){delete this._callbacks[event];return this;}// remove specific handler
  var cb;for(var i=0;i<callbacks.length;i++){cb=callbacks[i];if(cb===fn||cb.fn===fn){callbacks.splice(i,1);break;}}return this;};/**
   * Emit `event` with the given args.
   *
   * @param {String} event
   * @param {Mixed} ...
   * @return {Emitter}
   */Emitter$1.prototype.emit=function(event){this._callbacks=this._callbacks||{};var args=[].slice.call(arguments,1),callbacks=this._callbacks[event];if(callbacks){callbacks=callbacks.slice(0);for(var i=0,len=callbacks.length;i<len;++i){callbacks[i].apply(this,args);}}return this;};/**
   * Return array of callbacks for `event`.
   *
   * @param {String} event
   * @return {Array}
   * @api public
   */Emitter$1.prototype.listeners=function(event){this._callbacks=this._callbacks||{};return this._callbacks[event]||[];};/**
   * Check if this emitter has `event` handlers.
   *
   * @param {String} event
   * @return {Boolean}
   * @api public
   */Emitter$1.prototype.hasListeners=function(event){return !!this.listeners(event).length;};var propagating$1=createCommonjsModule$1$4(function(module,exports){(function(factory){{// Node. Does not work with strict CommonJS, but
  // only CommonJS-like environments that support module.exports,
  // like Node.
  module.exports=factory();}})(function(){var _firstTarget=null;// singleton, will contain the target element where the touch event started
  /**
       * Extend an Hammer.js instance with event propagation.
       *
       * Features:
       * - Events emitted by hammer will propagate in order from child to parent
       *   elements.
       * - Events are extended with a function `event.stopPropagation()` to stop
       *   propagation to parent elements.
       * - An option `preventDefault` to stop all default browser behavior.
       *
       * Usage:
       *   var hammer = propagatingHammer(new Hammer(element));
       *   var hammer = propagatingHammer(new Hammer(element), {preventDefault: true});
       *
       * @param {Hammer.Manager} hammer   An hammer instance.
       * @param {Object} [options]        Available options:
       *                                  - `preventDefault: true | false | 'mouse' | 'touch' | 'pen'`.
       *                                    Enforce preventing the default browser behavior.
       *                                    Cannot be set to `false`.
       * @return {Hammer.Manager} Returns the same hammer instance with extended
       *                          functionality
       */return function propagating(hammer,options){var _options=options||{preventDefault:false};if(hammer.Manager){// This looks like the Hammer constructor.
  // Overload the constructors with our own.
  var Hammer=hammer;var PropagatingHammer=function(element,options){var o=Object.create(_options);if(options)Hammer.assign(o,options);return propagating(new Hammer(element,o),o);};Hammer.assign(PropagatingHammer,Hammer);PropagatingHammer.Manager=function(element,options){var o=Object.create(_options);if(options)Hammer.assign(o,options);return propagating(new Hammer.Manager(element,o),o);};return PropagatingHammer;}// create a wrapper object which will override the functions
  // `on`, `off`, `destroy`, and `emit` of the hammer instance
  var wrapper=Object.create(hammer);// attach to DOM element
  var element=hammer.element;if(!element.hammer)element.hammer=[];element.hammer.push(wrapper);// register an event to catch the start of a gesture and store the
  // target in a singleton
  hammer.on('hammer.input',function(event){if(_options.preventDefault===true||_options.preventDefault===event.pointerType){event.preventDefault();}if(event.isFirst){_firstTarget=event.target;}});/** @type {Object.<String, Array.<function>>} */wrapper._handlers={};/**
         * Register a handler for one or multiple events
         * @param {String} events    A space separated string with events
         * @param {function} handler A callback function, called as handler(event)
         * @returns {Hammer.Manager} Returns the hammer instance
         */wrapper.on=function(events,handler){// register the handler
  split(events).forEach(function(event){var _handlers=wrapper._handlers[event];if(!_handlers){wrapper._handlers[event]=_handlers=[];// register the static, propagated handler
  hammer.on(event,propagatedHandler);}_handlers.push(handler);});return wrapper;};/**
         * Unregister a handler for one or multiple events
         * @param {String} events      A space separated string with events
         * @param {function} [handler] Optional. The registered handler. If not
         *                             provided, all handlers for given events
         *                             are removed.
         * @returns {Hammer.Manager}   Returns the hammer instance
         */wrapper.off=function(events,handler){// unregister the handler
  split(events).forEach(function(event){var _handlers=wrapper._handlers[event];if(_handlers){_handlers=handler?_handlers.filter(function(h){return h!==handler;}):[];if(_handlers.length>0){wrapper._handlers[event]=_handlers;}else{// remove static, propagated handler
  hammer.off(event,propagatedHandler);delete wrapper._handlers[event];}}});return wrapper;};/**
         * Emit to the event listeners
         * @param {string} eventType
         * @param {Event} event
         */wrapper.emit=function(eventType,event){_firstTarget=event.target;hammer.emit(eventType,event);};wrapper.destroy=function(){// Detach from DOM element
  var hammers=hammer.element.hammer;var idx=hammers.indexOf(wrapper);if(idx!==-1)hammers.splice(idx,1);if(!hammers.length)delete hammer.element.hammer;// clear all handlers
  wrapper._handlers={};// call original hammer destroy
  hammer.destroy();};// split a string with space separated words
  function split(events){return events.match(/[^ ]+/g);}/**
         * A static event handler, applying event propagation.
         * @param {Object} event
         */function propagatedHandler(event){// let only a single hammer instance handle this event
  if(event.type!=='hammer.input'){// it is possible that the same srcEvent is used with multiple hammer events,
  // we keep track on which events are handled in an object _handled
  if(!event.srcEvent._handled){event.srcEvent._handled={};}if(event.srcEvent._handled[event.type]){return;}else{event.srcEvent._handled[event.type]=true;}}// attach a stopPropagation function to the event
  var stopped=false;event.stopPropagation=function(){stopped=true;};//wrap the srcEvent's stopPropagation to also stop hammer propagation:
  var srcStop=event.srcEvent.stopPropagation.bind(event.srcEvent);if(typeof srcStop=="function"){event.srcEvent.stopPropagation=function(){srcStop();event.stopPropagation();};}// attach firstTarget property to the event
  event.firstTarget=_firstTarget;// propagate over all elements (until stopped)
  var elem=_firstTarget;while(elem&&!stopped){var elemHammer=elem.hammer;if(elemHammer){var _handlers;for(var k=0;k<elemHammer.length;k++){_handlers=elemHammer[k]._handlers[event.type];if(_handlers)for(var i=0;i<_handlers.length&&!stopped;i++){_handlers[i](event);}}}elem=elem.parentNode;}}return wrapper;};});});var hammer$3=createCommonjsModule$1$4(function(module){/*! Hammer.JS - v2.0.7 - 2016-04-22
     * http://hammerjs.github.io/
     *
     * Copyright (c) 2016 Jorik Tangelder;
     * Licensed under the MIT license */(function(window,document,exportName,undefined$1){var VENDOR_PREFIXES=['','webkit','Moz','MS','ms','o'];var TEST_ELEMENT=document.createElement('div');var TYPE_FUNCTION='function';var round=Math.round;var abs=Math.abs;var now=Date.now;/**
       * set a timeout with a given scope
       * @param {Function} fn
       * @param {Number} timeout
       * @param {Object} context
       * @returns {number}
       */function setTimeoutContext(fn,timeout,context){return setTimeout(bindFn(fn,context),timeout);}/**
       * if the argument is an array, we want to execute the fn on each entry
       * if it aint an array we don't want to do a thing.
       * this is used by all the methods that accept a single and array argument.
       * @param {*|Array} arg
       * @param {String} fn
       * @param {Object} [context]
       * @returns {Boolean}
       */function invokeArrayArg(arg,fn,context){if(Array.isArray(arg)){each(arg,context[fn],context);return true;}return false;}/**
       * walk objects and arrays
       * @param {Object} obj
       * @param {Function} iterator
       * @param {Object} context
       */function each(obj,iterator,context){var i;if(!obj){return;}if(obj.forEach){obj.forEach(iterator,context);}else if(obj.length!==undefined$1){i=0;while(i<obj.length){iterator.call(context,obj[i],i,obj);i++;}}else{for(i in obj){obj.hasOwnProperty(i)&&iterator.call(context,obj[i],i,obj);}}}/**
       * wrap a method with a deprecation warning and stack trace
       * @param {Function} method
       * @param {String} name
       * @param {String} message
       * @returns {Function} A new function wrapping the supplied method.
       */function deprecate(method,name,message){var deprecationMessage='DEPRECATED METHOD: '+name+'\n'+message+' AT \n';return function(){var e=new Error('get-stack-trace');var stack=e&&e.stack?e.stack.replace(/^[^\(]+?[\n$]/gm,'').replace(/^\s+at\s+/gm,'').replace(/^Object.<anonymous>\s*\(/gm,'{anonymous}()@'):'Unknown Stack Trace';var log=window.console&&(window.console.warn||window.console.log);if(log){log.call(window.console,deprecationMessage,stack);}return method.apply(this,arguments);};}/**
       * extend object.
       * means that properties in dest will be overwritten by the ones in src.
       * @param {Object} target
       * @param {...Object} objects_to_assign
       * @returns {Object} target
       */var assign;if(typeof Object.assign!=='function'){assign=function assign(target){if(target===undefined$1||target===null){throw new TypeError('Cannot convert undefined or null to object');}var output=Object(target);for(var index=1;index<arguments.length;index++){var source=arguments[index];if(source!==undefined$1&&source!==null){for(var nextKey in source){if(source.hasOwnProperty(nextKey)){output[nextKey]=source[nextKey];}}}}return output;};}else{assign=Object.assign;}/**
       * extend object.
       * means that properties in dest will be overwritten by the ones in src.
       * @param {Object} dest
       * @param {Object} src
       * @param {Boolean} [merge=false]
       * @returns {Object} dest
       */var extend=deprecate(function extend(dest,src,merge){var keys=Object.keys(src);var i=0;while(i<keys.length){if(!merge||merge&&dest[keys[i]]===undefined$1){dest[keys[i]]=src[keys[i]];}i++;}return dest;},'extend','Use `assign`.');/**
       * merge the values from src in the dest.
       * means that properties that exist in dest will not be overwritten by src
       * @param {Object} dest
       * @param {Object} src
       * @returns {Object} dest
       */var merge=deprecate(function merge(dest,src){return extend(dest,src,true);},'merge','Use `assign`.');/**
       * simple class inheritance
       * @param {Function} child
       * @param {Function} base
       * @param {Object} [properties]
       */function inherit(child,base,properties){var baseP=base.prototype,childP;childP=child.prototype=Object.create(baseP);childP.constructor=child;childP._super=baseP;if(properties){assign(childP,properties);}}/**
       * simple function bind
       * @param {Function} fn
       * @param {Object} context
       * @returns {Function}
       */function bindFn(fn,context){return function boundFn(){return fn.apply(context,arguments);};}/**
       * let a boolean value also be a function that must return a boolean
       * this first item in args will be used as the context
       * @param {Boolean|Function} val
       * @param {Array} [args]
       * @returns {Boolean}
       */function boolOrFn(val,args){if(typeof val==TYPE_FUNCTION){return val.apply(args?args[0]||undefined$1:undefined$1,args);}return val;}/**
       * use the val2 when val1 is undefined
       * @param {*} val1
       * @param {*} val2
       * @returns {*}
       */function ifUndefined(val1,val2){return val1===undefined$1?val2:val1;}/**
       * addEventListener with multiple events at once
       * @param {EventTarget} target
       * @param {String} types
       * @param {Function} handler
       */function addEventListeners(target,types,handler){each(splitStr(types),function(type){target.addEventListener(type,handler,false);});}/**
       * removeEventListener with multiple events at once
       * @param {EventTarget} target
       * @param {String} types
       * @param {Function} handler
       */function removeEventListeners(target,types,handler){each(splitStr(types),function(type){target.removeEventListener(type,handler,false);});}/**
       * find if a node is in the given parent
       * @method hasParent
       * @param {HTMLElement} node
       * @param {HTMLElement} parent
       * @return {Boolean} found
       */function hasParent(node,parent){while(node){if(node==parent){return true;}node=node.parentNode;}return false;}/**
       * small indexOf wrapper
       * @param {String} str
       * @param {String} find
       * @returns {Boolean} found
       */function inStr(str,find){return str.indexOf(find)>-1;}/**
       * split string on whitespace
       * @param {String} str
       * @returns {Array} words
       */function splitStr(str){return str.trim().split(/\s+/g);}/**
       * find if a array contains the object using indexOf or a simple polyFill
       * @param {Array} src
       * @param {String} find
       * @param {String} [findByKey]
       * @return {Boolean|Number} false when not found, or the index
       */function inArray(src,find,findByKey){if(src.indexOf&&!findByKey){return src.indexOf(find);}else{var i=0;while(i<src.length){if(findByKey&&src[i][findByKey]==find||!findByKey&&src[i]===find){return i;}i++;}return -1;}}/**
       * convert array-like objects to real arrays
       * @param {Object} obj
       * @returns {Array}
       */function toArray(obj){return Array.prototype.slice.call(obj,0);}/**
       * unique array with objects based on a key (like 'id') or just by the array's value
       * @param {Array} src [{id:1},{id:2},{id:1}]
       * @param {String} [key]
       * @param {Boolean} [sort=False]
       * @returns {Array} [{id:1},{id:2}]
       */function uniqueArray(src,key,sort){var results=[];var values=[];var i=0;while(i<src.length){var val=key?src[i][key]:src[i];if(inArray(values,val)<0){results.push(src[i]);}values[i]=val;i++;}if(sort){if(!key){results=results.sort();}else{results=results.sort(function sortUniqueArray(a,b){return a[key]>b[key];});}}return results;}/**
       * get the prefixed property
       * @param {Object} obj
       * @param {String} property
       * @returns {String|Undefined} prefixed
       */function prefixed(obj,property){var prefix,prop;var camelProp=property[0].toUpperCase()+property.slice(1);var i=0;while(i<VENDOR_PREFIXES.length){prefix=VENDOR_PREFIXES[i];prop=prefix?prefix+camelProp:property;if(prop in obj){return prop;}i++;}return undefined$1;}/**
       * get a unique id
       * @returns {number} uniqueId
       */var _uniqueId=1;function uniqueId(){return _uniqueId++;}/**
       * get the window object of an element
       * @param {HTMLElement} element
       * @returns {DocumentView|Window}
       */function getWindowForElement(element){var doc=element.ownerDocument||element;return doc.defaultView||doc.parentWindow||window;}var MOBILE_REGEX=/mobile|tablet|ip(ad|hone|od)|android/i;var SUPPORT_TOUCH='ontouchstart'in window;var SUPPORT_POINTER_EVENTS=prefixed(window,'PointerEvent')!==undefined$1;var SUPPORT_ONLY_TOUCH=SUPPORT_TOUCH&&MOBILE_REGEX.test(navigator.userAgent);var INPUT_TYPE_TOUCH='touch';var INPUT_TYPE_PEN='pen';var INPUT_TYPE_MOUSE='mouse';var INPUT_TYPE_KINECT='kinect';var COMPUTE_INTERVAL=25;var INPUT_START=1;var INPUT_MOVE=2;var INPUT_END=4;var INPUT_CANCEL=8;var DIRECTION_NONE=1;var DIRECTION_LEFT=2;var DIRECTION_RIGHT=4;var DIRECTION_UP=8;var DIRECTION_DOWN=16;var DIRECTION_HORIZONTAL=DIRECTION_LEFT|DIRECTION_RIGHT;var DIRECTION_VERTICAL=DIRECTION_UP|DIRECTION_DOWN;var DIRECTION_ALL=DIRECTION_HORIZONTAL|DIRECTION_VERTICAL;var PROPS_XY=['x','y'];var PROPS_CLIENT_XY=['clientX','clientY'];/**
       * create new input type manager
       * @param {Manager} manager
       * @param {Function} callback
       * @returns {Input}
       * @constructor
       */function Input(manager,callback){var self=this;this.manager=manager;this.callback=callback;this.element=manager.element;this.target=manager.options.inputTarget;// smaller wrapper around the handler, for the scope and the enabled state of the manager,
  // so when disabled the input events are completely bypassed.
  this.domHandler=function(ev){if(boolOrFn(manager.options.enable,[manager])){self.handler(ev);}};this.init();}Input.prototype={/**
         * should handle the inputEvent data and trigger the callback
         * @virtual
         */handler:function(){},/**
         * bind the events
         */init:function(){this.evEl&&addEventListeners(this.element,this.evEl,this.domHandler);this.evTarget&&addEventListeners(this.target,this.evTarget,this.domHandler);this.evWin&&addEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler);},/**
         * unbind the events
         */destroy:function(){this.evEl&&removeEventListeners(this.element,this.evEl,this.domHandler);this.evTarget&&removeEventListeners(this.target,this.evTarget,this.domHandler);this.evWin&&removeEventListeners(getWindowForElement(this.element),this.evWin,this.domHandler);}};/**
       * create new input type manager
       * called by the Manager constructor
       * @param {Hammer} manager
       * @returns {Input}
       */function createInputInstance(manager){var Type;var inputClass=manager.options.inputClass;if(inputClass){Type=inputClass;}else if(SUPPORT_POINTER_EVENTS){Type=PointerEventInput;}else if(SUPPORT_ONLY_TOUCH){Type=TouchInput;}else if(!SUPPORT_TOUCH){Type=MouseInput;}else{Type=TouchMouseInput;}return new Type(manager,inputHandler);}/**
       * handle input events
       * @param {Manager} manager
       * @param {String} eventType
       * @param {Object} input
       */function inputHandler(manager,eventType,input){var pointersLen=input.pointers.length;var changedPointersLen=input.changedPointers.length;var isFirst=eventType&INPUT_START&&pointersLen-changedPointersLen===0;var isFinal=eventType&(INPUT_END|INPUT_CANCEL)&&pointersLen-changedPointersLen===0;input.isFirst=!!isFirst;input.isFinal=!!isFinal;if(isFirst){manager.session={};}// source event is the normalized value of the domEvents
  // like 'touchstart, mouseup, pointerdown'
  input.eventType=eventType;// compute scale, rotation etc
  computeInputData(manager,input);// emit secret event
  manager.emit('hammer.input',input);manager.recognize(input);manager.session.prevInput=input;}/**
       * extend the data with some usable properties like scale, rotate, velocity etc
       * @param {Object} manager
       * @param {Object} input
       */function computeInputData(manager,input){var session=manager.session;var pointers=input.pointers;var pointersLength=pointers.length;// store the first input to calculate the distance and direction
  if(!session.firstInput){session.firstInput=simpleCloneInputData(input);}// to compute scale and rotation we need to store the multiple touches
  if(pointersLength>1&&!session.firstMultiple){session.firstMultiple=simpleCloneInputData(input);}else if(pointersLength===1){session.firstMultiple=false;}var firstInput=session.firstInput;var firstMultiple=session.firstMultiple;var offsetCenter=firstMultiple?firstMultiple.center:firstInput.center;var center=input.center=getCenter(pointers);input.timeStamp=now();input.deltaTime=input.timeStamp-firstInput.timeStamp;input.angle=getAngle(offsetCenter,center);input.distance=getDistance(offsetCenter,center);computeDeltaXY(session,input);input.offsetDirection=getDirection(input.deltaX,input.deltaY);var overallVelocity=getVelocity(input.deltaTime,input.deltaX,input.deltaY);input.overallVelocityX=overallVelocity.x;input.overallVelocityY=overallVelocity.y;input.overallVelocity=abs(overallVelocity.x)>abs(overallVelocity.y)?overallVelocity.x:overallVelocity.y;input.scale=firstMultiple?getScale(firstMultiple.pointers,pointers):1;input.rotation=firstMultiple?getRotation(firstMultiple.pointers,pointers):0;input.maxPointers=!session.prevInput?input.pointers.length:input.pointers.length>session.prevInput.maxPointers?input.pointers.length:session.prevInput.maxPointers;computeIntervalInputData(session,input);// find the correct target
  var target=manager.element;if(hasParent(input.srcEvent.target,target)){target=input.srcEvent.target;}input.target=target;}function computeDeltaXY(session,input){var center=input.center;var offset=session.offsetDelta||{};var prevDelta=session.prevDelta||{};var prevInput=session.prevInput||{};if(input.eventType===INPUT_START||prevInput.eventType===INPUT_END){prevDelta=session.prevDelta={x:prevInput.deltaX||0,y:prevInput.deltaY||0};offset=session.offsetDelta={x:center.x,y:center.y};}input.deltaX=prevDelta.x+(center.x-offset.x);input.deltaY=prevDelta.y+(center.y-offset.y);}/**
       * velocity is calculated every x ms
       * @param {Object} session
       * @param {Object} input
       */function computeIntervalInputData(session,input){var last=session.lastInterval||input,deltaTime=input.timeStamp-last.timeStamp,velocity,velocityX,velocityY,direction;if(input.eventType!=INPUT_CANCEL&&(deltaTime>COMPUTE_INTERVAL||last.velocity===undefined$1)){var deltaX=input.deltaX-last.deltaX;var deltaY=input.deltaY-last.deltaY;var v=getVelocity(deltaTime,deltaX,deltaY);velocityX=v.x;velocityY=v.y;velocity=abs(v.x)>abs(v.y)?v.x:v.y;direction=getDirection(deltaX,deltaY);session.lastInterval=input;}else{// use latest velocity info if it doesn't overtake a minimum period
  velocity=last.velocity;velocityX=last.velocityX;velocityY=last.velocityY;direction=last.direction;}input.velocity=velocity;input.velocityX=velocityX;input.velocityY=velocityY;input.direction=direction;}/**
       * create a simple clone from the input used for storage of firstInput and firstMultiple
       * @param {Object} input
       * @returns {Object} clonedInputData
       */function simpleCloneInputData(input){// make a simple copy of the pointers because we will get a reference if we don't
  // we only need clientXY for the calculations
  var pointers=[];var i=0;while(i<input.pointers.length){pointers[i]={clientX:round(input.pointers[i].clientX),clientY:round(input.pointers[i].clientY)};i++;}return {timeStamp:now(),pointers:pointers,center:getCenter(pointers),deltaX:input.deltaX,deltaY:input.deltaY};}/**
       * get the center of all the pointers
       * @param {Array} pointers
       * @return {Object} center contains `x` and `y` properties
       */function getCenter(pointers){var pointersLength=pointers.length;// no need to loop when only one touch
  if(pointersLength===1){return {x:round(pointers[0].clientX),y:round(pointers[0].clientY)};}var x=0,y=0,i=0;while(i<pointersLength){x+=pointers[i].clientX;y+=pointers[i].clientY;i++;}return {x:round(x/pointersLength),y:round(y/pointersLength)};}/**
       * calculate the velocity between two points. unit is in px per ms.
       * @param {Number} deltaTime
       * @param {Number} x
       * @param {Number} y
       * @return {Object} velocity `x` and `y`
       */function getVelocity(deltaTime,x,y){return {x:x/deltaTime||0,y:y/deltaTime||0};}/**
       * get the direction between two points
       * @param {Number} x
       * @param {Number} y
       * @return {Number} direction
       */function getDirection(x,y){if(x===y){return DIRECTION_NONE;}if(abs(x)>=abs(y)){return x<0?DIRECTION_LEFT:DIRECTION_RIGHT;}return y<0?DIRECTION_UP:DIRECTION_DOWN;}/**
       * calculate the absolute distance between two points
       * @param {Object} p1 {x, y}
       * @param {Object} p2 {x, y}
       * @param {Array} [props] containing x and y keys
       * @return {Number} distance
       */function getDistance(p1,p2,props){if(!props){props=PROPS_XY;}var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return Math.sqrt(x*x+y*y);}/**
       * calculate the angle between two coordinates
       * @param {Object} p1
       * @param {Object} p2
       * @param {Array} [props] containing x and y keys
       * @return {Number} angle
       */function getAngle(p1,p2,props){if(!props){props=PROPS_XY;}var x=p2[props[0]]-p1[props[0]],y=p2[props[1]]-p1[props[1]];return Math.atan2(y,x)*180/Math.PI;}/**
       * calculate the rotation degrees between two pointersets
       * @param {Array} start array of pointers
       * @param {Array} end array of pointers
       * @return {Number} rotation
       */function getRotation(start,end){return getAngle(end[1],end[0],PROPS_CLIENT_XY)+getAngle(start[1],start[0],PROPS_CLIENT_XY);}/**
       * calculate the scale factor between two pointersets
       * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
       * @param {Array} start array of pointers
       * @param {Array} end array of pointers
       * @return {Number} scale
       */function getScale(start,end){return getDistance(end[0],end[1],PROPS_CLIENT_XY)/getDistance(start[0],start[1],PROPS_CLIENT_XY);}var MOUSE_INPUT_MAP={mousedown:INPUT_START,mousemove:INPUT_MOVE,mouseup:INPUT_END};var MOUSE_ELEMENT_EVENTS='mousedown';var MOUSE_WINDOW_EVENTS='mousemove mouseup';/**
       * Mouse events input
       * @constructor
       * @extends Input
       */function MouseInput(){this.evEl=MOUSE_ELEMENT_EVENTS;this.evWin=MOUSE_WINDOW_EVENTS;this.pressed=false;// mousedown state
  Input.apply(this,arguments);}inherit(MouseInput,Input,{/**
         * handle mouse events
         * @param {Object} ev
         */handler:function MEhandler(ev){var eventType=MOUSE_INPUT_MAP[ev.type];// on start we want to have the left mouse button down
  if(eventType&INPUT_START&&ev.button===0){this.pressed=true;}if(eventType&INPUT_MOVE&&ev.which!==1){eventType=INPUT_END;}// mouse must be down
  if(!this.pressed){return;}if(eventType&INPUT_END){this.pressed=false;}this.callback(this.manager,eventType,{pointers:[ev],changedPointers:[ev],pointerType:INPUT_TYPE_MOUSE,srcEvent:ev});}});var POINTER_INPUT_MAP={pointerdown:INPUT_START,pointermove:INPUT_MOVE,pointerup:INPUT_END,pointercancel:INPUT_CANCEL,pointerout:INPUT_CANCEL};// in IE10 the pointer types is defined as an enum
  var IE10_POINTER_TYPE_ENUM={2:INPUT_TYPE_TOUCH,3:INPUT_TYPE_PEN,4:INPUT_TYPE_MOUSE,5:INPUT_TYPE_KINECT// see https://twitter.com/jacobrossi/status/480596438489890816
  };var POINTER_ELEMENT_EVENTS='pointerdown';var POINTER_WINDOW_EVENTS='pointermove pointerup pointercancel';// IE10 has prefixed support, and case-sensitive
  if(window.MSPointerEvent&&!window.PointerEvent){POINTER_ELEMENT_EVENTS='MSPointerDown';POINTER_WINDOW_EVENTS='MSPointerMove MSPointerUp MSPointerCancel';}/**
       * Pointer events input
       * @constructor
       * @extends Input
       */function PointerEventInput(){this.evEl=POINTER_ELEMENT_EVENTS;this.evWin=POINTER_WINDOW_EVENTS;Input.apply(this,arguments);this.store=this.manager.session.pointerEvents=[];}inherit(PointerEventInput,Input,{/**
         * handle mouse events
         * @param {Object} ev
         */handler:function PEhandler(ev){var store=this.store;var removePointer=false;var eventTypeNormalized=ev.type.toLowerCase().replace('ms','');var eventType=POINTER_INPUT_MAP[eventTypeNormalized];var pointerType=IE10_POINTER_TYPE_ENUM[ev.pointerType]||ev.pointerType;var isTouch=pointerType==INPUT_TYPE_TOUCH;// get index of the event in the store
  var storeIndex=inArray(store,ev.pointerId,'pointerId');// start and mouse must be down
  if(eventType&INPUT_START&&(ev.button===0||isTouch)){if(storeIndex<0){store.push(ev);storeIndex=store.length-1;}}else if(eventType&(INPUT_END|INPUT_CANCEL)){removePointer=true;}// it not found, so the pointer hasn't been down (so it's probably a hover)
  if(storeIndex<0){return;}// update the event in the store
  store[storeIndex]=ev;this.callback(this.manager,eventType,{pointers:store,changedPointers:[ev],pointerType:pointerType,srcEvent:ev});if(removePointer){// remove from the store
  store.splice(storeIndex,1);}}});var SINGLE_TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:INPUT_MOVE,touchend:INPUT_END,touchcancel:INPUT_CANCEL};var SINGLE_TOUCH_TARGET_EVENTS='touchstart';var SINGLE_TOUCH_WINDOW_EVENTS='touchstart touchmove touchend touchcancel';/**
       * Touch events input
       * @constructor
       * @extends Input
       */function SingleTouchInput(){this.evTarget=SINGLE_TOUCH_TARGET_EVENTS;this.evWin=SINGLE_TOUCH_WINDOW_EVENTS;this.started=false;Input.apply(this,arguments);}inherit(SingleTouchInput,Input,{handler:function TEhandler(ev){var type=SINGLE_TOUCH_INPUT_MAP[ev.type];// should we handle the touch events?
  if(type===INPUT_START){this.started=true;}if(!this.started){return;}var touches=normalizeSingleTouches.call(this,ev,type);// when done, reset the started state
  if(type&(INPUT_END|INPUT_CANCEL)&&touches[0].length-touches[1].length===0){this.started=false;}this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:INPUT_TYPE_TOUCH,srcEvent:ev});}});/**
       * @this {TouchInput}
       * @param {Object} ev
       * @param {Number} type flag
       * @returns {undefined|Array} [all, changed]
       */function normalizeSingleTouches(ev,type){var all=toArray(ev.touches);var changed=toArray(ev.changedTouches);if(type&(INPUT_END|INPUT_CANCEL)){all=uniqueArray(all.concat(changed),'identifier',true);}return [all,changed];}var TOUCH_INPUT_MAP={touchstart:INPUT_START,touchmove:INPUT_MOVE,touchend:INPUT_END,touchcancel:INPUT_CANCEL};var TOUCH_TARGET_EVENTS='touchstart touchmove touchend touchcancel';/**
       * Multi-user touch events input
       * @constructor
       * @extends Input
       */function TouchInput(){this.evTarget=TOUCH_TARGET_EVENTS;this.targetIds={};Input.apply(this,arguments);}inherit(TouchInput,Input,{handler:function MTEhandler(ev){var type=TOUCH_INPUT_MAP[ev.type];var touches=getTouches.call(this,ev,type);if(!touches){return;}this.callback(this.manager,type,{pointers:touches[0],changedPointers:touches[1],pointerType:INPUT_TYPE_TOUCH,srcEvent:ev});}});/**
       * @this {TouchInput}
       * @param {Object} ev
       * @param {Number} type flag
       * @returns {undefined|Array} [all, changed]
       */function getTouches(ev,type){var allTouches=toArray(ev.touches);var targetIds=this.targetIds;// when there is only one touch, the process can be simplified
  if(type&(INPUT_START|INPUT_MOVE)&&allTouches.length===1){targetIds[allTouches[0].identifier]=true;return [allTouches,allTouches];}var i,targetTouches,changedTouches=toArray(ev.changedTouches),changedTargetTouches=[],target=this.target;// get target touches from touches
  targetTouches=allTouches.filter(function(touch){return hasParent(touch.target,target);});// collect touches
  if(type===INPUT_START){i=0;while(i<targetTouches.length){targetIds[targetTouches[i].identifier]=true;i++;}}// filter changed touches to only contain touches that exist in the collected target ids
  i=0;while(i<changedTouches.length){if(targetIds[changedTouches[i].identifier]){changedTargetTouches.push(changedTouches[i]);}// cleanup removed touches
  if(type&(INPUT_END|INPUT_CANCEL)){delete targetIds[changedTouches[i].identifier];}i++;}if(!changedTargetTouches.length){return;}return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
  uniqueArray(targetTouches.concat(changedTargetTouches),'identifier',true),changedTargetTouches];}/**
       * Combined touch and mouse input
       *
       * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
       * This because touch devices also emit mouse events while doing a touch.
       *
       * @constructor
       * @extends Input
       */var DEDUP_TIMEOUT=2500;var DEDUP_DISTANCE=25;function TouchMouseInput(){Input.apply(this,arguments);var handler=bindFn(this.handler,this);this.touch=new TouchInput(this.manager,handler);this.mouse=new MouseInput(this.manager,handler);this.primaryTouch=null;this.lastTouches=[];}inherit(TouchMouseInput,Input,{/**
         * handle mouse and touch events
         * @param {Hammer} manager
         * @param {String} inputEvent
         * @param {Object} inputData
         */handler:function TMEhandler(manager,inputEvent,inputData){var isTouch=inputData.pointerType==INPUT_TYPE_TOUCH,isMouse=inputData.pointerType==INPUT_TYPE_MOUSE;if(isMouse&&inputData.sourceCapabilities&&inputData.sourceCapabilities.firesTouchEvents){return;}// when we're in a touch event, record touches to  de-dupe synthetic mouse event
  if(isTouch){recordTouches.call(this,inputEvent,inputData);}else if(isMouse&&isSyntheticEvent.call(this,inputData)){return;}this.callback(manager,inputEvent,inputData);},/**
         * remove the event listeners
         */destroy:function destroy(){this.touch.destroy();this.mouse.destroy();}});function recordTouches(eventType,eventData){if(eventType&INPUT_START){this.primaryTouch=eventData.changedPointers[0].identifier;setLastTouch.call(this,eventData);}else if(eventType&(INPUT_END|INPUT_CANCEL)){setLastTouch.call(this,eventData);}}function setLastTouch(eventData){var touch=eventData.changedPointers[0];if(touch.identifier===this.primaryTouch){var lastTouch={x:touch.clientX,y:touch.clientY};this.lastTouches.push(lastTouch);var lts=this.lastTouches;var removeLastTouch=function(){var i=lts.indexOf(lastTouch);if(i>-1){lts.splice(i,1);}};setTimeout(removeLastTouch,DEDUP_TIMEOUT);}}function isSyntheticEvent(eventData){var x=eventData.srcEvent.clientX,y=eventData.srcEvent.clientY;for(var i=0;i<this.lastTouches.length;i++){var t=this.lastTouches[i];var dx=Math.abs(x-t.x),dy=Math.abs(y-t.y);if(dx<=DEDUP_DISTANCE&&dy<=DEDUP_DISTANCE){return true;}}return false;}var PREFIXED_TOUCH_ACTION=prefixed(TEST_ELEMENT.style,'touchAction');var NATIVE_TOUCH_ACTION=PREFIXED_TOUCH_ACTION!==undefined$1;// magical touchAction value
  var TOUCH_ACTION_COMPUTE='compute';var TOUCH_ACTION_AUTO='auto';var TOUCH_ACTION_MANIPULATION='manipulation';// not implemented
  var TOUCH_ACTION_NONE='none';var TOUCH_ACTION_PAN_X='pan-x';var TOUCH_ACTION_PAN_Y='pan-y';var TOUCH_ACTION_MAP=getTouchActionProps();/**
       * Touch Action
       * sets the touchAction property or uses the js alternative
       * @param {Manager} manager
       * @param {String} value
       * @constructor
       */function TouchAction(manager,value){this.manager=manager;this.set(value);}TouchAction.prototype={/**
         * set the touchAction value on the element or enable the polyfill
         * @param {String} value
         */set:function(value){// find out the touch-action by the event handlers
  if(value==TOUCH_ACTION_COMPUTE){value=this.compute();}if(NATIVE_TOUCH_ACTION&&this.manager.element.style&&TOUCH_ACTION_MAP[value]){this.manager.element.style[PREFIXED_TOUCH_ACTION]=value;}this.actions=value.toLowerCase().trim();},/**
         * just re-set the touchAction value
         */update:function(){this.set(this.manager.options.touchAction);},/**
         * compute the value for the touchAction property based on the recognizer's settings
         * @returns {String} value
         */compute:function(){var actions=[];each(this.manager.recognizers,function(recognizer){if(boolOrFn(recognizer.options.enable,[recognizer])){actions=actions.concat(recognizer.getTouchAction());}});return cleanTouchActions(actions.join(' '));},/**
         * this method is called on each input cycle and provides the preventing of the browser behavior
         * @param {Object} input
         */preventDefaults:function(input){var srcEvent=input.srcEvent;var direction=input.offsetDirection;// if the touch action did prevented once this session
  if(this.manager.session.prevented){srcEvent.preventDefault();return;}var actions=this.actions;var hasNone=inStr(actions,TOUCH_ACTION_NONE)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];var hasPanY=inStr(actions,TOUCH_ACTION_PAN_Y)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];var hasPanX=inStr(actions,TOUCH_ACTION_PAN_X)&&!TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];if(hasNone){//do not prevent defaults if this is a tap gesture
  var isTapPointer=input.pointers.length===1;var isTapMovement=input.distance<2;var isTapTouchTime=input.deltaTime<250;if(isTapPointer&&isTapMovement&&isTapTouchTime){return;}}if(hasPanX&&hasPanY){// `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
  return;}if(hasNone||hasPanY&&direction&DIRECTION_HORIZONTAL||hasPanX&&direction&DIRECTION_VERTICAL){return this.preventSrc(srcEvent);}},/**
         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
         * @param {Object} srcEvent
         */preventSrc:function(srcEvent){this.manager.session.prevented=true;srcEvent.preventDefault();}};/**
       * when the touchActions are collected they are not a valid value, so we need to clean things up. *
       * @param {String} actions
       * @returns {*}
       */function cleanTouchActions(actions){// none
  if(inStr(actions,TOUCH_ACTION_NONE)){return TOUCH_ACTION_NONE;}var hasPanX=inStr(actions,TOUCH_ACTION_PAN_X);var hasPanY=inStr(actions,TOUCH_ACTION_PAN_Y);// if both pan-x and pan-y are set (different recognizers
  // for different directions, e.g. horizontal pan but vertical swipe?)
  // we need none (as otherwise with pan-x pan-y combined none of these
  // recognizers will work, since the browser would handle all panning
  if(hasPanX&&hasPanY){return TOUCH_ACTION_NONE;}// pan-x OR pan-y
  if(hasPanX||hasPanY){return hasPanX?TOUCH_ACTION_PAN_X:TOUCH_ACTION_PAN_Y;}// manipulation
  if(inStr(actions,TOUCH_ACTION_MANIPULATION)){return TOUCH_ACTION_MANIPULATION;}return TOUCH_ACTION_AUTO;}function getTouchActionProps(){if(!NATIVE_TOUCH_ACTION){return false;}var touchMap={};var cssSupports=window.CSS&&window.CSS.supports;['auto','manipulation','pan-y','pan-x','pan-x pan-y','none'].forEach(function(val){// If css.supports is not supported but there is native touch-action assume it supports
  // all values. This is the case for IE 10 and 11.
  touchMap[val]=cssSupports?window.CSS.supports('touch-action',val):true;});return touchMap;}/**
       * Recognizer flow explained; *
       * All recognizers have the initial state of POSSIBLE when a input session starts.
       * The definition of a input session is from the first input until the last input, with all it's movement in it. *
       * Example session for mouse-input: mousedown -> mousemove -> mouseup
       *
       * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
       * which determines with state it should be.
       *
       * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
       * POSSIBLE to give it another change on the next cycle.
       *
       *               Possible
       *                  |
       *            +-----+---------------+
       *            |                     |
       *      +-----+-----+               |
       *      |           |               |
       *   Failed      Cancelled          |
       *                          +-------+------+
       *                          |              |
       *                      Recognized       Began
       *                                         |
       *                                      Changed
       *                                         |
       *                                  Ended/Recognized
       */var STATE_POSSIBLE=1;var STATE_BEGAN=2;var STATE_CHANGED=4;var STATE_ENDED=8;var STATE_RECOGNIZED=STATE_ENDED;var STATE_CANCELLED=16;var STATE_FAILED=32;/**
       * Recognizer
       * Every recognizer needs to extend from this class.
       * @constructor
       * @param {Object} options
       */function Recognizer(options){this.options=assign({},this.defaults,options||{});this.id=uniqueId();this.manager=null;// default is enable true
  this.options.enable=ifUndefined(this.options.enable,true);this.state=STATE_POSSIBLE;this.simultaneous={};this.requireFail=[];}Recognizer.prototype={/**
         * @virtual
         * @type {Object}
         */defaults:{},/**
         * set options
         * @param {Object} options
         * @return {Recognizer}
         */set:function(options){assign(this.options,options);// also update the touchAction, in case something changed about the directions/enabled state
  this.manager&&this.manager.touchAction.update();return this;},/**
         * recognize simultaneous with an other recognizer.
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */recognizeWith:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'recognizeWith',this)){return this;}var simultaneous=this.simultaneous;otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);if(!simultaneous[otherRecognizer.id]){simultaneous[otherRecognizer.id]=otherRecognizer;otherRecognizer.recognizeWith(this);}return this;},/**
         * drop the simultaneous link. it doesnt remove the link on the other recognizer.
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */dropRecognizeWith:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'dropRecognizeWith',this)){return this;}otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);delete this.simultaneous[otherRecognizer.id];return this;},/**
         * recognizer can only run when an other is failing
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */requireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'requireFailure',this)){return this;}var requireFail=this.requireFail;otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);if(inArray(requireFail,otherRecognizer)===-1){requireFail.push(otherRecognizer);otherRecognizer.requireFailure(this);}return this;},/**
         * drop the requireFailure link. it does not remove the link on the other recognizer.
         * @param {Recognizer} otherRecognizer
         * @returns {Recognizer} this
         */dropRequireFailure:function(otherRecognizer){if(invokeArrayArg(otherRecognizer,'dropRequireFailure',this)){return this;}otherRecognizer=getRecognizerByNameIfManager(otherRecognizer,this);var index=inArray(this.requireFail,otherRecognizer);if(index>-1){this.requireFail.splice(index,1);}return this;},/**
         * has require failures boolean
         * @returns {boolean}
         */hasRequireFailures:function(){return this.requireFail.length>0;},/**
         * if the recognizer can recognize simultaneous with an other recognizer
         * @param {Recognizer} otherRecognizer
         * @returns {Boolean}
         */canRecognizeWith:function(otherRecognizer){return !!this.simultaneous[otherRecognizer.id];},/**
         * You should use `tryEmit` instead of `emit` directly to check
         * that all the needed recognizers has failed before emitting.
         * @param {Object} input
         */emit:function(input){var self=this;var state=this.state;function emit(event){self.manager.emit(event,input);}// 'panstart' and 'panmove'
  if(state<STATE_ENDED){emit(self.options.event+stateStr(state));}emit(self.options.event);// simple 'eventName' events
  if(input.additionalEvent){// additional event(panleft, panright, pinchin, pinchout...)
  emit(input.additionalEvent);}// panend and pancancel
  if(state>=STATE_ENDED){emit(self.options.event+stateStr(state));}},/**
         * Check that all the require failure recognizers has failed,
         * if true, it emits a gesture event,
         * otherwise, setup the state to FAILED.
         * @param {Object} input
         */tryEmit:function(input){if(this.canEmit()){return this.emit(input);}// it's failing anyway
  this.state=STATE_FAILED;},/**
         * can we emit?
         * @returns {boolean}
         */canEmit:function(){var i=0;while(i<this.requireFail.length){if(!(this.requireFail[i].state&(STATE_FAILED|STATE_POSSIBLE))){return false;}i++;}return true;},/**
         * update the recognizer
         * @param {Object} inputData
         */recognize:function(inputData){// make a new copy of the inputData
  // so we can change the inputData without messing up the other recognizers
  var inputDataClone=assign({},inputData);// is is enabled and allow recognizing?
  if(!boolOrFn(this.options.enable,[this,inputDataClone])){this.reset();this.state=STATE_FAILED;return;}// reset when we've reached the end
  if(this.state&(STATE_RECOGNIZED|STATE_CANCELLED|STATE_FAILED)){this.state=STATE_POSSIBLE;}this.state=this.process(inputDataClone);// the recognizer has recognized a gesture
  // so trigger an event
  if(this.state&(STATE_BEGAN|STATE_CHANGED|STATE_ENDED|STATE_CANCELLED)){this.tryEmit(inputDataClone);}},/**
         * return the state of the recognizer
         * the actual recognizing happens in this method
         * @virtual
         * @param {Object} inputData
         * @returns {Const} STATE
         */process:function(inputData){},// jshint ignore:line
  /**
         * return the preferred touch-action
         * @virtual
         * @returns {Array}
         */getTouchAction:function(){},/**
         * called when the gesture isn't allowed to recognize
         * like when another is being recognized or it is disabled
         * @virtual
         */reset:function(){}};/**
       * get a usable string, used as event postfix
       * @param {Const} state
       * @returns {String} state
       */function stateStr(state){if(state&STATE_CANCELLED){return 'cancel';}else if(state&STATE_ENDED){return 'end';}else if(state&STATE_CHANGED){return 'move';}else if(state&STATE_BEGAN){return 'start';}return '';}/**
       * direction cons to string
       * @param {Const} direction
       * @returns {String}
       */function directionStr(direction){if(direction==DIRECTION_DOWN){return 'down';}else if(direction==DIRECTION_UP){return 'up';}else if(direction==DIRECTION_LEFT){return 'left';}else if(direction==DIRECTION_RIGHT){return 'right';}return '';}/**
       * get a recognizer by name if it is bound to a manager
       * @param {Recognizer|String} otherRecognizer
       * @param {Recognizer} recognizer
       * @returns {Recognizer}
       */function getRecognizerByNameIfManager(otherRecognizer,recognizer){var manager=recognizer.manager;if(manager){return manager.get(otherRecognizer);}return otherRecognizer;}/**
       * This recognizer is just used as a base for the simple attribute recognizers.
       * @constructor
       * @extends Recognizer
       */function AttrRecognizer(){Recognizer.apply(this,arguments);}inherit(AttrRecognizer,Recognizer,{/**
         * @namespace
         * @memberof AttrRecognizer
         */defaults:{/**
           * @type {Number}
           * @default 1
           */pointers:1},/**
         * Used to check if it the recognizer receives valid input, like input.distance > 10.
         * @memberof AttrRecognizer
         * @param {Object} input
         * @returns {Boolean} recognized
         */attrTest:function(input){var optionPointers=this.options.pointers;return optionPointers===0||input.pointers.length===optionPointers;},/**
         * Process the input and return the state for the recognizer
         * @memberof AttrRecognizer
         * @param {Object} input
         * @returns {*} State
         */process:function(input){var state=this.state;var eventType=input.eventType;var isRecognized=state&(STATE_BEGAN|STATE_CHANGED);var isValid=this.attrTest(input);// on cancel input and we've recognized before, return STATE_CANCELLED
  if(isRecognized&&(eventType&INPUT_CANCEL||!isValid)){return state|STATE_CANCELLED;}else if(isRecognized||isValid){if(eventType&INPUT_END){return state|STATE_ENDED;}else if(!(state&STATE_BEGAN)){return STATE_BEGAN;}return state|STATE_CHANGED;}return STATE_FAILED;}});/**
       * Pan
       * Recognized when the pointer is down and moved in the allowed direction.
       * @constructor
       * @extends AttrRecognizer
       */function PanRecognizer(){AttrRecognizer.apply(this,arguments);this.pX=null;this.pY=null;}inherit(PanRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof PanRecognizer
         */defaults:{event:'pan',threshold:10,pointers:1,direction:DIRECTION_ALL},getTouchAction:function(){var direction=this.options.direction;var actions=[];if(direction&DIRECTION_HORIZONTAL){actions.push(TOUCH_ACTION_PAN_Y);}if(direction&DIRECTION_VERTICAL){actions.push(TOUCH_ACTION_PAN_X);}return actions;},directionTest:function(input){var options=this.options;var hasMoved=true;var distance=input.distance;var direction=input.direction;var x=input.deltaX;var y=input.deltaY;// lock to axis?
  if(!(direction&options.direction)){if(options.direction&DIRECTION_HORIZONTAL){direction=x===0?DIRECTION_NONE:x<0?DIRECTION_LEFT:DIRECTION_RIGHT;hasMoved=x!=this.pX;distance=Math.abs(input.deltaX);}else{direction=y===0?DIRECTION_NONE:y<0?DIRECTION_UP:DIRECTION_DOWN;hasMoved=y!=this.pY;distance=Math.abs(input.deltaY);}}input.direction=direction;return hasMoved&&distance>options.threshold&&direction&options.direction;},attrTest:function(input){return AttrRecognizer.prototype.attrTest.call(this,input)&&(this.state&STATE_BEGAN||!(this.state&STATE_BEGAN)&&this.directionTest(input));},emit:function(input){this.pX=input.deltaX;this.pY=input.deltaY;var direction=directionStr(input.direction);if(direction){input.additionalEvent=this.options.event+direction;}this._super.emit.call(this,input);}});/**
       * Pinch
       * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
       * @constructor
       * @extends AttrRecognizer
       */function PinchRecognizer(){AttrRecognizer.apply(this,arguments);}inherit(PinchRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof PinchRecognizer
         */defaults:{event:'pinch',threshold:0,pointers:2},getTouchAction:function(){return [TOUCH_ACTION_NONE];},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.scale-1)>this.options.threshold||this.state&STATE_BEGAN);},emit:function(input){if(input.scale!==1){var inOut=input.scale<1?'in':'out';input.additionalEvent=this.options.event+inOut;}this._super.emit.call(this,input);}});/**
       * Press
       * Recognized when the pointer is down for x ms without any movement.
       * @constructor
       * @extends Recognizer
       */function PressRecognizer(){Recognizer.apply(this,arguments);this._timer=null;this._input=null;}inherit(PressRecognizer,Recognizer,{/**
         * @namespace
         * @memberof PressRecognizer
         */defaults:{event:'press',pointers:1,time:251,// minimal time of the pointer to be pressed
  threshold:9// a minimal movement is ok, but keep it low
  },getTouchAction:function(){return [TOUCH_ACTION_AUTO];},process:function(input){var options=this.options;var validPointers=input.pointers.length===options.pointers;var validMovement=input.distance<options.threshold;var validTime=input.deltaTime>options.time;this._input=input;// we only allow little movement
  // and we've reached an end event, so a tap is possible
  if(!validMovement||!validPointers||input.eventType&(INPUT_END|INPUT_CANCEL)&&!validTime){this.reset();}else if(input.eventType&INPUT_START){this.reset();this._timer=setTimeoutContext(function(){this.state=STATE_RECOGNIZED;this.tryEmit();},options.time,this);}else if(input.eventType&INPUT_END){return STATE_RECOGNIZED;}return STATE_FAILED;},reset:function(){clearTimeout(this._timer);},emit:function(input){if(this.state!==STATE_RECOGNIZED){return;}if(input&&input.eventType&INPUT_END){this.manager.emit(this.options.event+'up',input);}else{this._input.timeStamp=now();this.manager.emit(this.options.event,this._input);}}});/**
       * Rotate
       * Recognized when two or more pointer are moving in a circular motion.
       * @constructor
       * @extends AttrRecognizer
       */function RotateRecognizer(){AttrRecognizer.apply(this,arguments);}inherit(RotateRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof RotateRecognizer
         */defaults:{event:'rotate',threshold:0,pointers:2},getTouchAction:function(){return [TOUCH_ACTION_NONE];},attrTest:function(input){return this._super.attrTest.call(this,input)&&(Math.abs(input.rotation)>this.options.threshold||this.state&STATE_BEGAN);}});/**
       * Swipe
       * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
       * @constructor
       * @extends AttrRecognizer
       */function SwipeRecognizer(){AttrRecognizer.apply(this,arguments);}inherit(SwipeRecognizer,AttrRecognizer,{/**
         * @namespace
         * @memberof SwipeRecognizer
         */defaults:{event:'swipe',threshold:10,velocity:0.3,direction:DIRECTION_HORIZONTAL|DIRECTION_VERTICAL,pointers:1},getTouchAction:function(){return PanRecognizer.prototype.getTouchAction.call(this);},attrTest:function(input){var direction=this.options.direction;var velocity;if(direction&(DIRECTION_HORIZONTAL|DIRECTION_VERTICAL)){velocity=input.overallVelocity;}else if(direction&DIRECTION_HORIZONTAL){velocity=input.overallVelocityX;}else if(direction&DIRECTION_VERTICAL){velocity=input.overallVelocityY;}return this._super.attrTest.call(this,input)&&direction&input.offsetDirection&&input.distance>this.options.threshold&&input.maxPointers==this.options.pointers&&abs(velocity)>this.options.velocity&&input.eventType&INPUT_END;},emit:function(input){var direction=directionStr(input.offsetDirection);if(direction){this.manager.emit(this.options.event+direction,input);}this.manager.emit(this.options.event,input);}});/**
       * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
       * between the given interval and position. The delay option can be used to recognize multi-taps without firing
       * a single tap.
       *
       * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
       * multi-taps being recognized.
       * @constructor
       * @extends Recognizer
       */function TapRecognizer(){Recognizer.apply(this,arguments);// previous time and center,
  // used for tap counting
  this.pTime=false;this.pCenter=false;this._timer=null;this._input=null;this.count=0;}inherit(TapRecognizer,Recognizer,{/**
         * @namespace
         * @memberof PinchRecognizer
         */defaults:{event:'tap',pointers:1,taps:1,interval:300,// max time between the multi-tap taps
  time:250,// max time of the pointer to be down (like finger on the screen)
  threshold:9,// a minimal movement is ok, but keep it low
  posThreshold:10// a multi-tap can be a bit off the initial position
  },getTouchAction:function(){return [TOUCH_ACTION_MANIPULATION];},process:function(input){var options=this.options;var validPointers=input.pointers.length===options.pointers;var validMovement=input.distance<options.threshold;var validTouchTime=input.deltaTime<options.time;this.reset();if(input.eventType&INPUT_START&&this.count===0){return this.failTimeout();}// we only allow little movement
  // and we've reached an end event, so a tap is possible
  if(validMovement&&validTouchTime&&validPointers){if(input.eventType!=INPUT_END){return this.failTimeout();}var validInterval=this.pTime?input.timeStamp-this.pTime<options.interval:true;var validMultiTap=!this.pCenter||getDistance(this.pCenter,input.center)<options.posThreshold;this.pTime=input.timeStamp;this.pCenter=input.center;if(!validMultiTap||!validInterval){this.count=1;}else{this.count+=1;}this._input=input;// if tap count matches we have recognized it,
  // else it has began recognizing...
  var tapCount=this.count%options.taps;if(tapCount===0){// no failing requirements, immediately trigger the tap event
  // or wait as long as the multitap interval to trigger
  if(!this.hasRequireFailures()){return STATE_RECOGNIZED;}else{this._timer=setTimeoutContext(function(){this.state=STATE_RECOGNIZED;this.tryEmit();},options.interval,this);return STATE_BEGAN;}}}return STATE_FAILED;},failTimeout:function(){this._timer=setTimeoutContext(function(){this.state=STATE_FAILED;},this.options.interval,this);return STATE_FAILED;},reset:function(){clearTimeout(this._timer);},emit:function(){if(this.state==STATE_RECOGNIZED){this._input.tapCount=this.count;this.manager.emit(this.options.event,this._input);}}});/**
       * Simple way to create a manager with a default set of recognizers.
       * @param {HTMLElement} element
       * @param {Object} [options]
       * @constructor
       */function Hammer(element,options){options=options||{};options.recognizers=ifUndefined(options.recognizers,Hammer.defaults.preset);return new Manager(element,options);}/**
       * @const {string}
       */Hammer.VERSION='2.0.7';/**
       * default settings
       * @namespace
       */Hammer.defaults={/**
         * set if DOM events are being triggered.
         * But this is slower and unused by simple implementations, so disabled by default.
         * @type {Boolean}
         * @default false
         */domEvents:false,/**
         * The value for the touchAction property/fallback.
         * When set to `compute` it will magically set the correct value based on the added recognizers.
         * @type {String}
         * @default compute
         */touchAction:TOUCH_ACTION_COMPUTE,/**
         * @type {Boolean}
         * @default true
         */enable:true,/**
         * EXPERIMENTAL FEATURE -- can be removed/changed
         * Change the parent input target element.
         * If Null, then it is being set the to main element.
         * @type {Null|EventTarget}
         * @default null
         */inputTarget:null,/**
         * force an input class
         * @type {Null|Function}
         * @default null
         */inputClass:null,/**
         * Default recognizer setup when calling `Hammer()`
         * When creating a new Manager these will be skipped.
         * @type {Array}
         */preset:[// RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
  [RotateRecognizer,{enable:false}],[PinchRecognizer,{enable:false},['rotate']],[SwipeRecognizer,{direction:DIRECTION_HORIZONTAL}],[PanRecognizer,{direction:DIRECTION_HORIZONTAL},['swipe']],[TapRecognizer],[TapRecognizer,{event:'doubletap',taps:2},['tap']],[PressRecognizer]],/**
         * Some CSS properties can be used to improve the working of Hammer.
         * Add them to this method and they will be set when creating a new Manager.
         * @namespace
         */cssProps:{/**
           * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
           * @type {String}
           * @default 'none'
           */userSelect:'none',/**
           * Disable the Windows Phone grippers when pressing an element.
           * @type {String}
           * @default 'none'
           */touchSelect:'none',/**
           * Disables the default callout shown when you touch and hold a touch target.
           * On iOS, when you touch and hold a touch target such as a link, Safari displays
           * a callout containing information about the link. This property allows you to disable that callout.
           * @type {String}
           * @default 'none'
           */touchCallout:'none',/**
           * Specifies whether zooming is enabled. Used by IE10>
           * @type {String}
           * @default 'none'
           */contentZooming:'none',/**
           * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
           * @type {String}
           * @default 'none'
           */userDrag:'none',/**
           * Overrides the highlight color shown when the user taps a link or a JavaScript
           * clickable element in iOS. This property obeys the alpha value, if specified.
           * @type {String}
           * @default 'rgba(0,0,0,0)'
           */tapHighlightColor:'rgba(0,0,0,0)'}};var STOP=1;var FORCED_STOP=2;/**
       * Manager
       * @param {HTMLElement} element
       * @param {Object} [options]
       * @constructor
       */function Manager(element,options){this.options=assign({},Hammer.defaults,options||{});this.options.inputTarget=this.options.inputTarget||element;this.handlers={};this.session={};this.recognizers=[];this.oldCssProps={};this.element=element;this.input=createInputInstance(this);this.touchAction=new TouchAction(this,this.options.touchAction);toggleCssProps(this,true);each(this.options.recognizers,function(item){var recognizer=this.add(new item[0](item[1]));item[2]&&recognizer.recognizeWith(item[2]);item[3]&&recognizer.requireFailure(item[3]);},this);}Manager.prototype={/**
         * set options
         * @param {Object} options
         * @returns {Manager}
         */set:function(options){assign(this.options,options);// Options that need a little more setup
  if(options.touchAction){this.touchAction.update();}if(options.inputTarget){// Clean up existing event listeners and reinitialize
  this.input.destroy();this.input.target=options.inputTarget;this.input.init();}return this;},/**
         * stop recognizing for this session.
         * This session will be discarded, when a new [input]start event is fired.
         * When forced, the recognizer cycle is stopped immediately.
         * @param {Boolean} [force]
         */stop:function(force){this.session.stopped=force?FORCED_STOP:STOP;},/**
         * run the recognizers!
         * called by the inputHandler function on every movement of the pointers (touches)
         * it walks through all the recognizers and tries to detect the gesture that is being made
         * @param {Object} inputData
         */recognize:function(inputData){var session=this.session;if(session.stopped){return;}// run the touch-action polyfill
  this.touchAction.preventDefaults(inputData);var recognizer;var recognizers=this.recognizers;// this holds the recognizer that is being recognized.
  // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
  // if no recognizer is detecting a thing, it is set to `null`
  var curRecognizer=session.curRecognizer;// reset when the last recognizer is recognized
  // or when we're in a new session
  if(!curRecognizer||curRecognizer&&curRecognizer.state&STATE_RECOGNIZED){curRecognizer=session.curRecognizer=null;}var i=0;while(i<recognizers.length){recognizer=recognizers[i];// find out if we are allowed try to recognize the input for this one.
  // 1.   allow if the session is NOT forced stopped (see the .stop() method)
  // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
  //      that is being recognized.
  // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
  //      this can be setup with the `recognizeWith()` method on the recognizer.
  if(session.stopped!==FORCED_STOP&&(// 1
  !curRecognizer||recognizer==curRecognizer||// 2
  recognizer.canRecognizeWith(curRecognizer))){// 3
  recognizer.recognize(inputData);}else{recognizer.reset();}// if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
  // current active recognizer. but only if we don't already have an active recognizer
  if(!curRecognizer&&recognizer.state&(STATE_BEGAN|STATE_CHANGED|STATE_ENDED)){curRecognizer=session.curRecognizer=recognizer;}i++;}},/**
         * get a recognizer by its event name.
         * @param {Recognizer|String} recognizer
         * @returns {Recognizer|Null}
         */get:function(recognizer){if(recognizer instanceof Recognizer){return recognizer;}var recognizers=this.recognizers;for(var i=0;i<recognizers.length;i++){if(recognizers[i].options.event==recognizer){return recognizers[i];}}return null;},/**
         * add a recognizer to the manager
         * existing recognizers with the same event name will be removed
         * @param {Recognizer} recognizer
         * @returns {Recognizer|Manager}
         */add:function(recognizer){if(invokeArrayArg(recognizer,'add',this)){return this;}// remove existing
  var existing=this.get(recognizer.options.event);if(existing){this.remove(existing);}this.recognizers.push(recognizer);recognizer.manager=this;this.touchAction.update();return recognizer;},/**
         * remove a recognizer by name or instance
         * @param {Recognizer|String} recognizer
         * @returns {Manager}
         */remove:function(recognizer){if(invokeArrayArg(recognizer,'remove',this)){return this;}recognizer=this.get(recognizer);// let's make sure this recognizer exists
  if(recognizer){var recognizers=this.recognizers;var index=inArray(recognizers,recognizer);if(index!==-1){recognizers.splice(index,1);this.touchAction.update();}}return this;},/**
         * bind event
         * @param {String} events
         * @param {Function} handler
         * @returns {EventEmitter} this
         */on:function(events,handler){if(events===undefined$1){return;}if(handler===undefined$1){return;}var handlers=this.handlers;each(splitStr(events),function(event){handlers[event]=handlers[event]||[];handlers[event].push(handler);});return this;},/**
         * unbind event, leave emit blank to remove all handlers
         * @param {String} events
         * @param {Function} [handler]
         * @returns {EventEmitter} this
         */off:function(events,handler){if(events===undefined$1){return;}var handlers=this.handlers;each(splitStr(events),function(event){if(!handler){delete handlers[event];}else{handlers[event]&&handlers[event].splice(inArray(handlers[event],handler),1);}});return this;},/**
         * emit event to the listeners
         * @param {String} event
         * @param {Object} data
         */emit:function(event,data){// we also want to trigger dom events
  if(this.options.domEvents){triggerDomEvent(event,data);}// no handlers, so skip it all
  var handlers=this.handlers[event]&&this.handlers[event].slice();if(!handlers||!handlers.length){return;}data.type=event;data.preventDefault=function(){data.srcEvent.preventDefault();};var i=0;while(i<handlers.length){handlers[i](data);i++;}},/**
         * destroy the manager and unbinds all events
         * it doesn't unbind dom events, that is the user own responsibility
         */destroy:function(){this.element&&toggleCssProps(this,false);this.handlers={};this.session={};this.input.destroy();this.element=null;}};/**
       * add/remove the css properties as defined in manager.options.cssProps
       * @param {Manager} manager
       * @param {Boolean} add
       */function toggleCssProps(manager,add){var element=manager.element;if(!element.style){return;}var prop;each(manager.options.cssProps,function(value,name){prop=prefixed(element.style,name);if(add){manager.oldCssProps[prop]=element.style[prop];element.style[prop]=value;}else{element.style[prop]=manager.oldCssProps[prop]||'';}});if(!add){manager.oldCssProps={};}}/**
       * trigger dom event
       * @param {String} event
       * @param {Object} data
       */function triggerDomEvent(event,data){var gestureEvent=document.createEvent('Event');gestureEvent.initEvent(event,true,true);gestureEvent.gesture=data;data.target.dispatchEvent(gestureEvent);}assign(Hammer,{INPUT_START:INPUT_START,INPUT_MOVE:INPUT_MOVE,INPUT_END:INPUT_END,INPUT_CANCEL:INPUT_CANCEL,STATE_POSSIBLE:STATE_POSSIBLE,STATE_BEGAN:STATE_BEGAN,STATE_CHANGED:STATE_CHANGED,STATE_ENDED:STATE_ENDED,STATE_RECOGNIZED:STATE_RECOGNIZED,STATE_CANCELLED:STATE_CANCELLED,STATE_FAILED:STATE_FAILED,DIRECTION_NONE:DIRECTION_NONE,DIRECTION_LEFT:DIRECTION_LEFT,DIRECTION_RIGHT:DIRECTION_RIGHT,DIRECTION_UP:DIRECTION_UP,DIRECTION_DOWN:DIRECTION_DOWN,DIRECTION_HORIZONTAL:DIRECTION_HORIZONTAL,DIRECTION_VERTICAL:DIRECTION_VERTICAL,DIRECTION_ALL:DIRECTION_ALL,Manager:Manager,Input:Input,TouchAction:TouchAction,TouchInput:TouchInput,MouseInput:MouseInput,PointerEventInput:PointerEventInput,TouchMouseInput:TouchMouseInput,SingleTouchInput:SingleTouchInput,Recognizer:Recognizer,AttrRecognizer:AttrRecognizer,Tap:TapRecognizer,Pan:PanRecognizer,Swipe:SwipeRecognizer,Pinch:PinchRecognizer,Rotate:RotateRecognizer,Press:PressRecognizer,on:addEventListeners,off:removeEventListeners,each:each,merge:merge,extend:extend,assign:assign,inherit:inherit,bindFn:bindFn,prefixed:prefixed});// this prevents errors when Hammer is loaded in the presence of an AMD
  //  style loader but by script tag, not by the loader.
  var freeGlobal=typeof window!=='undefined'?window:typeof self!=='undefined'?self:{};// jshint ignore:line
  freeGlobal.Hammer=Hammer;if(typeof undefined$1==='function'&&undefined$1.amd){undefined$1(function(){return Hammer;});}else if(module.exports){module.exports=Hammer;}else{window[exportName]=Hammer;}})(window,document,'Hammer');});var hammer$1$2=createCommonjsModule$1$4(function(module){/**
     * Setup a mock hammer.js object, for unit testing.
     *
     * Inspiration: https://github.com/uber/deck.gl/pull/658
     *
     * @returns {{on: noop, off: noop, destroy: noop, emit: noop, get: get}}
     */function hammerMock(){var noop=function noop(){};return {on:noop,off:noop,destroy:noop,emit:noop,get:function get(m){//eslint-disable-line no-unused-vars
  return {set:noop};}};}if(typeof window!=='undefined'){var propagating$1$1=propagating$1;var Hammer=window['Hammer']||hammer$3;module.exports=propagating$1$1(Hammer,{preventDefault:'mouse'});}else{module.exports=function(){// hammer.js is only available in a browser, not in node.js. Replacing it with a mock object.
  return hammerMock();};}});var hammerUtil$1=createCommonjsModule$1$4(function(module,exports){/**
     * Register a touch event, taking place before a gesture
     * @param {Hammer} hammer       A hammer instance
     * @param {function} callback   Callback, called as callback(event)
     */exports.onTouch=function(hammer,callback){callback.inputHandler=function(event){if(event.isFirst){callback(event);}};hammer.on('hammer.input',callback.inputHandler);};/**
     * Register a release event, taking place after a gesture
     * @param {Hammer} hammer       A hammer instance
     * @param {function} callback   Callback, called as callback(event)
     * @returns {*}
     */exports.onRelease=function(hammer,callback){callback.inputHandler=function(event){if(event.isFinal){callback(event);}};return hammer.on('hammer.input',callback.inputHandler);};/**
     * Unregister a touch event, taking place before a gesture
     * @param {Hammer} hammer       A hammer instance
     * @param {function} callback   Callback, called as callback(event)
     */exports.offTouch=function(hammer,callback){hammer.off('hammer.input',callback.inputHandler);};/**
     * Unregister a release event, taking place before a gesture
     * @param {Hammer} hammer       A hammer instance
     * @param {function} callback   Callback, called as callback(event)
     */exports.offRelease=exports.offTouch;/**
     * Hack the PinchRecognizer such that it doesn't prevent default behavior
     * for vertical panning.
     *
     * Yeah ... this is quite a hack ... see https://github.com/hammerjs/hammer.js/issues/932
     *
     * @param {Hammer.Pinch} pinchRecognizer
     * @return {Hammer.Pinch} returns the pinchRecognizer
     */exports.disablePreventDefaultVertically=function(pinchRecognizer){var TOUCH_ACTION_PAN_Y='pan-y';pinchRecognizer.getTouchAction=function(){// default method returns [TOUCH_ACTION_NONE]
  return [TOUCH_ACTION_PAN_Y];};return pinchRecognizer;};});var hammerUtil_1$1=hammerUtil$1.onTouch;var hammerUtil_2$1=hammerUtil$1.onRelease;var hammerUtil_3$1=hammerUtil$1.offTouch;var hammerUtil_4$1=hammerUtil$1.offRelease;var hammerUtil_5$1=hammerUtil$1.disablePreventDefaultVertically;/**
   * The class TimeStep is an iterator for dates. You provide a start date and an
   * end date. The class itself determines the best scale (step size) based on the
   * provided start Date, end Date, and minimumStep.
   *
   * If minimumStep is provided, the step size is chosen as close as possible
   * to the minimumStep but larger than minimumStep. If minimumStep is not
   * provided, the scale is set to 1 DAY.
   * The minimumStep should correspond with the onscreen size of about 6 characters
   *
   * Alternatively, you can set a scale by hand.
   * After creation, you can initialize the class by executing first(). Then you
   * can iterate from the start date to the end date via next(). You can check if
   * the end date is reached with the function hasNext(). After each step, you can
   * retrieve the current date via getCurrent().
   * The TimeStep has scales ranging from milliseconds, seconds, minutes, hours,
   * days, to years.
   *
   * Version: 1.2
   *
   * @param {Date} [start]         The start date, for example new Date(2010, 9, 21)
   *                               or new Date(2010, 9, 21, 23, 45, 00)
   * @param {Date} [end]           The end date
   * @param {number} [minimumStep] Optional. Minimum step size in milliseconds
   * @param {Date|Array.<Date>} [hiddenDates] Optional.
   * @param {{showMajorLabels: boolean}} [options] Optional.
   * @constructor  TimeStep
   */function TimeStep(start,end,minimumStep,hiddenDates,options){this.moment=moment$3$2;// variables
  this.current=this.moment();this._start=this.moment();this._end=this.moment();this.autoScale=true;this.scale='day';this.step=1;// initialize the range
  this.setRange(start,end,minimumStep);// hidden Dates options
  this.switchedDay=false;this.switchedMonth=false;this.switchedYear=false;if(Array.isArray(hiddenDates)){this.hiddenDates=hiddenDates;}else if(hiddenDates!=undefined){this.hiddenDates=[hiddenDates];}else{this.hiddenDates=[];}this.format=TimeStep.FORMAT;// default formatting
  this.options=options?options:{};}// Time formatting
  TimeStep.FORMAT={minorLabels:{millisecond:'SSS',second:'s',minute:'HH:mm',hour:'HH:mm',weekday:'ddd D',day:'D',week:'D',month:'MMM',quarter:'MMM',year:'YYYY'},majorLabels:{millisecond:'HH:mm:ss',second:'D MMMM HH:mm',minute:'ddd D MMMM',hour:'ddd D MMMM',weekday:'MMMM YYYY',day:'MMMM YYYY',week:'MMMM YYYY',month:'YYYY',quarter:'YYYY',year:''}};/**
   * Set custom constructor function for moment. Can be used to set dates
   * to UTC or to set a utcOffset.
   * @param {function} moment
   */TimeStep.prototype.setMoment=function(moment){this.moment=moment;// update the date properties, can have a new utcOffset
  this.current=this.moment(this.current.valueOf());this._start=this.moment(this._start.valueOf());this._end=this.moment(this._end.valueOf());};/**
   * Set custom formatting for the minor an major labels of the TimeStep.
   * Both `minorLabels` and `majorLabels` are an Object with properties:
   * 'millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'week', 'month', 'quarter', 'year'.
   * @param {{minorLabels: Object, majorLabels: Object}} format
   */TimeStep.prototype.setFormat=function(format){var defaultFormat=util$4.deepExtend({},TimeStep.FORMAT);this.format=util$4.deepExtend(defaultFormat,format);};/**
   * Set a new range
   * If minimumStep is provided, the step size is chosen as close as possible
   * to the minimumStep but larger than minimumStep. If minimumStep is not
   * provided, the scale is set to 1 DAY.
   * The minimumStep should correspond with the onscreen size of about 6 characters
   * @param {Date} [start]      The start date and time.
   * @param {Date} [end]        The end date and time.
   * @param {int} [minimumStep] Optional. Minimum step size in milliseconds
   */TimeStep.prototype.setRange=function(start,end,minimumStep){if(!(start instanceof Date)||!(end instanceof Date)){throw"No legal start or end date in method setRange";}this._start=start!=undefined?this.moment(start.valueOf()):new Date();this._end=end!=undefined?this.moment(end.valueOf()):new Date();if(this.autoScale){this.setMinimumStep(minimumStep);}};/**
   * Set the range iterator to the start date.
   */TimeStep.prototype.start=function(){this.current=this._start.clone();this.roundToMinor();};/**
   * Round the current date to the first minor date value
   * This must be executed once when the current date is set to start Date
   */TimeStep.prototype.roundToMinor=function(){// round to floor
  // to prevent year & month scales rounding down to the first day of week we perform this separately
  if(this.scale=='week'){this.current.weekday(0);}// IMPORTANT: we have no breaks in this switch! (this is no bug)
  // noinspection FallThroughInSwitchStatementJS
  switch(this.scale){case'year':this.current.year(this.step*Math.floor(this.current.year()/this.step));this.current.month(0);case'quarter':this.current.month(0);// eslint-disable-line no-fallthrough
  case'month':this.current.date(1);// eslint-disable-line no-fallthrough
  case'week':// eslint-disable-line no-fallthrough
  case'day':// eslint-disable-line no-fallthrough
  case'weekday':this.current.hours(0);// eslint-disable-line no-fallthrough
  case'hour':this.current.minutes(0);// eslint-disable-line no-fallthrough
  case'minute':this.current.seconds(0);// eslint-disable-line no-fallthrough
  case'second':this.current.milliseconds(0);// eslint-disable-line no-fallthrough
  //case 'millisecond': // nothing to do for milliseconds
  }if(this.step!=1){// round down to the first minor value that is a multiple of the current step size
  switch(this.scale){case'millisecond':this.current.subtract(this.current.milliseconds()%this.step,'milliseconds');break;case'second':this.current.subtract(this.current.seconds()%this.step,'seconds');break;case'minute':this.current.subtract(this.current.minutes()%this.step,'minutes');break;case'hour':this.current.subtract(this.current.hours()%this.step,'hours');break;case'weekday':// intentional fall through
  case'day':this.current.subtract((this.current.date()-1)%this.step,'day');break;case'week':this.current.subtract(this.current.week()%this.step,'week');break;case'month':this.current.subtract(this.current.month()%this.step,'month');break;case'quarter':this.current.subtract((this.current.quarter()-1)%this.step,'quarter');break;case'year':this.current.subtract(this.current.year()%this.step,'year');break;default:break;}}};/**
   * Check if the there is a next step
   * @return {boolean}  true if the current date has not passed the end date
   */TimeStep.prototype.hasNext=function(){return this.current.valueOf()<=this._end.valueOf();};/**
   * Do the next step
   */TimeStep.prototype.next=function(){var prev=this.current.valueOf();// Two cases, needed to prevent issues with switching daylight savings
  // (end of March and end of October)
  switch(this.scale){case'millisecond':this.current.add(this.step,'millisecond');break;case'second':this.current.add(this.step,'second');break;case'minute':this.current.add(this.step,'minute');break;case'hour':this.current.add(this.step,'hour');if(this.current.month()<6){this.current.subtract(this.current.hours()%this.step,'hour');}else{if(this.current.hours()%this.step!==0){this.current.add(this.step-this.current.hours()%this.step,'hour');}}break;case'weekday':// intentional fall through
  case'day':this.current.add(this.step,'day');break;case'week':if(this.current.weekday()!==0){// we had a month break not correlating with a week's start before
  this.current.weekday(0);// switch back to week cycles
  this.current.add(this.step,'week');}else if(this.options.showMajorLabels===false){this.current.add(this.step,'week');// the default case
  }else{// first day of the week
  var nextWeek=this.current.clone();nextWeek.add(1,'week');if(nextWeek.isSame(this.current,'month')){// is the first day of the next week in the same month?
  this.current.add(this.step,'week');// the default case
  }else{// inject a step at each first day of the month
  this.current.add(this.step,'week');this.current.date(1);}}break;case'month':this.current.add(this.step,'month');break;case'quarter':this.current.add(this.step,'quarter');break;case'year':this.current.add(this.step,'year');break;default:break;}if(this.step!=1){// round down to the correct major value
  switch(this.scale){case'millisecond':if(this.current.milliseconds()>0&&this.current.milliseconds()<this.step)this.current.milliseconds(0);break;case'second':if(this.current.seconds()>0&&this.current.seconds()<this.step)this.current.seconds(0);break;case'minute':if(this.current.minutes()>0&&this.current.minutes()<this.step)this.current.minutes(0);break;case'hour':if(this.current.hours()>0&&this.current.hours()<this.step)this.current.hours(0);break;case'weekday':// intentional fall through
  case'day':if(this.current.date()<this.step+1)this.current.date(1);break;case'week':if(this.current.week()<this.step)this.current.week(1);break;// week numbering starts at 1, not 0
  case'month':if(this.current.month()<this.step)this.current.month(0);break;case'quarter':if(this.current.quarter()<this.step+1)this.current.quarter(1);break;case'year':break;// nothing to do for year
  default:break;}}// safety mechanism: if current time is still unchanged, move to the end
  if(this.current.valueOf()==prev){this.current=this._end.clone();}// Reset switches for year, month and day. Will get set to true where appropriate in DateUtil.stepOverHiddenDates
  this.switchedDay=false;this.switchedMonth=false;this.switchedYear=false;DateUtil.stepOverHiddenDates(this.moment,this,prev);};/**
   * Get the current datetime
   * @return {Moment}  current The current date
   */TimeStep.prototype.getCurrent=function(){return this.current.clone();};/**
   * Set a custom scale. Autoscaling will be disabled.
   * For example setScale('minute', 5) will result
   * in minor steps of 5 minutes, and major steps of an hour.
   *
   * @param {{scale: string, step: number}} params
   *                               An object containing two properties:
   *                               - A string 'scale'. Choose from 'millisecond', 'second',
   *                                 'minute', 'hour', 'weekday', 'day', 'week', 'month', 'quarter, 'year'.
   *                               - A number 'step'. A step size, by default 1.
   *                                 Choose for example 1, 2, 5, or 10.
   */TimeStep.prototype.setScale=function(params){if(params&&typeof params.scale=='string'){this.scale=params.scale;this.step=params.step>0?params.step:1;this.autoScale=false;}};/**
   * Enable or disable autoscaling
   * @param {boolean} enable  If true, autoascaling is set true
   */TimeStep.prototype.setAutoScale=function(enable){this.autoScale=enable;};/**
   * Automatically determine the scale that bests fits the provided minimum step
   * @param {number} [minimumStep]  The minimum step size in milliseconds
   */TimeStep.prototype.setMinimumStep=function(minimumStep){if(minimumStep==undefined){return;}//var b = asc + ds;
  var stepYear=1000*60*60*24*30*12;var stepQuarter=1000*60*60*24*30*3;var stepMonth=1000*60*60*24*30;var stepDay=1000*60*60*24;var stepHour=1000*60*60;var stepMinute=1000*60;var stepSecond=1000;var stepMillisecond=1;// find the smallest step that is larger than the provided minimumStep
  if(stepYear*1000>minimumStep){this.scale='year';this.step=1000;}if(stepYear*500>minimumStep){this.scale='year';this.step=500;}if(stepYear*100>minimumStep){this.scale='year';this.step=100;}if(stepYear*50>minimumStep){this.scale='year';this.step=50;}if(stepYear*10>minimumStep){this.scale='year';this.step=10;}if(stepYear*5>minimumStep){this.scale='year';this.step=5;}if(stepYear>minimumStep){this.scale='year';this.step=1;}if(stepQuarter>minimumStep){this.scale='quarter';this.step=1;}if(stepMonth>minimumStep){this.scale='month';this.step=1;}if(stepDay*7>minimumStep){this.scale='week';this.step=1;}if(stepDay*2>minimumStep){this.scale='day';this.step=2;}if(stepDay>minimumStep){this.scale='day';this.step=1;}if(stepDay/2>minimumStep){this.scale='weekday';this.step=1;}if(stepHour*4>minimumStep){this.scale='hour';this.step=4;}if(stepHour>minimumStep){this.scale='hour';this.step=1;}if(stepMinute*15>minimumStep){this.scale='minute';this.step=15;}if(stepMinute*10>minimumStep){this.scale='minute';this.step=10;}if(stepMinute*5>minimumStep){this.scale='minute';this.step=5;}if(stepMinute>minimumStep){this.scale='minute';this.step=1;}if(stepSecond*15>minimumStep){this.scale='second';this.step=15;}if(stepSecond*10>minimumStep){this.scale='second';this.step=10;}if(stepSecond*5>minimumStep){this.scale='second';this.step=5;}if(stepSecond>minimumStep){this.scale='second';this.step=1;}if(stepMillisecond*200>minimumStep){this.scale='millisecond';this.step=200;}if(stepMillisecond*100>minimumStep){this.scale='millisecond';this.step=100;}if(stepMillisecond*50>minimumStep){this.scale='millisecond';this.step=50;}if(stepMillisecond*10>minimumStep){this.scale='millisecond';this.step=10;}if(stepMillisecond*5>minimumStep){this.scale='millisecond';this.step=5;}if(stepMillisecond>minimumStep){this.scale='millisecond';this.step=1;}};/**
   * Snap a date to a rounded value.
   * The snap intervals are dependent on the current scale and step.
   * Static function
   * @param {Date} date    the date to be snapped.
   * @param {string} scale Current scale, can be 'millisecond', 'second',
   *                       'minute', 'hour', 'weekday, 'day', 'week', 'month', 'quarter', 'year'.
   * @param {number} step  Current step (1, 2, 4, 5, ...
   * @return {Date} snappedDate
   */TimeStep.snap=function(date,scale,step){var clone=moment$3$2(date);if(scale=='year'){var year=clone.year()+Math.round(clone.month()/12);clone.year(Math.round(year/step)*step);clone.month(0);clone.date(0);clone.hours(0);clone.minutes(0);clone.seconds(0);clone.milliseconds(0);}else if(scale=='quarter'){if(clone.month()%3==1&&clone.date()>15||clone.month()%3==2){clone.date(1);clone.month(Math.floor(clone.month()/3)*3);clone.add(1,'quarter');// important: first set Date to 1, after that change the month and the quarter.
  }else{clone.date(1);clone.month(Math.floor(clone.month()/3)*3);}clone.hours(0);clone.minutes(0);clone.seconds(0);clone.milliseconds(0);}else if(scale=='month'){if(clone.date()>15){clone.date(1);clone.add(1,'month');// important: first set Date to 1, after that change the month.
  }else{clone.date(1);}clone.hours(0);clone.minutes(0);clone.seconds(0);clone.milliseconds(0);}else if(scale=='week'){if(clone.weekday()>2){// doing it the momentjs locale aware way
  clone.weekday(0);clone.add(1,'week');}else{clone.weekday(0);}clone.hours(0);clone.minutes(0);clone.seconds(0);clone.milliseconds(0);}else if(scale=='day'){//noinspection FallthroughInSwitchStatementJS
  switch(step){case 5:case 2:clone.hours(Math.round(clone.hours()/24)*24);break;default:clone.hours(Math.round(clone.hours()/12)*12);break;}clone.minutes(0);clone.seconds(0);clone.milliseconds(0);}else if(scale=='weekday'){//noinspection FallthroughInSwitchStatementJS
  switch(step){case 5:case 2:clone.hours(Math.round(clone.hours()/12)*12);break;default:clone.hours(Math.round(clone.hours()/6)*6);break;}clone.minutes(0);clone.seconds(0);clone.milliseconds(0);}else if(scale=='hour'){switch(step){case 4:clone.minutes(Math.round(clone.minutes()/60)*60);break;default:clone.minutes(Math.round(clone.minutes()/30)*30);break;}clone.seconds(0);clone.milliseconds(0);}else if(scale=='minute'){//noinspection FallthroughInSwitchStatementJS
  switch(step){case 15:case 10:clone.minutes(Math.round(clone.minutes()/5)*5);clone.seconds(0);break;case 5:clone.seconds(Math.round(clone.seconds()/60)*60);break;default:clone.seconds(Math.round(clone.seconds()/30)*30);break;}clone.milliseconds(0);}else if(scale=='second'){//noinspection FallthroughInSwitchStatementJS
  switch(step){case 15:case 10:clone.seconds(Math.round(clone.seconds()/5)*5);clone.milliseconds(0);break;case 5:clone.milliseconds(Math.round(clone.milliseconds()/1000)*1000);break;default:clone.milliseconds(Math.round(clone.milliseconds()/500)*500);break;}}else if(scale=='millisecond'){var _step=step>5?step/2:1;clone.milliseconds(Math.round(clone.milliseconds()/_step)*_step);}return clone;};/**
   * Check if the current value is a major value (for example when the step
   * is DAY, a major value is each first day of the MONTH)
   * @return {boolean} true if current date is major, else false.
   */TimeStep.prototype.isMajor=function(){if(this.switchedYear==true){switch(this.scale){case'year':case'quarter':case'month':case'week':case'weekday':case'day':case'hour':case'minute':case'second':case'millisecond':return true;default:return false;}}else if(this.switchedMonth==true){switch(this.scale){case'week':case'weekday':case'day':case'hour':case'minute':case'second':case'millisecond':return true;default:return false;}}else if(this.switchedDay==true){switch(this.scale){case'millisecond':case'second':case'minute':case'hour':return true;default:return false;}}var date=this.moment(this.current);switch(this.scale){case'millisecond':return date.milliseconds()==0;case'second':return date.seconds()==0;case'minute':return date.hours()==0&&date.minutes()==0;case'hour':return date.hours()==0;case'weekday':// intentional fall through
  case'day':return date.date()==1;case'week':return date.date()==1;case'month':return date.month()==0;case'quarter':return date.quarter()==1;case'year':return false;default:return false;}};/**
   * Returns formatted text for the minor axislabel, depending on the current
   * date and the scale. For example when scale is MINUTE, the current time is
   * formatted as "hh:mm".
   * @param {Date} [date=this.current] custom date. if not provided, current date is taken
   * @returns {String}
   */TimeStep.prototype.getLabelMinor=function(date){if(date==undefined){date=this.current;}if(date instanceof Date){date=this.moment(date);}if(typeof this.format.minorLabels==="function"){return this.format.minorLabels(date,this.scale,this.step);}var format=this.format.minorLabels[this.scale];// noinspection FallThroughInSwitchStatementJS
  switch(this.scale){case'week':if(this.isMajor()&&date.weekday()!==0){return "";}default:// eslint-disable-line no-fallthrough
  return format&&format.length>0?this.moment(date).format(format):'';}};/**
   * Returns formatted text for the major axis label, depending on the current
   * date and the scale. For example when scale is MINUTE, the major scale is
   * hours, and the hour will be formatted as "hh".
   * @param {Date} [date=this.current] custom date. if not provided, current date is taken
   * @returns {String}
   */TimeStep.prototype.getLabelMajor=function(date){if(date==undefined){date=this.current;}if(date instanceof Date){date=this.moment(date);}if(typeof this.format.majorLabels==="function"){return this.format.majorLabels(date,this.scale,this.step);}var format=this.format.majorLabels[this.scale];return format&&format.length>0?this.moment(date).format(format):'';};TimeStep.prototype.getClassName=function(){var _moment=this.moment;var m=this.moment(this.current);var current=m.locale?m.locale('en'):m.lang('en');// old versions of moment have .lang() function
  var step=this.step;var classNames=[];/**
     *
     * @param {number} value
     * @returns {String}
     */function even(value){return value/step%2==0?' vis-even':' vis-odd';}/**
     *
     * @param {Date} date
     * @returns {String}
     */function today(date){if(date.isSame(new Date(),'day')){return ' vis-today';}if(date.isSame(_moment().add(1,'day'),'day')){return ' vis-tomorrow';}if(date.isSame(_moment().add(-1,'day'),'day')){return ' vis-yesterday';}return '';}/**
     *
     * @param {Date} date
     * @returns {String}
     */function currentWeek(date){return date.isSame(new Date(),'week')?' vis-current-week':'';}/**
     *
     * @param {Date} date
     * @returns {String}
     */function currentMonth(date){return date.isSame(new Date(),'month')?' vis-current-month':'';}/**
     *
     * @param {Date} date
     * @returns {String}
     */function currentQuarter(date){return date.isSame(new Date(),'quarter')?' vis-current-quarter':'';}/**
     *
     * @param {Date} date
     * @returns {String}
     */function currentYear(date){return date.isSame(new Date(),'year')?' vis-current-year':'';}switch(this.scale){case'millisecond':classNames.push(today(current));classNames.push(even(current.milliseconds()));break;case'second':classNames.push(today(current));classNames.push(even(current.seconds()));break;case'minute':classNames.push(today(current));classNames.push(even(current.minutes()));break;case'hour':classNames.push('vis-h'+current.hours()+(this.step==4?'-h'+(current.hours()+4):''));classNames.push(today(current));classNames.push(even(current.hours()));break;case'weekday':classNames.push('vis-'+current.format('dddd').toLowerCase());classNames.push(today(current));classNames.push(currentWeek(current));classNames.push(even(current.date()));break;case'day':classNames.push('vis-day'+current.date());classNames.push('vis-'+current.format('MMMM').toLowerCase());classNames.push(today(current));classNames.push(currentMonth(current));classNames.push(this.step<=2?today(current):'');classNames.push(this.step<=2?'vis-'+current.format('dddd').toLowerCase():'');classNames.push(even(current.date()-1));break;case'week':classNames.push('vis-week'+current.format('w'));classNames.push(currentWeek(current));classNames.push(even(current.week()));break;case'month':classNames.push('vis-'+current.format('MMMM').toLowerCase());classNames.push(currentMonth(current));classNames.push(even(current.month()));break;case'quarter':classNames.push('vis-q'+current.quarter());classNames.push(currentQuarter(current));classNames.push(even(current.quarter()));break;case'year':classNames.push('vis-year'+current.year());classNames.push(currentYear(current));classNames.push(even(current.year()));break;}return classNames.filter(String).join(" ");};var TimeStep_1=TimeStep;/**
   * A horizontal time axis
   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body
   * @param {Object} [options]        See TimeAxis.setOptions for the available
   *                                  options.
   * @constructor TimeAxis
   * @extends Component
   */function TimeAxis(body,options){this.dom={foreground:null,lines:[],majorTexts:[],minorTexts:[],redundant:{lines:[],majorTexts:[],minorTexts:[]}};this.props={range:{start:0,end:0,minimumStep:0},lineTop:0};this.defaultOptions={orientation:{axis:'bottom'},// axis orientation: 'top' or 'bottom'
  showMinorLabels:true,showMajorLabels:true,maxMinorChars:7,format:TimeStep_1.FORMAT,moment:moment$3$2,timeAxis:null};this.options=util$4.extend({},this.defaultOptions);this.body=body;// create the HTML DOM
  this._create();this.setOptions(options);}TimeAxis.prototype=new Component_1();/**
   * Set options for the TimeAxis.
   * Parameters will be merged in current options.
   * @param {Object} options  Available options:
   *                          {string} [orientation.axis]
   *                          {boolean} [showMinorLabels]
   *                          {boolean} [showMajorLabels]
   */TimeAxis.prototype.setOptions=function(options){if(options){// copy all options that we know
  util$4.selectiveExtend(['showMinorLabels','showMajorLabels','maxMinorChars','hiddenDates','timeAxis','moment','rtl'],this.options,options);// deep copy the format options
  util$4.selectiveDeepExtend(['format'],this.options,options);if('orientation'in options){if(typeof options.orientation==='string'){this.options.orientation.axis=options.orientation;}else if(_typeof$1$2(options.orientation)==='object'&&'axis'in options.orientation){this.options.orientation.axis=options.orientation.axis;}}// apply locale to moment.js
  // TODO: not so nice, this is applied globally to moment.js
  if('locale'in options){if(typeof moment$3$2.locale==='function'){// moment.js 2.8.1+
  moment$3$2.locale(options.locale);}else{moment$3$2.lang(options.locale);}}}};/**
   * Create the HTML DOM for the TimeAxis
   */TimeAxis.prototype._create=function(){this.dom.foreground=document.createElement('div');this.dom.background=document.createElement('div');this.dom.foreground.className='vis-time-axis vis-foreground';this.dom.background.className='vis-time-axis vis-background';};/**
   * Destroy the TimeAxis
   */TimeAxis.prototype.destroy=function(){// remove from DOM
  if(this.dom.foreground.parentNode){this.dom.foreground.parentNode.removeChild(this.dom.foreground);}if(this.dom.background.parentNode){this.dom.background.parentNode.removeChild(this.dom.background);}this.body=null;};/**
   * Repaint the component
   * @return {boolean} Returns true if the component is resized
   */TimeAxis.prototype.redraw=function(){var props=this.props;var foreground=this.dom.foreground;var background=this.dom.background;// determine the correct parent DOM element (depending on option orientation)
  var parent=this.options.orientation.axis=='top'?this.body.dom.top:this.body.dom.bottom;var parentChanged=foreground.parentNode!==parent;// calculate character width and height
  this._calculateCharSize();// TODO: recalculate sizes only needed when parent is resized or options is changed
  var showMinorLabels=this.options.showMinorLabels&&this.options.orientation.axis!=='none';var showMajorLabels=this.options.showMajorLabels&&this.options.orientation.axis!=='none';// determine the width and height of the elemens for the axis
  props.minorLabelHeight=showMinorLabels?props.minorCharHeight:0;props.majorLabelHeight=showMajorLabels?props.majorCharHeight:0;props.height=props.minorLabelHeight+props.majorLabelHeight;props.width=foreground.offsetWidth;props.minorLineHeight=this.body.domProps.root.height-props.majorLabelHeight-(this.options.orientation.axis=='top'?this.body.domProps.bottom.height:this.body.domProps.top.height);props.minorLineWidth=1;// TODO: really calculate width
  props.majorLineHeight=props.minorLineHeight+props.majorLabelHeight;props.majorLineWidth=1;// TODO: really calculate width
  //  take foreground and background offline while updating (is almost twice as fast)
  var foregroundNextSibling=foreground.nextSibling;var backgroundNextSibling=background.nextSibling;foreground.parentNode&&foreground.parentNode.removeChild(foreground);background.parentNode&&background.parentNode.removeChild(background);foreground.style.height=this.props.height+'px';this._repaintLabels();// put DOM online again (at the same place)
  if(foregroundNextSibling){parent.insertBefore(foreground,foregroundNextSibling);}else{parent.appendChild(foreground);}if(backgroundNextSibling){this.body.dom.backgroundVertical.insertBefore(background,backgroundNextSibling);}else{this.body.dom.backgroundVertical.appendChild(background);}return this._isResized()||parentChanged;};/**
   * Repaint major and minor text labels and vertical grid lines
   * @private
   */TimeAxis.prototype._repaintLabels=function(){var orientation=this.options.orientation.axis;// calculate range and step (step such that we have space for 7 characters per label)
  var start=util$4.convert(this.body.range.start,'Number');var end=util$4.convert(this.body.range.end,'Number');var timeLabelsize=this.body.util.toTime((this.props.minorCharWidth||10)*this.options.maxMinorChars).valueOf();var minimumStep=timeLabelsize-DateUtil.getHiddenDurationBefore(this.options.moment,this.body.hiddenDates,this.body.range,timeLabelsize);minimumStep-=this.body.util.toTime(0).valueOf();var step=new TimeStep_1(new Date(start),new Date(end),minimumStep,this.body.hiddenDates,this.options);step.setMoment(this.options.moment);if(this.options.format){step.setFormat(this.options.format);}if(this.options.timeAxis){step.setScale(this.options.timeAxis);}this.step=step;// Move all DOM elements to a "redundant" list, where they
  // can be picked for re-use, and clear the lists with lines and texts.
  // At the end of the function _repaintLabels, left over elements will be cleaned up
  var dom=this.dom;dom.redundant.lines=dom.lines;dom.redundant.majorTexts=dom.majorTexts;dom.redundant.minorTexts=dom.minorTexts;dom.lines=[];dom.majorTexts=[];dom.minorTexts=[];var current;var next;var x;var xNext;var isMajor;var showMinorGrid;var width=0,prevWidth;var line;var xFirstMajorLabel=undefined;var count=0;var MAX=1000;var className;step.start();next=step.getCurrent();xNext=this.body.util.toScreen(next);while(step.hasNext()&&count<MAX){count++;isMajor=step.isMajor();className=step.getClassName();current=next;x=xNext;step.next();next=step.getCurrent();xNext=this.body.util.toScreen(next);prevWidth=width;width=xNext-x;switch(step.scale){case'week':showMinorGrid=true;break;default:showMinorGrid=width>=prevWidth*0.4;break;// prevent displaying of the 31th of the month on a scale of 5 days
  }if(this.options.showMinorLabels&&showMinorGrid){var label=this._repaintMinorText(x,step.getLabelMinor(current),orientation,className);label.style.width=width+'px';// set width to prevent overflow
  }if(isMajor&&this.options.showMajorLabels){if(x>0){if(xFirstMajorLabel==undefined){xFirstMajorLabel=x;}label=this._repaintMajorText(x,step.getLabelMajor(current),orientation,className);}line=this._repaintMajorLine(x,width,orientation,className);}else{// minor line
  if(showMinorGrid){line=this._repaintMinorLine(x,width,orientation,className);}else{if(line){// adjust the width of the previous grid
  line.style.width=parseInt(line.style.width)+width+'px';}}}}if(count===MAX&&!warnedForOverflow){console.warn("Something is wrong with the Timeline scale. Limited drawing of grid lines to ".concat(MAX," lines."));warnedForOverflow=true;}// create a major label on the left when needed
  if(this.options.showMajorLabels){var leftTime=this.body.util.toTime(0),leftText=step.getLabelMajor(leftTime),widthText=leftText.length*(this.props.majorCharWidth||10)+10;// upper bound estimation
  if(xFirstMajorLabel==undefined||widthText<xFirstMajorLabel){this._repaintMajorText(0,leftText,orientation,className);}}// Cleanup leftover DOM elements from the redundant list
  util$4.forEach(this.dom.redundant,function(arr){while(arr.length){var elem=arr.pop();if(elem&&elem.parentNode){elem.parentNode.removeChild(elem);}}});};/**
   * Create a minor label for the axis at position x
   * @param {number} x
   * @param {string} text
   * @param {string} orientation   "top" or "bottom" (default)
   * @param {string} className
   * @return {Element} Returns the HTML element of the created label
   * @private
   */TimeAxis.prototype._repaintMinorText=function(x,text,orientation,className){// reuse redundant label
  var label=this.dom.redundant.minorTexts.shift();if(!label){// create new label
  var content=document.createTextNode('');label=document.createElement('div');label.appendChild(content);this.dom.foreground.appendChild(label);}this.dom.minorTexts.push(label);label.innerHTML=text;label.style.top=orientation=='top'?this.props.majorLabelHeight+'px':'0';if(this.options.rtl){label.style.left="";label.style.right=x+'px';}else{label.style.left=x+'px';}label.className='vis-text vis-minor '+className;//label.title = title;  // TODO: this is a heavy operation
  return label;};/**
   * Create a Major label for the axis at position x
   * @param {number} x
   * @param {string} text
   * @param {string} orientation   "top" or "bottom" (default)
   * @param {string} className
   * @return {Element} Returns the HTML element of the created label
   * @private
   */TimeAxis.prototype._repaintMajorText=function(x,text,orientation,className){// reuse redundant label
  var label=this.dom.redundant.majorTexts.shift();if(!label){// create label
  var content=document.createElement('div');label=document.createElement('div');label.appendChild(content);this.dom.foreground.appendChild(label);}label.childNodes[0].innerHTML=text;label.className='vis-text vis-major '+className;//label.title = title; // TODO: this is a heavy operation
  label.style.top=orientation=='top'?'0':this.props.minorLabelHeight+'px';if(this.options.rtl){label.style.left="";label.style.right=x+'px';}else{label.style.left=x+'px';}this.dom.majorTexts.push(label);return label;};/**
   * Create a minor line for the axis at position x
   * @param {number} x
   * @param {number} width
   * @param {string} orientation   "top" or "bottom" (default)
   * @param {string} className
   * @return {Element} Returns the created line
   * @private
   */TimeAxis.prototype._repaintMinorLine=function(x,width,orientation,className){// reuse redundant line
  var line=this.dom.redundant.lines.shift();if(!line){// create vertical line
  line=document.createElement('div');this.dom.background.appendChild(line);}this.dom.lines.push(line);var props=this.props;if(orientation=='top'){line.style.top=props.majorLabelHeight+'px';}else{line.style.top=this.body.domProps.top.height+'px';}line.style.height=props.minorLineHeight+'px';if(this.options.rtl){line.style.left="";line.style.right=x-props.minorLineWidth/2+'px';line.className='vis-grid vis-vertical-rtl vis-minor '+className;}else{line.style.left=x-props.minorLineWidth/2+'px';line.className='vis-grid vis-vertical vis-minor '+className;}line.style.width=width+'px';return line;};/**
   * Create a Major line for the axis at position x
   * @param {number} x
   * @param {number} width
   * @param {string} orientation   "top" or "bottom" (default)
   * @param {string} className
   * @return {Element} Returns the created line
   * @private
   */TimeAxis.prototype._repaintMajorLine=function(x,width,orientation,className){// reuse redundant line
  var line=this.dom.redundant.lines.shift();if(!line){// create vertical line
  line=document.createElement('div');this.dom.background.appendChild(line);}this.dom.lines.push(line);var props=this.props;if(orientation=='top'){line.style.top='0';}else{line.style.top=this.body.domProps.top.height+'px';}if(this.options.rtl){line.style.left="";line.style.right=x-props.majorLineWidth/2+'px';line.className='vis-grid vis-vertical-rtl vis-major '+className;}else{line.style.left=x-props.majorLineWidth/2+'px';line.className='vis-grid vis-vertical vis-major '+className;}line.style.height=props.majorLineHeight+'px';line.style.width=width+'px';return line;};/**
   * Determine the size of text on the axis (both major and minor axis).
   * The size is calculated only once and then cached in this.props.
   * @private
   */TimeAxis.prototype._calculateCharSize=function(){// Note: We calculate char size with every redraw. Size may change, for
  // example when any of the timelines parents had display:none for example.
  // determine the char width and height on the minor axis
  if(!this.dom.measureCharMinor){this.dom.measureCharMinor=document.createElement('DIV');this.dom.measureCharMinor.className='vis-text vis-minor vis-measure';this.dom.measureCharMinor.style.position='absolute';this.dom.measureCharMinor.appendChild(document.createTextNode('0'));this.dom.foreground.appendChild(this.dom.measureCharMinor);}this.props.minorCharHeight=this.dom.measureCharMinor.clientHeight;this.props.minorCharWidth=this.dom.measureCharMinor.clientWidth;// determine the char width and height on the major axis
  if(!this.dom.measureCharMajor){this.dom.measureCharMajor=document.createElement('DIV');this.dom.measureCharMajor.className='vis-text vis-major vis-measure';this.dom.measureCharMajor.style.position='absolute';this.dom.measureCharMajor.appendChild(document.createTextNode('0'));this.dom.foreground.appendChild(this.dom.measureCharMajor);}this.props.majorCharHeight=this.dom.measureCharMajor.clientHeight;this.props.majorCharWidth=this.dom.measureCharMajor.clientWidth;};var warnedForOverflow=false;var keycharm$3=createCommonjsModule$1$4(function(module,exports){/**
     * Created by Alex on 11/6/2014.
     */ // https://github.com/umdjs/umd/blob/master/returnExports.js#L40-L60
  // if the module has no dependencies, the above pattern can be simplified to
  (function(root,factory){{// Node. Does not work with strict CommonJS, but
  // only CommonJS-like environments that support module.exports,
  // like Node.
  module.exports=factory();}})(commonjsGlobal$1$3,function(){function keycharm(options){var preventDefault=options&&options.preventDefault||false;var container=options&&options.container||window;var _exportFunctions={};var _bound={keydown:{},keyup:{}};var _keys={};var i;// a - z
  for(i=97;i<=122;i++){_keys[String.fromCharCode(i)]={code:65+(i-97),shift:false};}// A - Z
  for(i=65;i<=90;i++){_keys[String.fromCharCode(i)]={code:i,shift:true};}// 0 - 9
  for(i=0;i<=9;i++){_keys[''+i]={code:48+i,shift:false};}// F1 - F12
  for(i=1;i<=12;i++){_keys['F'+i]={code:111+i,shift:false};}// num0 - num9
  for(i=0;i<=9;i++){_keys['num'+i]={code:96+i,shift:false};}// numpad misc
  _keys['num*']={code:106,shift:false};_keys['num+']={code:107,shift:false};_keys['num-']={code:109,shift:false};_keys['num/']={code:111,shift:false};_keys['num.']={code:110,shift:false};// arrows
  _keys['left']={code:37,shift:false};_keys['up']={code:38,shift:false};_keys['right']={code:39,shift:false};_keys['down']={code:40,shift:false};// extra keys
  _keys['space']={code:32,shift:false};_keys['enter']={code:13,shift:false};_keys['shift']={code:16,shift:undefined};_keys['esc']={code:27,shift:false};_keys['backspace']={code:8,shift:false};_keys['tab']={code:9,shift:false};_keys['ctrl']={code:17,shift:false};_keys['alt']={code:18,shift:false};_keys['delete']={code:46,shift:false};_keys['pageup']={code:33,shift:false};_keys['pagedown']={code:34,shift:false};// symbols
  _keys['=']={code:187,shift:false};_keys['-']={code:189,shift:false};_keys[']']={code:221,shift:false};_keys['[']={code:219,shift:false};var down=function(event){handleEvent(event,'keydown');};var up=function(event){handleEvent(event,'keyup');};// handle the actualy bound key with the event
  var handleEvent=function(event,type){if(_bound[type][event.keyCode]!==undefined){var bound=_bound[type][event.keyCode];for(var i=0;i<bound.length;i++){if(bound[i].shift===undefined){bound[i].fn(event);}else if(bound[i].shift==true&&event.shiftKey==true){bound[i].fn(event);}else if(bound[i].shift==false&&event.shiftKey==false){bound[i].fn(event);}}if(preventDefault==true){event.preventDefault();}}};// bind a key to a callback
  _exportFunctions.bind=function(key,callback,type){if(type===undefined){type='keydown';}if(_keys[key]===undefined){throw new Error("unsupported key: "+key);}if(_bound[type][_keys[key].code]===undefined){_bound[type][_keys[key].code]=[];}_bound[type][_keys[key].code].push({fn:callback,shift:_keys[key].shift});};// bind all keys to a call back (demo purposes)
  _exportFunctions.bindAll=function(callback,type){if(type===undefined){type='keydown';}for(var key in _keys){if(_keys.hasOwnProperty(key)){_exportFunctions.bind(key,callback,type);}}};// get the key label from an event
  _exportFunctions.getKey=function(event){for(var key in _keys){if(_keys.hasOwnProperty(key)){if(event.shiftKey==true&&_keys[key].shift==true&&event.keyCode==_keys[key].code){return key;}else if(event.shiftKey==false&&_keys[key].shift==false&&event.keyCode==_keys[key].code){return key;}else if(event.keyCode==_keys[key].code&&key=='shift'){return key;}}}return "unknown key, currently not supported";};// unbind either a specific callback from a key or all of them (by leaving callback undefined)
  _exportFunctions.unbind=function(key,callback,type){if(type===undefined){type='keydown';}if(_keys[key]===undefined){throw new Error("unsupported key: "+key);}if(callback!==undefined){var newBindings=[];var bound=_bound[type][_keys[key].code];if(bound!==undefined){for(var i=0;i<bound.length;i++){if(!(bound[i].fn==callback&&bound[i].shift==_keys[key].shift)){newBindings.push(_bound[type][_keys[key].code][i]);}}}_bound[type][_keys[key].code]=newBindings;}else{_bound[type][_keys[key].code]=[];}};// reset all bound variables.
  _exportFunctions.reset=function(){_bound={keydown:{},keyup:{}};};// unbind all listeners and reset all variables.
  _exportFunctions.destroy=function(){_bound={keydown:{},keyup:{}};container.removeEventListener('keydown',down,true);container.removeEventListener('keyup',up,true);};// create listeners.
  container.addEventListener('keydown',down,true);container.addEventListener('keyup',up,true);// return the public functions.
  return _exportFunctions;}return keycharm;});});/**
   * Turn an element into an clickToUse element.
   * When not active, the element has a transparent overlay. When the overlay is
   * clicked, the mode is changed to active.
   * When active, the element is displayed with a blue border around it, and
   * the interactive contents of the element can be used. When clicked outside
   * the element, the elements mode is changed to inactive.
   * @param {Element} container
   * @constructor Activator
   */function Activator$1(container){this.active=false;this.dom={container:container};this.dom.overlay=document.createElement('div');this.dom.overlay.className='vis-overlay';this.dom.container.appendChild(this.dom.overlay);this.hammer=hammer$1$2(this.dom.overlay);this.hammer.on('tap',this._onTapOverlay.bind(this));// block all touch events (except tap)
  var me=this;var events=['tap','doubletap','press','pinch','pan','panstart','panmove','panend'];events.forEach(function(event){me.hammer.on(event,function(event){event.stopPropagation();});});// attach a click event to the window, in order to deactivate when clicking outside the timeline
  if(document&&document.body){this.onClick=function(event){if(!_hasParent$1(event.target,container)){me.deactivate();}};document.body.addEventListener('click',this.onClick);}if(this.keycharm!==undefined){this.keycharm.destroy();}this.keycharm=keycharm$3();// keycharm listener only bounded when active)
  this.escListener=this.deactivate.bind(this);}// turn into an event emitter
  emitterComponent$1(Activator$1.prototype);// The currently active activator
  Activator$1.current=null;/**
   * Destroy the activator. Cleans up all created DOM and event listeners
   */Activator$1.prototype.destroy=function(){this.deactivate();// remove dom
  this.dom.overlay.parentNode.removeChild(this.dom.overlay);// remove global event listener
  if(this.onClick){document.body.removeEventListener('click',this.onClick);}// remove keycharm
  if(this.keycharm!==undefined){this.keycharm.destroy();}this.keycharm=null;// cleanup hammer instances
  this.hammer.destroy();this.hammer=null;// FIXME: cleaning up hammer instances doesn't work (Timeline not removed from memory)
  };/**
   * Activate the element
   * Overlay is hidden, element is decorated with a blue shadow border
   */Activator$1.prototype.activate=function(){// we allow only one active activator at a time
  if(Activator$1.current){Activator$1.current.deactivate();}Activator$1.current=this;this.active=true;this.dom.overlay.style.display='none';util$4.addClassName(this.dom.container,'vis-active');this.emit('change');this.emit('activate');// ugly hack: bind ESC after emitting the events, as the Network rebinds all
  // keyboard events on a 'change' event
  this.keycharm.bind('esc',this.escListener);};/**
   * Deactivate the element
   * Overlay is displayed on top of the element
   */Activator$1.prototype.deactivate=function(){this.active=false;this.dom.overlay.style.display='';util$4.removeClassName(this.dom.container,'vis-active');this.keycharm.unbind('esc',this.escListener);this.emit('change');this.emit('deactivate');};/**
   * Handle a tap event: activate the container
   * @param {Event}  event   The event
   * @private
   */Activator$1.prototype._onTapOverlay=function(event){// activate the container
  this.activate();event.stopPropagation();};/**
   * Test whether the element has the requested parent element somewhere in
   * its chain of parent nodes.
   * @param {HTMLElement} element
   * @param {HTMLElement} parent
   * @returns {boolean} Returns true when the parent is found somewhere in the
   *                    chain of parent nodes.
   * @private
   */function _hasParent$1(element,parent){while(element){if(element===parent){return true;}element=element.parentNode;}return false;}var locales$1=createCommonjsModule$1$4(function(module,exports){// English
  exports['en']={current:'current',time:'time'};exports['en_EN']=exports['en'];exports['en_US']=exports['en'];// Italiano
  exports['it']={current:'attuale',time:'tempo'};exports['it_IT']=exports['it'];exports['it_CH']=exports['it'];// Dutch
  exports['nl']={current:'huidige',time:'tijd'};exports['nl_NL']=exports['nl'];exports['nl_BE']=exports['nl'];// German
  exports['de']={current:'Aktuelle',time:'Zeit'};exports['de_DE']=exports['de'];// French
  exports['fr']={current:'actuel',time:'heure'};exports['fr_FR']=exports['fr'];exports['fr_CA']=exports['fr'];exports['fr_BE']=exports['fr'];// Espanol
  exports['es']={current:'corriente',time:'hora'};exports['es_ES']=exports['es'];// Ukrainian
  exports['uk']={current:'поточний',time:'час'};exports['uk_UA']=exports['uk'];// Russian
  exports['ru']={current:'текущее',time:'время'};exports['ru_RU']=exports['ru'];});/**
   * A custom time bar
   * @param {{range: Range, dom: Object}} body
   * @param {Object} [options]        Available parameters:
   *                                  {number | string} id
   *                                  {string} locales
   *                                  {string} locale
   * @constructor CustomTime
   * @extends Component
   */function CustomTime(body,options){this.body=body;// default options
  this.defaultOptions={moment:moment$3$2,locales:locales$1,locale:'en',id:undefined,title:undefined,editable:true};this.options=util$4.extend({},this.defaultOptions);if(options&&options.time){this.customTime=options.time;}else{this.customTime=new Date();}this.eventParams={};// stores state parameters while dragging the bar
  this.setOptions(options);// create the DOM
  this._create();}CustomTime.prototype=new Component_1();/**
   * Set options for the component. Options will be merged in current options.
   * @param {Object} options  Available parameters:
   *                                  {number | string} id
   *                                  {string} locales
   *                                  {string} locale
   */CustomTime.prototype.setOptions=function(options){if(options){// copy all options that we know
  util$4.selectiveExtend(['moment','locale','locales','id','editable'],this.options,options);}};/**
   * Create the DOM for the custom time
   * @private
   */CustomTime.prototype._create=function(){var bar=document.createElement('div');bar['custom-time']=this;bar.className='vis-custom-time '+(!this.options.editable?'disabled ':'')+(this.options.id||'');bar.style.position='absolute';bar.style.top='0px';bar.style.height='100%';this.bar=bar;var drag=document.createElement('div');drag.style.position='relative';drag.style.top='0px';drag.style.left='-10px';drag.style.height='100%';drag.style.width='20px';/**
     *
     * @param {WheelEvent} e
     */function onMouseWheel(e){this.body.range._onMouseWheel(e);}if(drag.addEventListener){// IE9, Chrome, Safari, Opera
  drag.addEventListener("mousewheel",onMouseWheel.bind(this),false);// Firefox
  drag.addEventListener("DOMMouseScroll",onMouseWheel.bind(this),false);}else{// IE 6/7/8
  drag.attachEvent("onmousewheel",onMouseWheel.bind(this));}bar.appendChild(drag);// if bar is editable by the user, attach drag handlers
  if(this.options.editable){// attach event listeners
  this.hammer=new hammer$1$2(drag);this.hammer.on('panstart',this._onDragStart.bind(this));this.hammer.on('panmove',this._onDrag.bind(this));this.hammer.on('panend',this._onDragEnd.bind(this));this.hammer.get('pan').set({threshold:5,direction:hammer$1$2.DIRECTION_HORIZONTAL});}};/**
   * Destroy the CustomTime bar
   */CustomTime.prototype.destroy=function(){this.hide();this.hammer.destroy();this.hammer=null;this.body=null;};/**
   * Repaint the component
   * @return {boolean} Returns true if the component is resized
   */CustomTime.prototype.redraw=function(){var parent=this.body.dom.backgroundVertical;if(this.bar.parentNode!=parent){// attach to the dom
  if(this.bar.parentNode){this.bar.parentNode.removeChild(this.bar);}parent.appendChild(this.bar);}var x=this.body.util.toScreen(this.customTime);var locale=this.options.locales[this.options.locale];if(!locale){if(!this.warned){console.log('WARNING: options.locales[\''+this.options.locale+'\'] not found. See http://visjs.org/docs/timeline/#Localization');this.warned=true;}locale=this.options.locales['en'];// fall back on english when not available
  }var title=this.options.title;// To hide the title completely use empty string ''.
  if(title===undefined){title=locale.time+': '+this.options.moment(this.customTime).format('dddd, MMMM Do YYYY, H:mm:ss');title=title.charAt(0).toUpperCase()+title.substring(1);}else if(typeof title==="function"){title=title.call(this.customTime);}this.bar.style.left=x+'px';this.bar.title=title;return false;};/**
   * Remove the CustomTime from the DOM
   */CustomTime.prototype.hide=function(){// remove the line from the DOM
  if(this.bar.parentNode){this.bar.parentNode.removeChild(this.bar);}};/**
   * Set custom time.
   * @param {Date | number | string} time
   */CustomTime.prototype.setCustomTime=function(time){this.customTime=util$4.convert(time,'Date');this.redraw();};/**
   * Retrieve the current custom time.
   * @return {Date} customTime
   */CustomTime.prototype.getCustomTime=function(){return new Date(this.customTime.valueOf());};/**
    * Set custom title.
    * @param {Date | number | string} title
    */CustomTime.prototype.setCustomTitle=function(title){this.options.title=title;};/**
   * Start moving horizontally
   * @param {Event} event
   * @private
   */CustomTime.prototype._onDragStart=function(event){this.eventParams.dragging=true;this.eventParams.customTime=this.customTime;event.stopPropagation();};/**
   * Perform moving operating.
   * @param {Event} event
   * @private
   */CustomTime.prototype._onDrag=function(event){if(!this.eventParams.dragging)return;var x=this.body.util.toScreen(this.eventParams.customTime)+event.deltaX;var time=this.body.util.toTime(x);this.setCustomTime(time);// fire a timechange event
  this.body.emitter.emit('timechange',{id:this.options.id,time:new Date(this.customTime.valueOf()),event:event});event.stopPropagation();};/**
   * Stop moving operating.
   * @param {Event} event
   * @private
   */CustomTime.prototype._onDragEnd=function(event){if(!this.eventParams.dragging)return;// fire a timechanged event
  this.body.emitter.emit('timechanged',{id:this.options.id,time:new Date(this.customTime.valueOf()),event:event});event.stopPropagation();};/**
   * Find a custom time from an event target:
   * searches for the attribute 'custom-time' in the event target's element tree
   * @param {Event} event
   * @return {CustomTime | null} customTime
   */CustomTime.customTimeFromTarget=function(event){var target=event.target;while(target){if(target.hasOwnProperty('custom-time')){return target['custom-time'];}target=target.parentNode;}return null;};/**
   * Create a timeline visualization
   * @constructor Core
   */function Core(){}// turn Core into an event emitter
  emitterComponent$1(Core.prototype);/**
   * Create the main DOM for the Core: a root panel containing left, right,
   * top, bottom, content, and background panel.
   * @param {Element} container  The container element where the Core will
   *                             be attached.
   * @protected
   */Core.prototype._create=function(container){this.dom={};this.dom.container=container;this.dom.container.style.position='relative';this.dom.root=document.createElement('div');this.dom.background=document.createElement('div');this.dom.backgroundVertical=document.createElement('div');this.dom.backgroundHorizontal=document.createElement('div');this.dom.centerContainer=document.createElement('div');this.dom.leftContainer=document.createElement('div');this.dom.rightContainer=document.createElement('div');this.dom.center=document.createElement('div');this.dom.left=document.createElement('div');this.dom.right=document.createElement('div');this.dom.top=document.createElement('div');this.dom.bottom=document.createElement('div');this.dom.shadowTop=document.createElement('div');this.dom.shadowBottom=document.createElement('div');this.dom.shadowTopLeft=document.createElement('div');this.dom.shadowBottomLeft=document.createElement('div');this.dom.shadowTopRight=document.createElement('div');this.dom.shadowBottomRight=document.createElement('div');this.dom.rollingModeBtn=document.createElement('div');this.dom.loadingScreen=document.createElement('div');this.dom.root.className='vis-timeline';this.dom.background.className='vis-panel vis-background';this.dom.backgroundVertical.className='vis-panel vis-background vis-vertical';this.dom.backgroundHorizontal.className='vis-panel vis-background vis-horizontal';this.dom.centerContainer.className='vis-panel vis-center';this.dom.leftContainer.className='vis-panel vis-left';this.dom.rightContainer.className='vis-panel vis-right';this.dom.top.className='vis-panel vis-top';this.dom.bottom.className='vis-panel vis-bottom';this.dom.left.className='vis-content';this.dom.center.className='vis-content';this.dom.right.className='vis-content';this.dom.shadowTop.className='vis-shadow vis-top';this.dom.shadowBottom.className='vis-shadow vis-bottom';this.dom.shadowTopLeft.className='vis-shadow vis-top';this.dom.shadowBottomLeft.className='vis-shadow vis-bottom';this.dom.shadowTopRight.className='vis-shadow vis-top';this.dom.shadowBottomRight.className='vis-shadow vis-bottom';this.dom.rollingModeBtn.className='vis-rolling-mode-btn';this.dom.loadingScreen.className='vis-loading-screen';this.dom.root.appendChild(this.dom.background);this.dom.root.appendChild(this.dom.backgroundVertical);this.dom.root.appendChild(this.dom.backgroundHorizontal);this.dom.root.appendChild(this.dom.centerContainer);this.dom.root.appendChild(this.dom.leftContainer);this.dom.root.appendChild(this.dom.rightContainer);this.dom.root.appendChild(this.dom.top);this.dom.root.appendChild(this.dom.bottom);this.dom.root.appendChild(this.dom.rollingModeBtn);this.dom.centerContainer.appendChild(this.dom.center);this.dom.leftContainer.appendChild(this.dom.left);this.dom.rightContainer.appendChild(this.dom.right);this.dom.centerContainer.appendChild(this.dom.shadowTop);this.dom.centerContainer.appendChild(this.dom.shadowBottom);this.dom.leftContainer.appendChild(this.dom.shadowTopLeft);this.dom.leftContainer.appendChild(this.dom.shadowBottomLeft);this.dom.rightContainer.appendChild(this.dom.shadowTopRight);this.dom.rightContainer.appendChild(this.dom.shadowBottomRight);// size properties of each of the panels
  this.props={root:{},background:{},centerContainer:{},leftContainer:{},rightContainer:{},center:{},left:{},right:{},top:{},bottom:{},border:{},scrollTop:0,scrollTopMin:0};this.on('rangechange',function(){if(this.initialDrawDone===true){this._redraw();}}.bind(this));this.on('rangechanged',function(){if(!this.initialRangeChangeDone){this.initialRangeChangeDone=true;}}.bind(this));this.on('touch',this._onTouch.bind(this));this.on('panmove',this._onDrag.bind(this));var me=this;this._origRedraw=this._redraw.bind(this);this._redraw=util$4.throttle(this._origRedraw);this.on('_change',function(properties){if(me.itemSet&&me.itemSet.initialItemSetDrawn&&properties&&properties.queue==true){me._redraw();}else{me._origRedraw();}});// create event listeners for all interesting events, these events will be
  // emitted via emitter
  this.hammer=new hammer$1$2(this.dom.root);var pinchRecognizer=this.hammer.get('pinch').set({enable:true});pinchRecognizer&&hammerUtil$1.disablePreventDefaultVertically(pinchRecognizer);this.hammer.get('pan').set({threshold:5,direction:hammer$1$2.DIRECTION_HORIZONTAL});this.listeners={};var events=['tap','doubletap','press','pinch','pan','panstart','panmove','panend'// TODO: cleanup
  //'touch', 'pinch',
  //'tap', 'doubletap', 'hold',
  //'dragstart', 'drag', 'dragend',
  //'mousewheel', 'DOMMouseScroll' // DOMMouseScroll is needed for Firefox
  ];events.forEach(function(type){var listener=function listener(event){if(me.isActive()){me.emit(type,event);}};me.hammer.on(type,listener);me.listeners[type]=listener;});// emulate a touch event (emitted before the start of a pan, pinch, tap, or press)
  hammerUtil$1.onTouch(this.hammer,function(event){me.emit('touch',event);}.bind(this));// emulate a release event (emitted after a pan, pinch, tap, or press)
  hammerUtil$1.onRelease(this.hammer,function(event){me.emit('release',event);}.bind(this));/**
     *
     * @param {WheelEvent} event
     */function onMouseWheel(event){// Reasonable default wheel deltas
  var LINE_HEIGHT=40;var PAGE_HEIGHT=800;if(this.isActive()){this.emit('mousewheel',event);}// deltaX and deltaY normalization from jquery.mousewheel.js
  var deltaX=0;var deltaY=0;// Old school scrollwheel delta
  if('detail'in event){deltaY=event.detail*-1;}if('wheelDelta'in event){deltaY=event.wheelDelta;}if('wheelDeltaY'in event){deltaY=event.wheelDeltaY;}if('wheelDeltaX'in event){deltaX=event.wheelDeltaX*-1;}// Firefox < 17 horizontal scrolling related to DOMMouseScroll event
  if('axis'in event&&event.axis===event.HORIZONTAL_AXIS){deltaX=deltaY*-1;deltaY=0;}// New school wheel delta (wheel event)
  if('deltaY'in event){deltaY=event.deltaY*-1;}if('deltaX'in event){deltaX=event.deltaX;}// Normalize deltas
  if(event.deltaMode){if(event.deltaMode===1){// delta in LINE units
  deltaX*=LINE_HEIGHT;deltaY*=LINE_HEIGHT;}else{// delta in PAGE units
  deltaX*=LINE_HEIGHT;deltaY*=PAGE_HEIGHT;}}// Prevent scrolling when zooming (no zoom key, or pressing zoom key)
  if(!this.options.zoomKey||event[this.options.zoomKey])return;// Don't preventDefault if you can't scroll
  if(!this.options.verticalScroll&&!this.options.horizontalScroll)return;// Prevent default actions caused by mouse wheel
  // (else the page and timeline both scroll)
  event.preventDefault();if(this.options.verticalScroll&&Math.abs(deltaY)>=Math.abs(deltaX)){var current=this.props.scrollTop;var adjusted=current+deltaY;if(this.isActive()){this._setScrollTop(adjusted);this._redraw();this.emit('scroll',event);}}else if(this.options.horizontalScroll){var delta=Math.abs(deltaX)>=Math.abs(deltaY)?deltaX:deltaY;// calculate a single scroll jump relative to the range scale
  var diff=delta/120*(this.range.end-this.range.start)/20;// calculate new start and end
  var newStart=this.range.start+diff;var newEnd=this.range.end+diff;var options={animation:false,byUser:true,event:event};this.range.setRange(newStart,newEnd,options);}}// Add modern wheel event listener
  if(this.dom.centerContainer.addEventListener){var wheel="onwheel"in document.createElement("div")?"wheel":// Modern browsers support "wheel"
  document.onmousewheel!==undefined?"mousewheel":// Webkit and IE support at least "mousewheel"
  "DOMMouseScroll";// Older Firefox versions like "DOMMouseScroll"
  this.dom.centerContainer.addEventListener(wheel,onMouseWheel.bind(this),false);}else{// IE 6/7/8
  this.dom.centerContainer.attachEvent("onmousewheel",onMouseWheel.bind(this));}/**
     *
     * @param {scroll} event
     */function onMouseScrollSide(event){if(!me.options.verticalScroll)return;event.preventDefault();if(me.isActive()){var adjusted=-event.target.scrollTop;me._setScrollTop(adjusted);me._redraw();me.emit('scrollSide',event);}}this.dom.left.parentNode.addEventListener('scroll',onMouseScrollSide.bind(this));this.dom.right.parentNode.addEventListener('scroll',onMouseScrollSide.bind(this));var itemAddedToTimeline=false;/**
     *
     * @param {dragover} event
     * @returns {boolean}
     */function handleDragOver(event){if(event.preventDefault){event.preventDefault();// Necessary. Allows us to drop.
  }// make sure your target is a vis element
  if(!event.target.className.indexOf("vis")>-1)return;// make sure only one item is added every time you're over the timeline
  if(itemAddedToTimeline)return;event.dataTransfer.dropEffect='move';itemAddedToTimeline=true;return false;}/**
     *
     * @param {drop} event
     * @returns {boolean}
     */function handleDrop(event){// prevent redirect to blank page - Firefox
  if(event.preventDefault){event.preventDefault();}if(event.stopPropagation){event.stopPropagation();}// return when dropping non-vis items
  try{var itemData=JSON.parse(event.dataTransfer.getData("text"));if(!itemData||!itemData.content)return;}catch(err){return false;}itemAddedToTimeline=false;event.center={x:event.clientX,y:event.clientY};if(itemData.target!=='item'){me.itemSet._onAddItem(event);}else{me.itemSet._onDropObjectOnItem(event);}me.emit('drop',me.getEventProperties(event));return false;}this.dom.center.addEventListener('dragover',handleDragOver.bind(this),false);this.dom.center.addEventListener('drop',handleDrop.bind(this),false);this.customTimes=[];// store state information needed for touch events
  this.touch={};this.redrawCount=0;this.initialDrawDone=false;this.initialRangeChangeDone=false;// attach the root panel to the provided container
  if(!container)throw new Error('No container provided');container.appendChild(this.dom.root);container.appendChild(this.dom.loadingScreen);};/**
   * Set options. Options will be passed to all components loaded in the Timeline.
   * @param {Object} [options]
   *                           {String} orientation
   *                              Vertical orientation for the Timeline,
   *                              can be 'bottom' (default) or 'top'.
   *                           {string | number} width
   *                              Width for the timeline, a number in pixels or
   *                              a css string like '1000px' or '75%'. '100%' by default.
   *                           {string | number} height
   *                              Fixed height for the Timeline, a number in pixels or
   *                              a css string like '400px' or '75%'. If undefined,
   *                              The Timeline will automatically size such that
   *                              its contents fit.
   *                           {string | number} minHeight
   *                              Minimum height for the Timeline, a number in pixels or
   *                              a css string like '400px' or '75%'.
   *                           {string | number} maxHeight
   *                              Maximum height for the Timeline, a number in pixels or
   *                              a css string like '400px' or '75%'.
   *                           {number | Date | string} start
   *                              Start date for the visible window
   *                           {number | Date | string} end
   *                              End date for the visible window
   */Core.prototype.setOptions=function(options){if(options){// copy the known options
  var fields=['width','height','minHeight','maxHeight','autoResize','start','end','clickToUse','dataAttributes','hiddenDates','locale','locales','moment','rtl','zoomKey','horizontalScroll','verticalScroll'];util$4.selectiveExtend(fields,this.options,options);this.dom.rollingModeBtn.style.visibility='hidden';if(this.options.rtl){this.dom.container.style.direction="rtl";this.dom.backgroundVertical.className='vis-panel vis-background vis-vertical-rtl';}if(this.options.verticalScroll){if(this.options.rtl){this.dom.rightContainer.className='vis-panel vis-right vis-vertical-scroll';}else{this.dom.leftContainer.className='vis-panel vis-left vis-vertical-scroll';}}if(_typeof$1$2(this.options.orientation)!=='object'){this.options.orientation={item:undefined,axis:undefined};}if('orientation'in options){if(typeof options.orientation==='string'){this.options.orientation={item:options.orientation,axis:options.orientation};}else if(_typeof$1$2(options.orientation)==='object'){if('item'in options.orientation){this.options.orientation.item=options.orientation.item;}if('axis'in options.orientation){this.options.orientation.axis=options.orientation.axis;}}}if(this.options.orientation.axis==='both'){if(!this.timeAxis2){var timeAxis2=this.timeAxis2=new TimeAxis(this.body);timeAxis2.setOptions=function(options){var _options=options?util$4.extend({},options):{};_options.orientation='top';// override the orientation option, always top
  TimeAxis.prototype.setOptions.call(timeAxis2,_options);};this.components.push(timeAxis2);}}else{if(this.timeAxis2){var index=this.components.indexOf(this.timeAxis2);if(index!==-1){this.components.splice(index,1);}this.timeAxis2.destroy();this.timeAxis2=null;}}// if the graph2d's drawPoints is a function delegate the callback to the onRender property
  if(typeof options.drawPoints=='function'){options.drawPoints={onRender:options.drawPoints};}if('hiddenDates'in this.options){DateUtil.convertHiddenOptions(this.options.moment,this.body,this.options.hiddenDates);}if('clickToUse'in options){if(options.clickToUse){if(!this.activator){this.activator=new Activator$1(this.dom.root);}}else{if(this.activator){this.activator.destroy();delete this.activator;}}}if('showCustomTime'in options){throw new Error('Option `showCustomTime` is deprecated. Create a custom time bar via timeline.addCustomTime(time [, id])');}// enable/disable autoResize
  this._initAutoResize();}// propagate options to all components
  this.components.forEach(function(component){return component.setOptions(options);});// enable/disable configure
  if('configure'in options){if(!this.configurator){this.configurator=this._createConfigurator();}this.configurator.setOptions(options.configure);// collect the settings of all components, and pass them to the configuration system
  var appliedOptions=util$4.deepExtend({},this.options);this.components.forEach(function(component){util$4.deepExtend(appliedOptions,component.options);});this.configurator.setModuleOptions({global:appliedOptions});}this._redraw();};/**
   * Returns true when the Timeline is active.
   * @returns {boolean}
   */Core.prototype.isActive=function(){return !this.activator||this.activator.active;};/**
   * Destroy the Core, clean up all DOM elements and event listeners.
   */Core.prototype.destroy=function(){// unbind datasets
  this.setItems(null);this.setGroups(null);// remove all event listeners
  this.off();// stop checking for changed size
  this._stopAutoResize();// remove from DOM
  if(this.dom.root.parentNode){this.dom.root.parentNode.removeChild(this.dom.root);}this.dom=null;// remove Activator
  if(this.activator){this.activator.destroy();delete this.activator;}// cleanup hammer touch events
  for(var event in this.listeners){if(this.listeners.hasOwnProperty(event)){delete this.listeners[event];}}this.listeners=null;this.hammer&&this.hammer.destroy();this.hammer=null;// give all components the opportunity to cleanup
  this.components.forEach(function(component){return component.destroy();});this.body=null;};/**
   * Set a custom time bar
   * @param {Date} time
   * @param {number} [id=undefined] Optional id of the custom time bar to be adjusted.
   */Core.prototype.setCustomTime=function(time,id){var customTimes=this.customTimes.filter(function(component){return id===component.options.id;});if(customTimes.length===0){throw new Error('No custom time bar found with id '+JSON.stringify(id));}if(customTimes.length>0){customTimes[0].setCustomTime(time);}};/**
   * Retrieve the current custom time.
   * @param {number} [id=undefined]    Id of the custom time bar.
   * @return {Date | undefined} customTime
   */Core.prototype.getCustomTime=function(id){var customTimes=this.customTimes.filter(function(component){return component.options.id===id;});if(customTimes.length===0){throw new Error('No custom time bar found with id '+JSON.stringify(id));}return customTimes[0].getCustomTime();};/**
   * Set a custom title for the custom time bar.
   * @param {string} [title] Custom title
   * @param {number} [id=undefined]    Id of the custom time bar.
   * @returns {*}
   */Core.prototype.setCustomTimeTitle=function(title,id){var customTimes=this.customTimes.filter(function(component){return component.options.id===id;});if(customTimes.length===0){throw new Error('No custom time bar found with id '+JSON.stringify(id));}if(customTimes.length>0){return customTimes[0].setCustomTitle(title);}};/**
   * Retrieve meta information from an event.
   * Should be overridden by classes extending Core
   * @param {Event} event
   * @return {Object} An object with related information.
   */Core.prototype.getEventProperties=function(event){return {event:event};};/**
   * Add custom vertical bar
   * @param {Date | string | number} [time]  A Date, unix timestamp, or
   *                                         ISO date string. Time point where
   *                                         the new bar should be placed.
   *                                         If not provided, `new Date()` will
   *                                         be used.
   * @param {number | string} [id=undefined] Id of the new bar. Optional
   * @param {object} [options={}]            Control options for the new bar. Supported
   *                                         optoins are:
   *                                         editable {true, false} determines whether the 
   *                                         bar can be dragged by the user. Default is true.
   * @return {number | string}               Returns the id of the new bar
   */Core.prototype.addCustomTime=function(time,id,options){var timestamp=time!==undefined?util$4.convert(time,'Date').valueOf():new Date();var exists=this.customTimes.some(function(customTime){return customTime.options.id===id;});if(exists){throw new Error('A custom time with id '+JSON.stringify(id)+' already exists');}var customTime=new CustomTime(this.body,util$4.extend({},this.options,options,{time:timestamp,id:id}));this.customTimes.push(customTime);this.components.push(customTime);this._redraw();return id;};/**
   * Remove previously added custom bar
   * @param {int} id ID of the custom bar to be removed
   * [at]returns {boolean} True if the bar exists and is removed, false otherwise
   */Core.prototype.removeCustomTime=function(id){var customTimes=this.customTimes.filter(function(bar){return bar.options.id===id;});if(customTimes.length===0){throw new Error('No custom time bar found with id '+JSON.stringify(id));}customTimes.forEach(function(customTime){this.customTimes.splice(this.customTimes.indexOf(customTime),1);this.components.splice(this.components.indexOf(customTime),1);customTime.destroy();}.bind(this));};/**
   * Get the id's of the currently visible items.
   * @returns {Array} The ids of the visible items
   */Core.prototype.getVisibleItems=function(){return this.itemSet&&this.itemSet.getVisibleItems()||[];};/**
   * Get the id's of the currently visible groups.
   * @returns {Array} The ids of the visible groups
   */Core.prototype.getVisibleGroups=function(){return this.itemSet&&this.itemSet.getVisibleGroups()||[];};/**
   * Set Core window such that it fits all items
   * @param {Object} [options]  Available options:
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   * @param {function} [callback] a callback funtion to be executed at the end of this function
   */Core.prototype.fit=function(options,callback){var range=this.getDataRange();// skip range set if there is no min and max date
  if(range.min===null&&range.max===null){return;}// apply a margin of 1% left and right of the data
  var interval=range.max-range.min;var min=new Date(range.min.valueOf()-interval*0.01);var max=new Date(range.max.valueOf()+interval*0.01);var animation=options&&options.animation!==undefined?options.animation:true;this.range.setRange(min,max,{animation:animation},callback);};/**
   * Calculate the data range of the items start and end dates
   * [at]returns {{min: [Date], max: [Date]}}
   * @protected
   */Core.prototype.getDataRange=function(){// must be implemented by Timeline and Graph2d
  throw new Error('Cannot invoke abstract method getDataRange');};/**
   * Set the visible window. Both parameters are optional, you can change only
   * start or only end. Syntax:
   *
   *     TimeLine.setWindow(start, end)
   *     TimeLine.setWindow(start, end, options)
   *     TimeLine.setWindow(range)
   *
   * Where start and end can be a Date, number, or string, and range is an
   * object with properties start and end.
   *
   * @param {Date | number | string | Object} [start] Start date of visible window
   * @param {Date | number | string} [end]            End date of visible window
   * @param {Object} [options]  Available options:
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   * @param {function} [callback] a callback funtion to be executed at the end of this function
   */Core.prototype.setWindow=function(start,end,options,callback){if(typeof arguments[2]=="function"){callback=arguments[2];options={};}var animation;var range;if(arguments.length==1){range=arguments[0];animation=range.animation!==undefined?range.animation:true;this.range.setRange(range.start,range.end,{animation:animation});}else if(arguments.length==2&&typeof arguments[1]=="function"){range=arguments[0];callback=arguments[1];animation=range.animation!==undefined?range.animation:true;this.range.setRange(range.start,range.end,{animation:animation},callback);}else{animation=options&&options.animation!==undefined?options.animation:true;this.range.setRange(start,end,{animation:animation},callback);}};/**
   * Move the window such that given time is centered on screen.
   * @param {Date | number | string} time
   * @param {Object} [options]  Available options:
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   * @param {function} [callback] a callback funtion to be executed at the end of this function
   */Core.prototype.moveTo=function(time,options,callback){if(typeof arguments[1]=="function"){callback=arguments[1];options={};}var interval=this.range.end-this.range.start;var t=util$4.convert(time,'Date').valueOf();var start=t-interval/2;var end=t+interval/2;var animation=options&&options.animation!==undefined?options.animation:true;this.range.setRange(start,end,{animation:animation},callback);};/**
   * Get the visible window
   * @return {{start: Date, end: Date}}   Visible range
   */Core.prototype.getWindow=function(){var range=this.range.getRange();return {start:new Date(range.start),end:new Date(range.end)};};/**
   * Zoom in the window such that given time is centered on screen.
   * @param {number} percentage - must be between [0..1]
   * @param {Object} [options]  Available options:
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   * @param {function} [callback] a callback funtion to be executed at the end of this function
   */Core.prototype.zoomIn=function(percentage,options,callback){if(!percentage||percentage<0||percentage>1)return;if(typeof arguments[1]=="function"){callback=arguments[1];options={};}var range=this.getWindow();var start=range.start.valueOf();var end=range.end.valueOf();var interval=end-start;var newInterval=interval/(1+percentage);var distance=(interval-newInterval)/2;var newStart=start+distance;var newEnd=end-distance;this.setWindow(newStart,newEnd,options,callback);};/**
   * Zoom out the window such that given time is centered on screen.
   * @param {number} percentage - must be between [0..1]
   * @param {Object} [options]  Available options:
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   * @param {function} [callback] a callback funtion to be executed at the end of this function
   */Core.prototype.zoomOut=function(percentage,options,callback){if(!percentage||percentage<0||percentage>1)return;if(typeof arguments[1]=="function"){callback=arguments[1];options={};}var range=this.getWindow();var start=range.start.valueOf();var end=range.end.valueOf();var interval=end-start;var newStart=start-interval*percentage/2;var newEnd=end+interval*percentage/2;this.setWindow(newStart,newEnd,options,callback);};/**
   * Force a redraw. Can be overridden by implementations of Core
   *
   * Note: this function will be overridden on construction with a trottled version
   */Core.prototype.redraw=function(){this._redraw();};/**
   * Redraw for internal use. Redraws all components. See also the public
   * method redraw.
   * @protected
   */Core.prototype._redraw=function(){this.redrawCount++;var resized=false;var options=this.options;var props=this.props;var dom=this.dom;if(!dom||!dom.container||dom.root.offsetWidth==0)return;// when destroyed, or invisible
  DateUtil.updateHiddenDates(this.options.moment,this.body,this.options.hiddenDates);// update class names
  if(options.orientation=='top'){util$4.addClassName(dom.root,'vis-top');util$4.removeClassName(dom.root,'vis-bottom');}else{util$4.removeClassName(dom.root,'vis-top');util$4.addClassName(dom.root,'vis-bottom');}// update root width and height options
  dom.root.style.maxHeight=util$4.option.asSize(options.maxHeight,'');dom.root.style.minHeight=util$4.option.asSize(options.minHeight,'');dom.root.style.width=util$4.option.asSize(options.width,'');// calculate border widths
  props.border.left=(dom.centerContainer.offsetWidth-dom.centerContainer.clientWidth)/2;props.border.right=props.border.left;props.border.top=(dom.centerContainer.offsetHeight-dom.centerContainer.clientHeight)/2;props.border.bottom=props.border.top;props.borderRootHeight=dom.root.offsetHeight-dom.root.clientHeight;props.borderRootWidth=dom.root.offsetWidth-dom.root.clientWidth;// workaround for a bug in IE: the clientWidth of an element with
  // a height:0px and overflow:hidden is not calculated and always has value 0
  if(dom.centerContainer.clientHeight===0){props.border.left=props.border.top;props.border.right=props.border.left;}if(dom.root.clientHeight===0){props.borderRootWidth=props.borderRootHeight;}// calculate the heights. If any of the side panels is empty, we set the height to
  // minus the border width, such that the border will be invisible
  props.center.height=dom.center.offsetHeight;props.left.height=dom.left.offsetHeight;props.right.height=dom.right.offsetHeight;props.top.height=dom.top.clientHeight||-props.border.top;props.bottom.height=dom.bottom.clientHeight||-props.border.bottom;// TODO: compensate borders when any of the panels is empty.
  // apply auto height
  // TODO: only calculate autoHeight when needed (else we cause an extra reflow/repaint of the DOM)
  var contentHeight=Math.max(props.left.height,props.center.height,props.right.height);var autoHeight=props.top.height+contentHeight+props.bottom.height+props.borderRootHeight+props.border.top+props.border.bottom;dom.root.style.height=util$4.option.asSize(options.height,autoHeight+'px');// calculate heights of the content panels
  props.root.height=dom.root.offsetHeight;props.background.height=props.root.height-props.borderRootHeight;var containerHeight=props.root.height-props.top.height-props.bottom.height-props.borderRootHeight;props.centerContainer.height=containerHeight;props.leftContainer.height=containerHeight;props.rightContainer.height=props.leftContainer.height;// calculate the widths of the panels
  props.root.width=dom.root.offsetWidth;props.background.width=props.root.width-props.borderRootWidth;if(!this.initialDrawDone){props.scrollbarWidth=util$4.getScrollBarWidth();}if(options.verticalScroll){if(options.rtl){props.left.width=dom.leftContainer.clientWidth||-props.border.left;props.right.width=dom.rightContainer.clientWidth+props.scrollbarWidth||-props.border.right;}else{props.left.width=dom.leftContainer.clientWidth+props.scrollbarWidth||-props.border.left;props.right.width=dom.rightContainer.clientWidth||-props.border.right;}}else{props.left.width=dom.leftContainer.clientWidth||-props.border.left;props.right.width=dom.rightContainer.clientWidth||-props.border.right;}this._setDOM();// update the scrollTop, feasible range for the offset can be changed
  // when the height of the Core or of the contents of the center changed
  var offset=this._updateScrollTop();// reposition the scrollable contents
  if(options.orientation.item!='top'){offset+=Math.max(props.centerContainer.height-props.center.height-props.border.top-props.border.bottom,0);}dom.center.style.top=offset+'px';// show shadows when vertical scrolling is available
  var visibilityTop=props.scrollTop==0?'hidden':'';var visibilityBottom=props.scrollTop==props.scrollTopMin?'hidden':'';dom.shadowTop.style.visibility=visibilityTop;dom.shadowBottom.style.visibility=visibilityBottom;dom.shadowTopLeft.style.visibility=visibilityTop;dom.shadowBottomLeft.style.visibility=visibilityBottom;dom.shadowTopRight.style.visibility=visibilityTop;dom.shadowBottomRight.style.visibility=visibilityBottom;if(options.verticalScroll){dom.rightContainer.className='vis-panel vis-right vis-vertical-scroll';dom.leftContainer.className='vis-panel vis-left vis-vertical-scroll';dom.shadowTopRight.style.visibility="hidden";dom.shadowBottomRight.style.visibility="hidden";dom.shadowTopLeft.style.visibility="hidden";dom.shadowBottomLeft.style.visibility="hidden";dom.left.style.top='0px';dom.right.style.top='0px';}if(!options.verticalScroll||props.center.height<props.centerContainer.height){dom.left.style.top=offset+'px';dom.right.style.top=offset+'px';dom.rightContainer.className=dom.rightContainer.className.replace(new RegExp('(?:^|\\s)'+'vis-vertical-scroll'+'(?:\\s|$)'),' ');dom.leftContainer.className=dom.leftContainer.className.replace(new RegExp('(?:^|\\s)'+'vis-vertical-scroll'+'(?:\\s|$)'),' ');props.left.width=dom.leftContainer.clientWidth||-props.border.left;props.right.width=dom.rightContainer.clientWidth||-props.border.right;this._setDOM();}// enable/disable vertical panning
  var contentsOverflow=props.center.height>props.centerContainer.height;this.hammer.get('pan').set({direction:contentsOverflow?hammer$1$2.DIRECTION_ALL:hammer$1$2.DIRECTION_HORIZONTAL});// redraw all components
  this.components.forEach(function(component){resized=component.redraw()||resized;});var MAX_REDRAW=5;if(resized){if(this.redrawCount<MAX_REDRAW){this.body.emitter.emit('_change');return;}else{console.log('WARNING: infinite loop in redraw?');}}else{this.redrawCount=0;}//Emit public 'changed' event for UI updates, see issue #1592
  this.body.emitter.emit("changed");};Core.prototype._setDOM=function(){var props=this.props;var dom=this.dom;props.leftContainer.width=props.left.width;props.rightContainer.width=props.right.width;var centerWidth=props.root.width-props.left.width-props.right.width-props.borderRootWidth;props.center.width=centerWidth;props.centerContainer.width=centerWidth;props.top.width=centerWidth;props.bottom.width=centerWidth;// resize the panels
  dom.background.style.height=props.background.height+'px';dom.backgroundVertical.style.height=props.background.height+'px';dom.backgroundHorizontal.style.height=props.centerContainer.height+'px';dom.centerContainer.style.height=props.centerContainer.height+'px';dom.leftContainer.style.height=props.leftContainer.height+'px';dom.rightContainer.style.height=props.rightContainer.height+'px';dom.background.style.width=props.background.width+'px';dom.backgroundVertical.style.width=props.centerContainer.width+'px';dom.backgroundHorizontal.style.width=props.background.width+'px';dom.centerContainer.style.width=props.center.width+'px';dom.top.style.width=props.top.width+'px';dom.bottom.style.width=props.bottom.width+'px';// reposition the panels
  dom.background.style.left='0';dom.background.style.top='0';dom.backgroundVertical.style.left=props.left.width+props.border.left+'px';dom.backgroundVertical.style.top='0';dom.backgroundHorizontal.style.left='0';dom.backgroundHorizontal.style.top=props.top.height+'px';dom.centerContainer.style.left=props.left.width+'px';dom.centerContainer.style.top=props.top.height+'px';dom.leftContainer.style.left='0';dom.leftContainer.style.top=props.top.height+'px';dom.rightContainer.style.left=props.left.width+props.center.width+'px';dom.rightContainer.style.top=props.top.height+'px';dom.top.style.left=props.left.width+'px';dom.top.style.top='0';dom.bottom.style.left=props.left.width+'px';dom.bottom.style.top=props.top.height+props.centerContainer.height+'px';dom.center.style.left='0';dom.left.style.left='0';dom.right.style.left='0';};// TODO: deprecated since version 1.1.0, remove some day
  Core.prototype.repaint=function(){throw new Error('Function repaint is deprecated. Use redraw instead.');};/**
   * Set a current time. This can be used for example to ensure that a client's
   * time is synchronized with a shared server time.
   * Only applicable when option `showCurrentTime` is true.
   * @param {Date | string | number} time     A Date, unix timestamp, or
   *                                          ISO date string.
   */Core.prototype.setCurrentTime=function(time){if(!this.currentTime){throw new Error('Option showCurrentTime must be true');}this.currentTime.setCurrentTime(time);};/**
   * Get the current time.
   * Only applicable when option `showCurrentTime` is true.
   * @return {Date} Returns the current time.
   */Core.prototype.getCurrentTime=function(){if(!this.currentTime){throw new Error('Option showCurrentTime must be true');}return this.currentTime.getCurrentTime();};/**
   * Convert a position on screen (pixels) to a datetime
   * @param {int}     x    Position on the screen in pixels
   * @return {Date}   time The datetime the corresponds with given position x
   * @protected
   */ // TODO: move this function to Range
  Core.prototype._toTime=function(x){return DateUtil.toTime(this,x,this.props.center.width);};/**
   * Convert a position on the global screen (pixels) to a datetime
   * @param {int}     x    Position on the screen in pixels
   * @return {Date}   time The datetime the corresponds with given position x
   * @protected
   */ // TODO: move this function to Range
  Core.prototype._toGlobalTime=function(x){return DateUtil.toTime(this,x,this.props.root.width);//var conversion = this.range.conversion(this.props.root.width);
  //return new Date(x / conversion.scale + conversion.offset);
  };/**
   * Convert a datetime (Date object) into a position on the screen
   * @param {Date}   time A date
   * @return {int}   x    The position on the screen in pixels which corresponds
   *                      with the given date.
   * @protected
   */ // TODO: move this function to Range
  Core.prototype._toScreen=function(time){return DateUtil.toScreen(this,time,this.props.center.width);};/**
   * Convert a datetime (Date object) into a position on the root
   * This is used to get the pixel density estimate for the screen, not the center panel
   * @param {Date}   time A date
   * @return {int}   x    The position on root in pixels which corresponds
   *                      with the given date.
   * @protected
   */ // TODO: move this function to Range
  Core.prototype._toGlobalScreen=function(time){return DateUtil.toScreen(this,time,this.props.root.width);//var conversion = this.range.conversion(this.props.root.width);
  //return (time.valueOf() - conversion.offset) * conversion.scale;
  };/**
   * Initialize watching when option autoResize is true
   * @private
   */Core.prototype._initAutoResize=function(){if(this.options.autoResize==true){this._startAutoResize();}else{this._stopAutoResize();}};/**
   * Watch for changes in the size of the container. On resize, the Panel will
   * automatically redraw itself.
   * @private
   */Core.prototype._startAutoResize=function(){var me=this;this._stopAutoResize();this._onResize=function(){if(me.options.autoResize!=true){// stop watching when the option autoResize is changed to false
  me._stopAutoResize();return;}if(me.dom.root){// check whether the frame is resized
  // Note: we compare offsetWidth here, not clientWidth. For some reason,
  // IE does not restore the clientWidth from 0 to the actual width after
  // changing the timeline's container display style from none to visible
  if(me.dom.root.offsetWidth!=me.props.lastWidth||me.dom.root.offsetHeight!=me.props.lastHeight){me.props.lastWidth=me.dom.root.offsetWidth;me.props.lastHeight=me.dom.root.offsetHeight;me.props.scrollbarWidth=util$4.getScrollBarWidth();me.body.emitter.emit('_change');}}};// add event listener to window resize
  util$4.addEventListener(window,'resize',this._onResize);//Prevent initial unnecessary redraw
  if(me.dom.root){me.props.lastWidth=me.dom.root.offsetWidth;me.props.lastHeight=me.dom.root.offsetHeight;}this.watchTimer=setInterval(this._onResize,1000);};/**
   * Stop watching for a resize of the frame.
   * @private
   */Core.prototype._stopAutoResize=function(){if(this.watchTimer){clearInterval(this.watchTimer);this.watchTimer=undefined;}// remove event listener on window.resize
  if(this._onResize){util$4.removeEventListener(window,'resize',this._onResize);this._onResize=null;}};/**
   * Start moving the timeline vertically
   * @param {Event} event
   * @private
   */Core.prototype._onTouch=function(event){// eslint-disable-line no-unused-vars
  this.touch.allowDragging=true;this.touch.initialScrollTop=this.props.scrollTop;};/**
   * Start moving the timeline vertically
   * @param {Event} event
   * @private
   */Core.prototype._onPinch=function(event){// eslint-disable-line no-unused-vars
  this.touch.allowDragging=false;};/**
   * Move the timeline vertically
   * @param {Event} event
   * @private
   */Core.prototype._onDrag=function(event){if(!event)return;// refuse to drag when we where pinching to prevent the timeline make a jump
  // when releasing the fingers in opposite order from the touch screen
  if(!this.touch.allowDragging)return;var delta=event.deltaY;var oldScrollTop=this._getScrollTop();var newScrollTop=this._setScrollTop(this.touch.initialScrollTop+delta);if(this.options.verticalScroll){this.dom.left.parentNode.scrollTop=-this.props.scrollTop;this.dom.right.parentNode.scrollTop=-this.props.scrollTop;}if(newScrollTop!=oldScrollTop){this.emit("verticalDrag");}};/**
   * Apply a scrollTop
   * @param {number} scrollTop
   * @returns {number} scrollTop  Returns the applied scrollTop
   * @private
   */Core.prototype._setScrollTop=function(scrollTop){this.props.scrollTop=scrollTop;this._updateScrollTop();return this.props.scrollTop;};/**
   * Update the current scrollTop when the height of  the containers has been changed
   * @returns {number} scrollTop  Returns the applied scrollTop
   * @private
   */Core.prototype._updateScrollTop=function(){// recalculate the scrollTopMin
  var scrollTopMin=Math.min(this.props.centerContainer.height-this.props.center.height,0);// is negative or zero
  if(scrollTopMin!=this.props.scrollTopMin){// in case of bottom orientation, change the scrollTop such that the contents
  // do not move relative to the time axis at the bottom
  if(this.options.orientation.item!='top'){this.props.scrollTop+=scrollTopMin-this.props.scrollTopMin;}this.props.scrollTopMin=scrollTopMin;}// limit the scrollTop to the feasible scroll range
  if(this.props.scrollTop>0)this.props.scrollTop=0;if(this.props.scrollTop<scrollTopMin)this.props.scrollTop=scrollTopMin;if(this.options.verticalScroll){this.dom.left.parentNode.scrollTop=-this.props.scrollTop;this.dom.right.parentNode.scrollTop=-this.props.scrollTop;}return this.props.scrollTop;};/**
   * Get the current scrollTop
   * @returns {number} scrollTop
   * @private
   */Core.prototype._getScrollTop=function(){return this.props.scrollTop;};/**
   * Load a configurator
   * [at]returns {Object}
   * @private
   */Core.prototype._createConfigurator=function(){throw new Error('Cannot invoke abstract method _createConfigurator');};/**
   * A current time bar
   * @param {{range: Range, dom: Object, domProps: Object}} body
   * @param {Object} [options]        Available parameters:
   *                                  {Boolean} [showCurrentTime]
   *                                  {String}  [alignCurrentTime]
   * @constructor CurrentTime
   * @extends Component
   */function CurrentTime(body,options){this.body=body;// default options
  this.defaultOptions={rtl:false,showCurrentTime:true,alignCurrentTime:undefined,moment:moment$3$2,locales:locales$1,locale:'en'};this.options=util$4.extend({},this.defaultOptions);this.offset=0;this._create();this.setOptions(options);}CurrentTime.prototype=new Component_1();/**
   * Create the HTML DOM for the current time bar
   * @private
   */CurrentTime.prototype._create=function(){var bar=document.createElement('div');bar.className='vis-current-time';bar.style.position='absolute';bar.style.top='0px';bar.style.height='100%';this.bar=bar;};/**
   * Destroy the CurrentTime bar
   */CurrentTime.prototype.destroy=function(){this.options.showCurrentTime=false;this.redraw();// will remove the bar from the DOM and stop refreshing
  this.body=null;};/**
   * Set options for the component. Options will be merged in current options.
   * @param {Object} options  Available parameters:
   *                          {boolean} [showCurrentTime]
   *                          {String}  [alignCurrentTime]
   */CurrentTime.prototype.setOptions=function(options){if(options){// copy all options that we know
  util$4.selectiveExtend(['rtl','showCurrentTime','alignCurrentTime','moment','locale','locales'],this.options,options);}};/**
   * Repaint the component
   * @return {boolean} Returns true if the component is resized
   */CurrentTime.prototype.redraw=function(){if(this.options.showCurrentTime){var parent=this.body.dom.backgroundVertical;if(this.bar.parentNode!=parent){// attach to the dom
  if(this.bar.parentNode){this.bar.parentNode.removeChild(this.bar);}parent.appendChild(this.bar);this.start();}var now=this.options.moment(new Date().valueOf()+this.offset);if(this.options.alignCurrentTime){now=now.startOf(this.options.alignCurrentTime);}var x=this.body.util.toScreen(now);var locale=this.options.locales[this.options.locale];if(!locale){if(!this.warned){console.log('WARNING: options.locales[\''+this.options.locale+'\'] not found. See http://visjs.org/docs/timeline/#Localization');this.warned=true;}locale=this.options.locales['en'];// fall back on english when not available
  }var title=locale.current+' '+locale.time+': '+now.format('dddd, MMMM Do YYYY, H:mm:ss');title=title.charAt(0).toUpperCase()+title.substring(1);if(this.options.rtl){this.bar.style.right=x+'px';}else{this.bar.style.left=x+'px';}this.bar.title=title;}else{// remove the line from the DOM
  if(this.bar.parentNode){this.bar.parentNode.removeChild(this.bar);}this.stop();}return false;};/**
   * Start auto refreshing the current time bar
   */CurrentTime.prototype.start=function(){var me=this;/**
     *  Updates the current time.
     */function update(){me.stop();// determine interval to refresh
  var scale=me.body.range.conversion(me.body.domProps.center.width).scale;var interval=1/scale/10;if(interval<30)interval=30;if(interval>1000)interval=1000;me.redraw();me.body.emitter.emit('currentTimeTick');// start a renderTimer to adjust for the new time
  me.currentTimeTimer=setTimeout(update,interval);}update();};/**
   * Stop auto refreshing the current time bar
   */CurrentTime.prototype.stop=function(){if(this.currentTimeTimer!==undefined){clearTimeout(this.currentTimeTimer);delete this.currentTimeTimer;}};/**
   * Set a current time. This can be used for example to ensure that a client's
   * time is synchronized with a shared server time.
   * @param {Date | string | number} time     A Date, unix timestamp, or
   *                                          ISO date string.
   */CurrentTime.prototype.setCurrentTime=function(time){var t=util$4.convert(time,'Date').valueOf();var now=new Date().valueOf();this.offset=t-now;this.redraw();};/**
   * Get the current time.
   * @return {Date} Returns the current time.
   */CurrentTime.prototype.getCurrentTime=function(){return new Date(new Date().valueOf()+this.offset);};var CurrentTime_1=CurrentTime;var Stack=createCommonjsModule$1$4(function(module,exports){// Utility functions for ordering and stacking of items
  var EPSILON=0.001;// used when checking collisions, to prevent round-off errors
  /**
     * Order items by their start data
     * @param {Item[]} items
     */exports.orderByStart=function(items){items.sort(function(a,b){return a.data.start-b.data.start;});};/**
     * Order items by their end date. If they have no end date, their start date
     * is used.
     * @param {Item[]} items
     */exports.orderByEnd=function(items){items.sort(function(a,b){var aTime='end'in a.data?a.data.end:a.data.start,bTime='end'in b.data?b.data.end:b.data.start;return aTime-bTime;});};/**
     * Adjust vertical positions of the items such that they don't overlap each
     * other.
     * @param {Item[]} items
     *            All visible items
     * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
     *            Margins between items and between items and the axis.
     * @param {boolean} [force=false]
     *            If true, all items will be repositioned. If false (default), only
     *            items having a top===null will be re-stacked
     * @param {function} shouldBailItemsRedrawFunction
     *            bailing function
     * @return {boolean} shouldBail
     */exports.stack=function(items,margin,force,shouldBailItemsRedrawFunction){if(force){// reset top position of all items
  for(var i=0;i<items.length;i++){items[i].top=null;}}// calculate new, non-overlapping positions
  for(var i=0;i<items.length;i++){// eslint-disable-line no-redeclare
  var item=items[i];if(item.stack&&item.top===null){// initialize top position
  item.top=margin.axis;var shouldBail=false;do{// TODO: optimize checking for overlap. when there is a gap without items,
  //       you only need to check for items from the next item on, not from zero
  var collidingItem=null;for(var j=0,jj=items.length;j<jj;j++){var other=items[j];shouldBail=shouldBailItemsRedrawFunction()||false;if(shouldBail){return true;}if(other.top!==null&&other!==item&&other.stack&&exports.collision(item,other,margin.item,other.options.rtl)){collidingItem=other;break;}}if(collidingItem!=null){// There is a collision. Reposition the items above the colliding element
  item.top=collidingItem.top+collidingItem.height+margin.item.vertical;}}while(collidingItem);}}return shouldBail;};/**
     * Adjust vertical positions of the items within a single subgroup such that they 
     * don't overlap each other.
     * @param {Item[]} items
     *            All items withina subgroup
     * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
     *            Margins between items and between items and the axis.
     * @param {subgroup} subgroup
     *            The subgroup that is being stacked 
     */exports.substack=function(items,margin,subgroup){for(var i=0;i<items.length;i++){items[i].top=null;}// Set the initial height
  var subgroupHeight=subgroup.height;// calculate new, non-overlapping positions
  for(i=0;i<items.length;i++){var item=items[i];if(item.stack&&item.top===null){// initialize top position
  item.top=item.baseTop;//margin.axis + item.baseTop;
  do{// TODO: optimize checking for overlap. when there is a gap without items,
  //       you only need to check for items from the next item on, not from zero
  var collidingItem=null;for(var j=0,jj=items.length;j<jj;j++){var other=items[j];if(other.top!==null&&other!==item/*&& other.stack*/&&exports.collision(item,other,margin.item,other.options.rtl)){collidingItem=other;break;}}if(collidingItem!=null){// There is a collision. Reposition the items above the colliding element
  item.top=collidingItem.top+collidingItem.height+margin.item.vertical;// + item.baseTop;
  }if(item.top+item.height>subgroupHeight){subgroupHeight=item.top+item.height;}}while(collidingItem);}}// Set the new height
  subgroup.height=subgroupHeight-subgroup.top+0.5*margin.item.vertical;};/**
     * Adjust vertical positions of the items without stacking them
     * @param {Item[]} items
     *            All visible items
     * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
     *            Margins between items and between items and the axis.
     * @param {subgroups[]} subgroups
     *            All subgroups
     * @param {boolean} stackSubgroups
     */exports.nostack=function(items,margin,subgroups,stackSubgroups){for(var i=0;i<items.length;i++){if(items[i].data.subgroup==undefined){items[i].top=margin.item.vertical;}else if(items[i].data.subgroup!==undefined&&stackSubgroups){var newTop=0;for(var subgroup in subgroups){if(subgroups.hasOwnProperty(subgroup)){if(subgroups[subgroup].visible==true&&subgroups[subgroup].index<subgroups[items[i].data.subgroup].index){newTop+=subgroups[subgroup].height;subgroups[items[i].data.subgroup].top=newTop;}}}items[i].top=newTop+0.5*margin.item.vertical;}}if(!stackSubgroups){exports.stackSubgroups(items,margin,subgroups);}};/**
     * Adjust vertical positions of the subgroups such that they don't overlap each
     * other.
     * @param {Array.<vis.Item>} items
     * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin Margins between items and between items and the axis.
     * @param {subgroups[]} subgroups
     *            All subgroups
     */exports.stackSubgroups=function(items,margin,subgroups){for(var subgroup in subgroups){if(subgroups.hasOwnProperty(subgroup)){subgroups[subgroup].top=0;do{// TODO: optimize checking for overlap. when there is a gap without items,
  //       you only need to check for items from the next item on, not from zero
  var collidingItem=null;for(var otherSubgroup in subgroups){if(subgroups[otherSubgroup].top!==null&&otherSubgroup!==subgroup&&subgroups[subgroup].index>subgroups[otherSubgroup].index&&exports.collisionByTimes(subgroups[subgroup],subgroups[otherSubgroup])){collidingItem=subgroups[otherSubgroup];break;}}if(collidingItem!=null){// There is a collision. Reposition the subgroups above the colliding element
  subgroups[subgroup].top=collidingItem.top+collidingItem.height;}}while(collidingItem);}}for(var i=0;i<items.length;i++){if(items[i].data.subgroup!==undefined){items[i].top=subgroups[items[i].data.subgroup].top+0.5*margin.item.vertical;}}};/**
     * Adjust vertical positions of the subgroups such that they don't overlap each
     * other, then stacks the contents of each subgroup individually.
     * @param {Item[]} subgroupItems
     *            All the items in a subgroup
     * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
     *            Margins between items and between items and the axis.
     * @param {subgroups[]} subgroups
     *            All subgroups 
     */exports.stackSubgroupsWithInnerStack=function(subgroupItems,margin,subgroups){var doSubStack=false;// Run subgroups in their order (if any)
  var subgroupOrder=[];for(var subgroup in subgroups){if(subgroups[subgroup].hasOwnProperty("index")){subgroupOrder[subgroups[subgroup].index]=subgroup;}else{subgroupOrder.push(subgroup);}}for(var j=0;j<subgroupOrder.length;j++){subgroup=subgroupOrder[j];if(subgroups.hasOwnProperty(subgroup)){doSubStack=doSubStack||subgroups[subgroup].stack;subgroups[subgroup].top=0;for(var otherSubgroup in subgroups){if(subgroups[otherSubgroup].visible&&subgroups[subgroup].index>subgroups[otherSubgroup].index){subgroups[subgroup].top+=subgroups[otherSubgroup].height;}}var items=subgroupItems[subgroup];for(var i=0;i<items.length;i++){if(items[i].data.subgroup!==undefined){items[i].top=subgroups[items[i].data.subgroup].top+0.5*margin.item.vertical;if(subgroups[subgroup].stack){items[i].baseTop=items[i].top;}}}if(doSubStack&&subgroups[subgroup].stack){exports.substack(subgroupItems[subgroup],margin,subgroups[subgroup]);}}}};/**
     * Test if the two provided items collide
     * The items must have parameters left, width, top, and height.
     * @param {Item} a          The first item
     * @param {Item} b          The second item
     * @param {{horizontal: number, vertical: number}} margin
     *                          An object containing a horizontal and vertical
     *                          minimum required margin.
     * @param {boolean} rtl
     * @return {boolean}        true if a and b collide, else false
     */exports.collision=function(a,b,margin,rtl){if(rtl){return a.right-margin.horizontal+EPSILON<b.right+b.width&&a.right+a.width+margin.horizontal-EPSILON>b.right&&a.top-margin.vertical+EPSILON<b.top+b.height&&a.top+a.height+margin.vertical-EPSILON>b.top;}else{return a.left-margin.horizontal+EPSILON<b.left+b.width&&a.left+a.width+margin.horizontal-EPSILON>b.left&&a.top-margin.vertical+EPSILON<b.top+b.height&&a.top+a.height+margin.vertical-EPSILON>b.top;}};/**
     * Test if the two provided objects collide
     * The objects must have parameters start, end, top, and height.
     * @param {Object} a          The first Object
     * @param {Object} b          The second Object
     * @return {boolean}        true if a and b collide, else false
     */exports.collisionByTimes=function(a,b){return a.start<=b.start&&a.end>=b.start&&a.top<b.top+b.height&&a.top+a.height>b.top||b.start<=a.start&&b.end>=a.start&&b.top<a.top+a.height&&b.top+b.height>a.top;};});var Stack_1=Stack.orderByStart;var Stack_2=Stack.orderByEnd;var Stack_3=Stack.stack;var Stack_4=Stack.substack;var Stack_5=Stack.nostack;var Stack_6=Stack.stackSubgroups;var Stack_7=Stack.stackSubgroupsWithInnerStack;var Stack_8=Stack.collision;var Stack_9=Stack.collisionByTimes;/**
   * @param {number | string} groupId
   * @param {Object} data
   * @param {ItemSet} itemSet
   * @constructor Group
   */function Group(groupId,data,itemSet){this.groupId=groupId;this.subgroups={};this.subgroupStack={};this.subgroupStackAll=false;this.doInnerStack=false;this.shouldBailStackItems=false;this.subgroupIndex=0;this.subgroupOrderer=data&&data.subgroupOrder;this.itemSet=itemSet;this.isVisible=null;this.stackDirty=true;// if true, items will be restacked on next redraw
  if(data&&data.nestedGroups){this.nestedGroups=data.nestedGroups;if(data.showNested==false){this.showNested=false;}else{this.showNested=true;}}if(data&&data.subgroupStack){if(typeof data.subgroupStack==="boolean"){this.doInnerStack=data.subgroupStack;this.subgroupStackAll=data.subgroupStack;}else{// We might be doing stacking on specific sub groups, but only
  // if at least one is set to do stacking
  for(var key in data.subgroupStack){this.subgroupStack[key]=data.subgroupStack[key];this.doInnerStack=this.doInnerStack||data.subgroupStack[key];}}}if(data&&data.heightMode){this.heightMode=data.heightMode;}else{this.heightMode=itemSet.options.groupHeightMode;}this.nestedInGroup=null;this.dom={};this.props={label:{width:0,height:0}};this.className=null;this.items={};// items filtered by groupId of this group
  this.visibleItems=[];// items currently visible in window
  this.itemsInRange=[];// items currently in range
  this.orderedItems={byStart:[],byEnd:[]};this.checkRangedItems=false;// needed to refresh the ranged items if the window is programatically changed with NO overlap.
  var me=this;this.itemSet.body.emitter.on("checkRangedItems",function(){me.checkRangedItems=true;});this._create();this.setData(data);}/**
   * Create DOM elements for the group
   * @private
   */Group.prototype._create=function(){var label=document.createElement('div');if(this.itemSet.options.groupEditable.order){label.className='vis-label draggable';}else{label.className='vis-label';}if(this.itemSet.options.groupLabelDirection==='vertical'){label.className+=' vertical';}this.dom.label=label;var inner=document.createElement('div');inner.className='vis-inner';label.appendChild(inner);this.dom.inner=inner;var foreground=document.createElement('div');foreground.className='vis-group';foreground['timeline-group']=this;this.dom.foreground=foreground;this.dom.background=document.createElement('div');this.dom.background.className='vis-group';this.dom.axis=document.createElement('div');this.dom.axis.className='vis-group';// create a hidden marker to detect when the Timelines container is attached
  // to the DOM, or the style of a parent of the Timeline is changed from
  // display:none is changed to visible.
  this.dom.marker=document.createElement('div');this.dom.marker.style.visibility='hidden';this.dom.marker.style.position='absolute';this.dom.marker.innerHTML='';this.dom.background.appendChild(this.dom.marker);};/**
   * Set the group data for this group
   * @param {Object} data   Group data, can contain properties content and className
   */Group.prototype.setData=function(data){// update contents
  var content;var templateFunction;if(this.itemSet.options&&this.itemSet.options.groupTemplate){templateFunction=this.itemSet.options.groupTemplate.bind(this);content=templateFunction(data,this.dom.inner);}else{content=data&&data.content;}if(content instanceof Element){while(this.dom.inner.firstChild){this.dom.inner.removeChild(this.dom.inner.firstChild);}this.dom.inner.appendChild(content);}else if(content instanceof Object&&content.isReactComponent);else if(content instanceof Object){templateFunction(data,this.dom.inner);}else if(content!==undefined&&content!==null){this.dom.inner.innerHTML=content;}else{this.dom.inner.innerHTML=this.groupId||'';// groupId can be null
  }// update title
  this.dom.label.title=data&&data.title||'';if(!this.dom.inner.firstChild){util$4.addClassName(this.dom.inner,'vis-hidden');}else{util$4.removeClassName(this.dom.inner,'vis-hidden');}if(data&&data.nestedGroups){if(!this.nestedGroups||this.nestedGroups!=data.nestedGroups){this.nestedGroups=data.nestedGroups;}if(data.showNested!==undefined||this.showNested===undefined){if(data.showNested==false){this.showNested=false;}else{this.showNested=true;}}util$4.addClassName(this.dom.label,'vis-nesting-group');var collapsedDirClassName=this.itemSet.options.rtl?'collapsed-rtl':'collapsed';if(this.showNested){util$4.removeClassName(this.dom.label,collapsedDirClassName);util$4.addClassName(this.dom.label,'expanded');}else{util$4.removeClassName(this.dom.label,'expanded');util$4.addClassName(this.dom.label,collapsedDirClassName);}}else if(this.nestedGroups){this.nestedGroups=null;collapsedDirClassName=this.itemSet.options.rtl?'collapsed-rtl':'collapsed';util$4.removeClassName(this.dom.label,collapsedDirClassName);util$4.removeClassName(this.dom.label,'expanded');util$4.removeClassName(this.dom.label,'vis-nesting-group');}if(data&&data.nestedInGroup){util$4.addClassName(this.dom.label,'vis-nested-group');if(this.itemSet.options&&this.itemSet.options.rtl){this.dom.inner.style.paddingRight='30px';}else{this.dom.inner.style.paddingLeft='30px';}}// update className
  var className=data&&data.className||null;if(className!=this.className){if(this.className){util$4.removeClassName(this.dom.label,this.className);util$4.removeClassName(this.dom.foreground,this.className);util$4.removeClassName(this.dom.background,this.className);util$4.removeClassName(this.dom.axis,this.className);}util$4.addClassName(this.dom.label,className);util$4.addClassName(this.dom.foreground,className);util$4.addClassName(this.dom.background,className);util$4.addClassName(this.dom.axis,className);this.className=className;}// update style
  if(this.style){util$4.removeCssText(this.dom.label,this.style);this.style=null;}if(data&&data.style){util$4.addCssText(this.dom.label,data.style);this.style=data.style;}};/**
   * Get the width of the group label
   * @return {number} width
   */Group.prototype.getLabelWidth=function(){return this.props.label.width;};Group.prototype._didMarkerHeightChange=function(){var markerHeight=this.dom.marker.clientHeight;if(markerHeight!=this.lastMarkerHeight){this.lastMarkerHeight=markerHeight;var redrawQueue={};var redrawQueueLength=0;util$4.forEach(this.items,function(item,key){item.dirty=true;if(item.displayed){var returnQueue=true;redrawQueue[key]=item.redraw(returnQueue);redrawQueueLength=redrawQueue[key].length;}});var needRedraw=redrawQueueLength>0;if(needRedraw){// redraw all regular items
  for(var i=0;i<redrawQueueLength;i++){util$4.forEach(redrawQueue,function(fns){fns[i]();});}}return true;}};Group.prototype._calculateGroupSizeAndPosition=function(){var offsetTop=this.dom.foreground.offsetTop;var offsetLeft=this.dom.foreground.offsetLeft;var offsetWidth=this.dom.foreground.offsetWidth;this.top=offsetTop;this.right=offsetLeft;this.width=offsetWidth;};Group.prototype._shouldBailItemsRedraw=function(){var me=this;var timeoutOptions=this.itemSet.options.onTimeout;var bailOptions={relativeBailingTime:this.itemSet.itemsSettingTime,bailTimeMs:timeoutOptions&&timeoutOptions.timeoutMs,userBailFunction:timeoutOptions&&timeoutOptions.callback,shouldBailStackItems:this.shouldBailStackItems};var bail=null;if(!this.itemSet.initialDrawDone){if(bailOptions.shouldBailStackItems){return true;}if(Math.abs(new Date()-new Date(bailOptions.relativeBailingTime))>bailOptions.bailTimeMs){if(bailOptions.userBailFunction&&this.itemSet.userContinueNotBail==null){bailOptions.userBailFunction(function(didUserContinue){me.itemSet.userContinueNotBail=didUserContinue;bail=!didUserContinue;});}else if(me.itemSet.userContinueNotBail==false){bail=true;}else{bail=false;}}}return bail;};Group.prototype._redrawItems=function(forceRestack,lastIsVisible,margin,range){var restack=forceRestack||this.stackDirty||this.isVisible&&!lastIsVisible;// if restacking, reposition visible items vertically
  if(restack){var visibleSubgroups={};var subgroup=null;if(typeof this.itemSet.options.order==='function'){// a custom order function
  // brute force restack of all items
  // show all items
  var me=this;var limitSize=false;var redrawQueue={};var redrawQueueLength=0;util$4.forEach(this.items,function(item,key){if(!item.displayed&&(item.isVisible(range)||!item.dom)){var returnQueue=true;redrawQueue[key]=item.show(returnQueue);redrawQueueLength=redrawQueue[key].length;me.visibleItems.push(item);}});var needRedraw=redrawQueueLength>0;if(needRedraw){// redraw all regular items
  for(var i=0;i<redrawQueueLength;i++){util$4.forEach(redrawQueue,function(fns){fns[i]();});}}util$4.forEach(this.items,function(item){if(item.displayed){item.repositionX(limitSize);}});if(this.doInnerStack&&this.itemSet.options.stackSubgroups){// Order the items within each subgroup
  for(subgroup in this.subgroups){visibleSubgroups[subgroup]=this.subgroups[subgroup].items.slice().sort(function(a,b){return me.itemSet.options.order(a.data,b.data);});}Stack.stackSubgroupsWithInnerStack(visibleSubgroups,margin,this.subgroups);}else{// order all items and force a restacking
  var customOrderedItems=this.orderedItems.byStart.slice().sort(function(a,b){return me.itemSet.options.order(a.data,b.data);});this.shouldBailStackItems=Stack.stack(customOrderedItems,margin,true,this._shouldBailItemsRedraw.bind(this));}this.visibleItems=this._updateItemsInRange(this.orderedItems,this.visibleItems,range);}else{// no custom order function, lazy stacking
  this.visibleItems=this._updateItemsInRange(this.orderedItems,this.visibleItems,range);if(this.itemSet.options.stack){if(this.doInnerStack&&this.itemSet.options.stackSubgroups){for(subgroup in this.subgroups){visibleSubgroups[subgroup]=this.subgroups[subgroup].items;}Stack.stackSubgroupsWithInnerStack(visibleSubgroups,margin,this.subgroups);}else{// TODO: ugly way to access options...
  this.shouldBailStackItems=Stack.stack(this.visibleItems,margin,true,this._shouldBailItemsRedraw.bind(this));}}else{// no stacking
  Stack.nostack(this.visibleItems,margin,this.subgroups,this.itemSet.options.stackSubgroups);}}if(this.shouldBailStackItems){this.itemSet.body.emitter.emit('destroyTimeline');}this.stackDirty=false;}};Group.prototype._didResize=function(resized,height){resized=util$4.updateProperty(this,'height',height)||resized;// recalculate size of label
  var boundingRect=this.dom.inner.getBoundingClientRect();var labelWidth=boundingRect.width;var labelHeight=boundingRect.height;resized=util$4.updateProperty(this.props.label,'width',labelWidth)||resized;resized=util$4.updateProperty(this.props.label,'height',labelHeight)||resized;return resized;};Group.prototype._applyGroupHeight=function(height){this.dom.background.style.height=height+'px';this.dom.foreground.style.height=height+'px';this.dom.label.style.height=height+'px';};// update vertical position of items after they are re-stacked and the height of the group is calculated
  Group.prototype._updateItemsVerticalPosition=function(margin){for(var i=0,ii=this.visibleItems.length;i<ii;i++){var item=this.visibleItems[i];item.repositionY(margin);if(!this.isVisible&&this.groupId!="__background__"){if(item.displayed)item.hide();}}};/**
   * Repaint this group
   * @param {{start: number, end: number}} range
   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
   * @param {boolean} [forceRestack=false]  Force restacking of all items
   * @param {boolean} [returnQueue=false]  return the queue or if the group resized
   * @return {boolean} Returns true if the group is resized or the redraw queue if returnQueue=true
   */Group.prototype.redraw=function(range,margin,forceRestack,returnQueue){var resized=false;var lastIsVisible=this.isVisible;var height;var queue=[// force recalculation of the height of the items when the marker height changed
  // (due to the Timeline being attached to the DOM or changed from display:none to visible)
  function(){forceRestack=this._didMarkerHeightChange.bind(this);}.bind(this),// recalculate the height of the subgroups
  this._updateSubGroupHeights.bind(this,margin),// calculate actual size and position
  this._calculateGroupSizeAndPosition.bind(this),// check if group is visible
  function(){this.isVisible=this._isGroupVisible.bind(this)(range,margin);}.bind(this),// redraw Items if needed
  function(){this._redrawItems.bind(this)(forceRestack,lastIsVisible,margin,range);}.bind(this),// update subgroups
  this._updateSubgroupsSizes.bind(this),// recalculate the height of the group
  function(){height=this._calculateHeight.bind(this)(margin);}.bind(this),// calculate actual size and position again
  this._calculateGroupSizeAndPosition.bind(this),// check if resized
  function(){resized=this._didResize.bind(this)(resized,height);}.bind(this),// apply group height
  function(){this._applyGroupHeight.bind(this)(height);}.bind(this),// update vertical position of items after they are re-stacked and the height of the group is calculated
  function(){this._updateItemsVerticalPosition.bind(this)(margin);}.bind(this),function(){if(!this.isVisible&&this.height){resized=false;}return resized;}];if(returnQueue){return queue;}else{var result;queue.forEach(function(fn){result=fn();});return result;}};/**
   * recalculate the height of the subgroups
   *
   * @param {{item: vis.Item}} margin
   * @private
   */Group.prototype._updateSubGroupHeights=function(margin){if(Object.keys(this.subgroups).length>0){var me=this;this.resetSubgroups();util$4.forEach(this.visibleItems,function(item){if(item.data.subgroup!==undefined){me.subgroups[item.data.subgroup].height=Math.max(me.subgroups[item.data.subgroup].height,item.height+margin.item.vertical);me.subgroups[item.data.subgroup].visible=true;}});}};/**
   * check if group is visible
   *
   * @param {vis.Range} range
   * @param {{axis: vis.DataAxis}} margin
   * @returns {boolean} is visible
   * @private
   */Group.prototype._isGroupVisible=function(range,margin){return this.top<=range.body.domProps.centerContainer.height-range.body.domProps.scrollTop+margin.axis&&this.top+this.height+margin.axis>=-range.body.domProps.scrollTop;};/**
   * recalculate the height of the group
   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
   * @returns {number} Returns the height
   * @private
   */Group.prototype._calculateHeight=function(margin){// recalculate the height of the group
  var height,items;if(this.heightMode==='fixed'){items=util$4.toArray(this.items);}else{// default or 'auto'
  items=this.visibleItems;}if(items.length>0){var min=items[0].top;var max=items[0].top+items[0].height;util$4.forEach(items,function(item){min=Math.min(min,item.top);max=Math.max(max,item.top+item.height);});if(min>margin.axis){// there is an empty gap between the lowest item and the axis
  var offset=min-margin.axis;max-=offset;util$4.forEach(items,function(item){item.top-=offset;});}height=max+margin.item.vertical/2;}else{height=0;}height=Math.max(height,this.props.label.height);return height;};/**
   * Show this group: attach to the DOM
   */Group.prototype.show=function(){if(!this.dom.label.parentNode){this.itemSet.dom.labelSet.appendChild(this.dom.label);}if(!this.dom.foreground.parentNode){this.itemSet.dom.foreground.appendChild(this.dom.foreground);}if(!this.dom.background.parentNode){this.itemSet.dom.background.appendChild(this.dom.background);}if(!this.dom.axis.parentNode){this.itemSet.dom.axis.appendChild(this.dom.axis);}};/**
   * Hide this group: remove from the DOM
   */Group.prototype.hide=function(){var label=this.dom.label;if(label.parentNode){label.parentNode.removeChild(label);}var foreground=this.dom.foreground;if(foreground.parentNode){foreground.parentNode.removeChild(foreground);}var background=this.dom.background;if(background.parentNode){background.parentNode.removeChild(background);}var axis=this.dom.axis;if(axis.parentNode){axis.parentNode.removeChild(axis);}};/**
   * Add an item to the group
   * @param {Item} item
   */Group.prototype.add=function(item){this.items[item.id]=item;item.setParent(this);this.stackDirty=true;// add to
  if(item.data.subgroup!==undefined){this._addToSubgroup(item);this.orderSubgroups();}if(this.visibleItems.indexOf(item)==-1){var range=this.itemSet.body.range;// TODO: not nice accessing the range like this
  this._checkIfVisible(item,this.visibleItems,range);}};Group.prototype._addToSubgroup=function(item,subgroupId){subgroupId=subgroupId||item.data.subgroup;if(subgroupId!=undefined&&this.subgroups[subgroupId]===undefined){this.subgroups[subgroupId]={height:0,top:0,start:item.data.start,end:item.data.end||item.data.start,visible:false,index:this.subgroupIndex,items:[],stack:this.subgroupStackAll||this.subgroupStack[subgroupId]||false};this.subgroupIndex++;}if(new Date(item.data.start)<new Date(this.subgroups[subgroupId].start)){this.subgroups[subgroupId].start=item.data.start;}var itemEnd=item.data.end||item.data.start;if(new Date(itemEnd)>new Date(this.subgroups[subgroupId].end)){this.subgroups[subgroupId].end=itemEnd;}this.subgroups[subgroupId].items.push(item);};Group.prototype._updateSubgroupsSizes=function(){var me=this;if(me.subgroups){for(var subgroup in me.subgroups){var initialEnd=me.subgroups[subgroup].items[0].data.end||me.subgroups[subgroup].items[0].data.start;var newStart=me.subgroups[subgroup].items[0].data.start;var newEnd=initialEnd-1;me.subgroups[subgroup].items.forEach(function(item){if(new Date(item.data.start)<new Date(newStart)){newStart=item.data.start;}var itemEnd=item.data.end||item.data.start;if(new Date(itemEnd)>new Date(newEnd)){newEnd=itemEnd;}});me.subgroups[subgroup].start=newStart;me.subgroups[subgroup].end=new Date(newEnd-1);// -1 to compensate for colliding end to start subgroups;
  }}};Group.prototype.orderSubgroups=function(){if(this.subgroupOrderer!==undefined){var sortArray=[];var subgroup;if(typeof this.subgroupOrderer=='string'){for(subgroup in this.subgroups){sortArray.push({subgroup:subgroup,sortField:this.subgroups[subgroup].items[0].data[this.subgroupOrderer]});}sortArray.sort(function(a,b){return a.sortField-b.sortField;});}else if(typeof this.subgroupOrderer=='function'){for(subgroup in this.subgroups){sortArray.push(this.subgroups[subgroup].items[0].data);}sortArray.sort(this.subgroupOrderer);}if(sortArray.length>0){for(var i=0;i<sortArray.length;i++){this.subgroups[sortArray[i].subgroup].index=i;}}}};Group.prototype.resetSubgroups=function(){for(var subgroup in this.subgroups){if(this.subgroups.hasOwnProperty(subgroup)){this.subgroups[subgroup].visible=false;this.subgroups[subgroup].height=0;}}};/**
   * Remove an item from the group
   * @param {Item} item
   */Group.prototype.remove=function(item){delete this.items[item.id];item.setParent(null);this.stackDirty=true;// remove from visible items
  var index=this.visibleItems.indexOf(item);if(index!=-1)this.visibleItems.splice(index,1);if(item.data.subgroup!==undefined){this._removeFromSubgroup(item);this.orderSubgroups();}};Group.prototype._removeFromSubgroup=function(item,subgroupId){subgroupId=subgroupId||item.data.subgroup;if(subgroupId!=undefined){var subgroup=this.subgroups[subgroupId];if(subgroup){var itemIndex=subgroup.items.indexOf(item);//  Check the item is actually in this subgroup. How should items not in the group be handled?
  if(itemIndex>=0){subgroup.items.splice(itemIndex,1);if(!subgroup.items.length){delete this.subgroups[subgroupId];}else{this._updateSubgroupsSizes();}}}}};/**
   * Remove an item from the corresponding DataSet
   * @param {Item} item
   */Group.prototype.removeFromDataSet=function(item){this.itemSet.removeItem(item.id);};/**
   * Reorder the items
   */Group.prototype.order=function(){var array=util$4.toArray(this.items);var startArray=[];var endArray=[];for(var i=0;i<array.length;i++){if(array[i].data.end!==undefined){endArray.push(array[i]);}startArray.push(array[i]);}this.orderedItems={byStart:startArray,byEnd:endArray};Stack.orderByStart(this.orderedItems.byStart);Stack.orderByEnd(this.orderedItems.byEnd);};/**
   * Update the visible items
   * @param {{byStart: Item[], byEnd: Item[]}} orderedItems   All items ordered by start date and by end date
   * @param {Item[]} oldVisibleItems                          The previously visible items.
   * @param {{start: number, end: number}} range              Visible range
   * @return {Item[]} visibleItems                            The new visible items.
   * @private
   */Group.prototype._updateItemsInRange=function(orderedItems,oldVisibleItems,range){var visibleItems=[];var visibleItemsLookup={};// we keep this to quickly look up if an item already exists in the list without using indexOf on visibleItems
  var interval=(range.end-range.start)/4;var lowerBound=range.start-interval;var upperBound=range.end+interval;// this function is used to do the binary search.
  var searchFunction=function searchFunction(value){if(value<lowerBound){return -1;}else if(value<=upperBound){return 0;}else{return 1;}};// first check if the items that were in view previously are still in view.
  // IMPORTANT: this handles the case for the items with startdate before the window and enddate after the window!
  // also cleans up invisible items.
  if(oldVisibleItems.length>0){for(var i=0;i<oldVisibleItems.length;i++){this._checkIfVisibleWithReference(oldVisibleItems[i],visibleItems,visibleItemsLookup,range);}}// we do a binary search for the items that have only start values.
  var initialPosByStart=util$4.binarySearchCustom(orderedItems.byStart,searchFunction,'data','start');// trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the start values.
  this._traceVisible(initialPosByStart,orderedItems.byStart,visibleItems,visibleItemsLookup,function(item){return item.data.start<lowerBound||item.data.start>upperBound;});// if the window has changed programmatically without overlapping the old window, the ranged items with start < lowerBound and end > upperbound are not shown.
  // We therefore have to brute force check all items in the byEnd list
  if(this.checkRangedItems==true){this.checkRangedItems=false;for(i=0;i<orderedItems.byEnd.length;i++){this._checkIfVisibleWithReference(orderedItems.byEnd[i],visibleItems,visibleItemsLookup,range);}}else{// we do a binary search for the items that have defined end times.
  var initialPosByEnd=util$4.binarySearchCustom(orderedItems.byEnd,searchFunction,'data','end');// trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the end values.
  this._traceVisible(initialPosByEnd,orderedItems.byEnd,visibleItems,visibleItemsLookup,function(item){return item.data.end<lowerBound||item.data.end>upperBound;});}var redrawQueue={};var redrawQueueLength=0;for(i=0;i<visibleItems.length;i++){var item=visibleItems[i];if(!item.displayed){var returnQueue=true;redrawQueue[i]=item.redraw(returnQueue);redrawQueueLength=redrawQueue[i].length;}}var needRedraw=redrawQueueLength>0;if(needRedraw){// redraw all regular items
  for(var j=0;j<redrawQueueLength;j++){util$4.forEach(redrawQueue,function(fns){fns[j]();});}}for(i=0;i<visibleItems.length;i++){visibleItems[i].repositionX();}return visibleItems;};Group.prototype._traceVisible=function(initialPos,items,visibleItems,visibleItemsLookup,breakCondition){if(initialPos!=-1){var i,item;for(i=initialPos;i>=0;i--){item=items[i];if(breakCondition(item)){break;}else{if(visibleItemsLookup[item.id]===undefined){visibleItemsLookup[item.id]=true;visibleItems.push(item);}}}for(i=initialPos+1;i<items.length;i++){item=items[i];if(breakCondition(item)){break;}else{if(visibleItemsLookup[item.id]===undefined){visibleItemsLookup[item.id]=true;visibleItems.push(item);}}}}};/**
   * this function is very similar to the _checkIfInvisible() but it does not
   * return booleans, hides the item if it should not be seen and always adds to
   * the visibleItems.
   * this one is for brute forcing and hiding.
   *
   * @param {Item} item
   * @param {Array} visibleItems
   * @param {{start:number, end:number}} range
   * @private
   */Group.prototype._checkIfVisible=function(item,visibleItems,range){if(item.isVisible(range)){if(!item.displayed)item.show();// reposition item horizontally
  item.repositionX();visibleItems.push(item);}else{if(item.displayed)item.hide();}};/**
   * this function is very similar to the _checkIfInvisible() but it does not
   * return booleans, hides the item if it should not be seen and always adds to
   * the visibleItems.
   * this one is for brute forcing and hiding.
   *
   * @param {Item} item
   * @param {Array.<vis.Item>} visibleItems
   * @param {Object<number, boolean>} visibleItemsLookup
   * @param {{start:number, end:number}} range
   * @private
   */Group.prototype._checkIfVisibleWithReference=function(item,visibleItems,visibleItemsLookup,range){if(item.isVisible(range)){if(visibleItemsLookup[item.id]===undefined){visibleItemsLookup[item.id]=true;visibleItems.push(item);}}else{if(item.displayed)item.hide();}};Group.prototype.changeSubgroup=function(item,oldSubgroup,newSubgroup){this._removeFromSubgroup(item,oldSubgroup);this._addToSubgroup(item,newSubgroup);this.orderSubgroups();};var Group_1=Group;/**
   * @constructor BackgroundGroup
   * @param {number | string} groupId
   * @param {Object} data
   * @param {ItemSet} itemSet
   * @extends Group
   */function BackgroundGroup(groupId,data,itemSet){Group_1.call(this,groupId,data,itemSet);this.width=0;this.height=0;this.top=0;this.left=0;}BackgroundGroup.prototype=Object.create(Group_1.prototype);/**
   * Repaint this group
   * @param {{start: number, end: number}} range
   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
   * @param {boolean} [forceRestack=false]  Force restacking of all items
   * @return {boolean} Returns true if the group is resized
   */BackgroundGroup.prototype.redraw=function(range,margin,forceRestack){// eslint-disable-line no-unused-vars
  var resized=false;this.visibleItems=this._updateItemsInRange(this.orderedItems,this.visibleItems,range);// calculate actual size
  this.width=this.dom.background.offsetWidth;// apply new height (just always zero for BackgroundGroup
  this.dom.background.style.height='0';// update vertical position of items after they are re-stacked and the height of the group is calculated
  for(var i=0,ii=this.visibleItems.length;i<ii;i++){var item=this.visibleItems[i];item.repositionY(margin);}return resized;};/**
   * Show this group: attach to the DOM
   */BackgroundGroup.prototype.show=function(){if(!this.dom.background.parentNode){this.itemSet.dom.background.appendChild(this.dom.background);}};var BackgroundGroup_1=BackgroundGroup;/**
   * @constructor Item
   * @param {Object} data             Object containing (optional) parameters type,
   *                                  start, end, content, group, className.
   * @param {{toScreen: function, toTime: function}} conversion
   *                                  Conversion functions from time to screen and vice versa
   * @param {Object} options          Configuration options
   *                                  // TODO: describe available options
   */function Item(data,conversion,options){this.id=null;this.parent=null;this.data=data;this.dom=null;this.conversion=conversion||{};this.options=options||{};this.selected=false;this.displayed=false;this.groupShowing=true;this.dirty=true;this.top=null;this.right=null;this.left=null;this.width=null;this.height=null;this.editable=null;this._updateEditStatus();}Item.prototype.stack=true;/**
   * Select current item
   */Item.prototype.select=function(){this.selected=true;this.dirty=true;if(this.displayed)this.redraw();};/**
   * Unselect current item
   */Item.prototype.unselect=function(){this.selected=false;this.dirty=true;if(this.displayed)this.redraw();};/**
   * Set data for the item. Existing data will be updated. The id should not
   * be changed. When the item is displayed, it will be redrawn immediately.
   * @param {Object} data
   */Item.prototype.setData=function(data){var groupChanged=data.group!=undefined&&this.data.group!=data.group;if(groupChanged&&this.parent!=null){this.parent.itemSet._moveToGroup(this,data.group);}if(this.parent){this.parent.stackDirty=true;}var subGroupChanged=data.subgroup!=undefined&&this.data.subgroup!=data.subgroup;if(subGroupChanged&&this.parent!=null){this.parent.changeSubgroup(this,this.data.subgroup,data.subgroup);}this.data=data;this._updateEditStatus();this.dirty=true;if(this.displayed)this.redraw();};/**
   * Set a parent for the item
   * @param {Group} parent
   */Item.prototype.setParent=function(parent){if(this.displayed){this.hide();this.parent=parent;if(this.parent){this.show();}}else{this.parent=parent;}};/**
   * Check whether this item is visible inside given range
   * @param {vis.Range} range with a timestamp for start and end
   * @returns {boolean} True if visible
   */Item.prototype.isVisible=function(range){// eslint-disable-line no-unused-vars
  return false;};/**
   * Show the Item in the DOM (when not already visible)
   * @return {Boolean} changed
   */Item.prototype.show=function(){return false;};/**
   * Hide the Item from the DOM (when visible)
   * @return {Boolean} changed
   */Item.prototype.hide=function(){return false;};/**
   * Repaint the item
   */Item.prototype.redraw=function(){// should be implemented by the item
  };/**
   * Reposition the Item horizontally
   */Item.prototype.repositionX=function(){// should be implemented by the item
  };/**
   * Reposition the Item vertically
   */Item.prototype.repositionY=function(){// should be implemented by the item
  };/**
   * Repaint a drag area on the center of the item when the item is selected
   * @protected
   */Item.prototype._repaintDragCenter=function(){if(this.selected&&this.options.editable.updateTime&&!this.dom.dragCenter){var me=this;// create and show drag area
  var dragCenter=document.createElement('div');dragCenter.className='vis-drag-center';dragCenter.dragCenterItem=this;var hammer=new hammer$1$2(dragCenter);hammer.on('tap',function(event){me.parent.itemSet.body.emitter.emit('click',{event:event,item:me.id});});hammer.on('doubletap',function(event){event.stopPropagation();me.parent.itemSet._onUpdateItem(me);me.parent.itemSet.body.emitter.emit('doubleClick',{event:event,item:me.id});});if(this.dom.box){if(this.dom.dragLeft){this.dom.box.insertBefore(dragCenter,this.dom.dragLeft);}else{this.dom.box.appendChild(dragCenter);}}else if(this.dom.point){this.dom.point.appendChild(dragCenter);}this.dom.dragCenter=dragCenter;}else if(!this.selected&&this.dom.dragCenter){// delete drag area
  if(this.dom.dragCenter.parentNode){this.dom.dragCenter.parentNode.removeChild(this.dom.dragCenter);}this.dom.dragCenter=null;}};/**
   * Repaint a delete button on the top right of the item when the item is selected
   * @param {HTMLElement} anchor
   * @protected
   */Item.prototype._repaintDeleteButton=function(anchor){var editable=(this.options.editable.overrideItems||this.editable==null)&&this.options.editable.remove||!this.options.editable.overrideItems&&this.editable!=null&&this.editable.remove;if(this.selected&&editable&&!this.dom.deleteButton){// create and show button
  var me=this;var deleteButton=document.createElement('div');if(this.options.rtl){deleteButton.className='vis-delete-rtl';}else{deleteButton.className='vis-delete';}deleteButton.title='Delete this item';// TODO: be able to destroy the delete button
  new hammer$1$2(deleteButton).on('tap',function(event){event.stopPropagation();me.parent.removeFromDataSet(me);});anchor.appendChild(deleteButton);this.dom.deleteButton=deleteButton;}else if(!this.selected&&this.dom.deleteButton){// remove button
  if(this.dom.deleteButton.parentNode){this.dom.deleteButton.parentNode.removeChild(this.dom.deleteButton);}this.dom.deleteButton=null;}};/**
   * Repaint a onChange tooltip on the top right of the item when the item is selected
   * @param {HTMLElement} anchor
   * @protected
   */Item.prototype._repaintOnItemUpdateTimeTooltip=function(anchor){if(!this.options.tooltipOnItemUpdateTime)return;var editable=(this.options.editable.updateTime||this.data.editable===true)&&this.data.editable!==false;if(this.selected&&editable&&!this.dom.onItemUpdateTimeTooltip){var onItemUpdateTimeTooltip=document.createElement('div');onItemUpdateTimeTooltip.className='vis-onUpdateTime-tooltip';anchor.appendChild(onItemUpdateTimeTooltip);this.dom.onItemUpdateTimeTooltip=onItemUpdateTimeTooltip;}else if(!this.selected&&this.dom.onItemUpdateTimeTooltip){// remove button
  if(this.dom.onItemUpdateTimeTooltip.parentNode){this.dom.onItemUpdateTimeTooltip.parentNode.removeChild(this.dom.onItemUpdateTimeTooltip);}this.dom.onItemUpdateTimeTooltip=null;}// position onChange tooltip
  if(this.dom.onItemUpdateTimeTooltip){// only show when editing
  this.dom.onItemUpdateTimeTooltip.style.visibility=this.parent.itemSet.touchParams.itemIsDragging?'visible':'hidden';// position relative to item's content
  if(this.options.rtl){this.dom.onItemUpdateTimeTooltip.style.right=this.dom.content.style.right;}else{this.dom.onItemUpdateTimeTooltip.style.left=this.dom.content.style.left;}// position above or below the item depending on the item's position in the window
  var tooltipOffset=50;// TODO: should be tooltip height (depends on template)
  var scrollTop=this.parent.itemSet.body.domProps.scrollTop;// TODO: this.top for orientation:true is actually the items distance from the bottom... 
  // (should be this.bottom)
  var itemDistanceFromTop;if(this.options.orientation.item=='top'){itemDistanceFromTop=this.top;}else{itemDistanceFromTop=this.parent.height-this.top-this.height;}var isCloseToTop=itemDistanceFromTop+this.parent.top-tooltipOffset<-scrollTop;if(isCloseToTop){this.dom.onItemUpdateTimeTooltip.style.bottom="";this.dom.onItemUpdateTimeTooltip.style.top=this.height+2+"px";}else{this.dom.onItemUpdateTimeTooltip.style.top="";this.dom.onItemUpdateTimeTooltip.style.bottom=this.height+2+"px";}// handle tooltip content
  var content;var templateFunction;if(this.options.tooltipOnItemUpdateTime&&this.options.tooltipOnItemUpdateTime.template){templateFunction=this.options.tooltipOnItemUpdateTime.template.bind(this);content=templateFunction(this.data);}else{content='start: '+moment$3$2(this.data.start).format('MM/DD/YYYY hh:mm');if(this.data.end){content+='<br> end: '+moment$3$2(this.data.end).format('MM/DD/YYYY hh:mm');}}this.dom.onItemUpdateTimeTooltip.innerHTML=content;}};/**
   * Set HTML contents for the item
   * @param {Element} element   HTML element to fill with the contents
   * @private
   */Item.prototype._updateContents=function(element){var content;var changed;var templateFunction;var itemVisibleFrameContent;var visibleFrameTemplateFunction;var itemData=this.parent.itemSet.itemsData.get(this.id);// get a clone of the data from the dataset
  var frameElement=this.dom.box||this.dom.point;var itemVisibleFrameContentElement=frameElement.getElementsByClassName('vis-item-visible-frame')[0];if(this.options.visibleFrameTemplate){visibleFrameTemplateFunction=this.options.visibleFrameTemplate.bind(this);itemVisibleFrameContent=visibleFrameTemplateFunction(itemData,frameElement);}else{itemVisibleFrameContent='';}if(itemVisibleFrameContentElement){if(itemVisibleFrameContent instanceof Object&&!(itemVisibleFrameContent instanceof Element)){visibleFrameTemplateFunction(itemData,itemVisibleFrameContentElement);}else{changed=this._contentToString(this.itemVisibleFrameContent)!==this._contentToString(itemVisibleFrameContent);if(changed){// only replace the content when changed
  if(itemVisibleFrameContent instanceof Element){itemVisibleFrameContentElement.innerHTML='';itemVisibleFrameContentElement.appendChild(itemVisibleFrameContent);}else if(itemVisibleFrameContent!=undefined){itemVisibleFrameContentElement.innerHTML=itemVisibleFrameContent;}else{if(!(this.data.type=='background'&&this.data.content===undefined)){throw new Error('Property "content" missing in item '+this.id);}}this.itemVisibleFrameContent=itemVisibleFrameContent;}}}if(this.options.template){templateFunction=this.options.template.bind(this);content=templateFunction(itemData,element,this.data);}else{content=this.data.content;}if(content instanceof Object&&!(content instanceof Element)){templateFunction(itemData,element);}else{changed=this._contentToString(this.content)!==this._contentToString(content);if(changed){// only replace the content when changed
  if(content instanceof Element){element.innerHTML='';element.appendChild(content);}else if(content!=undefined){element.innerHTML=content;}else{if(!(this.data.type=='background'&&this.data.content===undefined)){throw new Error('Property "content" missing in item '+this.id);}}this.content=content;}}};/**
   * Process dataAttributes timeline option and set as data- attributes on dom.content
   * @param {Element} element   HTML element to which the attributes will be attached
   * @private
   */Item.prototype._updateDataAttributes=function(element){if(this.options.dataAttributes&&this.options.dataAttributes.length>0){var attributes=[];if(Array.isArray(this.options.dataAttributes)){attributes=this.options.dataAttributes;}else if(this.options.dataAttributes=='all'){attributes=Object.keys(this.data);}else{return;}for(var i=0;i<attributes.length;i++){var name=attributes[i];var value=this.data[name];if(value!=null){element.setAttribute('data-'+name,value);}else{element.removeAttribute('data-'+name);}}}};/**
   * Update custom styles of the element
   * @param {Element} element
   * @private
   */Item.prototype._updateStyle=function(element){// remove old styles
  if(this.style){util$4.removeCssText(element,this.style);this.style=null;}// append new styles
  if(this.data.style){util$4.addCssText(element,this.data.style);this.style=this.data.style;}};/**
   * Stringify the items contents
   * @param {string | Element | undefined} content
   * @returns {string | undefined}
   * @private
   */Item.prototype._contentToString=function(content){if(typeof content==='string')return content;if(content&&'outerHTML'in content)return content.outerHTML;return content;};/**
   * Update the editability of this item.
   */Item.prototype._updateEditStatus=function(){if(this.options){if(typeof this.options.editable==='boolean'){this.editable={updateTime:this.options.editable,updateGroup:this.options.editable,remove:this.options.editable};}else if(_typeof$1$2(this.options.editable)==='object'){this.editable={};util$4.selectiveExtend(['updateTime','updateGroup','remove'],this.editable,this.options.editable);}}// Item data overrides, except if options.editable.overrideItems is set.
  if(!this.options||!this.options.editable||this.options.editable.overrideItems!==true){if(this.data){if(typeof this.data.editable==='boolean'){this.editable={updateTime:this.data.editable,updateGroup:this.data.editable,remove:this.data.editable};}else if(_typeof$1$2(this.data.editable)==='object'){// TODO: in vis.js 5.0, we should change this to not reset options from the timeline configuration.
  // Basically just remove the next line...
  this.editable={};util$4.selectiveExtend(['updateTime','updateGroup','remove'],this.editable,this.data.editable);}}}};/**
   * Return the width of the item left from its start date
   * @return {number}
   */Item.prototype.getWidthLeft=function(){return 0;};/**
   * Return the width of the item right from the max of its start and end date
   * @return {number}
   */Item.prototype.getWidthRight=function(){return 0;};/**
   * Return the title of the item
   * @return {string | undefined}
   */Item.prototype.getTitle=function(){return this.data.title;};/**
   * @constructor BoxItem
   * @extends Item
   * @param {Object} data             Object containing parameters start
   *                                  content, className.
   * @param {{toScreen: function, toTime: function}} conversion
   *                                  Conversion functions from time to screen and vice versa
   * @param {Object} [options]        Configuration options
   *                                  // TODO: describe available options
   */function BoxItem(data,conversion,options){this.props={dot:{width:0,height:0},line:{width:0,height:0}};this.options=options;// validate data
  if(data){if(data.start==undefined){throw new Error('Property "start" missing in item '+data);}}Item.call(this,data,conversion,options);}BoxItem.prototype=new Item(null,null,null);/**
   * Check whether this item is visible inside given range
   * @param {{start: number, end: number}} range with a timestamp for start and end
   * @returns {boolean} True if visible
   */BoxItem.prototype.isVisible=function(range){// determine visibility
  var isVisible;var align=this.options.align;var widthInMs=this.width*range.getMillisecondsPerPixel();if(align=='right'){isVisible=this.data.start.getTime()>range.start&&this.data.start.getTime()-widthInMs<range.end;}else if(align=='left'){isVisible=this.data.start.getTime()+widthInMs>range.start&&this.data.start.getTime()<range.end;}else{// default or 'center'
  isVisible=this.data.start.getTime()+widthInMs/2>range.start&&this.data.start.getTime()-widthInMs/2<range.end;}return isVisible;};BoxItem.prototype._createDomElement=function(){if(!this.dom){// create DOM
  this.dom={};// create main box
  this.dom.box=document.createElement('DIV');// contents box (inside the background box). used for making margins
  this.dom.content=document.createElement('DIV');this.dom.content.className='vis-item-content';this.dom.box.appendChild(this.dom.content);// line to axis
  this.dom.line=document.createElement('DIV');this.dom.line.className='vis-line';// dot on axis
  this.dom.dot=document.createElement('DIV');this.dom.dot.className='vis-dot';// attach this item as attribute
  this.dom.box['timeline-item']=this;this.dirty=true;}};BoxItem.prototype._appendDomElement=function(){if(!this.parent){throw new Error('Cannot redraw item: no parent attached');}if(!this.dom.box.parentNode){var foreground=this.parent.dom.foreground;if(!foreground)throw new Error('Cannot redraw item: parent has no foreground container element');foreground.appendChild(this.dom.box);}if(!this.dom.line.parentNode){var background=this.parent.dom.background;if(!background)throw new Error('Cannot redraw item: parent has no background container element');background.appendChild(this.dom.line);}if(!this.dom.dot.parentNode){var axis=this.parent.dom.axis;if(!background)throw new Error('Cannot redraw item: parent has no axis container element');axis.appendChild(this.dom.dot);}this.displayed=true;};BoxItem.prototype._updateDirtyDomComponents=function(){// An item is marked dirty when:
  // - the item is not yet rendered
  // - the item's data is changed
  // - the item is selected/deselected
  if(this.dirty){this._updateContents(this.dom.content);this._updateDataAttributes(this.dom.box);this._updateStyle(this.dom.box);var editable=this.editable.updateTime||this.editable.updateGroup;// update class
  var className=(this.data.className?' '+this.data.className:'')+(this.selected?' vis-selected':'')+(editable?' vis-editable':' vis-readonly');this.dom.box.className='vis-item vis-box'+className;this.dom.line.className='vis-item vis-line'+className;this.dom.dot.className='vis-item vis-dot'+className;}};BoxItem.prototype._getDomComponentsSizes=function(){return {previous:{right:this.dom.box.style.right,left:this.dom.box.style.left},dot:{height:this.dom.dot.offsetHeight,width:this.dom.dot.offsetWidth},line:{width:this.dom.line.offsetWidth},box:{width:this.dom.box.offsetWidth,height:this.dom.box.offsetHeight}};};BoxItem.prototype._updateDomComponentsSizes=function(sizes){if(this.options.rtl){this.dom.box.style.right="0px";}else{this.dom.box.style.left="0px";}// recalculate size
  this.props.dot.height=sizes.dot.height;this.props.dot.width=sizes.dot.width;this.props.line.width=sizes.line.width;this.width=sizes.box.width;this.height=sizes.box.height;// restore previous position
  if(this.options.rtl){this.dom.box.style.right=sizes.previous.right;}else{this.dom.box.style.left=sizes.previous.left;}this.dirty=false;};BoxItem.prototype._repaintDomAdditionals=function(){this._repaintOnItemUpdateTimeTooltip(this.dom.box);this._repaintDragCenter();this._repaintDeleteButton(this.dom.box);};/**
   * Repaint the item
   * @param {boolean} [returnQueue=false]  return the queue
   * @return {boolean} the redraw queue if returnQueue=true
   */BoxItem.prototype.redraw=function(returnQueue){var sizes;var queue=[// create item DOM
  this._createDomElement.bind(this),// append DOM to parent DOM
  this._appendDomElement.bind(this),// update dirty DOM
  this._updateDirtyDomComponents.bind(this),function(){if(this.dirty){sizes=this._getDomComponentsSizes();}}.bind(this),function(){if(this.dirty){this._updateDomComponentsSizes.bind(this)(sizes);}}.bind(this),// repaint DOM additionals
  this._repaintDomAdditionals.bind(this)];if(returnQueue){return queue;}else{var result;queue.forEach(function(fn){result=fn();});return result;}};/**
   * Show the item in the DOM (when not already visible). The items DOM will
   * be created when needed.
   * @param {boolean} [returnQueue=false]  whether to return a queue of functions to execute instead of just executing them
   * @return {boolean} the redraw queue if returnQueue=true
   */BoxItem.prototype.show=function(returnQueue){if(!this.displayed){return this.redraw(returnQueue);}};/**
   * Hide the item from the DOM (when visible)
   */BoxItem.prototype.hide=function(){if(this.displayed){var dom=this.dom;if(dom.box.parentNode)dom.box.parentNode.removeChild(dom.box);if(dom.line.parentNode)dom.line.parentNode.removeChild(dom.line);if(dom.dot.parentNode)dom.dot.parentNode.removeChild(dom.dot);this.displayed=false;}};/**
   * Reposition the item horizontally
   * @Override
   */BoxItem.prototype.repositionX=function(){var start=this.conversion.toScreen(this.data.start);var align=this.options.align;// calculate left position of the box
  if(align=='right'){if(this.options.rtl){this.right=start-this.width;// reposition box, line, and dot
  this.dom.box.style.right=this.right+'px';this.dom.line.style.right=start-this.props.line.width+'px';this.dom.dot.style.right=start-this.props.line.width/2-this.props.dot.width/2+'px';}else{this.left=start-this.width;// reposition box, line, and dot
  this.dom.box.style.left=this.left+'px';this.dom.line.style.left=start-this.props.line.width+'px';this.dom.dot.style.left=start-this.props.line.width/2-this.props.dot.width/2+'px';}}else if(align=='left'){if(this.options.rtl){this.right=start;// reposition box, line, and dot
  this.dom.box.style.right=this.right+'px';this.dom.line.style.right=start+'px';this.dom.dot.style.right=start+this.props.line.width/2-this.props.dot.width/2+'px';}else{this.left=start;// reposition box, line, and dot
  this.dom.box.style.left=this.left+'px';this.dom.line.style.left=start+'px';this.dom.dot.style.left=start+this.props.line.width/2-this.props.dot.width/2+'px';}}else{// default or 'center'
  if(this.options.rtl){this.right=start-this.width/2;// reposition box, line, and dot
  this.dom.box.style.right=this.right+'px';this.dom.line.style.right=start-this.props.line.width+'px';this.dom.dot.style.right=start-this.props.dot.width/2+'px';}else{this.left=start-this.width/2;// reposition box, line, and dot
  this.dom.box.style.left=this.left+'px';this.dom.line.style.left=start-this.props.line.width/2+'px';this.dom.dot.style.left=start-this.props.dot.width/2+'px';}}};/**
   * Reposition the item vertically
   * @Override
   */BoxItem.prototype.repositionY=function(){var orientation=this.options.orientation.item;var box=this.dom.box;var line=this.dom.line;var dot=this.dom.dot;if(orientation=='top'){box.style.top=(this.top||0)+'px';line.style.top='0';line.style.height=this.parent.top+this.top+1+'px';line.style.bottom='';}else{// orientation 'bottom'
  var itemSetHeight=this.parent.itemSet.props.height;// TODO: this is nasty
  var lineHeight=itemSetHeight-this.parent.top-this.parent.height+this.top;box.style.top=(this.parent.height-this.top-this.height||0)+'px';line.style.top=itemSetHeight-lineHeight+'px';line.style.bottom='0';}dot.style.top=-this.props.dot.height/2+'px';};/**
   * Return the width of the item left from its start date
   * @return {number}
   */BoxItem.prototype.getWidthLeft=function(){return this.width/2;};/**
   * Return the width of the item right from its start date
   * @return {number}
   */BoxItem.prototype.getWidthRight=function(){return this.width/2;};var BoxItem_1=BoxItem;/**
   * @constructor PointItem
   * @extends Item
   * @param {Object} data             Object containing parameters start
   *                                  content, className.
   * @param {{toScreen: function, toTime: function}} conversion
   *                                  Conversion functions from time to screen and vice versa
   * @param {Object} [options]        Configuration options
   *                                  // TODO: describe available options
   */function PointItem(data,conversion,options){this.props={dot:{top:0,width:0,height:0},content:{height:0,marginLeft:0,marginRight:0}};this.options=options;// validate data
  if(data){if(data.start==undefined){throw new Error('Property "start" missing in item '+data);}}Item.call(this,data,conversion,options);}PointItem.prototype=new Item(null,null,null);/**
   * Check whether this item is visible inside given range
   * @param {{start: number, end: number}} range with a timestamp for start and end
   * @returns {boolean} True if visible
   */PointItem.prototype.isVisible=function(range){// determine visibility
  var widthInMs=this.width*range.getMillisecondsPerPixel();return this.data.start.getTime()+widthInMs>range.start&&this.data.start<range.end;};PointItem.prototype._createDomElement=function(){if(!this.dom){// create DOM
  this.dom={};// background box
  this.dom.point=document.createElement('div');// className is updated in redraw()
  // contents box, right from the dot
  this.dom.content=document.createElement('div');this.dom.content.className='vis-item-content';this.dom.point.appendChild(this.dom.content);// dot at start
  this.dom.dot=document.createElement('div');this.dom.point.appendChild(this.dom.dot);// attach this item as attribute
  this.dom.point['timeline-item']=this;this.dirty=true;}};PointItem.prototype._appendDomElement=function(){if(!this.parent){throw new Error('Cannot redraw item: no parent attached');}if(!this.dom.point.parentNode){var foreground=this.parent.dom.foreground;if(!foreground){throw new Error('Cannot redraw item: parent has no foreground container element');}foreground.appendChild(this.dom.point);}this.displayed=true;};PointItem.prototype._updateDirtyDomComponents=function(){// An item is marked dirty when:
  // - the item is not yet rendered
  // - the item's data is changed
  // - the item is selected/deselected
  if(this.dirty){this._updateContents(this.dom.content);this._updateDataAttributes(this.dom.point);this._updateStyle(this.dom.point);var editable=this.editable.updateTime||this.editable.updateGroup;// update class
  var className=(this.data.className?' '+this.data.className:'')+(this.selected?' vis-selected':'')+(editable?' vis-editable':' vis-readonly');this.dom.point.className='vis-item vis-point'+className;this.dom.dot.className='vis-item vis-dot'+className;}};PointItem.prototype._getDomComponentsSizes=function(){return {dot:{width:this.dom.dot.offsetWidth,height:this.dom.dot.offsetHeight},content:{width:this.dom.content.offsetWidth,height:this.dom.content.offsetHeight},point:{width:this.dom.point.offsetWidth,height:this.dom.point.offsetHeight}};};PointItem.prototype._updateDomComponentsSizes=function(sizes){// recalculate size of dot and contents
  this.props.dot.width=sizes.dot.width;this.props.dot.height=sizes.dot.height;this.props.content.height=sizes.content.height;// resize contents
  if(this.options.rtl){this.dom.content.style.marginRight=2*this.props.dot.width+'px';}else{this.dom.content.style.marginLeft=2*this.props.dot.width+'px';}//this.dom.content.style.marginRight = ... + 'px'; // TODO: margin right
  // recalculate size
  this.width=sizes.point.width;this.height=sizes.point.height;// reposition the dot
  this.dom.dot.style.top=(this.height-this.props.dot.height)/2+'px';if(this.options.rtl){this.dom.dot.style.right=this.props.dot.width/2+'px';}else{this.dom.dot.style.left=this.props.dot.width/2+'px';}this.dirty=false;};PointItem.prototype._repaintDomAdditionals=function(){this._repaintOnItemUpdateTimeTooltip(this.dom.point);this._repaintDragCenter();this._repaintDeleteButton(this.dom.point);};/**
   * Repaint the item
   * @param {boolean} [returnQueue=false]  return the queue
   * @return {boolean} the redraw queue if returnQueue=true
   */PointItem.prototype.redraw=function(returnQueue){var sizes;var queue=[// create item DOM
  this._createDomElement.bind(this),// append DOM to parent DOM
  this._appendDomElement.bind(this),// update dirty DOM
  this._updateDirtyDomComponents.bind(this),function(){if(this.dirty){sizes=this._getDomComponentsSizes();}}.bind(this),function(){if(this.dirty){this._updateDomComponentsSizes.bind(this)(sizes);}}.bind(this),// repaint DOM additionals
  this._repaintDomAdditionals.bind(this)];if(returnQueue){return queue;}else{var result;queue.forEach(function(fn){result=fn();});return result;}};/**
   * Show the item in the DOM (when not already visible). The items DOM will
   * be created when needed.
   * @param {boolean} [returnQueue=false]  whether to return a queue of functions to execute instead of just executing them
   * @return {boolean} the redraw queue if returnQueue=true
   */PointItem.prototype.show=function(returnQueue){if(!this.displayed){return this.redraw(returnQueue);}};/**
   * Hide the item from the DOM (when visible)
   */PointItem.prototype.hide=function(){if(this.displayed){if(this.dom.point.parentNode){this.dom.point.parentNode.removeChild(this.dom.point);}this.displayed=false;}};/**
   * Reposition the item horizontally
   * @Override
   */PointItem.prototype.repositionX=function(){var start=this.conversion.toScreen(this.data.start);if(this.options.rtl){this.right=start-this.props.dot.width;// reposition point
  this.dom.point.style.right=this.right+'px';}else{this.left=start-this.props.dot.width;// reposition point
  this.dom.point.style.left=this.left+'px';}};/**
   * Reposition the item vertically
   * @Override
   */PointItem.prototype.repositionY=function(){var orientation=this.options.orientation.item;var point=this.dom.point;if(orientation=='top'){point.style.top=this.top+'px';}else{point.style.top=this.parent.height-this.top-this.height+'px';}};/**
   * Return the width of the item left from its start date
   * @return {number}
   */PointItem.prototype.getWidthLeft=function(){return this.props.dot.width;};/**
   * Return the width of the item right from  its start date
   * @return {number}
   */PointItem.prototype.getWidthRight=function(){return this.props.dot.width;};var PointItem_1=PointItem;/**
   * @constructor RangeItem
   * @extends Item
   * @param {Object} data             Object containing parameters start, end
   *                                  content, className.
   * @param {{toScreen: function, toTime: function}} conversion
   *                                  Conversion functions from time to screen and vice versa
   * @param {Object} [options]        Configuration options
   *                                  // TODO: describe options
   */function RangeItem(data,conversion,options){this.props={content:{width:0}};this.overflow=false;// if contents can overflow (css styling), this flag is set to true
  this.options=options;// validate data
  if(data){if(data.start==undefined){throw new Error('Property "start" missing in item '+data.id);}if(data.end==undefined){throw new Error('Property "end" missing in item '+data.id);}}Item.call(this,data,conversion,options);}RangeItem.prototype=new Item(null,null,null);RangeItem.prototype.baseClassName='vis-item vis-range';/**
   * Check whether this item is visible inside given range
   *
   * @param {vis.Range} range with a timestamp for start and end
   * @returns {boolean} True if visible
   */RangeItem.prototype.isVisible=function(range){// determine visibility
  return this.data.start<range.end&&this.data.end>range.start;};RangeItem.prototype._createDomElement=function(){if(!this.dom){// create DOM
  this.dom={};// background box
  this.dom.box=document.createElement('div');// className is updated in redraw()
  // frame box (to prevent the item contents from overflowing)
  this.dom.frame=document.createElement('div');this.dom.frame.className='vis-item-overflow';this.dom.box.appendChild(this.dom.frame);// visible frame box (showing the frame that is always visible)
  this.dom.visibleFrame=document.createElement('div');this.dom.visibleFrame.className='vis-item-visible-frame';this.dom.box.appendChild(this.dom.visibleFrame);// contents box
  this.dom.content=document.createElement('div');this.dom.content.className='vis-item-content';this.dom.frame.appendChild(this.dom.content);// attach this item as attribute
  this.dom.box['timeline-item']=this;this.dirty=true;}};RangeItem.prototype._appendDomElement=function(){if(!this.parent){throw new Error('Cannot redraw item: no parent attached');}if(!this.dom.box.parentNode){var foreground=this.parent.dom.foreground;if(!foreground){throw new Error('Cannot redraw item: parent has no foreground container element');}foreground.appendChild(this.dom.box);}this.displayed=true;};RangeItem.prototype._updateDirtyDomComponents=function(){// update dirty DOM. An item is marked dirty when:
  // - the item is not yet rendered
  // - the item's data is changed
  // - the item is selected/deselected
  if(this.dirty){this._updateContents(this.dom.content);this._updateDataAttributes(this.dom.box);this._updateStyle(this.dom.box);var editable=this.editable.updateTime||this.editable.updateGroup;// update class
  var className=(this.data.className?' '+this.data.className:'')+(this.selected?' vis-selected':'')+(editable?' vis-editable':' vis-readonly');this.dom.box.className=this.baseClassName+className;// turn off max-width to be able to calculate the real width
  // this causes an extra browser repaint/reflow, but so be it
  this.dom.content.style.maxWidth='none';}};RangeItem.prototype._getDomComponentsSizes=function(){// determine from css whether this box has overflow
  this.overflow=window.getComputedStyle(this.dom.frame).overflow!=='hidden';return {content:{width:this.dom.content.offsetWidth},box:{height:this.dom.box.offsetHeight}};};RangeItem.prototype._updateDomComponentsSizes=function(sizes){this.props.content.width=sizes.content.width;this.height=sizes.box.height;this.dom.content.style.maxWidth='';this.dirty=false;};RangeItem.prototype._repaintDomAdditionals=function(){this._repaintOnItemUpdateTimeTooltip(this.dom.box);this._repaintDeleteButton(this.dom.box);this._repaintDragCenter();this._repaintDragLeft();this._repaintDragRight();};/**
   * Repaint the item
   * @param {boolean} [returnQueue=false]  return the queue
   * @return {boolean} the redraw queue if returnQueue=true
   */RangeItem.prototype.redraw=function(returnQueue){var sizes;var queue=[// create item DOM
  this._createDomElement.bind(this),// append DOM to parent DOM
  this._appendDomElement.bind(this),// update dirty DOM 
  this._updateDirtyDomComponents.bind(this),function(){if(this.dirty){sizes=this._getDomComponentsSizes.bind(this)();}}.bind(this),function(){if(this.dirty){this._updateDomComponentsSizes.bind(this)(sizes);}}.bind(this),// repaint DOM additionals
  this._repaintDomAdditionals.bind(this)];if(returnQueue){return queue;}else{var result;queue.forEach(function(fn){result=fn();});return result;}};/**
   * Show the item in the DOM (when not already visible). The items DOM will
   * be created when needed.
   * @param {boolean} [returnQueue=false]  whether to return a queue of functions to execute instead of just executing them
   * @return {boolean} the redraw queue if returnQueue=true
   */RangeItem.prototype.show=function(returnQueue){if(!this.displayed){return this.redraw(returnQueue);}};/**
   * Hide the item from the DOM (when visible)
   */RangeItem.prototype.hide=function(){if(this.displayed){var box=this.dom.box;if(box.parentNode){box.parentNode.removeChild(box);}this.displayed=false;}};/**
   * Reposition the item horizontally
   * @param {boolean} [limitSize=true] If true (default), the width of the range
   *                                   item will be limited, as the browser cannot
   *                                   display very wide divs. This means though
   *                                   that the applied left and width may
   *                                   not correspond to the ranges start and end
   * @Override
   */RangeItem.prototype.repositionX=function(limitSize){var parentWidth=this.parent.width;var start=this.conversion.toScreen(this.data.start);var end=this.conversion.toScreen(this.data.end);var align=this.data.align===undefined?this.options.align:this.data.align;var contentStartPosition;var contentWidth;// limit the width of the range, as browsers cannot draw very wide divs
  // unless limitSize: false is explicitly set in item data
  if(this.data.limitSize!==false&&(limitSize===undefined||limitSize===true)){if(start<-parentWidth){start=-parentWidth;}if(end>2*parentWidth){end=2*parentWidth;}}// add 0.5 to compensate floating-point values rounding
  var boxWidth=Math.max(end-start+0.5,1);if(this.overflow){if(this.options.rtl){this.right=start;}else{this.left=start;}this.width=boxWidth+this.props.content.width;contentWidth=this.props.content.width;// Note: The calculation of width is an optimistic calculation, giving
  //       a width which will not change when moving the Timeline
  //       So no re-stacking needed, which is nicer for the eye;
  }else{if(this.options.rtl){this.right=start;}else{this.left=start;}this.width=boxWidth;contentWidth=Math.min(end-start,this.props.content.width);}if(this.options.rtl){this.dom.box.style.right=this.right+'px';}else{this.dom.box.style.left=this.left+'px';}this.dom.box.style.width=boxWidth+'px';switch(align){case'left':if(this.options.rtl){this.dom.content.style.right='0';}else{this.dom.content.style.left='0';}break;case'right':if(this.options.rtl){this.dom.content.style.right=Math.max(boxWidth-contentWidth,0)+'px';}else{this.dom.content.style.left=Math.max(boxWidth-contentWidth,0)+'px';}break;case'center':if(this.options.rtl){this.dom.content.style.right=Math.max((boxWidth-contentWidth)/2,0)+'px';}else{this.dom.content.style.left=Math.max((boxWidth-contentWidth)/2,0)+'px';}break;default:// 'auto'
  // when range exceeds left of the window, position the contents at the left of the visible area
  if(this.overflow){if(end>0){contentStartPosition=Math.max(-start,0);}else{contentStartPosition=-contentWidth;// ensure it's not visible anymore
  }}else{if(start<0){contentStartPosition=-start;}else{contentStartPosition=0;}}if(this.options.rtl){this.dom.content.style.right=contentStartPosition+'px';}else{this.dom.content.style.left=contentStartPosition+'px';this.dom.content.style.width='calc(100% - '+contentStartPosition+'px)';}}};/**
   * Reposition the item vertically
   * @Override
   */RangeItem.prototype.repositionY=function(){var orientation=this.options.orientation.item;var box=this.dom.box;if(orientation=='top'){box.style.top=this.top+'px';}else{box.style.top=this.parent.height-this.top-this.height+'px';}};/**
   * Repaint a drag area on the left side of the range when the range is selected
   * @protected
   */RangeItem.prototype._repaintDragLeft=function(){if((this.selected||this.options.itemsAlwaysDraggable.range)&&this.options.editable.updateTime&&!this.dom.dragLeft){// create and show drag area
  var dragLeft=document.createElement('div');dragLeft.className='vis-drag-left';dragLeft.dragLeftItem=this;this.dom.box.appendChild(dragLeft);this.dom.dragLeft=dragLeft;}else if(!this.selected&&!this.options.itemsAlwaysDraggable.range&&this.dom.dragLeft){// delete drag area
  if(this.dom.dragLeft.parentNode){this.dom.dragLeft.parentNode.removeChild(this.dom.dragLeft);}this.dom.dragLeft=null;}};/**
   * Repaint a drag area on the right side of the range when the range is selected
   * @protected
   */RangeItem.prototype._repaintDragRight=function(){if((this.selected||this.options.itemsAlwaysDraggable.range)&&this.options.editable.updateTime&&!this.dom.dragRight){// create and show drag area
  var dragRight=document.createElement('div');dragRight.className='vis-drag-right';dragRight.dragRightItem=this;this.dom.box.appendChild(dragRight);this.dom.dragRight=dragRight;}else if(!this.selected&&!this.options.itemsAlwaysDraggable.range&&this.dom.dragRight){// delete drag area
  if(this.dom.dragRight.parentNode){this.dom.dragRight.parentNode.removeChild(this.dom.dragRight);}this.dom.dragRight=null;}};var RangeItem_1=RangeItem;/**
   * @constructor BackgroundItem
   * @extends Item
   * @param {Object} data             Object containing parameters start, end
   *                                  content, className.
   * @param {{toScreen: function, toTime: function}} conversion
   *                                  Conversion functions from time to screen and vice versa
   * @param {Object} [options]        Configuration options
   *                                  // TODO: describe options
   * // TODO: implement support for the BackgroundItem just having a start, then being displayed as a sort of an annotation
   */function BackgroundItem(data,conversion,options){this.props={content:{width:0}};this.overflow=false;// if contents can overflow (css styling), this flag is set to true
  // validate data
  if(data){if(data.start==undefined){throw new Error('Property "start" missing in item '+data.id);}if(data.end==undefined){throw new Error('Property "end" missing in item '+data.id);}}Item.call(this,data,conversion,options);}BackgroundItem.prototype=new Item(null,null,null);BackgroundItem.prototype.baseClassName='vis-item vis-background';BackgroundItem.prototype.stack=false;/**
   * Check whether this item is visible inside given range
   * @param {vis.Range} range with a timestamp for start and end
   * @returns {boolean} True if visible
   */BackgroundItem.prototype.isVisible=function(range){// determine visibility
  return this.data.start<range.end&&this.data.end>range.start;};BackgroundItem.prototype._createDomElement=function(){if(!this.dom){// create DOM
  this.dom={};// background box
  this.dom.box=document.createElement('div');// className is updated in redraw()
  // frame box (to prevent the item contents from overflowing
  this.dom.frame=document.createElement('div');this.dom.frame.className='vis-item-overflow';this.dom.box.appendChild(this.dom.frame);// contents box
  this.dom.content=document.createElement('div');this.dom.content.className='vis-item-content';this.dom.frame.appendChild(this.dom.content);// Note: we do NOT attach this item as attribute to the DOM,
  //       such that background items cannot be selected
  //this.dom.box['timeline-item'] = this;
  this.dirty=true;}};BackgroundItem.prototype._appendDomElement=function(){if(!this.parent){throw new Error('Cannot redraw item: no parent attached');}if(!this.dom.box.parentNode){var background=this.parent.dom.background;if(!background){throw new Error('Cannot redraw item: parent has no background container element');}background.appendChild(this.dom.box);}this.displayed=true;};BackgroundItem.prototype._updateDirtyDomComponents=function(){// update dirty DOM. An item is marked dirty when:
  // - the item is not yet rendered
  // - the item's data is changed
  // - the item is selected/deselected
  if(this.dirty){this._updateContents(this.dom.content);this._updateDataAttributes(this.dom.content);this._updateStyle(this.dom.box);// update class
  var className=(this.data.className?' '+this.data.className:'')+(this.selected?' vis-selected':'');this.dom.box.className=this.baseClassName+className;}};BackgroundItem.prototype._getDomComponentsSizes=function(){// determine from css whether this box has overflow
  this.overflow=window.getComputedStyle(this.dom.content).overflow!=='hidden';return {content:{width:this.dom.content.offsetWidth}};};BackgroundItem.prototype._updateDomComponentsSizes=function(sizes){// recalculate size
  this.props.content.width=sizes.content.width;this.height=0;// set height zero, so this item will be ignored when stacking items
  this.dirty=false;};BackgroundItem.prototype._repaintDomAdditionals=function(){};/**
   * Repaint the item
   * @param {boolean} [returnQueue=false]  return the queue
   * @return {boolean} the redraw result or the redraw queue if returnQueue=true
   */BackgroundItem.prototype.redraw=function(returnQueue){var sizes;var queue=[// create item DOM
  this._createDomElement.bind(this),// append DOM to parent DOM
  this._appendDomElement.bind(this),this._updateDirtyDomComponents.bind(this),function(){if(this.dirty){sizes=this._getDomComponentsSizes.bind(this)();}}.bind(this),function(){if(this.dirty){this._updateDomComponentsSizes.bind(this)(sizes);}}.bind(this),// repaint DOM additionals
  this._repaintDomAdditionals.bind(this)];if(returnQueue){return queue;}else{var result;queue.forEach(function(fn){result=fn();});return result;}};/**
   * Show the item in the DOM (when not already visible). The items DOM will
   * be created when needed.
   */BackgroundItem.prototype.show=RangeItem_1.prototype.show;/**
   * Hide the item from the DOM (when visible)
   * @return {Boolean} changed
   */BackgroundItem.prototype.hide=RangeItem_1.prototype.hide;/**
   * Reposition the item horizontally
   * @Override
   */BackgroundItem.prototype.repositionX=RangeItem_1.prototype.repositionX;/**
   * Reposition the item vertically
   * @Override
   */BackgroundItem.prototype.repositionY=function(margin){// eslint-disable-line no-unused-vars
  var height;var orientation=this.options.orientation.item;// special positioning for subgroups
  if(this.data.subgroup!==undefined){// TODO: instead of calculating the top position of the subgroups here for every BackgroundItem, calculate the top of the subgroup once in Itemset
  var itemSubgroup=this.data.subgroup;this.dom.box.style.height=this.parent.subgroups[itemSubgroup].height+'px';if(orientation=='top'){this.dom.box.style.top=this.parent.top+this.parent.subgroups[itemSubgroup].top+'px';}else{this.dom.box.style.top=this.parent.top+this.parent.height-this.parent.subgroups[itemSubgroup].top-this.parent.subgroups[itemSubgroup].height+'px';}this.dom.box.style.bottom='';}// and in the case of no subgroups:
  else{// we want backgrounds with groups to only show in groups.
  if(this.parent instanceof BackgroundGroup_1){// if the item is not in a group:
  height=Math.max(this.parent.height,this.parent.itemSet.body.domProps.center.height,this.parent.itemSet.body.domProps.centerContainer.height);this.dom.box.style.bottom=orientation=='bottom'?'0':'';this.dom.box.style.top=orientation=='top'?'0':'';}else{height=this.parent.height;// same alignment for items when orientation is top or bottom
  this.dom.box.style.top=this.parent.top+'px';this.dom.box.style.bottom='';}}this.dom.box.style.height=height+'px';};var BackgroundItem_1=BackgroundItem;/**
   * Popup is a class to create a popup window with some text
   */var Popup$1=/*#__PURE__*/function(){/**
     * @param {Element} container       The container object.
     * @param {string}  overflowMethod  How the popup should act to overflowing ('flip' or 'cap')
     */function Popup(container,overflowMethod){_classCallCheck$1$2(this,Popup);this.container=container;this.overflowMethod=overflowMethod||'cap';this.x=0;this.y=0;this.padding=5;this.hidden=false;// create the frame
  this.frame=document.createElement('div');this.frame.className='vis-tooltip';this.container.appendChild(this.frame);}/**
     * @param {number} x   Horizontal position of the popup window
     * @param {number} y   Vertical position of the popup window
     */_createClass$1$2(Popup,[{key:"setPosition",value:function setPosition(x,y){this.x=parseInt(x);this.y=parseInt(y);}/**
       * Set the content for the popup window. This can be HTML code or text.
       * @param {string | Element} content
       */},{key:"setText",value:function setText(content){if(content instanceof Element){this.frame.innerHTML='';this.frame.appendChild(content);}else{this.frame.innerHTML=content;// string containing text or HTML
  }}/**
       * Show the popup window
       * @param {boolean} [doShow]    Show or hide the window
       */},{key:"show",value:function show(doShow){if(doShow===undefined){doShow=true;}if(doShow===true){var height=this.frame.clientHeight;var width=this.frame.clientWidth;var maxHeight=this.frame.parentNode.clientHeight;var maxWidth=this.frame.parentNode.clientWidth;var left=0,top=0;if(this.overflowMethod=='flip'){var isLeft=false,isTop=true;// Where around the position it's located
  if(this.y-height<this.padding){isTop=false;}if(this.x+width>maxWidth-this.padding){isLeft=true;}if(isLeft){left=this.x-width;}else{left=this.x;}if(isTop){top=this.y-height;}else{top=this.y;}}else{top=this.y-height;if(top+height+this.padding>maxHeight){top=maxHeight-height-this.padding;}if(top<this.padding){top=this.padding;}left=this.x;if(left+width+this.padding>maxWidth){left=maxWidth-width-this.padding;}if(left<this.padding){left=this.padding;}}this.frame.style.left=left+"px";this.frame.style.top=top+"px";this.frame.style.visibility="visible";this.hidden=false;}else{this.hide();}}/**
       * Hide the popup window
       */},{key:"hide",value:function hide(){this.hidden=true;this.frame.style.left="0";this.frame.style.top="0";this.frame.style.visibility="hidden";}/**
       * Remove the popup window
       */},{key:"destroy",value:function destroy(){this.frame.parentNode.removeChild(this.frame);// Remove element from DOM
  }}]);return Popup;}();var UNGROUPED='__ungrouped__';// reserved group id for ungrouped items
  var BACKGROUND='__background__';// reserved group id for background items without group
  /**
   * An ItemSet holds a set of items and ranges which can be displayed in a
   * range. The width is determined by the parent of the ItemSet, and the height
   * is determined by the size of the items.
   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body
   * @param {Object} [options]      See ItemSet.setOptions for the available options.
   * @constructor ItemSet
   * @extends Component
   */function ItemSet(body,options){this.body=body;this.defaultOptions={type:null,// 'box', 'point', 'range', 'background'
  orientation:{item:'bottom'// item orientation: 'top' or 'bottom'
  },align:'auto',// alignment of box items
  stack:true,stackSubgroups:true,groupOrderSwap:function groupOrderSwap(fromGroup,toGroup,groups){// eslint-disable-line no-unused-vars
  var targetOrder=toGroup.order;toGroup.order=fromGroup.order;fromGroup.order=targetOrder;},groupOrder:'order',selectable:true,multiselect:false,itemsAlwaysDraggable:{item:false,range:false},editable:{updateTime:false,updateGroup:false,add:false,remove:false,overrideItems:false},groupEditable:{order:false,add:false,remove:false},snap:TimeStep_1.snap,// Only called when `objectData.target === 'item'.
  onDropObjectOnItem:function onDropObjectOnItem(objectData,item,callback){callback(item);},onAdd:function onAdd(item,callback){callback(item);},onUpdate:function onUpdate(item,callback){callback(item);},onMove:function onMove(item,callback){callback(item);},onRemove:function onRemove(item,callback){callback(item);},onMoving:function onMoving(item,callback){callback(item);},onAddGroup:function onAddGroup(item,callback){callback(item);},onMoveGroup:function onMoveGroup(item,callback){callback(item);},onRemoveGroup:function onRemoveGroup(item,callback){callback(item);},margin:{item:{horizontal:10,vertical:10},axis:20},showTooltips:true,tooltip:{followMouse:false,overflowMethod:'flip'},tooltipOnItemUpdateTime:false};// options is shared by this ItemSet and all its items
  this.options=util$4.extend({},this.defaultOptions);this.options.rtl=options.rtl;this.options.onTimeout=options.onTimeout;// options for getting items from the DataSet with the correct type
  this.itemOptions={type:{start:'Date',end:'Date'}};this.conversion={toScreen:body.util.toScreen,toTime:body.util.toTime};this.dom={};this.props={};this.hammer=null;var me=this;this.itemsData=null;// DataSet
  this.groupsData=null;// DataSet
  this.itemsSettingTime=null;this.initialItemSetDrawn=false;this.userContinueNotBail=null;// listeners for the DataSet of the items
  this.itemListeners={'add':function add(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onAdd(params.items);},'update':function update(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onUpdate(params.items);},'remove':function remove(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onRemove(params.items);}};// listeners for the DataSet of the groups
  this.groupListeners={'add':function add(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onAddGroups(params.items);if(me.groupsData&&me.groupsData.length>0){var groupsData=me.groupsData.getDataSet();groupsData.get().forEach(function(groupData){if(groupData.nestedGroups){if(groupData.showNested!=false){groupData.showNested=true;}var updatedGroups=[];groupData.nestedGroups.forEach(function(nestedGroupId){var updatedNestedGroup=groupsData.get(nestedGroupId);if(!updatedNestedGroup){return;}updatedNestedGroup.nestedInGroup=groupData.id;if(groupData.showNested==false){updatedNestedGroup.visible=false;}updatedGroups=updatedGroups.concat(updatedNestedGroup);});groupsData.update(updatedGroups,senderId);}});}},'update':function update(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onUpdateGroups(params.items);},'remove':function remove(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onRemoveGroups(params.items);}};this.items={};// object with an Item for every data item
  this.groups={};// Group object for every group
  this.groupIds=[];this.selection=[];// list with the ids of all selected nodes
  this.popup=null;this.popupTimer=null;this.touchParams={};// stores properties while dragging
  this.groupTouchParams={};// create the HTML DOM
  this._create();this.setOptions(options);}ItemSet.prototype=new Component_1();// available item types will be registered here
  ItemSet.types={background:BackgroundItem_1,box:BoxItem_1,range:RangeItem_1,point:PointItem_1};/**
   * Create the HTML DOM for the ItemSet
   */ItemSet.prototype._create=function(){var frame=document.createElement('div');frame.className='vis-itemset';frame['timeline-itemset']=this;this.dom.frame=frame;// create background panel
  var background=document.createElement('div');background.className='vis-background';frame.appendChild(background);this.dom.background=background;// create foreground panel
  var foreground=document.createElement('div');foreground.className='vis-foreground';frame.appendChild(foreground);this.dom.foreground=foreground;// create axis panel
  var axis=document.createElement('div');axis.className='vis-axis';this.dom.axis=axis;// create labelset
  var labelSet=document.createElement('div');labelSet.className='vis-labelset';this.dom.labelSet=labelSet;// create ungrouped Group
  this._updateUngrouped();// create background Group
  var backgroundGroup=new BackgroundGroup_1(BACKGROUND,null,this);backgroundGroup.show();this.groups[BACKGROUND]=backgroundGroup;// attach event listeners
  // Note: we bind to the centerContainer for the case where the height
  //       of the center container is larger than of the ItemSet, so we
  //       can click in the empty area to create a new item or deselect an item.
  this.hammer=new hammer$1$2(this.body.dom.centerContainer);// drag items when selected
  this.hammer.on('hammer.input',function(event){if(event.isFirst){this._onTouch(event);}}.bind(this));this.hammer.on('panstart',this._onDragStart.bind(this));this.hammer.on('panmove',this._onDrag.bind(this));this.hammer.on('panend',this._onDragEnd.bind(this));this.hammer.get('pan').set({threshold:5,direction:hammer$1$2.DIRECTION_HORIZONTAL});// single select (or unselect) when tapping an item
  this.hammer.on('tap',this._onSelectItem.bind(this));// multi select when holding mouse/touch, or on ctrl+click
  this.hammer.on('press',this._onMultiSelectItem.bind(this));// add item on doubletap
  this.hammer.on('doubletap',this._onAddItem.bind(this));if(this.options.rtl){this.groupHammer=new hammer$1$2(this.body.dom.rightContainer);}else{this.groupHammer=new hammer$1$2(this.body.dom.leftContainer);}this.groupHammer.on('tap',this._onGroupClick.bind(this));this.groupHammer.on('panstart',this._onGroupDragStart.bind(this));this.groupHammer.on('panmove',this._onGroupDrag.bind(this));this.groupHammer.on('panend',this._onGroupDragEnd.bind(this));this.groupHammer.get('pan').set({threshold:5,direction:hammer$1$2.DIRECTION_VERTICAL});this.body.dom.centerContainer.addEventListener('mouseover',this._onMouseOver.bind(this));this.body.dom.centerContainer.addEventListener('mouseout',this._onMouseOut.bind(this));this.body.dom.centerContainer.addEventListener('mousemove',this._onMouseMove.bind(this));// right-click on timeline 
  this.body.dom.centerContainer.addEventListener('contextmenu',this._onDragEnd.bind(this));this.body.dom.centerContainer.addEventListener('mousewheel',this._onMouseWheel.bind(this));// attach to the DOM
  this.show();};/**
   * Set options for the ItemSet. Existing options will be extended/overwritten.
   * @param {Object} [options] The following options are available:
   *                           {string} type
   *                              Default type for the items. Choose from 'box'
   *                              (default), 'point', 'range', or 'background'.
   *                              The default style can be overwritten by
   *                              individual items.
   *                           {string} align
   *                              Alignment for the items, only applicable for
   *                              BoxItem. Choose 'center' (default), 'left', or
   *                              'right'.
   *                           {string} orientation.item
   *                              Orientation of the item set. Choose 'top' or
   *                              'bottom' (default).
   *                           {Function} groupOrder
   *                              A sorting function for ordering groups
   *                           {boolean} stack
   *                              If true (default), items will be stacked on
   *                              top of each other.
   *                           {number} margin.axis
   *                              Margin between the axis and the items in pixels.
   *                              Default is 20.
   *                           {number} margin.item.horizontal
   *                              Horizontal margin between items in pixels.
   *                              Default is 10.
   *                           {number} margin.item.vertical
   *                              Vertical Margin between items in pixels.
   *                              Default is 10.
   *                           {number} margin.item
   *                              Margin between items in pixels in both horizontal
   *                              and vertical direction. Default is 10.
   *                           {number} margin
   *                              Set margin for both axis and items in pixels.
   *                           {boolean} selectable
   *                              If true (default), items can be selected.
   *                           {boolean} multiselect
   *                              If true, multiple items can be selected.
   *                              False by default.
   *                           {boolean} editable
   *                              Set all editable options to true or false
   *                           {boolean} editable.updateTime
   *                              Allow dragging an item to an other moment in time
   *                           {boolean} editable.updateGroup
   *                              Allow dragging an item to an other group
   *                           {boolean} editable.add
   *                              Allow creating new items on double tap
   *                           {boolean} editable.remove
   *                              Allow removing items by clicking the delete button
   *                              top right of a selected item.
   *                           {Function(item: Item, callback: Function)} onAdd
   *                              Callback function triggered when an item is about to be added:
   *                              when the user double taps an empty space in the Timeline.
   *                           {Function(item: Item, callback: Function)} onUpdate
   *                              Callback function fired when an item is about to be updated.
   *                              This function typically has to show a dialog where the user
   *                              change the item. If not implemented, nothing happens.
   *                           {Function(item: Item, callback: Function)} onMove
   *                              Fired when an item has been moved. If not implemented,
   *                              the move action will be accepted.
   *                           {Function(item: Item, callback: Function)} onRemove
   *                              Fired when an item is about to be deleted.
   *                              If not implemented, the item will be always removed.
   */ItemSet.prototype.setOptions=function(options){if(options){// copy all options that we know
  var fields=['type','rtl','align','order','stack','stackSubgroups','selectable','multiselect','multiselectPerGroup','groupOrder','dataAttributes','template','groupTemplate','visibleFrameTemplate','hide','snap','groupOrderSwap','showTooltips','tooltip','tooltipOnItemUpdateTime','groupHeightMode','onTimeout','groupLabelDirection'];util$4.selectiveExtend(fields,this.options,options);if('itemsAlwaysDraggable'in options){if(typeof options.itemsAlwaysDraggable==='boolean'){this.options.itemsAlwaysDraggable.item=options.itemsAlwaysDraggable;this.options.itemsAlwaysDraggable.range=false;}else if(_typeof$1$2(options.itemsAlwaysDraggable)==='object'){util$4.selectiveExtend(['item','range'],this.options.itemsAlwaysDraggable,options.itemsAlwaysDraggable);// only allow range always draggable when item is always draggable as well
  if(!this.options.itemsAlwaysDraggable.item){this.options.itemsAlwaysDraggable.range=false;}}}if('orientation'in options){if(typeof options.orientation==='string'){this.options.orientation.item=options.orientation==='top'?'top':'bottom';}else if(_typeof$1$2(options.orientation)==='object'&&'item'in options.orientation){this.options.orientation.item=options.orientation.item;}}if('margin'in options){if(typeof options.margin==='number'){this.options.margin.axis=options.margin;this.options.margin.item.horizontal=options.margin;this.options.margin.item.vertical=options.margin;}else if(_typeof$1$2(options.margin)==='object'){util$4.selectiveExtend(['axis'],this.options.margin,options.margin);if('item'in options.margin){if(typeof options.margin.item==='number'){this.options.margin.item.horizontal=options.margin.item;this.options.margin.item.vertical=options.margin.item;}else if(_typeof$1$2(options.margin.item)==='object'){util$4.selectiveExtend(['horizontal','vertical'],this.options.margin.item,options.margin.item);}}}}if('editable'in options){if(typeof options.editable==='boolean'){this.options.editable.updateTime=options.editable;this.options.editable.updateGroup=options.editable;this.options.editable.add=options.editable;this.options.editable.remove=options.editable;this.options.editable.overrideItems=false;}else if(_typeof$1$2(options.editable)==='object'){util$4.selectiveExtend(['updateTime','updateGroup','add','remove','overrideItems'],this.options.editable,options.editable);}}if('groupEditable'in options){if(typeof options.groupEditable==='boolean'){this.options.groupEditable.order=options.groupEditable;this.options.groupEditable.add=options.groupEditable;this.options.groupEditable.remove=options.groupEditable;}else if(_typeof$1$2(options.groupEditable)==='object'){util$4.selectiveExtend(['order','add','remove'],this.options.groupEditable,options.groupEditable);}}// callback functions
  var addCallback=function(name){var fn=options[name];if(fn){if(!(fn instanceof Function)){throw new Error('option '+name+' must be a function '+name+'(item, callback)');}this.options[name]=fn;}}.bind(this);['onDropObjectOnItem','onAdd','onUpdate','onRemove','onMove','onMoving','onAddGroup','onMoveGroup','onRemoveGroup'].forEach(addCallback);// force the itemSet to refresh: options like orientation and margins may be changed
  this.markDirty();}};/**
   * Mark the ItemSet dirty so it will refresh everything with next redraw.
   * Optionally, all items can be marked as dirty and be refreshed.
   * @param {{refreshItems: boolean}} [options]
   */ItemSet.prototype.markDirty=function(options){this.groupIds=[];if(options&&options.refreshItems){util$4.forEach(this.items,function(item){item.dirty=true;if(item.displayed)item.redraw();});}};/**
   * Destroy the ItemSet
   */ItemSet.prototype.destroy=function(){this.clearPopupTimer();this.hide();this.setItems(null);this.setGroups(null);this.hammer&&this.hammer.destroy();this.groupHammer&&this.groupHammer.destroy();this.hammer=null;this.body=null;this.conversion=null;};/**
   * Hide the component from the DOM
   */ItemSet.prototype.hide=function(){// remove the frame containing the items
  if(this.dom.frame.parentNode){this.dom.frame.parentNode.removeChild(this.dom.frame);}// remove the axis with dots
  if(this.dom.axis.parentNode){this.dom.axis.parentNode.removeChild(this.dom.axis);}// remove the labelset containing all group labels
  if(this.dom.labelSet.parentNode){this.dom.labelSet.parentNode.removeChild(this.dom.labelSet);}};/**
   * Show the component in the DOM (when not already visible).
   */ItemSet.prototype.show=function(){// show frame containing the items
  if(!this.dom.frame.parentNode){this.body.dom.center.appendChild(this.dom.frame);}// show axis with dots
  if(!this.dom.axis.parentNode){this.body.dom.backgroundVertical.appendChild(this.dom.axis);}// show labelset containing labels
  if(!this.dom.labelSet.parentNode){if(this.options.rtl){this.body.dom.right.appendChild(this.dom.labelSet);}else{this.body.dom.left.appendChild(this.dom.labelSet);}}};/**
   * Activates the popup timer to show the given popup after a fixed time.
   * @param {any} popup
   */ItemSet.prototype.setPopupTimer=function(popup){this.clearPopupTimer();if(popup){this.popupTimer=setTimeout(function(){popup.show();},500);}};/**
   * Clears the popup timer for the tooltip.
   */ItemSet.prototype.clearPopupTimer=function(){if(this.popupTimer!=null){clearTimeout(this.popupTimer);this.popupTimer=null;}};/**
   * Set selected items by their id. Replaces the current selection
   * Unknown id's are silently ignored.
   * @param {string[] | string} [ids] An array with zero or more id's of the items to be
   *                                  selected, or a single item id. If ids is undefined
   *                                  or an empty array, all items will be unselected.
   */ItemSet.prototype.setSelection=function(ids){var i,ii,id,item;if(ids==undefined)ids=[];if(!Array.isArray(ids))ids=[ids];// unselect currently selected items
  for(i=0,ii=this.selection.length;i<ii;i++){id=this.selection[i];item=this.items[id];if(item)item.unselect();}// select items
  this.selection=[];for(i=0,ii=ids.length;i<ii;i++){id=ids[i];item=this.items[id];if(item){this.selection.push(id);item.select();}}};/**
   * Get the selected items by their id
   * @return {Array} ids  The ids of the selected items
   */ItemSet.prototype.getSelection=function(){return this.selection.concat([]);};/**
   * Get the id's of the currently visible items.
   * @returns {Array} The ids of the visible items
   */ItemSet.prototype.getVisibleItems=function(){var range=this.body.range.getRange();var right,left;if(this.options.rtl){right=this.body.util.toScreen(range.start);left=this.body.util.toScreen(range.end);}else{left=this.body.util.toScreen(range.start);right=this.body.util.toScreen(range.end);}var ids=[];for(var groupId in this.groups){if(this.groups.hasOwnProperty(groupId)){var group=this.groups[groupId];var rawVisibleItems=group.isVisible?group.visibleItems:[];// filter the "raw" set with visibleItems into a set which is really
  // visible by pixels
  for(var i=0;i<rawVisibleItems.length;i++){var item=rawVisibleItems[i];// TODO: also check whether visible vertically
  if(this.options.rtl){if(item.right<left&&item.right+item.width>right){ids.push(item.id);}}else{if(item.left<right&&item.left+item.width>left){ids.push(item.id);}}}}}return ids;};/**
   * Get the id's of the currently visible groups.
   * @returns {Array} The ids of the visible groups
   */ItemSet.prototype.getVisibleGroups=function(){var ids=[];for(var groupId in this.groups){if(this.groups.hasOwnProperty(groupId)){var group=this.groups[groupId];if(group.isVisible){ids.push(groupId);}}}return ids;};/**
   * Deselect a selected item
   * @param {string | number} id
   * @private
   */ItemSet.prototype._deselect=function(id){var selection=this.selection;for(var i=0,ii=selection.length;i<ii;i++){if(selection[i]==id){// non-strict comparison!
  selection.splice(i,1);break;}}};/**
   * Repaint the component
   * @return {boolean} Returns true if the component is resized
   */ItemSet.prototype.redraw=function(){var margin=this.options.margin,range=this.body.range,asSize=util$4.option.asSize,options=this.options,orientation=options.orientation.item,resized=false,frame=this.dom.frame;// recalculate absolute position (before redrawing groups)
  this.props.top=this.body.domProps.top.height+this.body.domProps.border.top;if(this.options.rtl){this.props.right=this.body.domProps.right.width+this.body.domProps.border.right;}else{this.props.left=this.body.domProps.left.width+this.body.domProps.border.left;}// update class name
  frame.className='vis-itemset';// reorder the groups (if needed)
  resized=this._orderGroups()||resized;// check whether zoomed (in that case we need to re-stack everything)
  // TODO: would be nicer to get this as a trigger from Range
  var visibleInterval=range.end-range.start;var zoomed=visibleInterval!=this.lastVisibleInterval||this.props.width!=this.props.lastWidth;var scrolled=range.start!=this.lastRangeStart;var changedStackOption=options.stack!=this.lastStack;var changedStackSubgroupsOption=options.stackSubgroups!=this.lastStackSubgroups;var forceRestack=zoomed||scrolled||changedStackOption||changedStackSubgroupsOption;this.lastVisibleInterval=visibleInterval;this.lastRangeStart=range.start;this.lastStack=options.stack;this.lastStackSubgroups=options.stackSubgroups;this.props.lastWidth=this.props.width;var firstGroup=this._firstGroup();var firstMargin={item:margin.item,axis:margin.axis};var nonFirstMargin={item:margin.item,axis:margin.item.vertical/2};var height=0;var minHeight=margin.axis+margin.item.vertical;// redraw the background group
  this.groups[BACKGROUND].redraw(range,nonFirstMargin,forceRestack);var redrawQueue={};var redrawQueueLength=0;// collect redraw functions
  util$4.forEach(this.groups,function(group,key){if(key===BACKGROUND)return;var groupMargin=group==firstGroup?firstMargin:nonFirstMargin;var returnQueue=true;redrawQueue[key]=group.redraw(range,groupMargin,forceRestack,returnQueue);redrawQueueLength=redrawQueue[key].length;});var needRedraw=redrawQueueLength>0;if(needRedraw){var redrawResults={};for(var i=0;i<redrawQueueLength;i++){util$4.forEach(redrawQueue,function(fns,key){redrawResults[key]=fns[i]();});}// redraw all regular groups
  util$4.forEach(this.groups,function(group,key){if(key===BACKGROUND)return;var groupResized=redrawResults[key];resized=groupResized||resized;height+=group.height;});height=Math.max(height,minHeight);}height=Math.max(height,minHeight);// update frame height
  frame.style.height=asSize(height);// calculate actual size
  this.props.width=frame.offsetWidth;this.props.height=height;// reposition axis
  this.dom.axis.style.top=asSize(orientation=='top'?this.body.domProps.top.height+this.body.domProps.border.top:this.body.domProps.top.height+this.body.domProps.centerContainer.height);if(this.options.rtl){this.dom.axis.style.right='0';}else{this.dom.axis.style.left='0';}this.initialItemSetDrawn=true;// check if this component is resized
  resized=this._isResized()||resized;return resized;};/**
   * Get the first group, aligned with the axis
   * @return {Group | null} firstGroup
   * @private
   */ItemSet.prototype._firstGroup=function(){var firstGroupIndex=this.options.orientation.item=='top'?0:this.groupIds.length-1;var firstGroupId=this.groupIds[firstGroupIndex];var firstGroup=this.groups[firstGroupId]||this.groups[UNGROUPED];return firstGroup||null;};/**
   * Create or delete the group holding all ungrouped items. This group is used when
   * there are no groups specified.
   * @protected
   */ItemSet.prototype._updateUngrouped=function(){var ungrouped=this.groups[UNGROUPED];var item,itemId;if(this.groupsData){// remove the group holding all ungrouped items
  if(ungrouped){ungrouped.hide();delete this.groups[UNGROUPED];for(itemId in this.items){if(this.items.hasOwnProperty(itemId)){item=this.items[itemId];item.parent&&item.parent.remove(item);var groupId=this._getGroupId(item.data);var group=this.groups[groupId];group&&group.add(item)||item.hide();}}}}else{// create a group holding all (unfiltered) items
  if(!ungrouped){var id=null;var data=null;ungrouped=new Group_1(id,data,this);this.groups[UNGROUPED]=ungrouped;for(itemId in this.items){if(this.items.hasOwnProperty(itemId)){item=this.items[itemId];ungrouped.add(item);}}ungrouped.show();}}};/**
   * Get the element for the labelset
   * @return {HTMLElement} labelSet
   */ItemSet.prototype.getLabelSet=function(){return this.dom.labelSet;};/**
   * Set items
   * @param {vis.DataSet | null} items
   */ItemSet.prototype.setItems=function(items){this.itemsSettingTime=new Date();var me=this,ids,oldItemsData=this.itemsData;// replace the dataset
  if(!items){this.itemsData=null;}else if(items instanceof DataSet$3||items instanceof DataView$4){this.itemsData=items;}else{throw new TypeError('Data must be an instance of DataSet or DataView');}if(oldItemsData){// unsubscribe from old dataset
  util$4.forEach(this.itemListeners,function(callback,event){oldItemsData.off(event,callback);});// remove all drawn items
  ids=oldItemsData.getIds();this._onRemove(ids);}if(this.itemsData){// subscribe to new dataset
  var id=this.id;util$4.forEach(this.itemListeners,function(callback,event){me.itemsData.on(event,callback,id);});// add all new items
  ids=this.itemsData.getIds();this._onAdd(ids);// update the group holding all ungrouped items
  this._updateUngrouped();}this.body.emitter.emit('_change',{queue:true});};/**
   * Get the current items
   * @returns {vis.DataSet | null}
   */ItemSet.prototype.getItems=function(){return this.itemsData;};/**
   * Set groups
   * @param {vis.DataSet} groups
   */ItemSet.prototype.setGroups=function(groups){var me=this,ids;// unsubscribe from current dataset
  if(this.groupsData){util$4.forEach(this.groupListeners,function(callback,event){me.groupsData.off(event,callback);});// remove all drawn groups
  ids=this.groupsData.getIds();this.groupsData=null;this._onRemoveGroups(ids);// note: this will cause a redraw
  }// replace the dataset
  if(!groups){this.groupsData=null;}else if(groups instanceof DataSet$3||groups instanceof DataView$4){this.groupsData=groups;}else{throw new TypeError('Data must be an instance of DataSet or DataView');}if(this.groupsData){// go over all groups nesting
  var groupsData=this.groupsData;if(this.groupsData instanceof DataView$4){groupsData=this.groupsData.getDataSet();}groupsData.get().forEach(function(group){if(group.nestedGroups){group.nestedGroups.forEach(function(nestedGroupId){var updatedNestedGroup=groupsData.get(nestedGroupId);updatedNestedGroup.nestedInGroup=group.id;if(group.showNested==false){updatedNestedGroup.visible=false;}groupsData.update(updatedNestedGroup);});}});// subscribe to new dataset
  var id=this.id;util$4.forEach(this.groupListeners,function(callback,event){me.groupsData.on(event,callback,id);});// draw all ms
  ids=this.groupsData.getIds();this._onAddGroups(ids);}// update the group holding all ungrouped items
  this._updateUngrouped();// update the order of all items in each group
  this._order();this.body.emitter.emit('_change',{queue:true});};/**
   * Get the current groups
   * @returns {vis.DataSet | null} groups
   */ItemSet.prototype.getGroups=function(){return this.groupsData;};/**
   * Remove an item by its id
   * @param {string | number} id
   */ItemSet.prototype.removeItem=function(id){var item=this.itemsData.get(id),dataset=this.itemsData.getDataSet();if(item){// confirm deletion
  this.options.onRemove(item,function(item){if(item){// remove by id here, it is possible that an item has no id defined
  // itself, so better not delete by the item itself
  dataset.remove(id);}});}};/**
   * Get the time of an item based on it's data and options.type
   * @param {Object} itemData
   * @returns {string} Returns the type
   * @private
   */ItemSet.prototype._getType=function(itemData){return itemData.type||this.options.type||(itemData.end?'range':'box');};/**
   * Get the group id for an item
   * @param {Object} itemData
   * @returns {string} Returns the groupId
   * @private
   */ItemSet.prototype._getGroupId=function(itemData){var type=this._getType(itemData);if(type=='background'&&itemData.group==undefined){return BACKGROUND;}else{return this.groupsData?itemData.group:UNGROUPED;}};/**
   * Handle updated items
   * @param {number[]} ids
   * @protected
   */ItemSet.prototype._onUpdate=function(ids){var me=this;ids.forEach(function(id){var itemData=me.itemsData.get(id,me.itemOptions);var item=me.items[id];var type=itemData?me._getType(itemData):null;var constructor=ItemSet.types[type];var selected;if(item){// update item   	
  if(!constructor||!(item instanceof constructor)){// item type has changed, delete the item and recreate it
  selected=item.selected;// preserve selection of this item
  me._removeItem(item);item=null;}else{me._updateItem(item,itemData);}}if(!item&&itemData){// create item
  if(constructor){item=new constructor(itemData,me.conversion,me.options);item.id=id;// TODO: not so nice setting id afterwards
  me._addItem(item);if(selected){this.selection.push(id);item.select();}}else if(type=='rangeoverflow'){// TODO: deprecated since version 2.1.0 (or 3.0.0?). cleanup some day
  throw new TypeError('Item type "rangeoverflow" is deprecated. Use css styling instead: '+'.vis-item.vis-range .vis-item-content {overflow: visible;}');}else{throw new TypeError('Unknown item type "'+type+'"');}}}.bind(this));this._order();this.body.emitter.emit('_change',{queue:true});};/**
   * Handle added items
   * @param {number[]} ids
   * @protected
   */ItemSet.prototype._onAdd=ItemSet.prototype._onUpdate;/**
   * Handle removed items
   * @param {number[]} ids
   * @protected
   */ItemSet.prototype._onRemove=function(ids){var count=0;var me=this;ids.forEach(function(id){var item=me.items[id];if(item){count++;me._removeItem(item);}});if(count){// update order
  this._order();this.body.emitter.emit('_change',{queue:true});}};/**
   * Update the order of item in all groups
   * @private
   */ItemSet.prototype._order=function(){// reorder the items in all groups
  // TODO: optimization: only reorder groups affected by the changed items
  util$4.forEach(this.groups,function(group){group.order();});};/**
   * Handle updated groups
   * @param {number[]} ids
   * @private
   */ItemSet.prototype._onUpdateGroups=function(ids){this._onAddGroups(ids);};/**
   * Handle changed groups (added or updated)
   * @param {number[]} ids
   * @private
   */ItemSet.prototype._onAddGroups=function(ids){var me=this;ids.forEach(function(id){var groupData=me.groupsData.get(id);var group=me.groups[id];if(!group){// check for reserved ids
  if(id==UNGROUPED||id==BACKGROUND){throw new Error('Illegal group id. '+id+' is a reserved id.');}var groupOptions=Object.create(me.options);util$4.extend(groupOptions,{height:null});group=new Group_1(id,groupData,me);me.groups[id]=group;// add items with this groupId to the new group
  for(var itemId in me.items){if(me.items.hasOwnProperty(itemId)){var item=me.items[itemId];if(item.data.group==id){group.add(item);}}}group.order();group.show();}else{// update group
  group.setData(groupData);}});this.body.emitter.emit('_change',{queue:true});};/**
   * Handle removed groups
   * @param {number[]} ids
   * @private
   */ItemSet.prototype._onRemoveGroups=function(ids){var groups=this.groups;ids.forEach(function(id){var group=groups[id];if(group){group.hide();delete groups[id];}});this.markDirty();this.body.emitter.emit('_change',{queue:true});};/**
   * Reorder the groups if needed
   * @return {boolean} changed
   * @private
   */ItemSet.prototype._orderGroups=function(){if(this.groupsData){// reorder the groups
  var groupIds=this.groupsData.getIds({order:this.options.groupOrder});groupIds=this._orderNestedGroups(groupIds);var changed=!util$4.equalArray(groupIds,this.groupIds);if(changed){// hide all groups, removes them from the DOM
  var groups=this.groups;groupIds.forEach(function(groupId){groups[groupId].hide();});// show the groups again, attach them to the DOM in correct order
  groupIds.forEach(function(groupId){groups[groupId].show();});this.groupIds=groupIds;}return changed;}else{return false;}};/**
   * Reorder the nested groups
   *
   * @param {Array.<number>} groupIds
   * @returns {Array.<number>}
   * @private
   */ItemSet.prototype._orderNestedGroups=function(groupIds){var _this=this;/**
     * Recursively order nested groups
     *
     * @param {ItemSet} t
     * @param {Array.<number>} groupIds
     * @returns {Array.<number>}
     * @private
     */function getOrderedNestedGroups(t,groupIds){var result=[];groupIds.forEach(function(groupId){result.push(groupId);var groupData=t.groupsData.get(groupId);if(groupData.nestedGroups){var nestedGroupIds=t.groupsData.get({filter:function filter(nestedGroup){return nestedGroup.nestedInGroup==groupId;},order:t.options.groupOrder}).map(function(nestedGroup){return nestedGroup.id;});result=result.concat(getOrderedNestedGroups(t,nestedGroupIds));}});return result;}var topGroupIds=groupIds.filter(function(groupId){return !_this.groupsData.get(groupId).nestedInGroup;});return getOrderedNestedGroups(this,topGroupIds);};/**
   * Add a new item
   * @param {Item} item
   * @private
   */ItemSet.prototype._addItem=function(item){this.items[item.id]=item;// add to group
  var groupId=this._getGroupId(item.data);var group=this.groups[groupId];if(!group){item.groupShowing=false;}else if(group&&group.data&&group.data.showNested){item.groupShowing=true;}if(group)group.add(item);};/**
   * Update an existing item
   * @param {Item} item
   * @param {Object} itemData
   * @private
   */ItemSet.prototype._updateItem=function(item,itemData){// update the items data (will redraw the item when displayed)
  item.setData(itemData);var groupId=this._getGroupId(item.data);var group=this.groups[groupId];if(!group){item.groupShowing=false;}else if(group&&group.data&&group.data.showNested){item.groupShowing=true;}};/**
   * Delete an item from the ItemSet: remove it from the DOM, from the map
   * with items, and from the map with visible items, and from the selection
   * @param {Item} item
   * @private
   */ItemSet.prototype._removeItem=function(item){// remove from DOM
  item.hide();// remove from items
  delete this.items[item.id];// remove from selection
  var index=this.selection.indexOf(item.id);if(index!=-1)this.selection.splice(index,1);// remove from group
  item.parent&&item.parent.remove(item);};/**
   * Create an array containing all items being a range (having an end date)
   * @param {Array.<Object>} array
   * @returns {Array}
   * @private
   */ItemSet.prototype._constructByEndArray=function(array){var endArray=[];for(var i=0;i<array.length;i++){if(array[i]instanceof RangeItem_1){endArray.push(array[i]);}}return endArray;};/**
   * Register the clicked item on touch, before dragStart is initiated.
   *
   * dragStart is initiated from a mousemove event, AFTER the mouse/touch is
   * already moving. Therefore, the mouse/touch can sometimes be above an other
   * DOM element than the item itself.
   *
   * @param {Event} event
   * @private
   */ItemSet.prototype._onTouch=function(event){// store the touched item, used in _onDragStart
  this.touchParams.item=this.itemFromTarget(event);this.touchParams.dragLeftItem=event.target.dragLeftItem||false;this.touchParams.dragRightItem=event.target.dragRightItem||false;this.touchParams.itemProps=null;};/**
   * Given an group id, returns the index it has.
   *
   * @param {number} groupId
   * @returns {number} index / groupId
   * @private
   */ItemSet.prototype._getGroupIndex=function(groupId){for(var i=0;i<this.groupIds.length;i++){if(groupId==this.groupIds[i])return i;}};/**
   * Start dragging the selected events
   * @param {Event} event
   * @private
   */ItemSet.prototype._onDragStart=function(event){if(this.touchParams.itemIsDragging){return;}var item=this.touchParams.item||null;var me=this;var props;if(item&&(item.selected||this.options.itemsAlwaysDraggable.item)){if(this.options.editable.overrideItems&&!this.options.editable.updateTime&&!this.options.editable.updateGroup){return;}// override options.editable
  if(item.editable!=null&&!item.editable.updateTime&&!item.editable.updateGroup&&!this.options.editable.overrideItems){return;}var dragLeftItem=this.touchParams.dragLeftItem;var dragRightItem=this.touchParams.dragRightItem;this.touchParams.itemIsDragging=true;this.touchParams.selectedItem=item;if(dragLeftItem){props={item:dragLeftItem,initialX:event.center.x,dragLeft:true,data:this._cloneItemData(item.data)};this.touchParams.itemProps=[props];}else if(dragRightItem){props={item:dragRightItem,initialX:event.center.x,dragRight:true,data:this._cloneItemData(item.data)};this.touchParams.itemProps=[props];}else if(this.options.editable.add&&(event.srcEvent.ctrlKey||event.srcEvent.metaKey)){// create a new range item when dragging with ctrl key down
  this._onDragStartAddItem(event);}else{if(this.groupIds.length<1){// Mitigates a race condition if _onDragStart() is
  // called after markDirty() without redraw() being called between.
  this.redraw();}var baseGroupIndex=this._getGroupIndex(item.data.group);var itemsToDrag=this.options.itemsAlwaysDraggable.item&&!item.selected?[item.id]:this.getSelection();this.touchParams.itemProps=itemsToDrag.map(function(id){var item=me.items[id];var groupIndex=me._getGroupIndex(item.data.group);return {item:item,initialX:event.center.x,groupOffset:baseGroupIndex-groupIndex,data:this._cloneItemData(item.data)};}.bind(this));}event.stopPropagation();}else if(this.options.editable.add&&(event.srcEvent.ctrlKey||event.srcEvent.metaKey)){// create a new range item when dragging with ctrl key down
  this._onDragStartAddItem(event);}};/**
   * Start creating a new range item by dragging.
   * @param {Event} event
   * @private
   */ItemSet.prototype._onDragStartAddItem=function(event){var xAbs;var x;var snap=this.options.snap||null;if(this.options.rtl){xAbs=util$4.getAbsoluteRight(this.dom.frame);x=xAbs-event.center.x+10;// plus 10 to compensate for the drag starting as soon as you've moved 10px
  }else{xAbs=util$4.getAbsoluteLeft(this.dom.frame);x=event.center.x-xAbs-10;// minus 10 to compensate for the drag starting as soon as you've moved 10px
  }var time=this.body.util.toTime(x);var scale=this.body.util.getScale();var step=this.body.util.getStep();var start=snap?snap(time,scale,step):time;var end=start;var itemData={type:'range',start:start,end:end,content:'new item'};var id=util$4.randomUUID();itemData[this.itemsData._fieldId]=id;var group=this.groupFromTarget(event);if(group){itemData.group=group.groupId;}var newItem=new RangeItem_1(itemData,this.conversion,this.options);newItem.id=id;// TODO: not so nice setting id afterwards
  newItem.data=this._cloneItemData(itemData);this._addItem(newItem);this.touchParams.selectedItem=newItem;var props={item:newItem,initialX:event.center.x,data:newItem.data};if(this.options.rtl){props.dragLeft=true;}else{props.dragRight=true;}this.touchParams.itemProps=[props];event.stopPropagation();};/**
   * Drag selected items
   * @param {Event} event
   * @private
   */ItemSet.prototype._onDrag=function(event){// deactivate tooltip window
  this.clearPopupTimer();if(this.popup!=null){this.popup.hide();}if(this.touchParams.itemProps){event.stopPropagation();var me=this;var snap=this.options.snap||null;var xOffset;if(this.options.rtl){xOffset=this.body.dom.root.offsetLeft+this.body.domProps.right.width;}else{xOffset=this.body.dom.root.offsetLeft+this.body.domProps.left.width;}var scale=this.body.util.getScale();var step=this.body.util.getStep();//only calculate the new group for the item that's actually dragged
  var selectedItem=this.touchParams.selectedItem;var updateGroupAllowed=(this.options.editable.overrideItems||selectedItem.editable==null)&&this.options.editable.updateGroup||!this.options.editable.overrideItems&&selectedItem.editable!=null&&selectedItem.editable.updateGroup;var newGroupBase=null;if(updateGroupAllowed&&selectedItem){if(selectedItem.data.group!=undefined){// drag from one group to another
  var group=me.groupFromTarget(event);if(group){//we know the offset for all items, so the new group for all items
  //will be relative to this one.
  newGroupBase=this._getGroupIndex(group.groupId);}}}// move
  this.touchParams.itemProps.forEach(function(props){var current=me.body.util.toTime(event.center.x-xOffset);var initial=me.body.util.toTime(props.initialX-xOffset);var offset;var initialStart;var initialEnd;var start;var end;if(this.options.rtl){offset=-(current-initial);// ms
  }else{offset=current-initial;// ms
  }var itemData=this._cloneItemData(props.item.data);// clone the data
  if(props.item.editable!=null&&!props.item.editable.updateTime&&!props.item.editable.updateGroup&&!me.options.editable.overrideItems){return;}var updateTimeAllowed=(this.options.editable.overrideItems||selectedItem.editable==null)&&this.options.editable.updateTime||!this.options.editable.overrideItems&&selectedItem.editable!=null&&selectedItem.editable.updateTime;if(updateTimeAllowed){if(props.dragLeft){// drag left side of a range item
  if(this.options.rtl){if(itemData.end!=undefined){initialEnd=util$4.convert(props.data.end,'Date');end=new Date(initialEnd.valueOf()+offset);// TODO: pass a Moment instead of a Date to snap(). (Breaking change)
  itemData.end=snap?snap(end,scale,step):end;}}else{if(itemData.start!=undefined){initialStart=util$4.convert(props.data.start,'Date');start=new Date(initialStart.valueOf()+offset);// TODO: pass a Moment instead of a Date to snap(). (Breaking change)
  itemData.start=snap?snap(start,scale,step):start;}}}else if(props.dragRight){// drag right side of a range item
  if(this.options.rtl){if(itemData.start!=undefined){initialStart=util$4.convert(props.data.start,'Date');start=new Date(initialStart.valueOf()+offset);// TODO: pass a Moment instead of a Date to snap(). (Breaking change)
  itemData.start=snap?snap(start,scale,step):start;}}else{if(itemData.end!=undefined){initialEnd=util$4.convert(props.data.end,'Date');end=new Date(initialEnd.valueOf()+offset);// TODO: pass a Moment instead of a Date to snap(). (Breaking change)
  itemData.end=snap?snap(end,scale,step):end;}}}else{// drag both start and end
  if(itemData.start!=undefined){initialStart=util$4.convert(props.data.start,'Date').valueOf();start=new Date(initialStart+offset);if(itemData.end!=undefined){initialEnd=util$4.convert(props.data.end,'Date');var duration=initialEnd.valueOf()-initialStart.valueOf();// TODO: pass a Moment instead of a Date to snap(). (Breaking change)
  itemData.start=snap?snap(start,scale,step):start;itemData.end=new Date(itemData.start.valueOf()+duration);}else{// TODO: pass a Moment instead of a Date to snap(). (Breaking change)
  itemData.start=snap?snap(start,scale,step):start;}}}}if(updateGroupAllowed&&!props.dragLeft&&!props.dragRight&&newGroupBase!=null){if(itemData.group!=undefined){var newOffset=newGroupBase-props.groupOffset;//make sure we stay in bounds
  newOffset=Math.max(0,newOffset);newOffset=Math.min(me.groupIds.length-1,newOffset);itemData.group=me.groupIds[newOffset];}}// confirm moving the item
  itemData=this._cloneItemData(itemData);// convert start and end to the correct type
  me.options.onMoving(itemData,function(itemData){if(itemData){props.item.setData(this._cloneItemData(itemData,'Date'));}}.bind(this));}.bind(this));this.body.emitter.emit('_change');}};/**
   * Move an item to another group
   * @param {Item} item
   * @param {string | number} groupId
   * @private
   */ItemSet.prototype._moveToGroup=function(item,groupId){var group=this.groups[groupId];if(group&&group.groupId!=item.data.group){var oldGroup=item.parent;oldGroup.remove(item);oldGroup.order();item.data.group=group.groupId;group.add(item);group.order();}};/**
   * End of dragging selected items
   * @param {Event} event
   * @private
   */ItemSet.prototype._onDragEnd=function(event){this.touchParams.itemIsDragging=false;if(this.touchParams.itemProps){event.stopPropagation();var me=this;var dataset=this.itemsData.getDataSet();var itemProps=this.touchParams.itemProps;this.touchParams.itemProps=null;itemProps.forEach(function(props){var id=props.item.id;var exists=me.itemsData.get(id,me.itemOptions)!=null;if(!exists){// add a new item
  me.options.onAdd(props.item.data,function(itemData){me._removeItem(props.item);// remove temporary item
  if(itemData){me.itemsData.getDataSet().add(itemData);}// force re-stacking of all items next redraw
  me.body.emitter.emit('_change');});}else{// update existing item
  var itemData=this._cloneItemData(props.item.data);// convert start and end to the correct type
  me.options.onMove(itemData,function(itemData){if(itemData){// apply changes
  itemData[dataset._fieldId]=id;// ensure the item contains its id (can be undefined)
  dataset.update(itemData);}else{// restore original values
  props.item.setData(props.data);me.body.emitter.emit('_change');}});}}.bind(this));}};ItemSet.prototype._onGroupClick=function(event){var group=this.groupFromTarget(event);if(!group||!group.nestedGroups)return;var groupsData=this.groupsData.getDataSet();var nestingGroup=groupsData.get(group.groupId);if(nestingGroup.showNested==undefined){nestingGroup.showNested=true;}nestingGroup.showNested=!nestingGroup.showNested;var nestedGroups=groupsData.get(group.nestedGroups).map(function(nestedGroup){nestedGroup.visible=nestingGroup.showNested;return nestedGroup;});groupsData.update(nestedGroups.concat(nestingGroup));if(nestingGroup.showNested){util$4.removeClassName(group.dom.label,'collapsed');util$4.addClassName(group.dom.label,'expanded');}else{util$4.removeClassName(group.dom.label,'expanded');var collapsedDirClassName=this.options.rtl?'collapsed-rtl':'collapsed';util$4.addClassName(group.dom.label,collapsedDirClassName);}};ItemSet.prototype._onGroupDragStart=function(event){if(this.options.groupEditable.order){this.groupTouchParams.group=this.groupFromTarget(event);if(this.groupTouchParams.group){event.stopPropagation();this.groupTouchParams.originalOrder=this.groupsData.getIds({order:this.options.groupOrder});}}};ItemSet.prototype._onGroupDrag=function(event){if(this.options.groupEditable.order&&this.groupTouchParams.group){event.stopPropagation();var groupsData=this.groupsData;if(this.groupsData instanceof DataView$4){groupsData=this.groupsData.getDataSet();}// drag from one group to another
  var group=this.groupFromTarget(event);// try to avoid toggling when groups differ in height
  if(group&&group.height!=this.groupTouchParams.group.height){var movingUp=group.top<this.groupTouchParams.group.top;var clientY=event.center?event.center.y:event.clientY;var targetGroupTop=util$4.getAbsoluteTop(group.dom.foreground);var draggedGroupHeight=this.groupTouchParams.group.height;if(movingUp){// skip swapping the groups when the dragged group is not below clientY afterwards
  if(targetGroupTop+draggedGroupHeight<clientY){return;}}else{var targetGroupHeight=group.height;// skip swapping the groups when the dragged group is not below clientY afterwards
  if(targetGroupTop+targetGroupHeight-draggedGroupHeight>clientY){return;}}}if(group&&group!=this.groupTouchParams.group){var targetGroup=groupsData.get(group.groupId);var draggedGroup=groupsData.get(this.groupTouchParams.group.groupId);// switch groups
  if(draggedGroup&&targetGroup){this.options.groupOrderSwap(draggedGroup,targetGroup,groupsData);groupsData.update(draggedGroup);groupsData.update(targetGroup);}// fetch current order of groups
  var newOrder=groupsData.getIds({order:this.options.groupOrder});// in case of changes since _onGroupDragStart
  if(!util$4.equalArray(newOrder,this.groupTouchParams.originalOrder)){var origOrder=this.groupTouchParams.originalOrder;var draggedId=this.groupTouchParams.group.groupId;var numGroups=Math.min(origOrder.length,newOrder.length);var curPos=0;var newOffset=0;var orgOffset=0;while(curPos<numGroups){// as long as the groups are where they should be step down along the groups order
  while(curPos+newOffset<numGroups&&curPos+orgOffset<numGroups&&newOrder[curPos+newOffset]==origOrder[curPos+orgOffset]){curPos++;}// all ok
  if(curPos+newOffset>=numGroups){break;}// not all ok
  // if dragged group was move upwards everything below should have an offset
  if(newOrder[curPos+newOffset]==draggedId){newOffset=1;}// if dragged group was move downwards everything above should have an offset
  else if(origOrder[curPos+orgOffset]==draggedId){orgOffset=1;}// found a group (apart from dragged group) that has the wrong position -> switch with the 
  // group at the position where other one should be, fix index arrays and continue
  else{var slippedPosition=newOrder.indexOf(origOrder[curPos+orgOffset]);var switchGroup=groupsData.get(newOrder[curPos+newOffset]);var shouldBeGroup=groupsData.get(origOrder[curPos+orgOffset]);this.options.groupOrderSwap(switchGroup,shouldBeGroup,groupsData);groupsData.update(switchGroup);groupsData.update(shouldBeGroup);var switchGroupId=newOrder[curPos+newOffset];newOrder[curPos+newOffset]=origOrder[curPos+orgOffset];newOrder[slippedPosition]=switchGroupId;curPos++;}}}}}};ItemSet.prototype._onGroupDragEnd=function(event){if(this.options.groupEditable.order&&this.groupTouchParams.group){event.stopPropagation();// update existing group
  var me=this;var id=me.groupTouchParams.group.groupId;var dataset=me.groupsData.getDataSet();var groupData=util$4.extend({},dataset.get(id));// clone the data
  me.options.onMoveGroup(groupData,function(groupData){if(groupData){// apply changes
  groupData[dataset._fieldId]=id;// ensure the group contains its id (can be undefined)
  dataset.update(groupData);}else{// fetch current order of groups
  var newOrder=dataset.getIds({order:me.options.groupOrder});// restore original order
  if(!util$4.equalArray(newOrder,me.groupTouchParams.originalOrder)){var origOrder=me.groupTouchParams.originalOrder;var numGroups=Math.min(origOrder.length,newOrder.length);var curPos=0;while(curPos<numGroups){// as long as the groups are where they should be step down along the groups order
  while(curPos<numGroups&&newOrder[curPos]==origOrder[curPos]){curPos++;}// all ok
  if(curPos>=numGroups){break;}// found a group that has the wrong position -> switch with the
  // group at the position where other one should be, fix index arrays and continue
  var slippedPosition=newOrder.indexOf(origOrder[curPos]);var switchGroup=dataset.get(newOrder[curPos]);var shouldBeGroup=dataset.get(origOrder[curPos]);me.options.groupOrderSwap(switchGroup,shouldBeGroup,dataset);dataset.update(switchGroup);dataset.update(shouldBeGroup);var switchGroupId=newOrder[curPos];newOrder[curPos]=origOrder[curPos];newOrder[slippedPosition]=switchGroupId;curPos++;}}}});me.body.emitter.emit('groupDragged',{groupId:id});}};/**
   * Handle selecting/deselecting an item when tapping it
   * @param {Event} event
   * @private
   */ItemSet.prototype._onSelectItem=function(event){if(!this.options.selectable)return;var ctrlKey=event.srcEvent&&(event.srcEvent.ctrlKey||event.srcEvent.metaKey);var shiftKey=event.srcEvent&&event.srcEvent.shiftKey;if(ctrlKey||shiftKey){this._onMultiSelectItem(event);return;}var oldSelection=this.getSelection();var item=this.itemFromTarget(event);var selection=item?[item.id]:[];this.setSelection(selection);var newSelection=this.getSelection();// emit a select event,
  // except when old selection is empty and new selection is still empty
  if(newSelection.length>0||oldSelection.length>0){this.body.emitter.emit('select',{items:newSelection,event:event});}};/**
   * Handle hovering an item
   * @param {Event} event
   * @private
   */ItemSet.prototype._onMouseOver=function(event){var item=this.itemFromTarget(event);if(!item)return;// Item we just left
  var related=this.itemFromRelatedTarget(event);if(item===related){// We haven't changed item, just element in the item
  return;}var title=item.getTitle();if(this.options.showTooltips&&title){if(this.popup==null){this.popup=new Popup$1(this.body.dom.root,this.options.tooltip.overflowMethod||'flip');}this.popup.setText(title);var container=this.body.dom.centerContainer;this.popup.setPosition(event.clientX-util$4.getAbsoluteLeft(container)+container.offsetLeft,event.clientY-util$4.getAbsoluteTop(container)+container.offsetTop);this.setPopupTimer(this.popup);}else{// Hovering over item without a title, hide popup
  // Needed instead of _just_ in _onMouseOut due to #2572
  this.clearPopupTimer();if(this.popup!=null){this.popup.hide();}}this.body.emitter.emit('itemover',{item:item.id,event:event});};ItemSet.prototype._onMouseOut=function(event){var item=this.itemFromTarget(event);if(!item)return;// Item we are going to
  var related=this.itemFromRelatedTarget(event);if(item===related){// We aren't changing item, just element in the item
  return;}this.clearPopupTimer();if(this.popup!=null){this.popup.hide();}this.body.emitter.emit('itemout',{item:item.id,event:event});};ItemSet.prototype._onMouseMove=function(event){var item=this.itemFromTarget(event);if(!item)return;if(this.popupTimer!=null){// restart timer
  this.setPopupTimer(this.popup);}if(this.options.showTooltips&&this.options.tooltip.followMouse){if(this.popup){if(!this.popup.hidden){var container=this.body.dom.centerContainer;this.popup.setPosition(event.clientX-util$4.getAbsoluteLeft(container)+container.offsetLeft,event.clientY-util$4.getAbsoluteTop(container)+container.offsetTop);this.popup.show();// Redraw
  }}}};/**
   * Handle mousewheel
   * @param {Event}  event   The event
   * @private
   */ItemSet.prototype._onMouseWheel=function(event){if(this.touchParams.itemIsDragging){this._onDragEnd(event);}};/**
   * Handle updates of an item on double tap
   * @param {vis.Item}  item   The item
   * @private
   */ItemSet.prototype._onUpdateItem=function(item){if(!this.options.selectable)return;if(!this.options.editable.add)return;var me=this;if(item){// execute async handler to update the item (or cancel it)
  var itemData=me.itemsData.get(item.id);// get a clone of the data from the dataset
  this.options.onUpdate(itemData,function(itemData){if(itemData){me.itemsData.getDataSet().update(itemData);}});}};/**
   * Handle drop event of data on item
   * Only called when `objectData.target === 'item'.
   * @param {Event} event The event 
   * @private
   */ItemSet.prototype._onDropObjectOnItem=function(event){var item=this.itemFromTarget(event);var objectData=JSON.parse(event.dataTransfer.getData("text"));this.options.onDropObjectOnItem(objectData,item);};/**
   * Handle creation of an item on double tap or drop of a drag event
   * @param {Event} event   The event
   * @private
   */ItemSet.prototype._onAddItem=function(event){if(!this.options.selectable)return;if(!this.options.editable.add)return;var me=this;var snap=this.options.snap||null;var xAbs;var x;// add item
  if(this.options.rtl){xAbs=util$4.getAbsoluteRight(this.dom.frame);x=xAbs-event.center.x;}else{xAbs=util$4.getAbsoluteLeft(this.dom.frame);x=event.center.x-xAbs;}// var xAbs = util.getAbsoluteLeft(this.dom.frame);
  // var x = event.center.x - xAbs;
  var start=this.body.util.toTime(x);var scale=this.body.util.getScale();var step=this.body.util.getStep();var end;var newItemData;if(event.type=='drop'){newItemData=JSON.parse(event.dataTransfer.getData("text"));newItemData.content=newItemData.content?newItemData.content:'new item';newItemData.start=newItemData.start?newItemData.start:snap?snap(start,scale,step):start;newItemData.type=newItemData.type||'box';newItemData[this.itemsData._fieldId]=newItemData.id||util$4.randomUUID();if(newItemData.type=='range'&&!newItemData.end){end=this.body.util.toTime(x+this.props.width/5);newItemData.end=snap?snap(end,scale,step):end;}}else{newItemData={start:snap?snap(start,scale,step):start,content:'new item'};newItemData[this.itemsData._fieldId]=util$4.randomUUID();// when default type is a range, add a default end date to the new item
  if(this.options.type==='range'){end=this.body.util.toTime(x+this.props.width/5);newItemData.end=snap?snap(end,scale,step):end;}}var group=this.groupFromTarget(event);if(group){newItemData.group=group.groupId;}// execute async handler to customize (or cancel) adding an item
  newItemData=this._cloneItemData(newItemData);// convert start and end to the correct type
  this.options.onAdd(newItemData,function(item){if(item){me.itemsData.getDataSet().add(item);if(event.type=='drop'){me.setSelection([item.id]);}// TODO: need to trigger a redraw?
  }});};/**
   * Handle selecting/deselecting multiple items when holding an item
   * @param {Event} event
   * @private
   */ItemSet.prototype._onMultiSelectItem=function(event){if(!this.options.selectable)return;var item=this.itemFromTarget(event);if(item){// multi select items (if allowed)
  var selection=this.options.multiselect?this.getSelection()// take current selection
  :[];// deselect current selection
  var shiftKey=event.srcEvent&&event.srcEvent.shiftKey||false;if(shiftKey&&this.options.multiselect){// select all items between the old selection and the tapped item
  var itemGroup=this.itemsData.get(item.id).group;// when filtering get the group of the last selected item
  var lastSelectedGroup=undefined;if(this.options.multiselectPerGroup){if(selection.length>0){lastSelectedGroup=this.itemsData.get(selection[0]).group;}}// determine the selection range
  if(!this.options.multiselectPerGroup||lastSelectedGroup==undefined||lastSelectedGroup==itemGroup){selection.push(item.id);}var range=ItemSet._getItemRange(this.itemsData.get(selection,this.itemOptions));if(!this.options.multiselectPerGroup||lastSelectedGroup==itemGroup){// select all items within the selection range
  selection=[];for(var id in this.items){if(this.items.hasOwnProperty(id)){var _item=this.items[id];var start=_item.data.start;var end=_item.data.end!==undefined?_item.data.end:start;if(start>=range.min&&end<=range.max&&(!this.options.multiselectPerGroup||lastSelectedGroup==this.itemsData.get(_item.id).group)&&!(_item instanceof BackgroundItem_1)){selection.push(_item.id);// do not use id but item.id, id itself is stringified
  }}}}}else{// add/remove this item from the current selection
  var index=selection.indexOf(item.id);if(index==-1){// item is not yet selected -> select it
  selection.push(item.id);}else{// item is already selected -> deselect it
  selection.splice(index,1);}}this.setSelection(selection);this.body.emitter.emit('select',{items:this.getSelection(),event:event});}};/**
   * Calculate the time range of a list of items
   * @param {Array.<Object>} itemsData
   * @return {{min: Date, max: Date}} Returns the range of the provided items
   * @private
   */ItemSet._getItemRange=function(itemsData){var max=null;var min=null;itemsData.forEach(function(data){if(min==null||data.start<min){min=data.start;}if(data.end!=undefined){if(max==null||data.end>max){max=data.end;}}else{if(max==null||data.start>max){max=data.start;}}});return {min:min,max:max};};/**
   * Find an item from an element:
   * searches for the attribute 'timeline-item' in the element's tree
   * @param {HTMLElement} element
   * @return {Item | null} item
   */ItemSet.prototype.itemFromElement=function(element){var cur=element;while(cur){if(cur.hasOwnProperty('timeline-item')){return cur['timeline-item'];}cur=cur.parentNode;}return null;};/**
   * Find an item from an event target:
   * searches for the attribute 'timeline-item' in the event target's element tree
   * @param {Event} event
   * @return {Item | null} item
   */ItemSet.prototype.itemFromTarget=function(event){return this.itemFromElement(event.target);};/**
   * Find an item from an event's related target:
   * searches for the attribute 'timeline-item' in the related target's element tree
   * @param {Event} event
   * @return {Item | null} item
   */ItemSet.prototype.itemFromRelatedTarget=function(event){return this.itemFromElement(event.relatedTarget);};/**
   * Find the Group from an event target:
   * searches for the attribute 'timeline-group' in the event target's element tree
   * @param {Event} event
   * @return {Group | null} group
   */ItemSet.prototype.groupFromTarget=function(event){var clientY=event.center?event.center.y:event.clientY;var groupIds=this.groupIds;if(groupIds.length<=0&&this.groupsData){groupIds=this.groupsData.getIds({order:this.options.groupOrder});}for(var i=0;i<groupIds.length;i++){var groupId=groupIds[i];var group=this.groups[groupId];var foreground=group.dom.foreground;var top=util$4.getAbsoluteTop(foreground);if(clientY>=top&&clientY<top+foreground.offsetHeight){return group;}if(this.options.orientation.item==='top'){if(i===this.groupIds.length-1&&clientY>top){return group;}}else{if(i===0&&clientY<top+foreground.offset){return group;}}}return null;};/**
   * Find the ItemSet from an event target:
   * searches for the attribute 'timeline-itemset' in the event target's element tree
   * @param {Event} event
   * @return {ItemSet | null} item
   */ItemSet.itemSetFromTarget=function(event){var target=event.target;while(target){if(target.hasOwnProperty('timeline-itemset')){return target['timeline-itemset'];}target=target.parentNode;}return null;};/**
   * Clone the data of an item, and "normalize" it: convert the start and end date
   * to the type (Date, Moment, ...) configured in the DataSet. If not configured,
   * start and end are converted to Date.
   * @param {Object} itemData, typically `item.data`
   * @param {string} [type]  Optional Date type. If not provided, the type from the DataSet is taken
   * @return {Object} The cloned object
   * @private
   */ItemSet.prototype._cloneItemData=function(itemData,type){var clone=util$4.extend({},itemData);if(!type){// convert start and end date to the type (Date, Moment, ...) configured in the DataSet
  type=this.itemsData.getDataSet()._options.type;}if(clone.start!=undefined){clone.start=util$4.convert(clone.start,type&&type.start||'Date');}if(clone.end!=undefined){clone.end=util$4.convert(clone.end,type&&type.end||'Date');}return clone;};var errorFound$2=false;var allOptions$4;var printStyle$2='background: #FFeeee; color: #dd0000';/**
   *  Used to validate options.
   */var Validator$3=/*#__PURE__*/function(){/**
     * @ignore
     */function Validator(){_classCallCheck$1$2(this,Validator);}/**
     * Main function to be called
     * @param {Object} options
     * @param {Object} referenceOptions
     * @param {Object} subObject
     * @returns {boolean}
     * @static
     */_createClass$1$2(Validator,null,[{key:"validate",value:function validate(options,referenceOptions,subObject){errorFound$2=false;allOptions$4=referenceOptions;var usedOptions=referenceOptions;if(subObject!==undefined){usedOptions=referenceOptions[subObject];}Validator.parse(options,usedOptions,[]);return errorFound$2;}/**
       * Will traverse an object recursively and check every value
       * @param {Object} options
       * @param {Object} referenceOptions
       * @param {array} path    | where to look for the actual option
       * @static
       */},{key:"parse",value:function parse(options,referenceOptions,path){for(var option in options){if(options.hasOwnProperty(option)){Validator.check(option,options,referenceOptions,path);}}}/**
       * Check every value. If the value is an object, call the parse function on that object.
       * @param {string} option
       * @param {Object} options
       * @param {Object} referenceOptions
       * @param {array} path    | where to look for the actual option
       * @static
       */},{key:"check",value:function check(option,options,referenceOptions,path){if(referenceOptions[option]===undefined&&referenceOptions.__any__===undefined){Validator.getSuggestion(option,referenceOptions,path);return;}var referenceOption=option;var is_object=true;if(referenceOptions[option]===undefined&&referenceOptions.__any__!==undefined){// NOTE: This only triggers if the __any__ is in the top level of the options object.
  //       THAT'S A REALLY BAD PLACE TO ALLOW IT!!!!
  // TODO: Examine if needed, remove if possible
  // __any__ is a wildcard. Any value is accepted and will be further analysed by reference.
  referenceOption='__any__';// if the any-subgroup is not a predefined object in the configurator,
  // we do not look deeper into the object.
  is_object=Validator.getType(options[option])==='object';}var refOptionObj=referenceOptions[referenceOption];if(is_object&&refOptionObj.__type__!==undefined){refOptionObj=refOptionObj.__type__;}Validator.checkFields(option,options,referenceOptions,referenceOption,refOptionObj,path);}/**
       *
       * @param {string}  option           | the option property
       * @param {Object}  options          | The supplied options object
       * @param {Object}  referenceOptions | The reference options containing all options and their allowed formats
       * @param {string}  referenceOption  | Usually this is the same as option, except when handling an __any__ tag.
       * @param {string}  refOptionObj     | This is the type object from the reference options
       * @param {Array}   path             | where in the object is the option
       * @static
       */},{key:"checkFields",value:function checkFields(option,options,referenceOptions,referenceOption,refOptionObj,path){var log=function log(message){console.log('%c'+message+Validator.printLocation(path,option),printStyle$2);};var optionType=Validator.getType(options[option]);var refOptionType=refOptionObj[optionType];if(refOptionType!==undefined){// if the type is correct, we check if it is supposed to be one of a few select values
  if(Validator.getType(refOptionType)==='array'&&refOptionType.indexOf(options[option])===-1){log('Invalid option detected in "'+option+'".'+' Allowed values are:'+Validator.print(refOptionType)+' not "'+options[option]+'". ');errorFound$2=true;}else if(optionType==='object'&&referenceOption!=="__any__"){path=util$4.copyAndExtendArray(path,option);Validator.parse(options[option],referenceOptions[referenceOption],path);}}else if(refOptionObj['any']===undefined){// type of the field is incorrect and the field cannot be any
  log('Invalid type received for "'+option+'". Expected: '+Validator.print(Object.keys(refOptionObj))+'. Received ['+optionType+'] "'+options[option]+'"');errorFound$2=true;}}/**
       *
       * @param {Object|boolean|number|string|Array.<number>|Date|Node|Moment|undefined|null} object
       * @returns {string}
       * @static
       */},{key:"getType",value:function getType(object){var type=_typeof$1$2(object);if(type==='object'){if(object===null){return 'null';}if(object instanceof Boolean){return 'boolean';}if(object instanceof Number){return 'number';}if(object instanceof String){return 'string';}if(Array.isArray(object)){return 'array';}if(object instanceof Date){return 'date';}if(object.nodeType!==undefined){return 'dom';}if(object._isAMomentObject===true){return 'moment';}return 'object';}else if(type==='number'){return 'number';}else if(type==='boolean'){return 'boolean';}else if(type==='string'){return 'string';}else if(type===undefined){return 'undefined';}return type;}/**
       * @param {string} option
       * @param {Object} options
       * @param {Array.<string>} path
       * @static
       */},{key:"getSuggestion",value:function getSuggestion(option,options,path){var localSearch=Validator.findInOptions(option,options,path,false);var globalSearch=Validator.findInOptions(option,allOptions$4,[],true);var localSearchThreshold=8;var globalSearchThreshold=4;var msg;if(localSearch.indexMatch!==undefined){msg=' in '+Validator.printLocation(localSearch.path,option,'')+'Perhaps it was incomplete? Did you mean: "'+localSearch.indexMatch+'"?\n\n';}else if(globalSearch.distance<=globalSearchThreshold&&localSearch.distance>globalSearch.distance){msg=' in '+Validator.printLocation(localSearch.path,option,'')+'Perhaps it was misplaced? Matching option found at: '+Validator.printLocation(globalSearch.path,globalSearch.closestMatch,'');}else if(localSearch.distance<=localSearchThreshold){msg='. Did you mean "'+localSearch.closestMatch+'"?'+Validator.printLocation(localSearch.path,option);}else{msg='. Did you mean one of these: '+Validator.print(Object.keys(options))+Validator.printLocation(path,option);}console.log('%cUnknown option detected: "'+option+'"'+msg,printStyle$2);errorFound$2=true;}/**
       * traverse the options in search for a match.
       * @param {string} option
       * @param {Object} options
       * @param {Array} path    | where to look for the actual option
       * @param {boolean} [recursive=false]
       * @returns {{closestMatch: string, path: Array, distance: number}}
       * @static
       */},{key:"findInOptions",value:function findInOptions(option,options,path){var recursive=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var min=1e9;var closestMatch='';var closestMatchPath=[];var lowerCaseOption=option.toLowerCase();var indexMatch=undefined;for(var op in options){// eslint-disable-line guard-for-in
  var distance=void 0;if(options[op].__type__!==undefined&&recursive===true){var result=Validator.findInOptions(option,options[op],util$4.copyAndExtendArray(path,op));if(min>result.distance){closestMatch=result.closestMatch;closestMatchPath=result.path;min=result.distance;indexMatch=result.indexMatch;}}else{if(op.toLowerCase().indexOf(lowerCaseOption)!==-1){indexMatch=op;}distance=Validator.levenshteinDistance(option,op);if(min>distance){closestMatch=op;closestMatchPath=util$4.copyArray(path);min=distance;}}}return {closestMatch:closestMatch,path:closestMatchPath,distance:min,indexMatch:indexMatch};}/**
       * @param {Array.<string>} path
       * @param {Object} option
       * @param {string} prefix
       * @returns {String}
       * @static
       */},{key:"printLocation",value:function printLocation(path,option){var prefix=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'Problem value found at: \n';var str='\n\n'+prefix+'options = {\n';for(var i=0;i<path.length;i++){for(var j=0;j<i+1;j++){str+='  ';}str+=path[i]+': {\n';}for(var _j=0;_j<path.length+1;_j++){str+='  ';}str+=option+'\n';for(var _i=0;_i<path.length+1;_i++){for(var _j2=0;_j2<path.length-_i;_j2++){str+='  ';}str+='}\n';}return str+'\n\n';}/**
       * @param {Object} options
       * @returns {String}
       * @static
       */},{key:"print",value:function print(options){return JSON.stringify(options).replace(/(\")|(\[)|(\])|(,"__type__")/g,"").replace(/(\,)/g,', ');}/**
       *  Compute the edit distance between the two given strings
       * http://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance#JavaScript
       *
       * Copyright (c) 2011 Andrei Mackenzie
       *
       * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
       *
       * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
       *
       * @param {string} a
       * @param {string} b
       * @returns {Array.<Array.<number>>}}
       * @static
       */},{key:"levenshteinDistance",value:function levenshteinDistance(a,b){if(a.length===0)return b.length;if(b.length===0)return a.length;var matrix=[];// increment along the first column of each row
  var i;for(i=0;i<=b.length;i++){matrix[i]=[i];}// increment each column in the first row
  var j;for(j=0;j<=a.length;j++){matrix[0][j]=j;}// Fill in the rest of the matrix
  for(i=1;i<=b.length;i++){for(j=1;j<=a.length;j++){if(b.charAt(i-1)==a.charAt(j-1)){matrix[i][j]=matrix[i-1][j-1];}else{matrix[i][j]=Math.min(matrix[i-1][j-1]+1,// substitution
  Math.min(matrix[i][j-1]+1,// insertion
  matrix[i-1][j]+1));// deletion
  }}}return matrix[b.length][a.length];}}]);return Validator;}();var Validator$1$2=/*#__PURE__*/Object.freeze({Validator:Validator$3,printStyle:printStyle$2});/**
   * This object contains all possible options. It will check if the types are correct, if required if the option is one
   * of the allowed values.
   *
   * __any__ means that the name of the property does not matter.
   * __type__ is a required field for all objects and contains the allowed types of all objects
   */var string$2='string';var bool$2='boolean';var number$2='number';var array$1='array';var date='date';var object$2='object';// should only be in a __type__ property
  var dom$1='dom';var moment$4$1='moment';var any$1='any';var allOptions$1$2={configure:{enabled:{'boolean':bool$2},filter:{'boolean':bool$2,'function':'function'},container:{dom:dom$1},__type__:{object:object$2,'boolean':bool$2,'function':'function'}},//globals :
  align:{string:string$2},alignCurrentTime:{string:string$2,'undefined':'undefined'},rtl:{'boolean':bool$2,'undefined':'undefined'},rollingMode:{follow:{'boolean':bool$2},offset:{number:number$2,'undefined':'undefined'},__type__:{object:object$2}},onTimeout:{timeoutMs:{number:number$2},callback:{'function':'function'},__type__:{object:object$2}},verticalScroll:{'boolean':bool$2,'undefined':'undefined'},horizontalScroll:{'boolean':bool$2,'undefined':'undefined'},autoResize:{'boolean':bool$2},throttleRedraw:{number:number$2},// TODO: DEPRICATED see https://github.com/almende/vis/issues/2511
  clickToUse:{'boolean':bool$2},dataAttributes:{string:string$2,array:array$1},editable:{add:{'boolean':bool$2,'undefined':'undefined'},remove:{'boolean':bool$2,'undefined':'undefined'},updateGroup:{'boolean':bool$2,'undefined':'undefined'},updateTime:{'boolean':bool$2,'undefined':'undefined'},overrideItems:{'boolean':bool$2,'undefined':'undefined'},__type__:{'boolean':bool$2,object:object$2}},end:{number:number$2,date:date,string:string$2,moment:moment$4$1},format:{minorLabels:{millisecond:{string:string$2,'undefined':'undefined'},second:{string:string$2,'undefined':'undefined'},minute:{string:string$2,'undefined':'undefined'},hour:{string:string$2,'undefined':'undefined'},weekday:{string:string$2,'undefined':'undefined'},day:{string:string$2,'undefined':'undefined'},week:{string:string$2,'undefined':'undefined'},month:{string:string$2,'undefined':'undefined'},quarter:{string:string$2,'undefined':'undefined'},year:{string:string$2,'undefined':'undefined'},__type__:{object:object$2,'function':'function'}},majorLabels:{millisecond:{string:string$2,'undefined':'undefined'},second:{string:string$2,'undefined':'undefined'},minute:{string:string$2,'undefined':'undefined'},hour:{string:string$2,'undefined':'undefined'},weekday:{string:string$2,'undefined':'undefined'},day:{string:string$2,'undefined':'undefined'},week:{string:string$2,'undefined':'undefined'},month:{string:string$2,'undefined':'undefined'},quarter:{string:string$2,'undefined':'undefined'},year:{string:string$2,'undefined':'undefined'},__type__:{object:object$2,'function':'function'}},__type__:{object:object$2}},moment:{'function':'function'},groupHeightMode:{string:string$2},groupLabelDirection:{string:string$2},groupOrder:{string:string$2,'function':'function'},groupEditable:{add:{'boolean':bool$2,'undefined':'undefined'},remove:{'boolean':bool$2,'undefined':'undefined'},order:{'boolean':bool$2,'undefined':'undefined'},__type__:{'boolean':bool$2,object:object$2}},groupOrderSwap:{'function':'function'},height:{string:string$2,number:number$2},hiddenDates:{start:{date:date,number:number$2,string:string$2,moment:moment$4$1},end:{date:date,number:number$2,string:string$2,moment:moment$4$1},repeat:{string:string$2},__type__:{object:object$2,array:array$1}},itemsAlwaysDraggable:{item:{'boolean':bool$2,'undefined':'undefined'},range:{'boolean':bool$2,'undefined':'undefined'},__type__:{'boolean':bool$2,object:object$2}},limitSize:{'boolean':bool$2},locale:{string:string$2},locales:{__any__:{any:any$1},__type__:{object:object$2}},margin:{axis:{number:number$2},item:{horizontal:{number:number$2,'undefined':'undefined'},vertical:{number:number$2,'undefined':'undefined'},__type__:{object:object$2,number:number$2}},__type__:{object:object$2,number:number$2}},max:{date:date,number:number$2,string:string$2,moment:moment$4$1},maxHeight:{number:number$2,string:string$2},maxMinorChars:{number:number$2},min:{date:date,number:number$2,string:string$2,moment:moment$4$1},minHeight:{number:number$2,string:string$2},moveable:{'boolean':bool$2},multiselect:{'boolean':bool$2},multiselectPerGroup:{'boolean':bool$2},onAdd:{'function':'function'},onDropObjectOnItem:{'function':'function'},onUpdate:{'function':'function'},onMove:{'function':'function'},onMoving:{'function':'function'},onRemove:{'function':'function'},onAddGroup:{'function':'function'},onMoveGroup:{'function':'function'},onRemoveGroup:{'function':'function'},onInitialDrawComplete:{'function':'function'},order:{'function':'function'},orientation:{axis:{string:string$2,'undefined':'undefined'},item:{string:string$2,'undefined':'undefined'},__type__:{string:string$2,object:object$2}},selectable:{'boolean':bool$2},showCurrentTime:{'boolean':bool$2},showMajorLabels:{'boolean':bool$2},showMinorLabels:{'boolean':bool$2},stack:{'boolean':bool$2},stackSubgroups:{'boolean':bool$2},snap:{'function':'function','null':'null'},start:{date:date,number:number$2,string:string$2,moment:moment$4$1},template:{'function':'function'},loadingScreenTemplate:{'function':'function'},groupTemplate:{'function':'function'},visibleFrameTemplate:{string:string$2,'function':'function'},showTooltips:{'boolean':bool$2},tooltip:{followMouse:{'boolean':bool$2},overflowMethod:{'string':['cap','flip']},__type__:{object:object$2}},tooltipOnItemUpdateTime:{template:{'function':'function'},__type__:{'boolean':bool$2,object:object$2}},timeAxis:{scale:{string:string$2,'undefined':'undefined'},step:{number:number$2,'undefined':'undefined'},__type__:{object:object$2}},type:{string:string$2},width:{string:string$2,number:number$2},zoomable:{'boolean':bool$2},zoomKey:{string:['ctrlKey','altKey','metaKey','']},zoomMax:{number:number$2},zoomMin:{number:number$2},__type__:{object:object$2}};var configureOptions$1={global:{align:['center','left','right'],alignCurrentTime:['none','year','month','quarter','week','isoWeek','day','date','hour','minute','second'],direction:false,autoResize:true,clickToUse:false,// dataAttributes: ['all'], // FIXME: can be 'all' or string[]
  editable:{add:false,remove:false,updateGroup:false,updateTime:false},end:'',format:{minorLabels:{millisecond:'SSS',second:'s',minute:'HH:mm',hour:'HH:mm',weekday:'ddd D',day:'D',week:'w',month:'MMM',quarter:'[Q]Q',year:'YYYY'},majorLabels:{millisecond:'HH:mm:ss',second:'D MMMM HH:mm',minute:'ddd D MMMM',hour:'ddd D MMMM',weekday:'MMMM YYYY',day:'MMMM YYYY',week:'MMMM YYYY',month:'YYYY',quarter:'YYYY',year:''}},groupHeightMode:['auto','fixed'],groupLabelDirection:['horizontal','vertical'],//groupOrder: {string, 'function': 'function'},
  groupsDraggable:false,height:'',//hiddenDates: {object, array},
  locale:'',margin:{axis:[20,0,100,1],item:{horizontal:[10,0,100,1],vertical:[10,0,100,1]}},max:'',maxHeight:'',maxMinorChars:[7,0,20,1],min:'',minHeight:'',moveable:false,multiselect:false,multiselectPerGroup:false,//onAdd: {'function': 'function'},
  //onUpdate: {'function': 'function'},
  //onMove: {'function': 'function'},
  //onMoving: {'function': 'function'},
  //onRename: {'function': 'function'},
  //order: {'function': 'function'},
  orientation:{axis:['both','bottom','top'],item:['bottom','top']},selectable:true,showCurrentTime:false,showMajorLabels:true,showMinorLabels:true,stack:true,stackSubgroups:true,//snap: {'function': 'function', nada},
  start:'',//template: {'function': 'function'},
  //timeAxis: {
  //  scale: ['millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'week', 'month', 'quarter', 'year'],
  //  step: [1, 1, 10, 1]
  //},
  showTooltips:true,tooltip:{followMouse:false,overflowMethod:'flip'},tooltipOnItemUpdateTime:false,type:['box','point','range','background'],width:'100%',zoomable:true,zoomKey:['ctrlKey','altKey','metaKey',''],zoomMax:[315360000000000,10,315360000000000,1],zoomMin:[10,10,315360000000000,1]}};var optionsTimeline=/*#__PURE__*/Object.freeze({allOptions:allOptions$1$2,configureOptions:configureOptions$1});var htmlColors$1={black:'#000000',navy:'#000080',darkblue:'#00008B',mediumblue:'#0000CD',blue:'#0000FF',darkgreen:'#006400',green:'#008000',teal:'#008080',darkcyan:'#008B8B',deepskyblue:'#00BFFF',darkturquoise:'#00CED1',mediumspringgreen:'#00FA9A',lime:'#00FF00',springgreen:'#00FF7F',aqua:'#00FFFF',cyan:'#00FFFF',midnightblue:'#191970',dodgerblue:'#1E90FF',lightseagreen:'#20B2AA',forestgreen:'#228B22',seagreen:'#2E8B57',darkslategray:'#2F4F4F',limegreen:'#32CD32',mediumseagreen:'#3CB371',turquoise:'#40E0D0',royalblue:'#4169E1',steelblue:'#4682B4',darkslateblue:'#483D8B',mediumturquoise:'#48D1CC',indigo:'#4B0082',darkolivegreen:'#556B2F',cadetblue:'#5F9EA0',cornflowerblue:'#6495ED',mediumaquamarine:'#66CDAA',dimgray:'#696969',slateblue:'#6A5ACD',olivedrab:'#6B8E23',slategray:'#708090',lightslategray:'#778899',mediumslateblue:'#7B68EE',lawngreen:'#7CFC00',chartreuse:'#7FFF00',aquamarine:'#7FFFD4',maroon:'#800000',purple:'#800080',olive:'#808000',gray:'#808080',skyblue:'#87CEEB',lightskyblue:'#87CEFA',blueviolet:'#8A2BE2',darkred:'#8B0000',darkmagenta:'#8B008B',saddlebrown:'#8B4513',darkseagreen:'#8FBC8F',lightgreen:'#90EE90',mediumpurple:'#9370D8',darkviolet:'#9400D3',palegreen:'#98FB98',darkorchid:'#9932CC',yellowgreen:'#9ACD32',sienna:'#A0522D',brown:'#A52A2A',darkgray:'#A9A9A9',lightblue:'#ADD8E6',greenyellow:'#ADFF2F',paleturquoise:'#AFEEEE',lightsteelblue:'#B0C4DE',powderblue:'#B0E0E6',firebrick:'#B22222',darkgoldenrod:'#B8860B',mediumorchid:'#BA55D3',rosybrown:'#BC8F8F',darkkhaki:'#BDB76B',silver:'#C0C0C0',mediumvioletred:'#C71585',indianred:'#CD5C5C',peru:'#CD853F',chocolate:'#D2691E',tan:'#D2B48C',lightgrey:'#D3D3D3',palevioletred:'#D87093',thistle:'#D8BFD8',orchid:'#DA70D6',goldenrod:'#DAA520',crimson:'#DC143C',gainsboro:'#DCDCDC',plum:'#DDA0DD',burlywood:'#DEB887',lightcyan:'#E0FFFF',lavender:'#E6E6FA',darksalmon:'#E9967A',violet:'#EE82EE',palegoldenrod:'#EEE8AA',lightcoral:'#F08080',khaki:'#F0E68C',aliceblue:'#F0F8FF',honeydew:'#F0FFF0',azure:'#F0FFFF',sandybrown:'#F4A460',wheat:'#F5DEB3',beige:'#F5F5DC',whitesmoke:'#F5F5F5',mintcream:'#F5FFFA',ghostwhite:'#F8F8FF',salmon:'#FA8072',antiquewhite:'#FAEBD7',linen:'#FAF0E6',lightgoldenrodyellow:'#FAFAD2',oldlace:'#FDF5E6',red:'#FF0000',fuchsia:'#FF00FF',magenta:'#FF00FF',deeppink:'#FF1493',orangered:'#FF4500',tomato:'#FF6347',hotpink:'#FF69B4',coral:'#FF7F50',darkorange:'#FF8C00',lightsalmon:'#FFA07A',orange:'#FFA500',lightpink:'#FFB6C1',pink:'#FFC0CB',gold:'#FFD700',peachpuff:'#FFDAB9',navajowhite:'#FFDEAD',moccasin:'#FFE4B5',bisque:'#FFE4C4',mistyrose:'#FFE4E1',blanchedalmond:'#FFEBCD',papayawhip:'#FFEFD5',lavenderblush:'#FFF0F5',seashell:'#FFF5EE',cornsilk:'#FFF8DC',lemonchiffon:'#FFFACD',floralwhite:'#FFFAF0',snow:'#FFFAFA',yellow:'#FFFF00',lightyellow:'#FFFFE0',ivory:'#FFFFF0',white:'#FFFFFF'};/**
   * @param {number} [pixelRatio=1]
   */var ColorPicker$1=/*#__PURE__*/function(){/**
     * @param {number} [pixelRatio=1]
     */function ColorPicker(){var pixelRatio=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;_classCallCheck$1$2(this,ColorPicker);this.pixelRatio=pixelRatio;this.generated=false;this.centerCoordinates={x:289/2,y:289/2};this.r=289*0.49;this.color={r:255,g:255,b:255,a:1.0};this.hueCircle=undefined;this.initialColor={r:255,g:255,b:255,a:1.0};this.previousColor=undefined;this.applied=false;// bound by
  this.updateCallback=function(){};this.closeCallback=function(){};// create all DOM elements
  this._create();}/**
     * this inserts the colorPicker into a div from the DOM
     * @param {Element} container
     */_createClass$1$2(ColorPicker,[{key:"insertTo",value:function insertTo(container){if(this.hammer!==undefined){this.hammer.destroy();this.hammer=undefined;}this.container=container;this.container.appendChild(this.frame);this._bindHammer();this._setSize();}/**
       * the callback is executed on apply and save. Bind it to the application
       * @param {function} callback
       */},{key:"setUpdateCallback",value:function setUpdateCallback(callback){if(typeof callback==='function'){this.updateCallback=callback;}else{throw new Error("Function attempted to set as colorPicker update callback is not a function.");}}/**
       * the callback is executed on apply and save. Bind it to the application
       * @param {function} callback
       */},{key:"setCloseCallback",value:function setCloseCallback(callback){if(typeof callback==='function'){this.closeCallback=callback;}else{throw new Error("Function attempted to set as colorPicker closing callback is not a function.");}}/**
       *
       * @param {string} color
       * @returns {String}
       * @private
       */},{key:"_isColorString",value:function _isColorString(color){if(typeof color==='string'){return htmlColors$1[color];}}/**
       * Set the color of the colorPicker
       * Supported formats:
       * 'red'                   --> HTML color string
       * '#ffffff'               --> hex string
       * 'rgb(255,255,255)'      --> rgb string
       * 'rgba(255,255,255,1.0)' --> rgba string
       * {r:255,g:255,b:255}     --> rgb object
       * {r:255,g:255,b:255,a:1.0} --> rgba object
       * @param {string|Object} color
       * @param {boolean} [setInitial=true]
       */},{key:"setColor",value:function setColor(color){var setInitial=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(color==='none'){return;}var rgba;// if a html color shorthand is used, convert to hex
  var htmlColor=this._isColorString(color);if(htmlColor!==undefined){color=htmlColor;}// check format
  if(util$4.isString(color)===true){if(util$4.isValidRGB(color)===true){var rgbaArray=color.substr(4).substr(0,color.length-5).split(',');rgba={r:rgbaArray[0],g:rgbaArray[1],b:rgbaArray[2],a:1.0};}else if(util$4.isValidRGBA(color)===true){var _rgbaArray=color.substr(5).substr(0,color.length-6).split(',');rgba={r:_rgbaArray[0],g:_rgbaArray[1],b:_rgbaArray[2],a:_rgbaArray[3]};}else if(util$4.isValidHex(color)===true){var rgbObj=util$4.hexToRGB(color);rgba={r:rgbObj.r,g:rgbObj.g,b:rgbObj.b,a:1.0};}}else{if(color instanceof Object){if(color.r!==undefined&&color.g!==undefined&&color.b!==undefined){var alpha=color.a!==undefined?color.a:'1.0';rgba={r:color.r,g:color.g,b:color.b,a:alpha};}}}// set color
  if(rgba===undefined){throw new Error("Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: "+JSON.stringify(color));}else{this._setColor(rgba,setInitial);}}/**
       * this shows the color picker.
       * The hue circle is constructed once and stored.
       */},{key:"show",value:function show(){if(this.closeCallback!==undefined){this.closeCallback();this.closeCallback=undefined;}this.applied=false;this.frame.style.display='block';this._generateHueCircle();}// ------------------------------------------ PRIVATE ----------------------------- //
  /**
       * Hide the picker. Is called by the cancel button.
       * Optional boolean to store the previous color for easy access later on.
       * @param {boolean} [storePrevious=true]
       * @private
       */},{key:"_hide",value:function _hide(){var _this=this;var storePrevious=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;// store the previous color for next time;
  if(storePrevious===true){this.previousColor=util$4.extend({},this.color);}if(this.applied===true){this.updateCallback(this.initialColor);}this.frame.style.display='none';// call the closing callback, restoring the onclick method.
  // this is in a setTimeout because it will trigger the show again before the click is done.
  setTimeout(function(){if(_this.closeCallback!==undefined){_this.closeCallback();_this.closeCallback=undefined;}},0);}/**
       * bound to the save button. Saves and hides.
       * @private
       */},{key:"_save",value:function _save(){this.updateCallback(this.color);this.applied=false;this._hide();}/**
       * Bound to apply button. Saves but does not close. Is undone by the cancel button.
       * @private
       */},{key:"_apply",value:function _apply(){this.applied=true;this.updateCallback(this.color);this._updatePicker(this.color);}/**
       * load the color from the previous session.
       * @private
       */},{key:"_loadLast",value:function _loadLast(){if(this.previousColor!==undefined){this.setColor(this.previousColor,false);}else{alert("There is no last color to load...");}}/**
       * set the color, place the picker
       * @param {Object} rgba
       * @param {boolean} [setInitial=true]
       * @private
       */},{key:"_setColor",value:function _setColor(rgba){var setInitial=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;// store the initial color
  if(setInitial===true){this.initialColor=util$4.extend({},rgba);}this.color=rgba;var hsv=util$4.RGBToHSV(rgba.r,rgba.g,rgba.b);var angleConvert=2*Math.PI;var radius=this.r*hsv.s;var x=this.centerCoordinates.x+radius*Math.sin(angleConvert*hsv.h);var y=this.centerCoordinates.y+radius*Math.cos(angleConvert*hsv.h);this.colorPickerSelector.style.left=x-0.5*this.colorPickerSelector.clientWidth+'px';this.colorPickerSelector.style.top=y-0.5*this.colorPickerSelector.clientHeight+'px';this._updatePicker(rgba);}/**
       * bound to opacity control
       * @param {number} value
       * @private
       */},{key:"_setOpacity",value:function _setOpacity(value){this.color.a=value/100;this._updatePicker(this.color);}/**
       * bound to brightness control
       * @param {number} value
       * @private
       */},{key:"_setBrightness",value:function _setBrightness(value){var hsv=util$4.RGBToHSV(this.color.r,this.color.g,this.color.b);hsv.v=value/100;var rgba=util$4.HSVToRGB(hsv.h,hsv.s,hsv.v);rgba['a']=this.color.a;this.color=rgba;this._updatePicker();}/**
       * update the color picker. A black circle overlays the hue circle to mimic the brightness decreasing.
       * @param {Object} rgba
       * @private
       */},{key:"_updatePicker",value:function _updatePicker(){var rgba=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.color;var hsv=util$4.RGBToHSV(rgba.r,rgba.g,rgba.b);var ctx=this.colorPickerCanvas.getContext('2d');if(this.pixelRation===undefined){this.pixelRatio=(window.devicePixelRatio||1)/(ctx.webkitBackingStorePixelRatio||ctx.mozBackingStorePixelRatio||ctx.msBackingStorePixelRatio||ctx.oBackingStorePixelRatio||ctx.backingStorePixelRatio||1);}ctx.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);// clear the canvas
  var w=this.colorPickerCanvas.clientWidth;var h=this.colorPickerCanvas.clientHeight;ctx.clearRect(0,0,w,h);ctx.putImageData(this.hueCircle,0,0);ctx.fillStyle='rgba(0,0,0,'+(1-hsv.v)+')';ctx.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r);ctx.fill();this.brightnessRange.value=100*hsv.v;this.opacityRange.value=100*rgba.a;this.initialColorDiv.style.backgroundColor='rgba('+this.initialColor.r+','+this.initialColor.g+','+this.initialColor.b+','+this.initialColor.a+')';this.newColorDiv.style.backgroundColor='rgba('+this.color.r+','+this.color.g+','+this.color.b+','+this.color.a+')';}/**
       * used by create to set the size of the canvas.
       * @private
       */},{key:"_setSize",value:function _setSize(){this.colorPickerCanvas.style.width='100%';this.colorPickerCanvas.style.height='100%';this.colorPickerCanvas.width=289*this.pixelRatio;this.colorPickerCanvas.height=289*this.pixelRatio;}/**
       * create all dom elements
       * TODO: cleanup, lots of similar dom elements
       * @private
       */},{key:"_create",value:function _create(){this.frame=document.createElement('div');this.frame.className='vis-color-picker';this.colorPickerDiv=document.createElement('div');this.colorPickerSelector=document.createElement('div');this.colorPickerSelector.className='vis-selector';this.colorPickerDiv.appendChild(this.colorPickerSelector);this.colorPickerCanvas=document.createElement('canvas');this.colorPickerDiv.appendChild(this.colorPickerCanvas);if(!this.colorPickerCanvas.getContext){var noCanvas=document.createElement('DIV');noCanvas.style.color='red';noCanvas.style.fontWeight='bold';noCanvas.style.padding='10px';noCanvas.innerHTML='Error: your browser does not support HTML canvas';this.colorPickerCanvas.appendChild(noCanvas);}else{var ctx=this.colorPickerCanvas.getContext("2d");this.pixelRatio=(window.devicePixelRatio||1)/(ctx.webkitBackingStorePixelRatio||ctx.mozBackingStorePixelRatio||ctx.msBackingStorePixelRatio||ctx.oBackingStorePixelRatio||ctx.backingStorePixelRatio||1);this.colorPickerCanvas.getContext("2d").setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);}this.colorPickerDiv.className='vis-color';this.opacityDiv=document.createElement('div');this.opacityDiv.className='vis-opacity';this.brightnessDiv=document.createElement('div');this.brightnessDiv.className='vis-brightness';this.arrowDiv=document.createElement('div');this.arrowDiv.className='vis-arrow';this.opacityRange=document.createElement('input');try{this.opacityRange.type='range';// Not supported on IE9
  this.opacityRange.min='0';this.opacityRange.max='100';}// TODO: Add some error handling and remove this lint exception
  catch(err){}// eslint-disable-line no-empty
  this.opacityRange.value='100';this.opacityRange.className='vis-range';this.brightnessRange=document.createElement('input');try{this.brightnessRange.type='range';// Not supported on IE9
  this.brightnessRange.min='0';this.brightnessRange.max='100';}// TODO: Add some error handling and remove this lint exception
  catch(err){}// eslint-disable-line no-empty
  this.brightnessRange.value='100';this.brightnessRange.className='vis-range';this.opacityDiv.appendChild(this.opacityRange);this.brightnessDiv.appendChild(this.brightnessRange);var me=this;this.opacityRange.onchange=function(){me._setOpacity(this.value);};this.opacityRange.oninput=function(){me._setOpacity(this.value);};this.brightnessRange.onchange=function(){me._setBrightness(this.value);};this.brightnessRange.oninput=function(){me._setBrightness(this.value);};this.brightnessLabel=document.createElement("div");this.brightnessLabel.className="vis-label vis-brightness";this.brightnessLabel.innerHTML='brightness:';this.opacityLabel=document.createElement("div");this.opacityLabel.className="vis-label vis-opacity";this.opacityLabel.innerHTML='opacity:';this.newColorDiv=document.createElement("div");this.newColorDiv.className="vis-new-color";this.newColorDiv.innerHTML='new';this.initialColorDiv=document.createElement("div");this.initialColorDiv.className="vis-initial-color";this.initialColorDiv.innerHTML='initial';this.cancelButton=document.createElement("div");this.cancelButton.className="vis-button vis-cancel";this.cancelButton.innerHTML='cancel';this.cancelButton.onclick=this._hide.bind(this,false);this.applyButton=document.createElement("div");this.applyButton.className="vis-button vis-apply";this.applyButton.innerHTML='apply';this.applyButton.onclick=this._apply.bind(this);this.saveButton=document.createElement("div");this.saveButton.className="vis-button vis-save";this.saveButton.innerHTML='save';this.saveButton.onclick=this._save.bind(this);this.loadButton=document.createElement("div");this.loadButton.className="vis-button vis-load";this.loadButton.innerHTML='load last';this.loadButton.onclick=this._loadLast.bind(this);this.frame.appendChild(this.colorPickerDiv);this.frame.appendChild(this.arrowDiv);this.frame.appendChild(this.brightnessLabel);this.frame.appendChild(this.brightnessDiv);this.frame.appendChild(this.opacityLabel);this.frame.appendChild(this.opacityDiv);this.frame.appendChild(this.newColorDiv);this.frame.appendChild(this.initialColorDiv);this.frame.appendChild(this.cancelButton);this.frame.appendChild(this.applyButton);this.frame.appendChild(this.saveButton);this.frame.appendChild(this.loadButton);}/**
       * bind hammer to the color picker
       * @private
       */},{key:"_bindHammer",value:function _bindHammer(){var _this2=this;this.drag={};this.pinch={};this.hammer=new hammer$1$2(this.colorPickerCanvas);this.hammer.get('pinch').set({enable:true});hammerUtil$1.onTouch(this.hammer,function(event){_this2._moveSelector(event);});this.hammer.on('tap',function(event){_this2._moveSelector(event);});this.hammer.on('panstart',function(event){_this2._moveSelector(event);});this.hammer.on('panmove',function(event){_this2._moveSelector(event);});this.hammer.on('panend',function(event){_this2._moveSelector(event);});}/**
       * generate the hue circle. This is relatively heavy (200ms) and is done only once on the first time it is shown.
       * @private
       */},{key:"_generateHueCircle",value:function _generateHueCircle(){if(this.generated===false){var ctx=this.colorPickerCanvas.getContext('2d');if(this.pixelRation===undefined){this.pixelRatio=(window.devicePixelRatio||1)/(ctx.webkitBackingStorePixelRatio||ctx.mozBackingStorePixelRatio||ctx.msBackingStorePixelRatio||ctx.oBackingStorePixelRatio||ctx.backingStorePixelRatio||1);}ctx.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);// clear the canvas
  var w=this.colorPickerCanvas.clientWidth;var h=this.colorPickerCanvas.clientHeight;ctx.clearRect(0,0,w,h);// draw hue circle
  var x,y,hue,sat;this.centerCoordinates={x:w*0.5,y:h*0.5};this.r=0.49*w;var angleConvert=2*Math.PI/360;var hfac=1/360;var sfac=1/this.r;var rgb;for(hue=0;hue<360;hue++){for(sat=0;sat<this.r;sat++){x=this.centerCoordinates.x+sat*Math.sin(angleConvert*hue);y=this.centerCoordinates.y+sat*Math.cos(angleConvert*hue);rgb=util$4.HSVToRGB(hue*hfac,sat*sfac,1);ctx.fillStyle='rgb('+rgb.r+','+rgb.g+','+rgb.b+')';ctx.fillRect(x-0.5,y-0.5,2,2);}}ctx.strokeStyle='rgba(0,0,0,1)';ctx.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r);ctx.stroke();this.hueCircle=ctx.getImageData(0,0,w,h);}this.generated=true;}/**
       * move the selector. This is called by hammer functions.
       *
       * @param {Event}  event   The event
       * @private
       */},{key:"_moveSelector",value:function _moveSelector(event){var rect=this.colorPickerDiv.getBoundingClientRect();var left=event.center.x-rect.left;var top=event.center.y-rect.top;var centerY=0.5*this.colorPickerDiv.clientHeight;var centerX=0.5*this.colorPickerDiv.clientWidth;var x=left-centerX;var y=top-centerY;var angle=Math.atan2(x,y);var radius=0.98*Math.min(Math.sqrt(x*x+y*y),centerX);var newTop=Math.cos(angle)*radius+centerY;var newLeft=Math.sin(angle)*radius+centerX;this.colorPickerSelector.style.top=newTop-0.5*this.colorPickerSelector.clientHeight+'px';this.colorPickerSelector.style.left=newLeft-0.5*this.colorPickerSelector.clientWidth+'px';// set color
  var h=angle/(2*Math.PI);h=h<0?h+1:h;var s=radius/this.r;var hsv=util$4.RGBToHSV(this.color.r,this.color.g,this.color.b);hsv.h=h;hsv.s=s;var rgba=util$4.HSVToRGB(hsv.h,hsv.s,hsv.v);rgba['a']=this.color.a;this.color=rgba;// update previews
  this.initialColorDiv.style.backgroundColor='rgba('+this.initialColor.r+','+this.initialColor.g+','+this.initialColor.b+','+this.initialColor.a+')';this.newColorDiv.style.backgroundColor='rgba('+this.color.r+','+this.color.g+','+this.color.b+','+this.color.a+')';}}]);return ColorPicker;}();/**
   * The way this works is for all properties of this.possible options, you can supply the property name in any form to list the options.
   * Boolean options are recognised as Boolean
   * Number options should be written as array: [default value, min value, max value, stepsize]
   * Colors should be written as array: ['color', '#ffffff']
   * Strings with should be written as array: [option1, option2, option3, ..]
   *
   * The options are matched with their counterparts in each of the modules and the values used in the configuration are
   */var Configurator$1=/*#__PURE__*/function(){/**
     * @param {Object} parentModule        | the location where parentModule.setOptions() can be called
     * @param {Object} defaultContainer    | the default container of the module
     * @param {Object} configureOptions    | the fully configured and predefined options set found in allOptions.js
     * @param {number} pixelRatio          | canvas pixel ratio
     */function Configurator(parentModule,defaultContainer,configureOptions){var pixelRatio=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck$1$2(this,Configurator);this.parent=parentModule;this.changedOptions=[];this.container=defaultContainer;this.allowCreation=false;this.options={};this.initialized=false;this.popupCounter=0;this.defaultOptions={enabled:false,filter:true,container:undefined,showButton:true};util$4.extend(this.options,this.defaultOptions);this.configureOptions=configureOptions;this.moduleOptions={};this.domElements=[];this.popupDiv={};this.popupLimit=5;this.popupHistory={};this.colorPicker=new ColorPicker$1(pixelRatio);this.wrapper=undefined;}/**
     * refresh all options.
     * Because all modules parse their options by themselves, we just use their options. We copy them here.
     *
     * @param {Object} options
     */_createClass$1$2(Configurator,[{key:"setOptions",value:function setOptions(options){if(options!==undefined){// reset the popup history because the indices may have been changed.
  this.popupHistory={};this._removePopup();var enabled=true;if(typeof options==='string'){this.options.filter=options;}else if(options instanceof Array){this.options.filter=options.join();}else if(_typeof$1$2(options)==='object'){if(options==null){throw new TypeError('options cannot be null');}if(options.container!==undefined){this.options.container=options.container;}if(options.filter!==undefined){this.options.filter=options.filter;}if(options.showButton!==undefined){this.options.showButton=options.showButton;}if(options.enabled!==undefined){enabled=options.enabled;}}else if(typeof options==='boolean'){this.options.filter=true;enabled=options;}else if(typeof options==='function'){this.options.filter=options;enabled=true;}if(this.options.filter===false){enabled=false;}this.options.enabled=enabled;}this._clean();}/**
       *
       * @param {Object} moduleOptions
       */},{key:"setModuleOptions",value:function setModuleOptions(moduleOptions){this.moduleOptions=moduleOptions;if(this.options.enabled===true){this._clean();if(this.options.container!==undefined){this.container=this.options.container;}this._create();}}/**
       * Create all DOM elements
       * @private
       */},{key:"_create",value:function _create(){this._clean();this.changedOptions=[];var filter=this.options.filter;var counter=0;var show=false;for(var option in this.configureOptions){if(this.configureOptions.hasOwnProperty(option)){this.allowCreation=false;show=false;if(typeof filter==='function'){show=filter(option,[]);show=show||this._handleObject(this.configureOptions[option],[option],true);}else if(filter===true||filter.indexOf(option)!==-1){show=true;}if(show!==false){this.allowCreation=true;// linebreak between categories
  if(counter>0){this._makeItem([]);}// a header for the category
  this._makeHeader(option);// get the sub options
  this._handleObject(this.configureOptions[option],[option]);}counter++;}}this._makeButton();this._push();//~ this.colorPicker.insertTo(this.container);
  }/**
       * draw all DOM elements on the screen
       * @private
       */},{key:"_push",value:function _push(){this.wrapper=document.createElement('div');this.wrapper.className='vis-configuration-wrapper';this.container.appendChild(this.wrapper);for(var i=0;i<this.domElements.length;i++){this.wrapper.appendChild(this.domElements[i]);}this._showPopupIfNeeded();}/**
       * delete all DOM elements
       * @private
       */},{key:"_clean",value:function _clean(){for(var i=0;i<this.domElements.length;i++){this.wrapper.removeChild(this.domElements[i]);}if(this.wrapper!==undefined){this.container.removeChild(this.wrapper);this.wrapper=undefined;}this.domElements=[];this._removePopup();}/**
       * get the value from the actualOptions if it exists
       * @param {array} path    | where to look for the actual option
       * @returns {*}
       * @private
       */},{key:"_getValue",value:function _getValue(path){var base=this.moduleOptions;for(var i=0;i<path.length;i++){if(base[path[i]]!==undefined){base=base[path[i]];}else{base=undefined;break;}}return base;}/**
       * all option elements are wrapped in an item
       * @param {Array} path    | where to look for the actual option
       * @param {Array.<Element>} domElements
       * @returns {number}
       * @private
       */},{key:"_makeItem",value:function _makeItem(path){if(this.allowCreation===true){var item=document.createElement('div');item.className='vis-configuration vis-config-item vis-config-s'+path.length;for(var _len=arguments.length,domElements=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){domElements[_key-1]=arguments[_key];}domElements.forEach(function(element){item.appendChild(element);});this.domElements.push(item);return this.domElements.length;}return 0;}/**
       * header for major subjects
       * @param {string} name
       * @private
       */},{key:"_makeHeader",value:function _makeHeader(name){var div=document.createElement('div');div.className='vis-configuration vis-config-header';div.innerHTML=name;this._makeItem([],div);}/**
       * make a label, if it is an object label, it gets different styling.
       * @param {string} name
       * @param {array} path    | where to look for the actual option
       * @param {string} objectLabel
       * @returns {HTMLElement}
       * @private
       */},{key:"_makeLabel",value:function _makeLabel(name,path){var objectLabel=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var div=document.createElement('div');div.className='vis-configuration vis-config-label vis-config-s'+path.length;if(objectLabel===true){div.innerHTML='<i><b>'+name+':</b></i>';}else{div.innerHTML=name+':';}return div;}/**
       * make a dropdown list for multiple possible string optoins
       * @param {Array.<number>} arr
       * @param {number} value
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_makeDropdown",value:function _makeDropdown(arr,value,path){var select=document.createElement('select');select.className='vis-configuration vis-config-select';var selectedValue=0;if(value!==undefined){if(arr.indexOf(value)!==-1){selectedValue=arr.indexOf(value);}}for(var i=0;i<arr.length;i++){var option=document.createElement('option');option.value=arr[i];if(i===selectedValue){option.selected='selected';}option.innerHTML=arr[i];select.appendChild(option);}var me=this;select.onchange=function(){me._update(this.value,path);};var label=this._makeLabel(path[path.length-1],path);this._makeItem(path,label,select);}/**
       * make a range object for numeric options
       * @param {Array.<number>} arr
       * @param {number} value
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_makeRange",value:function _makeRange(arr,value,path){var defaultValue=arr[0];var min=arr[1];var max=arr[2];var step=arr[3];var range=document.createElement('input');range.className='vis-configuration vis-config-range';try{range.type='range';// not supported on IE9
  range.min=min;range.max=max;}// TODO: Add some error handling and remove this lint exception
  catch(err){}// eslint-disable-line no-empty
  range.step=step;// set up the popup settings in case they are needed.
  var popupString='';var popupValue=0;if(value!==undefined){var factor=1.20;if(value<0&&value*factor<min){range.min=Math.ceil(value*factor);popupValue=range.min;popupString='range increased';}else if(value/factor<min){range.min=Math.ceil(value/factor);popupValue=range.min;popupString='range increased';}if(value*factor>max&&max!==1){range.max=Math.ceil(value*factor);popupValue=range.max;popupString='range increased';}range.value=value;}else{range.value=defaultValue;}var input=document.createElement('input');input.className='vis-configuration vis-config-rangeinput';input.value=range.value;var me=this;range.onchange=function(){input.value=this.value;me._update(Number(this.value),path);};range.oninput=function(){input.value=this.value;};var label=this._makeLabel(path[path.length-1],path);var itemIndex=this._makeItem(path,label,range,input);// if a popup is needed AND it has not been shown for this value, show it.
  if(popupString!==''&&this.popupHistory[itemIndex]!==popupValue){this.popupHistory[itemIndex]=popupValue;this._setupPopup(popupString,itemIndex);}}/**
       * make a button object
       * @private
       */},{key:"_makeButton",value:function _makeButton(){var _this=this;if(this.options.showButton===true){var generateButton=document.createElement('div');generateButton.className='vis-configuration vis-config-button';generateButton.innerHTML='generate options';generateButton.onclick=function(){_this._printOptions();};generateButton.onmouseover=function(){generateButton.className='vis-configuration vis-config-button hover';};generateButton.onmouseout=function(){generateButton.className='vis-configuration vis-config-button';};this.optionsContainer=document.createElement('div');this.optionsContainer.className='vis-configuration vis-config-option-container';this.domElements.push(this.optionsContainer);this.domElements.push(generateButton);}}/**
       * prepare the popup
       * @param {string} string
       * @param {number} index
       * @private
       */},{key:"_setupPopup",value:function _setupPopup(string,index){var _this2=this;if(this.initialized===true&&this.allowCreation===true&&this.popupCounter<this.popupLimit){var div=document.createElement("div");div.id="vis-configuration-popup";div.className="vis-configuration-popup";div.innerHTML=string;div.onclick=function(){_this2._removePopup();};this.popupCounter+=1;this.popupDiv={html:div,index:index};}}/**
       * remove the popup from the dom
       * @private
       */},{key:"_removePopup",value:function _removePopup(){if(this.popupDiv.html!==undefined){this.popupDiv.html.parentNode.removeChild(this.popupDiv.html);clearTimeout(this.popupDiv.hideTimeout);clearTimeout(this.popupDiv.deleteTimeout);this.popupDiv={};}}/**
       * Show the popup if it is needed.
       * @private
       */},{key:"_showPopupIfNeeded",value:function _showPopupIfNeeded(){var _this3=this;if(this.popupDiv.html!==undefined){var correspondingElement=this.domElements[this.popupDiv.index];var rect=correspondingElement.getBoundingClientRect();this.popupDiv.html.style.left=rect.left+"px";this.popupDiv.html.style.top=rect.top-30+"px";// 30 is the height;
  document.body.appendChild(this.popupDiv.html);this.popupDiv.hideTimeout=setTimeout(function(){_this3.popupDiv.html.style.opacity=0;},1500);this.popupDiv.deleteTimeout=setTimeout(function(){_this3._removePopup();},1800);}}/**
       * make a checkbox for boolean options.
       * @param {number} defaultValue
       * @param {number} value
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_makeCheckbox",value:function _makeCheckbox(defaultValue,value,path){var checkbox=document.createElement('input');checkbox.type='checkbox';checkbox.className='vis-configuration vis-config-checkbox';checkbox.checked=defaultValue;if(value!==undefined){checkbox.checked=value;if(value!==defaultValue){if(_typeof$1$2(defaultValue)==='object'){if(value!==defaultValue.enabled){this.changedOptions.push({path:path,value:value});}}else{this.changedOptions.push({path:path,value:value});}}}var me=this;checkbox.onchange=function(){me._update(this.checked,path);};var label=this._makeLabel(path[path.length-1],path);this._makeItem(path,label,checkbox);}/**
       * make a text input field for string options.
       * @param {number} defaultValue
       * @param {number} value
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_makeTextInput",value:function _makeTextInput(defaultValue,value,path){var checkbox=document.createElement('input');checkbox.type='text';checkbox.className='vis-configuration vis-config-text';checkbox.value=value;if(value!==defaultValue){this.changedOptions.push({path:path,value:value});}var me=this;checkbox.onchange=function(){me._update(this.value,path);};var label=this._makeLabel(path[path.length-1],path);this._makeItem(path,label,checkbox);}/**
       * make a color field with a color picker for color fields
       * @param {Array.<number>} arr
       * @param {number} value
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_makeColorField",value:function _makeColorField(arr,value,path){var _this4=this;var defaultColor=arr[1];var div=document.createElement('div');value=value===undefined?defaultColor:value;if(value!=='none'){div.className='vis-configuration vis-config-colorBlock';div.style.backgroundColor=value;}else{div.className='vis-configuration vis-config-colorBlock none';}value=value===undefined?defaultColor:value;div.onclick=function(){_this4._showColorPicker(value,div,path);};var label=this._makeLabel(path[path.length-1],path);this._makeItem(path,label,div);}/**
       * used by the color buttons to call the color picker.
       * @param {number} value
       * @param {HTMLElement} div
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_showColorPicker",value:function _showColorPicker(value,div,path){var _this5=this;// clear the callback from this div
  div.onclick=function(){};this.colorPicker.insertTo(div);this.colorPicker.show();this.colorPicker.setColor(value);this.colorPicker.setUpdateCallback(function(color){var colorString='rgba('+color.r+','+color.g+','+color.b+','+color.a+')';div.style.backgroundColor=colorString;_this5._update(colorString,path);});// on close of the colorpicker, restore the callback.
  this.colorPicker.setCloseCallback(function(){div.onclick=function(){_this5._showColorPicker(value,div,path);};});}/**
       * parse an object and draw the correct items
       * @param {Object} obj
       * @param {array} [path=[]]    | where to look for the actual option
       * @param {boolean} [checkOnly=false]
       * @returns {boolean}
       * @private
       */},{key:"_handleObject",value:function _handleObject(obj){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var checkOnly=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var show=false;var filter=this.options.filter;var visibleInSet=false;for(var subObj in obj){if(obj.hasOwnProperty(subObj)){show=true;var item=obj[subObj];var newPath=util$4.copyAndExtendArray(path,subObj);if(typeof filter==='function'){show=filter(subObj,path);// if needed we must go deeper into the object.
  if(show===false){if(!(item instanceof Array)&&typeof item!=='string'&&typeof item!=='boolean'&&item instanceof Object){this.allowCreation=false;show=this._handleObject(item,newPath,true);this.allowCreation=checkOnly===false;}}}if(show!==false){visibleInSet=true;var value=this._getValue(newPath);if(item instanceof Array){this._handleArray(item,value,newPath);}else if(typeof item==='string'){this._makeTextInput(item,value,newPath);}else if(typeof item==='boolean'){this._makeCheckbox(item,value,newPath);}else if(item instanceof Object){// collapse the physics options that are not enabled
  var draw=true;if(path.indexOf('physics')!==-1){if(this.moduleOptions.physics.solver!==subObj){draw=false;}}if(draw===true){// initially collapse options with an disabled enabled option.
  if(item.enabled!==undefined){var enabledPath=util$4.copyAndExtendArray(newPath,'enabled');var enabledValue=this._getValue(enabledPath);if(enabledValue===true){var label=this._makeLabel(subObj,newPath,true);this._makeItem(newPath,label);visibleInSet=this._handleObject(item,newPath)||visibleInSet;}else{this._makeCheckbox(item,enabledValue,newPath);}}else{var _label=this._makeLabel(subObj,newPath,true);this._makeItem(newPath,_label);visibleInSet=this._handleObject(item,newPath)||visibleInSet;}}}else{console.error('dont know how to handle',item,subObj,newPath);}}}}return visibleInSet;}/**
       * handle the array type of option
       * @param {Array.<number>} arr
       * @param {number} value
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_handleArray",value:function _handleArray(arr,value,path){if(typeof arr[0]==='string'&&arr[0]==='color'){this._makeColorField(arr,value,path);if(arr[1]!==value){this.changedOptions.push({path:path,value:value});}}else if(typeof arr[0]==='string'){this._makeDropdown(arr,value,path);if(arr[0]!==value){this.changedOptions.push({path:path,value:value});}}else if(typeof arr[0]==='number'){this._makeRange(arr,value,path);if(arr[0]!==value){this.changedOptions.push({path:path,value:Number(value)});}}}/**
       * called to update the network with the new settings.
       * @param {number} value
       * @param {array} path    | where to look for the actual option
       * @private
       */},{key:"_update",value:function _update(value,path){var options=this._constructOptions(value,path);if(this.parent.body&&this.parent.body.emitter&&this.parent.body.emitter.emit){this.parent.body.emitter.emit("configChange",options);}this.initialized=true;this.parent.setOptions(options);}/**
       *
       * @param {string|Boolean} value
       * @param {Array.<string>} path
       * @param {{}} optionsObj
       * @returns {{}}
       * @private
       */},{key:"_constructOptions",value:function _constructOptions(value,path){var optionsObj=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var pointer=optionsObj;// when dropdown boxes can be string or boolean, we typecast it into correct types
  value=value==='true'?true:value;value=value==='false'?false:value;for(var i=0;i<path.length;i++){if(path[i]!=='global'){if(pointer[path[i]]===undefined){pointer[path[i]]={};}if(i!==path.length-1){pointer=pointer[path[i]];}else{pointer[path[i]]=value;}}}return optionsObj;}/**
       * @private
       */},{key:"_printOptions",value:function _printOptions(){var options=this.getOptions();this.optionsContainer.innerHTML='<pre>var options = '+JSON.stringify(options,null,2)+'</pre>';}/**
       *
       * @returns {{}} options
       */},{key:"getOptions",value:function getOptions(){var options={};for(var i=0;i<this.changedOptions.length;i++){this._constructOptions(this.changedOptions[i].value,this.changedOptions[i].path,options);}return options;}}]);return Configurator;}();var DataSet$1$2=index$3.DataSet;var DataView$1$2=index$3.DataView;var Validator$2$1=Validator$1$2.Validator;var printStyle$1$2=Validator$1$2.printStyle;var allOptions$2$2=optionsTimeline.allOptions;var configureOptions$1$1=optionsTimeline.configureOptions;var Configurator$1$1=Configurator$1.default;/**
   * Create a timeline visualization
   * @param {HTMLElement} container
   * @param {vis.DataSet | vis.DataView | Array} [items]
   * @param {vis.DataSet | vis.DataView | Array} [groups]
   * @param {Object} [options]  See Timeline.setOptions for the available options.
   * @constructor Timeline
   * @extends Core
   */function Timeline(container,items,groups,options){this.initTime=new Date();this.itemsDone=false;if(!(this instanceof Timeline)){throw new SyntaxError('Constructor must be called with the new operator');}// if the third element is options, the forth is groups (optionally);
  if(!(Array.isArray(groups)||groups instanceof DataSet$1$2||groups instanceof DataView$1$2)&&groups instanceof Object){var forthArgument=options;options=groups;groups=forthArgument;}// TODO: REMOVE THIS in the next MAJOR release
  // see https://github.com/almende/vis/issues/2511
  if(options&&options.throttleRedraw){console.warn("Timeline option \"throttleRedraw\" is DEPRICATED and no longer supported. It will be removed in the next MAJOR release.");}var me=this;this.defaultOptions={start:null,end:null,autoResize:true,orientation:{axis:'bottom',// axis orientation: 'bottom', 'top', or 'both'
  item:'bottom'// not relevant
  },moment:moment$3$2,width:null,height:null,maxHeight:null,minHeight:null};this.options=util$4.deepExtend({},this.defaultOptions);// Create the DOM, props, and emitter
  this._create(container);if(!options||options&&typeof options.rtl=="undefined"){this.dom.root.style.visibility='hidden';var directionFromDom,domNode=this.dom.root;while(!directionFromDom&&domNode){directionFromDom=window.getComputedStyle(domNode,null).direction;domNode=domNode.parentElement;}this.options.rtl=directionFromDom&&directionFromDom.toLowerCase()=="rtl";}else{this.options.rtl=options.rtl;}this.options.rollingMode=options&&options.rollingMode;this.options.onInitialDrawComplete=options&&options.onInitialDrawComplete;this.options.onTimeout=options&&options.onTimeout;this.options.loadingScreenTemplate=options&&options.loadingScreenTemplate;// Prepare loading screen
  var loadingScreenFragment=document.createElement('div');if(this.options.loadingScreenTemplate){var templateFunction=this.options.loadingScreenTemplate.bind(this);var loadingScreen=templateFunction(this.dom.loadingScreen);if(loadingScreen instanceof Object&&!(loadingScreen instanceof Element)){templateFunction(loadingScreenFragment);}else{if(loadingScreen instanceof Element){loadingScreenFragment.innerHTML='';loadingScreenFragment.appendChild(loadingScreen);}else if(loadingScreen!=undefined){loadingScreenFragment.innerHTML=loadingScreen;}}}this.dom.loadingScreen.appendChild(loadingScreenFragment);// all components listed here will be repainted automatically
  this.components=[];this.body={dom:this.dom,domProps:this.props,emitter:{on:this.on.bind(this),off:this.off.bind(this),emit:this.emit.bind(this)},hiddenDates:[],util:{getScale:function getScale(){return me.timeAxis.step.scale;},getStep:function getStep(){return me.timeAxis.step.step;},toScreen:me._toScreen.bind(me),toGlobalScreen:me._toGlobalScreen.bind(me),// this refers to the root.width
  toTime:me._toTime.bind(me),toGlobalTime:me._toGlobalTime.bind(me)}};// range
  this.range=new Range_1$1(this.body,this.options);this.components.push(this.range);this.body.range=this.range;// time axis
  this.timeAxis=new TimeAxis(this.body,this.options);this.timeAxis2=null;// used in case of orientation option 'both'
  this.components.push(this.timeAxis);// current time bar
  this.currentTime=new CurrentTime_1(this.body,this.options);this.components.push(this.currentTime);// item set
  this.itemSet=new ItemSet(this.body,this.options);this.components.push(this.itemSet);this.itemsData=null;// DataSet
  this.groupsData=null;// DataSet
  this.dom.root.onclick=function(event){me.emit('click',me.getEventProperties(event));};this.dom.root.ondblclick=function(event){me.emit('doubleClick',me.getEventProperties(event));};this.dom.root.oncontextmenu=function(event){me.emit('contextmenu',me.getEventProperties(event));};this.dom.root.onmouseover=function(event){me.emit('mouseOver',me.getEventProperties(event));};if(window.PointerEvent){this.dom.root.onpointerdown=function(event){me.emit('mouseDown',me.getEventProperties(event));};this.dom.root.onpointermove=function(event){me.emit('mouseMove',me.getEventProperties(event));};this.dom.root.onpointerup=function(event){me.emit('mouseUp',me.getEventProperties(event));};}else{this.dom.root.onmousemove=function(event){me.emit('mouseMove',me.getEventProperties(event));};this.dom.root.onmousedown=function(event){me.emit('mouseDown',me.getEventProperties(event));};this.dom.root.onmouseup=function(event){me.emit('mouseUp',me.getEventProperties(event));};}//Single time autoscale/fit
  this.initialFitDone=false;this.on('changed',function(){if(me.itemsData==null)return;if(!me.initialFitDone&&!me.options.rollingMode){me.initialFitDone=true;if(me.options.start!=undefined||me.options.end!=undefined){if(me.options.start==undefined||me.options.end==undefined){var range=me.getItemRange();}var start=me.options.start!=undefined?me.options.start:range.min;var end=me.options.end!=undefined?me.options.end:range.max;me.setWindow(start,end,{animation:false});}else{me.fit({animation:false});}}if(!me.initialDrawDone&&(me.initialRangeChangeDone||!me.options.start&&!me.options.end||me.options.rollingMode)){me.initialDrawDone=true;me.itemSet.initialDrawDone=true;me.dom.root.style.visibility='visible';me.dom.loadingScreen.parentNode.removeChild(me.dom.loadingScreen);if(me.options.onInitialDrawComplete){setTimeout(function(){return me.options.onInitialDrawComplete();},0);}}});this.on('destroyTimeline',function(){me.destroy();});// apply options
  if(options){this.setOptions(options);}// IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!
  if(groups){this.setGroups(groups);}// create itemset
  if(items){this.setItems(items);}// draw for the first time
  this._redraw();}// Extend the functionality from Core
  Timeline.prototype=new Core();/**
   * Load a configurator
   * @return {Object}
   * @private
   */Timeline.prototype._createConfigurator=function(){return new Configurator$1$1(this,this.dom.container,configureOptions$1$1);};/**
   * Force a redraw. The size of all items will be recalculated.
   * Can be useful to manually redraw when option autoResize=false and the window
   * has been resized, or when the items CSS has been changed.
   *
   * Note: this function will be overridden on construction with a trottled version
   */Timeline.prototype.redraw=function(){this.itemSet&&this.itemSet.markDirty({refreshItems:true});this._redraw();};Timeline.prototype.setOptions=function(options){// validate options
  var errorFound=Validator$2$1.validate(options,allOptions$2$2);if(errorFound===true){console.log('%cErrors have been found in the supplied options object.',printStyle$1$2);}Core.prototype.setOptions.call(this,options);if('type'in options){if(options.type!==this.options.type){this.options.type=options.type;// force recreation of all items
  var itemsData=this.itemsData;if(itemsData){var selection=this.getSelection();this.setItems(null);// remove all
  this.setItems(itemsData);// add all
  this.setSelection(selection);// restore selection
  }}}};/**
   * Set items
   * @param {vis.DataSet | Array | null} items
   */Timeline.prototype.setItems=function(items){this.itemsDone=false;// convert to type DataSet when needed
  var newDataSet;if(!items){newDataSet=null;}else if(items instanceof DataSet$1$2||items instanceof DataView$1$2){newDataSet=items;}else{// turn an array into a dataset
  newDataSet=new DataSet$1$2(items,{type:{start:'Date',end:'Date'}});}// set items
  this.itemsData=newDataSet;this.itemSet&&this.itemSet.setItems(newDataSet);};/**
   * Set groups
   * @param {vis.DataSet | Array} groups
   */Timeline.prototype.setGroups=function(groups){// convert to type DataSet when needed
  var newDataSet;if(!groups){newDataSet=null;}else{var filter=function filter(group){return group.visible!==false;};if(groups instanceof DataSet$1$2||groups instanceof DataView$1$2){newDataSet=new DataView$1$2(groups,{filter:filter});}else{// turn an array into a dataset
  newDataSet=new DataSet$1$2(groups.filter(filter));}}this.groupsData=newDataSet;this.itemSet.setGroups(newDataSet);};/**
   * Set both items and groups in one go
   * @param {{items: (Array | vis.DataSet), groups: (Array | vis.DataSet)}} data
   */Timeline.prototype.setData=function(data){if(data&&data.groups){this.setGroups(data.groups);}if(data&&data.items){this.setItems(data.items);}};/**
   * Set selected items by their id. Replaces the current selection
   * Unknown id's are silently ignored.
   * @param {string[] | string} [ids]  An array with zero or more id's of the items to be
   *                                selected. If ids is an empty array, all items will be
   *                                unselected.
   * @param {Object} [options]      Available options:
   *                                `focus: boolean`
   *                                    If true, focus will be set to the selected item(s)
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   *                                    Only applicable when option focus is true.
   */Timeline.prototype.setSelection=function(ids,options){this.itemSet&&this.itemSet.setSelection(ids);if(options&&options.focus){this.focus(ids,options);}};/**
   * Get the selected items by their id
   * @return {Array} ids  The ids of the selected items
   */Timeline.prototype.getSelection=function(){return this.itemSet&&this.itemSet.getSelection()||[];};/**
   * Adjust the visible window such that the selected item (or multiple items)
   * are centered on screen.
   * @param {string | String[]} id     An item id or array with item ids
   * @param {Object} [options]      Available options:
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   */Timeline.prototype.focus=function(id,options){if(!this.itemsData||id==undefined)return;var ids=Array.isArray(id)?id:[id];// get the specified item(s)
  var itemsData=this.itemsData.getDataSet().get(ids,{type:{start:'Date',end:'Date'}});// calculate minimum start and maximum end of specified items
  var start=null;var end=null;itemsData.forEach(function(itemData){var s=itemData.start.valueOf();var e='end'in itemData?itemData.end.valueOf():itemData.start.valueOf();if(start===null||s<start){start=s;}if(end===null||e>end){end=e;}});if(start!==null&&end!==null){var me=this;// Use the first item for the vertical focus
  var item=this.itemSet.items[ids[0]];var startPos=this._getScrollTop()*-1;var initialVerticalScroll=null;// Setup a handler for each frame of the vertical scroll
  var verticalAnimationFrame=function verticalAnimationFrame(ease,willDraw,done){var verticalScroll=getItemVerticalScroll(me,item);if(verticalScroll===false){return;// We don't need to scroll, so do nothing
  }if(!initialVerticalScroll){initialVerticalScroll=verticalScroll;}if(initialVerticalScroll.itemTop==verticalScroll.itemTop&&!initialVerticalScroll.shouldScroll){return;// We don't need to scroll, so do nothing
  }else if(initialVerticalScroll.itemTop!=verticalScroll.itemTop&&verticalScroll.shouldScroll){// The redraw shifted elements, so reset the animation to correct
  initialVerticalScroll=verticalScroll;startPos=me._getScrollTop()*-1;}var from=startPos;var to=initialVerticalScroll.scrollOffset;var scrollTop=done?to:from+(to-from)*ease;me._setScrollTop(-scrollTop);if(!willDraw){me._redraw();}};// Enforces the final vertical scroll position
  var setFinalVerticalPosition=function setFinalVerticalPosition(){var finalVerticalScroll=getItemVerticalScroll(me,item);if(finalVerticalScroll.shouldScroll&&finalVerticalScroll.itemTop!=initialVerticalScroll.itemTop){me._setScrollTop(-finalVerticalScroll.scrollOffset);me._redraw();}};// Perform one last check at the end to make sure the final vertical
  // position is correct
  var finalVerticalCallback=function finalVerticalCallback(){// Double check we ended at the proper scroll position
  setFinalVerticalPosition();// Let the redraw settle and finalize the position.      
  setTimeout(setFinalVerticalPosition,100);};// calculate the new middle and interval for the window
  var middle=(start+end)/2;var interval=Math.max(this.range.end-this.range.start,(end-start)*1.1);var animation=options&&options.animation!==undefined?options.animation:true;if(!animation){// We aren't animating so set a default so that the final callback forces the vertical location
  initialVerticalScroll={shouldScroll:false,scrollOffset:-1,itemTop:-1};}this.range.setRange(middle-interval/2,middle+interval/2,{animation:animation},finalVerticalCallback,verticalAnimationFrame);}};/**
   * Set Timeline window such that it fits all items
   * @param {Object} [options]  Available options:
   *                                `animation: boolean | {duration: number, easingFunction: string}`
   *                                    If true (default), the range is animated
   *                                    smoothly to the new window. An object can be
   *                                    provided to specify duration and easing function.
   *                                    Default duration is 500 ms, and default easing
   *                                    function is 'easeInOutQuad'.
   * @param {function} [callback]
   */Timeline.prototype.fit=function(options,callback){var animation=options&&options.animation!==undefined?options.animation:true;var range;var dataset=this.itemsData&&this.itemsData.getDataSet();if(dataset.length===1&&dataset.get()[0].end===undefined){// a single item -> don't fit, just show a range around the item from -4 to +3 days
  range=this.getDataRange();this.moveTo(range.min.valueOf(),{animation:animation},callback);}else{// exactly fit the items (plus a small margin)
  range=this.getItemRange();this.range.setRange(range.min,range.max,{animation:animation},callback);}};/**
   *
   * @param {vis.Item} item
   * @returns {number}
   */function getStart(item){return util$4.convert(item.data.start,'Date').valueOf();}/**
   *
   * @param {vis.Item} item
   * @returns {number}
   */function getEnd(item){var end=item.data.end!=undefined?item.data.end:item.data.start;return util$4.convert(end,'Date').valueOf();}/**
   * @param {vis.Timeline} timeline
   * @param {vis.Item} item
   * @return {{shouldScroll: bool, scrollOffset: number, itemTop: number}}
   */function getItemVerticalScroll(timeline,item){if(!item.parent){// The item no longer exists, so ignore this focus.
  return false;}var leftHeight=timeline.props.leftContainer.height;var contentHeight=timeline.props.left.height;var group=item.parent;var offset=group.top;var shouldScroll=true;var orientation=timeline.timeAxis.options.orientation.axis;var itemTop=function itemTop(){if(orientation=="bottom"){return group.height-item.top-item.height;}else{return item.top;}};var currentScrollHeight=timeline._getScrollTop()*-1;var targetOffset=offset+itemTop();var height=item.height;if(targetOffset<currentScrollHeight){if(offset+leftHeight<=offset+itemTop()+height){offset+=itemTop()-timeline.itemSet.options.margin.item.vertical;}}else if(targetOffset+height>currentScrollHeight+leftHeight){offset+=itemTop()+height-leftHeight+timeline.itemSet.options.margin.item.vertical;}else{shouldScroll=false;}offset=Math.min(offset,contentHeight-leftHeight);return {shouldScroll:shouldScroll,scrollOffset:offset,itemTop:targetOffset};}/**
   * Determine the range of the items, taking into account their actual width
   * and a margin of 10 pixels on both sides.
   *
   * @returns {{min: Date, max: Date}}
   */Timeline.prototype.getItemRange=function(){// get a rough approximation for the range based on the items start and end dates
  var range=this.getDataRange();var min=range.min!==null?range.min.valueOf():null;var max=range.max!==null?range.max.valueOf():null;var minItem=null;var maxItem=null;if(min!=null&&max!=null){var interval=max-min;// ms
  if(interval<=0){interval=10;}var factor=interval/this.props.center.width;var redrawQueue={};var redrawQueueLength=0;// collect redraw functions
  util$4.forEach(this.itemSet.items,function(item,key){if(item.groupShowing){var returnQueue=true;redrawQueue[key]=item.redraw(returnQueue);redrawQueueLength=redrawQueue[key].length;}});var needRedraw=redrawQueueLength>0;if(needRedraw){// redraw all regular items
  for(var i=0;i<redrawQueueLength;i++){util$4.forEach(redrawQueue,function(fns){fns[i]();});}}// calculate the date of the left side and right side of the items given
  util$4.forEach(this.itemSet.items,function(item){var start=getStart(item);var end=getEnd(item);var startSide;var endSide;if(this.options.rtl){startSide=start-(item.getWidthRight()+10)*factor;endSide=end+(item.getWidthLeft()+10)*factor;}else{startSide=start-(item.getWidthLeft()+10)*factor;endSide=end+(item.getWidthRight()+10)*factor;}if(startSide<min){min=startSide;minItem=item;}if(endSide>max){max=endSide;maxItem=item;}}.bind(this));if(minItem&&maxItem){var lhs=minItem.getWidthLeft()+10;var rhs=maxItem.getWidthRight()+10;var delta=this.props.center.width-lhs-rhs;// px
  if(delta>0){if(this.options.rtl){min=getStart(minItem)-rhs*interval/delta;// ms
  max=getEnd(maxItem)+lhs*interval/delta;// ms
  }else{min=getStart(minItem)-lhs*interval/delta;// ms
  max=getEnd(maxItem)+rhs*interval/delta;// ms
  }}}}return {min:min!=null?new Date(min):null,max:max!=null?new Date(max):null};};/**
   * Calculate the data range of the items start and end dates
   * @returns {{min: Date, max: Date}}
   */Timeline.prototype.getDataRange=function(){var min=null;var max=null;var dataset=this.itemsData&&this.itemsData.getDataSet();if(dataset){dataset.forEach(function(item){var start=util$4.convert(item.start,'Date').valueOf();var end=util$4.convert(item.end!=undefined?item.end:item.start,'Date').valueOf();if(min===null||start<min){min=start;}if(max===null||end>max){max=end;}});}return {min:min!=null?new Date(min):null,max:max!=null?new Date(max):null};};/**
   * Generate Timeline related information from an event
   * @param {Event} event
   * @return {Object} An object with related information, like on which area
   *                  The event happened, whether clicked on an item, etc.
   */Timeline.prototype.getEventProperties=function(event){var clientX=event.center?event.center.x:event.clientX;var clientY=event.center?event.center.y:event.clientY;var x;if(this.options.rtl){x=util$4.getAbsoluteRight(this.dom.centerContainer)-clientX;}else{x=clientX-util$4.getAbsoluteLeft(this.dom.centerContainer);}var y=clientY-util$4.getAbsoluteTop(this.dom.centerContainer);var item=this.itemSet.itemFromTarget(event);var group=this.itemSet.groupFromTarget(event);var customTime=CustomTime.customTimeFromTarget(event);var snap=this.itemSet.options.snap||null;var scale=this.body.util.getScale();var step=this.body.util.getStep();var time=this._toTime(x);var snappedTime=snap?snap(time,scale,step):time;var element=util$4.getTarget(event);var what=null;if(item!=null){what='item';}else if(customTime!=null){what='custom-time';}else if(util$4.hasParent(element,this.timeAxis.dom.foreground)){what='axis';}else if(this.timeAxis2&&util$4.hasParent(element,this.timeAxis2.dom.foreground)){what='axis';}else if(util$4.hasParent(element,this.itemSet.dom.labelSet)){what='group-label';}else if(util$4.hasParent(element,this.currentTime.bar)){what='current-time';}else if(util$4.hasParent(element,this.dom.center)){what='background';}return {event:event,item:item?item.id:null,group:group?group.groupId:null,what:what,pageX:event.srcEvent?event.srcEvent.pageX:event.pageX,pageY:event.srcEvent?event.srcEvent.pageY:event.pageY,x:x,y:y,time:time,snappedTime:snappedTime};};/**
   * Toggle Timeline rolling mode
   */Timeline.prototype.toggleRollingMode=function(){if(this.range.rolling){this.range.stopRolling();}else{if(this.options.rollingMode==undefined){this.setOptions(this.options);}this.range.startRolling();}};var Timeline_1=Timeline;/**
   *
   * @param {number} start
   * @param {number} end
   * @param {boolean} autoScaleStart
   * @param {boolean} autoScaleEnd
   * @param {number} containerHeight
   * @param {number} majorCharHeight
   * @param {boolean} zeroAlign
   * @param {function} formattingFunction
   * @constructor DataScale
   */function DataScale(start,end,autoScaleStart,autoScaleEnd,containerHeight,majorCharHeight){var zeroAlign=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;var formattingFunction=arguments.length>7&&arguments[7]!==undefined?arguments[7]:false;this.majorSteps=[1,2,5,10];this.minorSteps=[0.25,0.5,1,2];this.customLines=null;this.containerHeight=containerHeight;this.majorCharHeight=majorCharHeight;this._start=start;this._end=end;this.scale=1;this.minorStepIdx=-1;this.magnitudefactor=1;this.determineScale();this.zeroAlign=zeroAlign;this.autoScaleStart=autoScaleStart;this.autoScaleEnd=autoScaleEnd;this.formattingFunction=formattingFunction;if(autoScaleStart||autoScaleEnd){var me=this;var roundToMinor=function roundToMinor(value){var rounded=value-value%(me.magnitudefactor*me.minorSteps[me.minorStepIdx]);if(value%(me.magnitudefactor*me.minorSteps[me.minorStepIdx])>0.5*(me.magnitudefactor*me.minorSteps[me.minorStepIdx])){return rounded+me.magnitudefactor*me.minorSteps[me.minorStepIdx];}else{return rounded;}};if(autoScaleStart){this._start-=this.magnitudefactor*2*this.minorSteps[this.minorStepIdx];this._start=roundToMinor(this._start);}if(autoScaleEnd){this._end+=this.magnitudefactor*this.minorSteps[this.minorStepIdx];this._end=roundToMinor(this._end);}this.determineScale();}}DataScale.prototype.setCharHeight=function(majorCharHeight){this.majorCharHeight=majorCharHeight;};DataScale.prototype.setHeight=function(containerHeight){this.containerHeight=containerHeight;};DataScale.prototype.determineScale=function(){var range=this._end-this._start;this.scale=this.containerHeight/range;var minimumStepValue=this.majorCharHeight/this.scale;var orderOfMagnitude=range>0?Math.round(Math.log(range)/Math.LN10):0;this.minorStepIdx=-1;this.magnitudefactor=Math.pow(10,orderOfMagnitude);var start=0;if(orderOfMagnitude<0){start=orderOfMagnitude;}var solutionFound=false;for(var l=start;Math.abs(l)<=Math.abs(orderOfMagnitude);l++){this.magnitudefactor=Math.pow(10,l);for(var j=0;j<this.minorSteps.length;j++){var stepSize=this.magnitudefactor*this.minorSteps[j];if(stepSize>=minimumStepValue){solutionFound=true;this.minorStepIdx=j;break;}}if(solutionFound===true){break;}}};DataScale.prototype.is_major=function(value){return value%(this.magnitudefactor*this.majorSteps[this.minorStepIdx])===0;};DataScale.prototype.getStep=function(){return this.magnitudefactor*this.minorSteps[this.minorStepIdx];};DataScale.prototype.getFirstMajor=function(){var majorStep=this.magnitudefactor*this.majorSteps[this.minorStepIdx];return this.convertValue(this._start+(majorStep-this._start%majorStep)%majorStep);};DataScale.prototype.formatValue=function(current){var returnValue=current.toPrecision(5);if(typeof this.formattingFunction==='function'){returnValue=this.formattingFunction(current);}if(typeof returnValue==='number'){return ''+returnValue;}else if(typeof returnValue==='string'){return returnValue;}else{return current.toPrecision(5);}};DataScale.prototype.getLines=function(){var lines=[];var step=this.getStep();var bottomOffset=(step-this._start%step)%step;for(var i=this._start+bottomOffset;this._end-i>0.00001;i+=step){if(i!=this._start){//Skip the bottom line
  lines.push({major:this.is_major(i),y:this.convertValue(i),val:this.formatValue(i)});}}return lines;};DataScale.prototype.followScale=function(other){var oldStepIdx=this.minorStepIdx;var oldStart=this._start;var oldEnd=this._end;var me=this;var increaseMagnitude=function increaseMagnitude(){me.magnitudefactor*=2;};var decreaseMagnitude=function decreaseMagnitude(){me.magnitudefactor/=2;};if(other.minorStepIdx<=1&&this.minorStepIdx<=1||other.minorStepIdx>1&&this.minorStepIdx>1);else if(other.minorStepIdx<this.minorStepIdx){//I'm 5, they are 4 per major.
  this.minorStepIdx=1;if(oldStepIdx==2){increaseMagnitude();}else{increaseMagnitude();increaseMagnitude();}}else{//I'm 4, they are 5 per major
  this.minorStepIdx=2;if(oldStepIdx==1){decreaseMagnitude();}else{decreaseMagnitude();decreaseMagnitude();}}//Get masters stats:
  var otherZero=other.convertValue(0);var otherStep=other.getStep()*other.scale;var done=false;var count=0;//Loop until magnitude is correct for given constrains.
  while(!done&&count++<5){//Get my stats:
  this.scale=otherStep/(this.minorSteps[this.minorStepIdx]*this.magnitudefactor);var newRange=this.containerHeight/this.scale;//For the case the magnitudefactor has changed:
  this._start=oldStart;this._end=this._start+newRange;var myOriginalZero=this._end*this.scale;var majorStep=this.magnitudefactor*this.majorSteps[this.minorStepIdx];var majorOffset=this.getFirstMajor()-other.getFirstMajor();if(this.zeroAlign){var zeroOffset=otherZero-myOriginalZero;this._end+=zeroOffset/this.scale;this._start=this._end-newRange;}else{if(!this.autoScaleStart){this._start+=majorStep-majorOffset/this.scale;this._end=this._start+newRange;}else{this._start-=majorOffset/this.scale;this._end=this._start+newRange;}}if(!this.autoScaleEnd&&this._end>oldEnd+0.00001){//Need to decrease magnitude to prevent scale overshoot! (end)
  decreaseMagnitude();done=false;continue;}if(!this.autoScaleStart&&this._start<oldStart-0.00001){if(this.zeroAlign&&oldStart>=0){console.warn("Can't adhere to given 'min' range, due to zeroalign");}else{//Need to decrease magnitude to prevent scale overshoot! (start)
  decreaseMagnitude();done=false;continue;}}if(this.autoScaleStart&&this.autoScaleEnd&&newRange<oldEnd-oldStart){increaseMagnitude();done=false;continue;}done=true;}};DataScale.prototype.convertValue=function(value){return this.containerHeight-(value-this._start)*this.scale;};DataScale.prototype.screenToValue=function(pixels){return (this.containerHeight-pixels)/this.scale+this._start;};var DataScale_1=DataScale;/**
   * A horizontal time axis
   * @param {Object} body
   * @param {Object} [options]        See DataAxis.setOptions for the available
   *                                  options.
   * @param {SVGElement} svg
   * @param {vis.LineGraph.options} linegraphOptions
   * @constructor DataAxis
   * @extends Component
   */function DataAxis(body,options,svg,linegraphOptions){this.id=util$4.randomUUID();this.body=body;this.defaultOptions={orientation:'left',// supported: 'left', 'right'
  showMinorLabels:true,showMajorLabels:true,icons:false,majorLinesOffset:7,minorLinesOffset:4,labelOffsetX:10,labelOffsetY:2,iconWidth:20,width:'40px',visible:true,alignZeros:true,left:{range:{min:undefined,max:undefined},format:function format(value){return ''+parseFloat(value.toPrecision(3));},title:{text:undefined,style:undefined}},right:{range:{min:undefined,max:undefined},format:function format(value){return ''+parseFloat(value.toPrecision(3));},title:{text:undefined,style:undefined}}};this.linegraphOptions=linegraphOptions;this.linegraphSVG=svg;this.props={};this.DOMelements={// dynamic elements
  lines:{},labels:{},title:{}};this.dom={};this.scale=undefined;this.range={start:0,end:0};this.options=util$4.extend({},this.defaultOptions);this.conversionFactor=1;this.setOptions(options);this.width=Number((''+this.options.width).replace("px",""));this.minWidth=this.width;this.height=this.linegraphSVG.getBoundingClientRect().height;this.hidden=false;this.stepPixels=25;this.zeroCrossing=-1;this.amountOfSteps=-1;this.lineOffset=0;this.master=true;this.masterAxis=null;this.svgElements={};this.iconsRemoved=false;this.groups={};this.amountOfGroups=0;// create the HTML DOM
  this._create();if(this.scale==undefined){this._redrawLabels();}this.framework={svg:this.svg,svgElements:this.svgElements,options:this.options,groups:this.groups};var me=this;this.body.emitter.on("verticalDrag",function(){me.dom.lineContainer.style.top=me.body.domProps.scrollTop+'px';});}DataAxis.prototype=new Component_1();DataAxis.prototype.addGroup=function(label,graphOptions){if(!this.groups.hasOwnProperty(label)){this.groups[label]=graphOptions;}this.amountOfGroups+=1;};DataAxis.prototype.updateGroup=function(label,graphOptions){if(!this.groups.hasOwnProperty(label)){this.amountOfGroups+=1;}this.groups[label]=graphOptions;};DataAxis.prototype.removeGroup=function(label){if(this.groups.hasOwnProperty(label)){delete this.groups[label];this.amountOfGroups-=1;}};DataAxis.prototype.setOptions=function(options){if(options){var redraw=false;if(this.options.orientation!=options.orientation&&options.orientation!==undefined){redraw=true;}var fields=['orientation','showMinorLabels','showMajorLabels','icons','majorLinesOffset','minorLinesOffset','labelOffsetX','labelOffsetY','iconWidth','width','visible','left','right','alignZeros'];util$4.selectiveDeepExtend(fields,this.options,options);this.minWidth=Number((''+this.options.width).replace("px",""));if(redraw===true&&this.dom.frame){this.hide();this.show();}}};/**
   * Create the HTML DOM for the DataAxis
   */DataAxis.prototype._create=function(){this.dom.frame=document.createElement('div');this.dom.frame.style.width=this.options.width;this.dom.frame.style.height=this.height;this.dom.lineContainer=document.createElement('div');this.dom.lineContainer.style.width='100%';this.dom.lineContainer.style.height=this.height;this.dom.lineContainer.style.position='relative';this.dom.lineContainer.style.visibility='visible';this.dom.lineContainer.style.display='block';// create svg element for graph drawing.
  this.svg=document.createElementNS('http://www.w3.org/2000/svg',"svg");this.svg.style.position="absolute";this.svg.style.top='0px';this.svg.style.height='100%';this.svg.style.width='100%';this.svg.style.display="block";this.dom.frame.appendChild(this.svg);};DataAxis.prototype._redrawGroupIcons=function(){DOMutil$3.prepareElements(this.svgElements);var x;var iconWidth=this.options.iconWidth;var iconHeight=15;var iconOffset=4;var y=iconOffset+0.5*iconHeight;if(this.options.orientation==='left'){x=iconOffset;}else{x=this.width-iconWidth-iconOffset;}var groupArray=Object.keys(this.groups);groupArray.sort(function(a,b){return a<b?-1:1;});for(var i=0;i<groupArray.length;i++){var groupId=groupArray[i];if(this.groups[groupId].visible===true&&(this.linegraphOptions.visibility[groupId]===undefined||this.linegraphOptions.visibility[groupId]===true)){this.groups[groupId].getLegend(iconWidth,iconHeight,this.framework,x,y);y+=iconHeight+iconOffset;}}DOMutil$3.cleanupElements(this.svgElements);this.iconsRemoved=false;};DataAxis.prototype._cleanupIcons=function(){if(this.iconsRemoved===false){DOMutil$3.prepareElements(this.svgElements);DOMutil$3.cleanupElements(this.svgElements);this.iconsRemoved=true;}};/**
   * Create the HTML DOM for the DataAxis
   */DataAxis.prototype.show=function(){this.hidden=false;if(!this.dom.frame.parentNode){if(this.options.orientation==='left'){this.body.dom.left.appendChild(this.dom.frame);}else{this.body.dom.right.appendChild(this.dom.frame);}}if(!this.dom.lineContainer.parentNode){this.body.dom.backgroundHorizontal.appendChild(this.dom.lineContainer);}this.dom.lineContainer.style.display='block';};/**
   * Create the HTML DOM for the DataAxis
   */DataAxis.prototype.hide=function(){this.hidden=true;if(this.dom.frame.parentNode){this.dom.frame.parentNode.removeChild(this.dom.frame);}this.dom.lineContainer.style.display='none';};/**
   * Set a range (start and end)
   * @param {number} start
   * @param {number} end
   */DataAxis.prototype.setRange=function(start,end){this.range.start=start;this.range.end=end;};/**
   * Repaint the component
   * @return {boolean} Returns true if the component is resized
   */DataAxis.prototype.redraw=function(){var resized=false;var activeGroups=0;// Make sure the line container adheres to the vertical scrolling.
  this.dom.lineContainer.style.top=this.body.domProps.scrollTop+'px';for(var groupId in this.groups){if(this.groups.hasOwnProperty(groupId)){if(this.groups[groupId].visible===true&&(this.linegraphOptions.visibility[groupId]===undefined||this.linegraphOptions.visibility[groupId]===true)){activeGroups++;}}}if(this.amountOfGroups===0||activeGroups===0){this.hide();}else{this.show();this.height=Number(this.linegraphSVG.style.height.replace("px",""));// svg offsetheight did not work in firefox and explorer...
  this.dom.lineContainer.style.height=this.height+'px';this.width=this.options.visible===true?Number((''+this.options.width).replace("px","")):0;var props=this.props;var frame=this.dom.frame;// update classname
  frame.className='vis-data-axis';// calculate character width and height
  this._calculateCharSize();var orientation=this.options.orientation;var showMinorLabels=this.options.showMinorLabels;var showMajorLabels=this.options.showMajorLabels;// determine the width and height of the elements for the axis
  props.minorLabelHeight=showMinorLabels?props.minorCharHeight:0;props.majorLabelHeight=showMajorLabels?props.majorCharHeight:0;props.minorLineWidth=this.body.dom.backgroundHorizontal.offsetWidth-this.lineOffset-this.width+2*this.options.minorLinesOffset;props.minorLineHeight=1;props.majorLineWidth=this.body.dom.backgroundHorizontal.offsetWidth-this.lineOffset-this.width+2*this.options.majorLinesOffset;props.majorLineHeight=1;//  take frame offline while updating (is almost twice as fast)
  if(orientation==='left'){frame.style.top='0';frame.style.left='0';frame.style.bottom='';frame.style.width=this.width+'px';frame.style.height=this.height+"px";this.props.width=this.body.domProps.left.width;this.props.height=this.body.domProps.left.height;}else{// right
  frame.style.top='';frame.style.bottom='0';frame.style.left='0';frame.style.width=this.width+'px';frame.style.height=this.height+"px";this.props.width=this.body.domProps.right.width;this.props.height=this.body.domProps.right.height;}resized=this._redrawLabels();resized=this._isResized()||resized;if(this.options.icons===true){this._redrawGroupIcons();}else{this._cleanupIcons();}this._redrawTitle(orientation);}return resized;};/**
   * Repaint major and minor text labels and vertical grid lines
   *
   * @returns {boolean}
   * @private
   */DataAxis.prototype._redrawLabels=function(){var _this=this;var resized=false;DOMutil$3.prepareElements(this.DOMelements.lines);DOMutil$3.prepareElements(this.DOMelements.labels);var orientation=this.options['orientation'];var customRange=this.options[orientation].range!=undefined?this.options[orientation].range:{};//Override range with manual options:
  var autoScaleEnd=true;if(customRange.max!=undefined){this.range.end=customRange.max;autoScaleEnd=false;}var autoScaleStart=true;if(customRange.min!=undefined){this.range.start=customRange.min;autoScaleStart=false;}this.scale=new DataScale_1(this.range.start,this.range.end,autoScaleStart,autoScaleEnd,this.dom.frame.offsetHeight,this.props.majorCharHeight,this.options.alignZeros,this.options[orientation].format);if(this.master===false&&this.masterAxis!=undefined){this.scale.followScale(this.masterAxis.scale);this.dom.lineContainer.style.display='none';}else{this.dom.lineContainer.style.display='block';}//Is updated in side-effect of _redrawLabel():
  this.maxLabelSize=0;var lines=this.scale.getLines();lines.forEach(function(line){var y=line.y;var isMajor=line.major;if(_this.options['showMinorLabels']&&isMajor===false){_this._redrawLabel(y-2,line.val,orientation,'vis-y-axis vis-minor',_this.props.minorCharHeight);}if(isMajor){if(y>=0){_this._redrawLabel(y-2,line.val,orientation,'vis-y-axis vis-major',_this.props.majorCharHeight);}}if(_this.master===true){if(isMajor){_this._redrawLine(y,orientation,'vis-grid vis-horizontal vis-major',_this.options.majorLinesOffset,_this.props.majorLineWidth);}else{_this._redrawLine(y,orientation,'vis-grid vis-horizontal vis-minor',_this.options.minorLinesOffset,_this.props.minorLineWidth);}}});// Note that title is rotated, so we're using the height, not width!
  var titleWidth=0;if(this.options[orientation].title!==undefined&&this.options[orientation].title.text!==undefined){titleWidth=this.props.titleCharHeight;}var offset=this.options.icons===true?Math.max(this.options.iconWidth,titleWidth)+this.options.labelOffsetX+15:titleWidth+this.options.labelOffsetX+15;// this will resize the yAxis to accommodate the labels.
  if(this.maxLabelSize>this.width-offset&&this.options.visible===true){this.width=this.maxLabelSize+offset;this.options.width=this.width+"px";DOMutil$3.cleanupElements(this.DOMelements.lines);DOMutil$3.cleanupElements(this.DOMelements.labels);this.redraw();resized=true;}// this will resize the yAxis if it is too big for the labels.
  else if(this.maxLabelSize<this.width-offset&&this.options.visible===true&&this.width>this.minWidth){this.width=Math.max(this.minWidth,this.maxLabelSize+offset);this.options.width=this.width+"px";DOMutil$3.cleanupElements(this.DOMelements.lines);DOMutil$3.cleanupElements(this.DOMelements.labels);this.redraw();resized=true;}else{DOMutil$3.cleanupElements(this.DOMelements.lines);DOMutil$3.cleanupElements(this.DOMelements.labels);resized=false;}return resized;};DataAxis.prototype.convertValue=function(value){return this.scale.convertValue(value);};DataAxis.prototype.screenToValue=function(x){return this.scale.screenToValue(x);};/**
   * Create a label for the axis at position x
   *
   * @param {number} y
   * @param {string} text
   * @param {'top'|'right'|'bottom'|'left'} orientation
   * @param {string} className
   * @param {number} characterHeight
   * @private
   */DataAxis.prototype._redrawLabel=function(y,text,orientation,className,characterHeight){// reuse redundant label
  var label=DOMutil$3.getDOMElement('div',this.DOMelements.labels,this.dom.frame);//this.dom.redundant.labels.shift();
  label.className=className;label.innerHTML=text;if(orientation==='left'){label.style.left='-'+this.options.labelOffsetX+'px';label.style.textAlign="right";}else{label.style.right='-'+this.options.labelOffsetX+'px';label.style.textAlign="left";}label.style.top=y-0.5*characterHeight+this.options.labelOffsetY+'px';text+='';var largestWidth=Math.max(this.props.majorCharWidth,this.props.minorCharWidth);if(this.maxLabelSize<text.length*largestWidth){this.maxLabelSize=text.length*largestWidth;}};/**
   * Create a minor line for the axis at position y
   * @param {number} y
   * @param {'top'|'right'|'bottom'|'left'} orientation
   * @param {string} className
   * @param {number} offset
   * @param {number} width
   */DataAxis.prototype._redrawLine=function(y,orientation,className,offset,width){if(this.master===true){var line=DOMutil$3.getDOMElement('div',this.DOMelements.lines,this.dom.lineContainer);//this.dom.redundant.lines.shift();
  line.className=className;line.innerHTML='';if(orientation==='left'){line.style.left=this.width-offset+'px';}else{line.style.right=this.width-offset+'px';}line.style.width=width+'px';line.style.top=y+'px';}};/**
   * Create a title for the axis
   * @private
   * @param {'top'|'right'|'bottom'|'left'} orientation
   */DataAxis.prototype._redrawTitle=function(orientation){DOMutil$3.prepareElements(this.DOMelements.title);// Check if the title is defined for this axes
  if(this.options[orientation].title!==undefined&&this.options[orientation].title.text!==undefined){var title=DOMutil$3.getDOMElement('div',this.DOMelements.title,this.dom.frame);title.className='vis-y-axis vis-title vis-'+orientation;title.innerHTML=this.options[orientation].title.text;// Add style - if provided
  if(this.options[orientation].title.style!==undefined){util$4.addCssText(title,this.options[orientation].title.style);}if(orientation==='left'){title.style.left=this.props.titleCharHeight+'px';}else{title.style.right=this.props.titleCharHeight+'px';}title.style.width=this.height+'px';}// we need to clean up in case we did not use all elements.
  DOMutil$3.cleanupElements(this.DOMelements.title);};/**
   * Determine the size of text on the axis (both major and minor axis).
   * The size is calculated only once and then cached in this.props.
   * @private
   */DataAxis.prototype._calculateCharSize=function(){// determine the char width and height on the minor axis
  if(!('minorCharHeight'in this.props)){var textMinor=document.createTextNode('0');var measureCharMinor=document.createElement('div');measureCharMinor.className='vis-y-axis vis-minor vis-measure';measureCharMinor.appendChild(textMinor);this.dom.frame.appendChild(measureCharMinor);this.props.minorCharHeight=measureCharMinor.clientHeight;this.props.minorCharWidth=measureCharMinor.clientWidth;this.dom.frame.removeChild(measureCharMinor);}if(!('majorCharHeight'in this.props)){var textMajor=document.createTextNode('0');var measureCharMajor=document.createElement('div');measureCharMajor.className='vis-y-axis vis-major vis-measure';measureCharMajor.appendChild(textMajor);this.dom.frame.appendChild(measureCharMajor);this.props.majorCharHeight=measureCharMajor.clientHeight;this.props.majorCharWidth=measureCharMajor.clientWidth;this.dom.frame.removeChild(measureCharMajor);}if(!('titleCharHeight'in this.props)){var textTitle=document.createTextNode('0');var measureCharTitle=document.createElement('div');measureCharTitle.className='vis-y-axis vis-title vis-measure';measureCharTitle.appendChild(textTitle);this.dom.frame.appendChild(measureCharTitle);this.props.titleCharHeight=measureCharTitle.clientHeight;this.props.titleCharWidth=measureCharTitle.clientWidth;this.dom.frame.removeChild(measureCharTitle);}};/**
   *
   * @param {number | string} groupId
   * @param {Object} options   // TODO: Describe options
   *
   * @constructor Points
   */function Points(groupId,options){}// eslint-disable-line no-unused-vars
  /**
   * draw the data points
   *
   * @param {Array} dataset
   * @param {GraphGroup} group
   * @param {Object} framework            | SVG DOM element
   * @param {number} [offset]
   */Points.draw=function(dataset,group,framework,offset){offset=offset||0;var callback=getCallback(framework,group);for(var i=0;i<dataset.length;i++){if(!callback){// draw the point the simple way.
  DOMutil$3.drawPoint(dataset[i].screen_x+offset,dataset[i].screen_y,getGroupTemplate(group),framework.svgElements,framework.svg,dataset[i].label);}else{var callbackResult=callback(dataset[i],group);// result might be true, false or an object
  if(callbackResult===true||_typeof$1$2(callbackResult)==='object'){DOMutil$3.drawPoint(dataset[i].screen_x+offset,dataset[i].screen_y,getGroupTemplate(group,callbackResult),framework.svgElements,framework.svg,dataset[i].label);}}}};Points.drawIcon=function(group,x,y,iconWidth,iconHeight,framework){var fillHeight=iconHeight*0.5;var outline=DOMutil$3.getSVGElement("rect",framework.svgElements,framework.svg);outline.setAttributeNS(null,"x",x);outline.setAttributeNS(null,"y",y-fillHeight);outline.setAttributeNS(null,"width",iconWidth);outline.setAttributeNS(null,"height",2*fillHeight);outline.setAttributeNS(null,"class","vis-outline");//Don't call callback on icon
  DOMutil$3.drawPoint(x+0.5*iconWidth,y,getGroupTemplate(group),framework.svgElements,framework.svg);};/**
   *
   * @param {vis.Group} group
   * @param {any} callbackResult
   * @returns {{style: *, styles: (*|string), size: *, className: *}}
   */function getGroupTemplate(group,callbackResult){callbackResult=typeof callbackResult==='undefined'?{}:callbackResult;return {style:callbackResult.style||group.options.drawPoints.style,styles:callbackResult.styles||group.options.drawPoints.styles,size:callbackResult.size||group.options.drawPoints.size,className:callbackResult.className||group.className};}/**
   *
   * @param {Object} framework            | SVG DOM element
   * @param {vis.Group} group
   * @returns {function}
   */function getCallback(framework,group){var callback=undefined;// check for the graph2d onRender
  if(framework.options&&framework.options.drawPoints&&framework.options.drawPoints.onRender&&typeof framework.options.drawPoints.onRender=='function'){callback=framework.options.drawPoints.onRender;}// override it with the group onRender if defined
  if(group.group.options&&group.group.options.drawPoints&&group.group.options.drawPoints.onRender&&typeof group.group.options.drawPoints.onRender=='function'){callback=group.group.options.drawPoints.onRender;}return callback;}var points=Points;/**
   *
   * @param {vis.GraphGroup.id} groupId
   * @param {Object} options   // TODO: Describe options
   * @constructor Bargraph
   */function Bargraph(groupId,options){// eslint-disable-line no-unused-vars
  }Bargraph.drawIcon=function(group,x,y,iconWidth,iconHeight,framework){var fillHeight=iconHeight*0.5;var outline=DOMutil$3.getSVGElement("rect",framework.svgElements,framework.svg);outline.setAttributeNS(null,"x",x);outline.setAttributeNS(null,"y",y-fillHeight);outline.setAttributeNS(null,"width",iconWidth);outline.setAttributeNS(null,"height",2*fillHeight);outline.setAttributeNS(null,"class","vis-outline");var barWidth=Math.round(0.3*iconWidth);var originalWidth=group.options.barChart.width;var scale=originalWidth/barWidth;var bar1Height=Math.round(0.4*iconHeight);var bar2Height=Math.round(0.75*iconHeight);var offset=Math.round((iconWidth-2*barWidth)/3);DOMutil$3.drawBar(x+0.5*barWidth+offset,y+fillHeight-bar1Height-1,barWidth,bar1Height,group.className+' vis-bar',framework.svgElements,framework.svg,group.style);DOMutil$3.drawBar(x+1.5*barWidth+offset+2,y+fillHeight-bar2Height-1,barWidth,bar2Height,group.className+' vis-bar',framework.svgElements,framework.svg,group.style);if(group.options.drawPoints.enabled==true){var groupTemplate={style:group.options.drawPoints.style,styles:group.options.drawPoints.styles,size:group.options.drawPoints.size/scale,className:group.className};DOMutil$3.drawPoint(x+0.5*barWidth+offset,y+fillHeight-bar1Height-1,groupTemplate,framework.svgElements,framework.svg);DOMutil$3.drawPoint(x+1.5*barWidth+offset+2,y+fillHeight-bar2Height-1,groupTemplate,framework.svgElements,framework.svg);}};/**
   * draw a bar graph
   *
   * @param {Array.<vis.GraphGroup.id>} groupIds
   * @param {Object} processedGroupData
   * @param {{svg: Object, svgElements: Array.<Object>, options: Object, groups: Array.<vis.Group>}} framework
   */Bargraph.draw=function(groupIds,processedGroupData,framework){var combinedData=[];var intersections={};var coreDistance;var key,drawData;var group;var i,j;var barPoints=0;// combine all barchart data
  for(i=0;i<groupIds.length;i++){group=framework.groups[groupIds[i]];if(group.options.style==='bar'){if(group.visible===true&&(framework.options.groups.visibility[groupIds[i]]===undefined||framework.options.groups.visibility[groupIds[i]]===true)){for(j=0;j<processedGroupData[groupIds[i]].length;j++){combinedData.push({screen_x:processedGroupData[groupIds[i]][j].screen_x,screen_end:processedGroupData[groupIds[i]][j].screen_end,screen_y:processedGroupData[groupIds[i]][j].screen_y,x:processedGroupData[groupIds[i]][j].x,end:processedGroupData[groupIds[i]][j].end,y:processedGroupData[groupIds[i]][j].y,groupId:groupIds[i],label:processedGroupData[groupIds[i]][j].label});barPoints+=1;}}}}if(barPoints===0){return;}// sort by time and by group
  combinedData.sort(function(a,b){if(a.screen_x===b.screen_x){return a.groupId<b.groupId?-1:1;}else{return a.screen_x-b.screen_x;}});// get intersections
  Bargraph._getDataIntersections(intersections,combinedData);// plot barchart
  for(i=0;i<combinedData.length;i++){group=framework.groups[combinedData[i].groupId];var minWidth=group.options.barChart.minWidth!=undefined?group.options.barChart.minWidth:0.1*group.options.barChart.width;key=combinedData[i].screen_x;var heightOffset=0;if(intersections[key]===undefined){if(i+1<combinedData.length){coreDistance=Math.abs(combinedData[i+1].screen_x-key);}drawData=Bargraph._getSafeDrawData(coreDistance,group,minWidth);}else{var nextKey=i+(intersections[key].amount-intersections[key].resolved);if(nextKey<combinedData.length){coreDistance=Math.abs(combinedData[nextKey].screen_x-key);}drawData=Bargraph._getSafeDrawData(coreDistance,group,minWidth);intersections[key].resolved+=1;if(group.options.stack===true&&group.options.excludeFromStacking!==true){if(combinedData[i].screen_y<group.zeroPosition){heightOffset=intersections[key].accumulatedNegative;intersections[key].accumulatedNegative+=group.zeroPosition-combinedData[i].screen_y;}else{heightOffset=intersections[key].accumulatedPositive;intersections[key].accumulatedPositive+=group.zeroPosition-combinedData[i].screen_y;}}else if(group.options.barChart.sideBySide===true){drawData.width=drawData.width/intersections[key].amount;drawData.offset+=intersections[key].resolved*drawData.width-0.5*drawData.width*(intersections[key].amount+1);}}var dataWidth=drawData.width;var start=combinedData[i].screen_x;// are we drawing explicit boxes? (we supplied an end value)
  if(combinedData[i].screen_end!=undefined){dataWidth=combinedData[i].screen_end-combinedData[i].screen_x;start+=dataWidth*0.5;}else{start+=drawData.offset;}DOMutil$3.drawBar(start,combinedData[i].screen_y-heightOffset,dataWidth,group.zeroPosition-combinedData[i].screen_y,group.className+' vis-bar',framework.svgElements,framework.svg,group.style);// draw points
  if(group.options.drawPoints.enabled===true){var pointData={screen_x:combinedData[i].screen_x,screen_y:combinedData[i].screen_y-heightOffset,x:combinedData[i].x,y:combinedData[i].y,groupId:combinedData[i].groupId,label:combinedData[i].label};points.draw([pointData],group,framework,drawData.offset);//DOMutil.drawPoint(combinedData[i].x + drawData.offset, combinedData[i].y, group, framework.svgElements, framework.svg);
  }}};/**
   * Fill the intersections object with counters of how many datapoints share the same x coordinates
   * @param {Object} intersections
   * @param {Array.<Object>} combinedData
   * @private
   */Bargraph._getDataIntersections=function(intersections,combinedData){// get intersections
  var coreDistance;for(var i=0;i<combinedData.length;i++){if(i+1<combinedData.length){coreDistance=Math.abs(combinedData[i+1].screen_x-combinedData[i].screen_x);}if(i>0){coreDistance=Math.min(coreDistance,Math.abs(combinedData[i-1].screen_x-combinedData[i].screen_x));}if(coreDistance===0){if(intersections[combinedData[i].screen_x]===undefined){intersections[combinedData[i].screen_x]={amount:0,resolved:0,accumulatedPositive:0,accumulatedNegative:0};}intersections[combinedData[i].screen_x].amount+=1;}}};/**
   * Get the width and offset for bargraphs based on the coredistance between datapoints
   *
   * @param {number} coreDistance
   * @param {vis.Group} group
   * @param {number} minWidth
   * @returns {{width: number, offset: number}}
   * @private
   */Bargraph._getSafeDrawData=function(coreDistance,group,minWidth){var width,offset;if(coreDistance<group.options.barChart.width&&coreDistance>0){width=coreDistance<minWidth?minWidth:coreDistance;offset=0;// recalculate offset with the new width;
  if(group.options.barChart.align==='left'){offset-=0.5*coreDistance;}else if(group.options.barChart.align==='right'){offset+=0.5*coreDistance;}}else{// default settings
  width=group.options.barChart.width;offset=0;if(group.options.barChart.align==='left'){offset-=0.5*group.options.barChart.width;}else if(group.options.barChart.align==='right'){offset+=0.5*group.options.barChart.width;}}return {width:width,offset:offset};};Bargraph.getStackedYRange=function(combinedData,groupRanges,groupIds,groupLabel,orientation){if(combinedData.length>0){// sort by time and by group
  combinedData.sort(function(a,b){if(a.screen_x===b.screen_x){return a.groupId<b.groupId?-1:1;}else{return a.screen_x-b.screen_x;}});var intersections={};Bargraph._getDataIntersections(intersections,combinedData);groupRanges[groupLabel]=Bargraph._getStackedYRange(intersections,combinedData);groupRanges[groupLabel].yAxisOrientation=orientation;groupIds.push(groupLabel);}};Bargraph._getStackedYRange=function(intersections,combinedData){var key;var yMin=combinedData[0].screen_y;var yMax=combinedData[0].screen_y;for(var i=0;i<combinedData.length;i++){key=combinedData[i].screen_x;if(intersections[key]===undefined){yMin=yMin>combinedData[i].screen_y?combinedData[i].screen_y:yMin;yMax=yMax<combinedData[i].screen_y?combinedData[i].screen_y:yMax;}else{if(combinedData[i].screen_y<0){intersections[key].accumulatedNegative+=combinedData[i].screen_y;}else{intersections[key].accumulatedPositive+=combinedData[i].screen_y;}}}for(var xpos in intersections){if(intersections.hasOwnProperty(xpos)){yMin=yMin>intersections[xpos].accumulatedNegative?intersections[xpos].accumulatedNegative:yMin;yMin=yMin>intersections[xpos].accumulatedPositive?intersections[xpos].accumulatedPositive:yMin;yMax=yMax<intersections[xpos].accumulatedNegative?intersections[xpos].accumulatedNegative:yMax;yMax=yMax<intersections[xpos].accumulatedPositive?intersections[xpos].accumulatedPositive:yMax;}}return {min:yMin,max:yMax};};var bar=Bargraph;/**
   *
   * @param {vis.GraphGroup.id} groupId
   * @param {Object} options   // TODO: Describe options
   * @constructor Line
   */function Line(groupId,options){// eslint-disable-line no-unused-vars
  }Line.calcPath=function(dataset,group){if(dataset!=null){if(dataset.length>0){var d=[];// construct path from dataset
  if(group.options.interpolation.enabled==true){d=Line._catmullRom(dataset,group);}else{d=Line._linear(dataset);}return d;}}};Line.drawIcon=function(group,x,y,iconWidth,iconHeight,framework){var fillHeight=iconHeight*0.5;var path,fillPath;var outline=DOMutil$3.getSVGElement("rect",framework.svgElements,framework.svg);outline.setAttributeNS(null,"x",x);outline.setAttributeNS(null,"y",y-fillHeight);outline.setAttributeNS(null,"width",iconWidth);outline.setAttributeNS(null,"height",2*fillHeight);outline.setAttributeNS(null,"class","vis-outline");path=DOMutil$3.getSVGElement("path",framework.svgElements,framework.svg);path.setAttributeNS(null,"class",group.className);if(group.style!==undefined){path.setAttributeNS(null,"style",group.style);}path.setAttributeNS(null,"d","M"+x+","+y+" L"+(x+iconWidth)+","+y+"");if(group.options.shaded.enabled==true){fillPath=DOMutil$3.getSVGElement("path",framework.svgElements,framework.svg);if(group.options.shaded.orientation=='top'){fillPath.setAttributeNS(null,"d","M"+x+", "+(y-fillHeight)+"L"+x+","+y+" L"+(x+iconWidth)+","+y+" L"+(x+iconWidth)+","+(y-fillHeight));}else{fillPath.setAttributeNS(null,"d","M"+x+","+y+" "+"L"+x+","+(y+fillHeight)+" "+"L"+(x+iconWidth)+","+(y+fillHeight)+"L"+(x+iconWidth)+","+y);}fillPath.setAttributeNS(null,"class",group.className+" vis-icon-fill");if(group.options.shaded.style!==undefined&&group.options.shaded.style!==""){fillPath.setAttributeNS(null,"style",group.options.shaded.style);}}if(group.options.drawPoints.enabled==true){var groupTemplate={style:group.options.drawPoints.style,styles:group.options.drawPoints.styles,size:group.options.drawPoints.size,className:group.className};DOMutil$3.drawPoint(x+0.5*iconWidth,y,groupTemplate,framework.svgElements,framework.svg);}};Line.drawShading=function(pathArray,group,subPathArray,framework){// append shading to the path
  if(group.options.shaded.enabled==true){var svgHeight=Number(framework.svg.style.height.replace('px',''));var fillPath=DOMutil$3.getSVGElement('path',framework.svgElements,framework.svg);var type="L";if(group.options.interpolation.enabled==true){type="C";}var dFill;var zero=0;if(group.options.shaded.orientation=='top'){zero=0;}else if(group.options.shaded.orientation=='bottom'){zero=svgHeight;}else{zero=Math.min(Math.max(0,group.zeroPosition),svgHeight);}if(group.options.shaded.orientation=='group'&&subPathArray!=null&&subPathArray!=undefined){dFill='M'+pathArray[0][0]+","+pathArray[0][1]+" "+this.serializePath(pathArray,type,false)+' L'+subPathArray[subPathArray.length-1][0]+","+subPathArray[subPathArray.length-1][1]+" "+this.serializePath(subPathArray,type,true)+subPathArray[0][0]+","+subPathArray[0][1]+" Z";}else{dFill='M'+pathArray[0][0]+","+pathArray[0][1]+" "+this.serializePath(pathArray,type,false)+' V'+zero+' H'+pathArray[0][0]+" Z";}fillPath.setAttributeNS(null,'class',group.className+' vis-fill');if(group.options.shaded.style!==undefined){fillPath.setAttributeNS(null,'style',group.options.shaded.style);}fillPath.setAttributeNS(null,'d',dFill);}};/**
   * draw a line graph
   *
   * @param {Array.<Object>} pathArray
   * @param {vis.Group} group
   * @param {{svg: Object, svgElements: Array.<Object>, options: Object, groups: Array.<vis.Group>}} framework
   */Line.draw=function(pathArray,group,framework){if(pathArray!=null&&pathArray!=undefined){var path=DOMutil$3.getSVGElement('path',framework.svgElements,framework.svg);path.setAttributeNS(null,"class",group.className);if(group.style!==undefined){path.setAttributeNS(null,"style",group.style);}var type="L";if(group.options.interpolation.enabled==true){type="C";}// copy properties to path for drawing.
  path.setAttributeNS(null,'d','M'+pathArray[0][0]+","+pathArray[0][1]+" "+this.serializePath(pathArray,type,false));}};Line.serializePath=function(pathArray,type,inverse){if(pathArray.length<2){//Too little data to create a path.
  return "";}var d=type;var i;if(inverse){for(i=pathArray.length-2;i>0;i--){d+=pathArray[i][0]+","+pathArray[i][1]+" ";}}else{for(i=1;i<pathArray.length;i++){d+=pathArray[i][0]+","+pathArray[i][1]+" ";}}return d;};/**
   * This uses an uniform parametrization of the interpolation algorithm:
   * 'On the Parameterization of Catmull-Rom Curves' by Cem Yuksel et al.
   * @param {Array.<Object>} data
   * @returns {string}
   * @private
   */Line._catmullRomUniform=function(data){// catmull rom
  var p0,p1,p2,p3,bp1,bp2;var d=[];d.push([Math.round(data[0].screen_x),Math.round(data[0].screen_y)]);var normalization=1/6;var length=data.length;for(var i=0;i<length-1;i++){p0=i==0?data[0]:data[i-1];p1=data[i];p2=data[i+1];p3=i+2<length?data[i+2]:p2;// Catmull-Rom to Cubic Bezier conversion matrix
  //    0       1       0       0
  //  -1/6      1      1/6      0
  //    0      1/6      1     -1/6
  //    0       0       1       0
  //    bp0 = { x: p1.x,                               y: p1.y };
  bp1={screen_x:(-p0.screen_x+6*p1.screen_x+p2.screen_x)*normalization,screen_y:(-p0.screen_y+6*p1.screen_y+p2.screen_y)*normalization};bp2={screen_x:(p1.screen_x+6*p2.screen_x-p3.screen_x)*normalization,screen_y:(p1.screen_y+6*p2.screen_y-p3.screen_y)*normalization};//    bp0 = { x: p2.x,                               y: p2.y };
  d.push([bp1.screen_x,bp1.screen_y]);d.push([bp2.screen_x,bp2.screen_y]);d.push([p2.screen_x,p2.screen_y]);}return d;};/**
   * This uses either the chordal or centripetal parameterization of the catmull-rom algorithm.
   * By default, the centripetal parameterization is used because this gives the nicest results.
   * These parameterizations are relatively heavy because the distance between 4 points have to be calculated.
   *
   * One optimization can be used to reuse distances since this is a sliding window approach.
   * @param {Array.<Object>} data
   * @param {vis.GraphGroup} group
   * @returns {string}
   * @private
   */Line._catmullRom=function(data,group){var alpha=group.options.interpolation.alpha;if(alpha==0||alpha===undefined){return this._catmullRomUniform(data);}else{var p0,p1,p2,p3,bp1,bp2,d1,d2,d3,A,B,N,M;var d3powA,d2powA,d3pow2A,d2pow2A,d1pow2A,d1powA;var d=[];d.push([Math.round(data[0].screen_x),Math.round(data[0].screen_y)]);var length=data.length;for(var i=0;i<length-1;i++){p0=i==0?data[0]:data[i-1];p1=data[i];p2=data[i+1];p3=i+2<length?data[i+2]:p2;d1=Math.sqrt(Math.pow(p0.screen_x-p1.screen_x,2)+Math.pow(p0.screen_y-p1.screen_y,2));d2=Math.sqrt(Math.pow(p1.screen_x-p2.screen_x,2)+Math.pow(p1.screen_y-p2.screen_y,2));d3=Math.sqrt(Math.pow(p2.screen_x-p3.screen_x,2)+Math.pow(p2.screen_y-p3.screen_y,2));// Catmull-Rom to Cubic Bezier conversion matrix
  // A = 2d1^2a + 3d1^a * d2^a + d3^2a
  // B = 2d3^2a + 3d3^a * d2^a + d2^2a
  // [   0             1            0          0          ]
  // [   -d2^2a /N     A/N          d1^2a /N   0          ]
  // [   0             d3^2a /M     B/M        -d2^2a /M  ]
  // [   0             0            1          0          ]
  d3powA=Math.pow(d3,alpha);d3pow2A=Math.pow(d3,2*alpha);d2powA=Math.pow(d2,alpha);d2pow2A=Math.pow(d2,2*alpha);d1powA=Math.pow(d1,alpha);d1pow2A=Math.pow(d1,2*alpha);A=2*d1pow2A+3*d1powA*d2powA+d2pow2A;B=2*d3pow2A+3*d3powA*d2powA+d2pow2A;N=3*d1powA*(d1powA+d2powA);if(N>0){N=1/N;}M=3*d3powA*(d3powA+d2powA);if(M>0){M=1/M;}bp1={screen_x:(-d2pow2A*p0.screen_x+A*p1.screen_x+d1pow2A*p2.screen_x)*N,screen_y:(-d2pow2A*p0.screen_y+A*p1.screen_y+d1pow2A*p2.screen_y)*N};bp2={screen_x:(d3pow2A*p1.screen_x+B*p2.screen_x-d2pow2A*p3.screen_x)*M,screen_y:(d3pow2A*p1.screen_y+B*p2.screen_y-d2pow2A*p3.screen_y)*M};if(bp1.screen_x==0&&bp1.screen_y==0){bp1=p1;}if(bp2.screen_x==0&&bp2.screen_y==0){bp2=p2;}d.push([bp1.screen_x,bp1.screen_y]);d.push([bp2.screen_x,bp2.screen_y]);d.push([p2.screen_x,p2.screen_y]);}return d;}};/**
   * this generates the SVG path for a linear drawing between datapoints.
   * @param {Array.<Object>} data
   * @returns {string}
   * @private
   */Line._linear=function(data){// linear
  var d=[];for(var i=0;i<data.length;i++){d.push([data[i].screen_x,data[i].screen_y]);}return d;};var line=Line;/**
   * /**
   * @param {object} group            | the object of the group from the dataset
   * @param {string} groupId          | ID of the group
   * @param {object} options          | the default options
   * @param {array} groupsUsingDefaultStyles  | this array has one entree.
   *                                            It is passed as an array so it is passed by reference.
   *                                            It enumerates through the default styles
   * @constructor GraphGroup
   */function GraphGroup(group,groupId,options,groupsUsingDefaultStyles){this.id=groupId;var fields=['sampling','style','sort','yAxisOrientation','barChart','drawPoints','shaded','interpolation','zIndex','excludeFromStacking','excludeFromLegend'];this.options=util$4.selectiveBridgeObject(fields,options);this.usingDefaultStyle=group.className===undefined;this.groupsUsingDefaultStyles=groupsUsingDefaultStyles;this.zeroPosition=0;this.update(group);if(this.usingDefaultStyle==true){this.groupsUsingDefaultStyles[0]+=1;}this.itemsData=[];this.visible=group.visible===undefined?true:group.visible;}/**
   * this loads a reference to all items in this group into this group.
   * @param {array} items
   */GraphGroup.prototype.setItems=function(items){if(items!=null){this.itemsData=items;if(this.options.sort==true){util$4.insertSort(this.itemsData,function(a,b){return a.x>b.x?1:-1;});}}else{this.itemsData=[];}};GraphGroup.prototype.getItems=function(){return this.itemsData;};/**
   * this is used for barcharts and shading, this way, we only have to calculate it once.
   * @param {number} pos
   */GraphGroup.prototype.setZeroPosition=function(pos){this.zeroPosition=pos;};/**
   * set the options of the graph group over the default options.
   * @param {Object} options
   */GraphGroup.prototype.setOptions=function(options){if(options!==undefined){var fields=['sampling','style','sort','yAxisOrientation','barChart','zIndex','excludeFromStacking','excludeFromLegend'];util$4.selectiveDeepExtend(fields,this.options,options);// if the group's drawPoints is a function delegate the callback to the onRender property
  if(typeof options.drawPoints=='function'){options.drawPoints={onRender:options.drawPoints};}util$4.mergeOptions(this.options,options,'interpolation');util$4.mergeOptions(this.options,options,'drawPoints');util$4.mergeOptions(this.options,options,'shaded');if(options.interpolation){if(_typeof$1$2(options.interpolation)=='object'){if(options.interpolation.parametrization){if(options.interpolation.parametrization=='uniform'){this.options.interpolation.alpha=0;}else if(options.interpolation.parametrization=='chordal'){this.options.interpolation.alpha=1.0;}else{this.options.interpolation.parametrization='centripetal';this.options.interpolation.alpha=0.5;}}}}}};/**
   * this updates the current group class with the latest group dataset entree, used in _updateGroup in linegraph
   * @param {vis.Group} group
   */GraphGroup.prototype.update=function(group){this.group=group;this.content=group.content||'graph';this.className=group.className||this.className||'vis-graph-group'+this.groupsUsingDefaultStyles[0]%10;this.visible=group.visible===undefined?true:group.visible;this.style=group.style;this.setOptions(group.options);};/**
   * return the legend entree for this group.
   *
   * @param {number} iconWidth
   * @param {number} iconHeight
   * @param {{svg: (*|Element), svgElements: Object, options: Object, groups: Array.<Object>}} framework
   * @param {number} x
   * @param {number} y
   * @returns {{icon: (*|Element), label: (*|string), orientation: *}}
   */GraphGroup.prototype.getLegend=function(iconWidth,iconHeight,framework,x,y){if(framework==undefined||framework==null){var svg=document.createElementNS('http://www.w3.org/2000/svg',"svg");framework={svg:svg,svgElements:{},options:this.options,groups:[this]};}if(x==undefined||x==null){x=0;}if(y==undefined||y==null){y=0.5*iconHeight;}switch(this.options.style){case"line":line.drawIcon(this,x,y,iconWidth,iconHeight,framework);break;case"points"://explicit no break
  case"point":points.drawIcon(this,x,y,iconWidth,iconHeight,framework);break;case"bar":bar.drawIcon(this,x,y,iconWidth,iconHeight,framework);break;}return {icon:framework.svg,label:this.content,orientation:this.options.yAxisOrientation};};GraphGroup.prototype.getYRange=function(groupData){var yMin=groupData[0].y;var yMax=groupData[0].y;for(var j=0;j<groupData.length;j++){yMin=yMin>groupData[j].y?groupData[j].y:yMin;yMax=yMax<groupData[j].y?groupData[j].y:yMax;}return {min:yMin,max:yMax,yAxisOrientation:this.options.yAxisOrientation};};var GraphGroup_1=GraphGroup;/**
   * Legend for Graph2d
   *
   * @param {vis.Graph2d.body} body
   * @param {vis.Graph2d.options} options
   * @param {number} side
   * @param {vis.LineGraph.options} linegraphOptions
   * @constructor Legend
   * @extends Component
   */function Legend(body,options,side,linegraphOptions){this.body=body;this.defaultOptions={enabled:false,icons:true,iconSize:20,iconSpacing:6,left:{visible:true,position:'top-left'// top/bottom - left,center,right
  },right:{visible:true,position:'top-right'// top/bottom - left,center,right
  }};this.side=side;this.options=util$4.extend({},this.defaultOptions);this.linegraphOptions=linegraphOptions;this.svgElements={};this.dom={};this.groups={};this.amountOfGroups=0;this._create();this.framework={svg:this.svg,svgElements:this.svgElements,options:this.options,groups:this.groups};this.setOptions(options);}Legend.prototype=new Component_1();Legend.prototype.clear=function(){this.groups={};this.amountOfGroups=0;};Legend.prototype.addGroup=function(label,graphOptions){// Include a group only if the group option 'excludeFromLegend: false' is not set.
  if(graphOptions.options.excludeFromLegend!=true){if(!this.groups.hasOwnProperty(label)){this.groups[label]=graphOptions;}this.amountOfGroups+=1;}};Legend.prototype.updateGroup=function(label,graphOptions){this.groups[label]=graphOptions;};Legend.prototype.removeGroup=function(label){if(this.groups.hasOwnProperty(label)){delete this.groups[label];this.amountOfGroups-=1;}};Legend.prototype._create=function(){this.dom.frame=document.createElement('div');this.dom.frame.className='vis-legend';this.dom.frame.style.position="absolute";this.dom.frame.style.top="10px";this.dom.frame.style.display="block";this.dom.textArea=document.createElement('div');this.dom.textArea.className='vis-legend-text';this.dom.textArea.style.position="relative";this.dom.textArea.style.top="0px";this.svg=document.createElementNS('http://www.w3.org/2000/svg',"svg");this.svg.style.position='absolute';this.svg.style.top=0+'px';this.svg.style.width=this.options.iconSize+5+'px';this.svg.style.height='100%';this.dom.frame.appendChild(this.svg);this.dom.frame.appendChild(this.dom.textArea);};/**
   * Hide the component from the DOM
   */Legend.prototype.hide=function(){// remove the frame containing the items
  if(this.dom.frame.parentNode){this.dom.frame.parentNode.removeChild(this.dom.frame);}};/**
   * Show the component in the DOM (when not already visible).
   */Legend.prototype.show=function(){// show frame containing the items
  if(!this.dom.frame.parentNode){this.body.dom.center.appendChild(this.dom.frame);}};Legend.prototype.setOptions=function(options){var fields=['enabled','orientation','icons','left','right'];util$4.selectiveDeepExtend(fields,this.options,options);};Legend.prototype.redraw=function(){var activeGroups=0;var groupArray=Object.keys(this.groups);groupArray.sort(function(a,b){return a<b?-1:1;});for(var i=0;i<groupArray.length;i++){var groupId=groupArray[i];if(this.groups[groupId].visible==true&&(this.linegraphOptions.visibility[groupId]===undefined||this.linegraphOptions.visibility[groupId]==true)){activeGroups++;}}if(this.options[this.side].visible==false||this.amountOfGroups==0||this.options.enabled==false||activeGroups==0){this.hide();}else{this.show();if(this.options[this.side].position=='top-left'||this.options[this.side].position=='bottom-left'){this.dom.frame.style.left='4px';this.dom.frame.style.textAlign="left";this.dom.textArea.style.textAlign="left";this.dom.textArea.style.left=this.options.iconSize+15+'px';this.dom.textArea.style.right='';this.svg.style.left=0+'px';this.svg.style.right='';}else{this.dom.frame.style.right='4px';this.dom.frame.style.textAlign="right";this.dom.textArea.style.textAlign="right";this.dom.textArea.style.right=this.options.iconSize+15+'px';this.dom.textArea.style.left='';this.svg.style.right=0+'px';this.svg.style.left='';}if(this.options[this.side].position=='top-left'||this.options[this.side].position=='top-right'){this.dom.frame.style.top=4-Number(this.body.dom.center.style.top.replace("px",""))+'px';this.dom.frame.style.bottom='';}else{var scrollableHeight=this.body.domProps.center.height-this.body.domProps.centerContainer.height;this.dom.frame.style.bottom=4+scrollableHeight+Number(this.body.dom.center.style.top.replace("px",""))+'px';this.dom.frame.style.top='';}if(this.options.icons==false){this.dom.frame.style.width=this.dom.textArea.offsetWidth+10+'px';this.dom.textArea.style.right='';this.dom.textArea.style.left='';this.svg.style.width='0px';}else{this.dom.frame.style.width=this.options.iconSize+15+this.dom.textArea.offsetWidth+10+'px';this.drawLegendIcons();}var content='';for(i=0;i<groupArray.length;i++){groupId=groupArray[i];if(this.groups[groupId].visible==true&&(this.linegraphOptions.visibility[groupId]===undefined||this.linegraphOptions.visibility[groupId]==true)){content+=this.groups[groupId].content+'<br />';}}this.dom.textArea.innerHTML=content;this.dom.textArea.style.lineHeight=0.75*this.options.iconSize+this.options.iconSpacing+'px';}};Legend.prototype.drawLegendIcons=function(){if(this.dom.frame.parentNode){var groupArray=Object.keys(this.groups);groupArray.sort(function(a,b){return a<b?-1:1;});// this resets the elements so the order is maintained
  DOMutil$3.resetElements(this.svgElements);var padding=window.getComputedStyle(this.dom.frame).paddingTop;var iconOffset=Number(padding.replace('px',''));var x=iconOffset;var iconWidth=this.options.iconSize;var iconHeight=0.75*this.options.iconSize;var y=iconOffset+0.5*iconHeight+3;this.svg.style.width=iconWidth+5+iconOffset+'px';for(var i=0;i<groupArray.length;i++){var groupId=groupArray[i];if(this.groups[groupId].visible==true&&(this.linegraphOptions.visibility[groupId]===undefined||this.linegraphOptions.visibility[groupId]==true)){this.groups[groupId].getLegend(iconWidth,iconHeight,this.framework,x,y);y+=iconHeight+this.options.iconSpacing;}}}};var Legend_1=Legend;var DataSet$2$2=index$3.DataSet;var DataView$2$2=index$3.DataView;var UNGROUPED$1='__ungrouped__';// reserved group id for ungrouped items
  /**
   * This is the constructor of the LineGraph. It requires a Timeline body and options.
   *
   * @param {vis.Timeline.body} body
   * @param {Object} options
   * @constructor LineGraph
   * @extends Component
   */function LineGraph(body,options){this.id=util$4.randomUUID();this.body=body;this.defaultOptions={yAxisOrientation:'left',defaultGroup:'default',sort:true,sampling:true,stack:false,graphHeight:'400px',shaded:{enabled:false,orientation:'bottom'// top, bottom, zero
  },style:'line',// line, bar
  barChart:{width:50,sideBySide:false,align:'center'// left, center, right
  },interpolation:{enabled:true,parametrization:'centripetal',// uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)
  alpha:0.5},drawPoints:{enabled:true,size:6,style:'square'// square, circle
  },dataAxis:{},//Defaults are done on DataAxis level
  legend:{},//Defaults are done on Legend level
  groups:{visibility:{}}};// options is shared by this lineGraph and all its items
  this.options=util$4.extend({},this.defaultOptions);this.dom={};this.props={};this.hammer=null;this.groups={};this.abortedGraphUpdate=false;this.updateSVGheight=false;this.updateSVGheightOnResize=false;this.forceGraphUpdate=true;var me=this;this.itemsData=null;// DataSet
  this.groupsData=null;// DataSet
  // listeners for the DataSet of the items
  this.itemListeners={'add':function add(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onAdd(params.items);},'update':function update(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onUpdate(params.items);},'remove':function remove(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onRemove(params.items);}};// listeners for the DataSet of the groups
  this.groupListeners={'add':function add(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onAddGroups(params.items);},'update':function update(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onUpdateGroups(params.items);},'remove':function remove(event,params,senderId){// eslint-disable-line no-unused-vars
  me._onRemoveGroups(params.items);}};this.items={};// object with an Item for every data item
  this.selection=[];// list with the ids of all selected nodes
  this.lastStart=this.body.range.start;this.touchParams={};// stores properties while dragging
  this.svgElements={};this.setOptions(options);this.groupsUsingDefaultStyles=[0];this.body.emitter.on('rangechanged',function(){me.lastStart=me.body.range.start;me.svg.style.left=util$4.option.asSize(-me.props.width);me.forceGraphUpdate=true;//Is this local redraw necessary? (Core also does a change event!)
  me.redraw.call(me);});// create the HTML DOM
  this._create();this.framework={svg:this.svg,svgElements:this.svgElements,options:this.options,groups:this.groups};}LineGraph.prototype=new Component_1();/**
   * Create the HTML DOM for the ItemSet
   */LineGraph.prototype._create=function(){var frame=document.createElement('div');frame.className='vis-line-graph';this.dom.frame=frame;// create svg element for graph drawing.
  this.svg=document.createElementNS('http://www.w3.org/2000/svg','svg');this.svg.style.position='relative';this.svg.style.height=(''+this.options.graphHeight).replace('px','')+'px';this.svg.style.display='block';frame.appendChild(this.svg);// data axis
  this.options.dataAxis.orientation='left';this.yAxisLeft=new DataAxis(this.body,this.options.dataAxis,this.svg,this.options.groups);this.options.dataAxis.orientation='right';this.yAxisRight=new DataAxis(this.body,this.options.dataAxis,this.svg,this.options.groups);delete this.options.dataAxis.orientation;// legends
  this.legendLeft=new Legend_1(this.body,this.options.legend,'left',this.options.groups);this.legendRight=new Legend_1(this.body,this.options.legend,'right',this.options.groups);this.show();};/**
   * set the options of the LineGraph. the mergeOptions is used for subObjects that have an enabled element.
   * @param {object} options
   */LineGraph.prototype.setOptions=function(options){if(options){var fields=['sampling','defaultGroup','stack','height','graphHeight','yAxisOrientation','style','barChart','dataAxis','sort','groups'];if(options.graphHeight===undefined&&options.height!==undefined){this.updateSVGheight=true;this.updateSVGheightOnResize=true;}else if(this.body.domProps.centerContainer.height!==undefined&&options.graphHeight!==undefined){if(parseInt((options.graphHeight+'').replace("px",''))<this.body.domProps.centerContainer.height){this.updateSVGheight=true;}}util$4.selectiveDeepExtend(fields,this.options,options);util$4.mergeOptions(this.options,options,'interpolation');util$4.mergeOptions(this.options,options,'drawPoints');util$4.mergeOptions(this.options,options,'shaded');util$4.mergeOptions(this.options,options,'legend');if(options.interpolation){if(_typeof$1$2(options.interpolation)=='object'){if(options.interpolation.parametrization){if(options.interpolation.parametrization=='uniform'){this.options.interpolation.alpha=0;}else if(options.interpolation.parametrization=='chordal'){this.options.interpolation.alpha=1.0;}else{this.options.interpolation.parametrization='centripetal';this.options.interpolation.alpha=0.5;}}}}if(this.yAxisLeft){if(options.dataAxis!==undefined){this.yAxisLeft.setOptions(this.options.dataAxis);this.yAxisRight.setOptions(this.options.dataAxis);}}if(this.legendLeft){if(options.legend!==undefined){this.legendLeft.setOptions(this.options.legend);this.legendRight.setOptions(this.options.legend);}}if(this.groups.hasOwnProperty(UNGROUPED$1)){this.groups[UNGROUPED$1].setOptions(options);}}// this is used to redraw the graph if the visibility of the groups is changed.
  if(this.dom.frame){//not on initial run?
  this.forceGraphUpdate=true;this.body.emitter.emit("_change",{queue:true});}};/**
   * Hide the component from the DOM
   */LineGraph.prototype.hide=function(){// remove the frame containing the items
  if(this.dom.frame.parentNode){this.dom.frame.parentNode.removeChild(this.dom.frame);}};/**
   * Show the component in the DOM (when not already visible).
   */LineGraph.prototype.show=function(){// show frame containing the items
  if(!this.dom.frame.parentNode){this.body.dom.center.appendChild(this.dom.frame);}};/**
   * Set items
   * @param {vis.DataSet | null} items
   */LineGraph.prototype.setItems=function(items){var me=this,ids,oldItemsData=this.itemsData;// replace the dataset
  if(!items){this.itemsData=null;}else if(items instanceof DataSet$2$2||items instanceof DataView$2$2){this.itemsData=items;}else{throw new TypeError('Data must be an instance of DataSet or DataView');}if(oldItemsData){// unsubscribe from old dataset
  util$4.forEach(this.itemListeners,function(callback,event){oldItemsData.off(event,callback);});// remove all drawn items
  ids=oldItemsData.getIds();this._onRemove(ids);}if(this.itemsData){// subscribe to new dataset
  var id=this.id;util$4.forEach(this.itemListeners,function(callback,event){me.itemsData.on(event,callback,id);});// add all new items
  ids=this.itemsData.getIds();this._onAdd(ids);}};/**
   * Set groups
   * @param {vis.DataSet} groups
   */LineGraph.prototype.setGroups=function(groups){var me=this;var ids;// unsubscribe from current dataset
  if(this.groupsData){util$4.forEach(this.groupListeners,function(callback,event){me.groupsData.off(event,callback);});// remove all drawn groups
  ids=this.groupsData.getIds();this.groupsData=null;for(var i=0;i<ids.length;i++){this._removeGroup(ids[i]);}}// replace the dataset
  if(!groups){this.groupsData=null;}else if(groups instanceof DataSet$2$2||groups instanceof DataView$2$2){this.groupsData=groups;}else{throw new TypeError('Data must be an instance of DataSet or DataView');}if(this.groupsData){// subscribe to new dataset
  var id=this.id;util$4.forEach(this.groupListeners,function(callback,event){me.groupsData.on(event,callback,id);});// draw all ms
  ids=this.groupsData.getIds();this._onAddGroups(ids);}};LineGraph.prototype._onUpdate=function(ids){this._updateAllGroupData(ids);};LineGraph.prototype._onAdd=function(ids){this._onUpdate(ids);};LineGraph.prototype._onRemove=function(ids){this._onUpdate(ids);};LineGraph.prototype._onUpdateGroups=function(groupIds){this._updateAllGroupData(null,groupIds);};LineGraph.prototype._onAddGroups=function(groupIds){this._onUpdateGroups(groupIds);};/**
   * this cleans the group out off the legends and the dataaxis, updates the ungrouped and updates the graph
   * @param {Array} groupIds
   * @private
   */LineGraph.prototype._onRemoveGroups=function(groupIds){for(var i=0;i<groupIds.length;i++){this._removeGroup(groupIds[i]);}this.forceGraphUpdate=true;this.body.emitter.emit("_change",{queue:true});};/**
   * this cleans the group out off the legends and the dataaxis
   * @param {vis.GraphGroup.id} groupId
   * @private
   */LineGraph.prototype._removeGroup=function(groupId){if(this.groups.hasOwnProperty(groupId)){if(this.groups[groupId].options.yAxisOrientation=='right'){this.yAxisRight.removeGroup(groupId);this.legendRight.removeGroup(groupId);this.legendRight.redraw();}else{this.yAxisLeft.removeGroup(groupId);this.legendLeft.removeGroup(groupId);this.legendLeft.redraw();}delete this.groups[groupId];}};/**
   * update a group object with the group dataset entree
   *
   * @param {vis.GraphGroup} group
   * @param {vis.GraphGroup.id} groupId
   * @private
   */LineGraph.prototype._updateGroup=function(group,groupId){if(!this.groups.hasOwnProperty(groupId)){this.groups[groupId]=new GraphGroup_1(group,groupId,this.options,this.groupsUsingDefaultStyles);if(this.groups[groupId].options.yAxisOrientation=='right'){this.yAxisRight.addGroup(groupId,this.groups[groupId]);this.legendRight.addGroup(groupId,this.groups[groupId]);}else{this.yAxisLeft.addGroup(groupId,this.groups[groupId]);this.legendLeft.addGroup(groupId,this.groups[groupId]);}}else{this.groups[groupId].update(group);if(this.groups[groupId].options.yAxisOrientation=='right'){this.yAxisRight.updateGroup(groupId,this.groups[groupId]);this.legendRight.updateGroup(groupId,this.groups[groupId]);//If yAxisOrientation changed, clean out the group from the other axis.
  this.yAxisLeft.removeGroup(groupId);this.legendLeft.removeGroup(groupId);}else{this.yAxisLeft.updateGroup(groupId,this.groups[groupId]);this.legendLeft.updateGroup(groupId,this.groups[groupId]);//If yAxisOrientation changed, clean out the group from the other axis.
  this.yAxisRight.removeGroup(groupId);this.legendRight.removeGroup(groupId);}}this.legendLeft.redraw();this.legendRight.redraw();};/**
   * this updates all groups, it is used when there is an update the the itemset.
   *
   * @param  {Array} ids
   * @param  {Array} groupIds
   * @private
   */LineGraph.prototype._updateAllGroupData=function(ids,groupIds){if(this.itemsData!=null){var groupsContent={};var items=this.itemsData.get();var fieldId=this.itemsData._fieldId;var idMap={};if(ids){ids.map(function(id){idMap[id]=id;});}//pre-Determine array sizes, for more efficient memory claim
  var groupCounts={};for(var i=0;i<items.length;i++){var item=items[i];var groupId=item.group;if(groupId===null||groupId===undefined){groupId=UNGROUPED$1;}groupCounts.hasOwnProperty(groupId)?groupCounts[groupId]++:groupCounts[groupId]=1;}//Pre-load arrays from existing groups if items are not changed (not in ids)
  var existingItemsMap={};if(!groupIds&&ids){for(groupId in this.groups){if(this.groups.hasOwnProperty(groupId)){group=this.groups[groupId];var existing_items=group.getItems();groupsContent[groupId]=existing_items.filter(function(item){existingItemsMap[item[fieldId]]=item[fieldId];return item[fieldId]!==idMap[item[fieldId]];});var newLength=groupCounts[groupId];groupCounts[groupId]-=groupsContent[groupId].length;if(groupsContent[groupId].length<newLength){groupsContent[groupId][newLength-1]={};}}}}//Now insert data into the arrays.
  for(i=0;i<items.length;i++){item=items[i];groupId=item.group;if(groupId===null||groupId===undefined){groupId=UNGROUPED$1;}if(!groupIds&&ids&&item[fieldId]!==idMap[item[fieldId]]&&existingItemsMap.hasOwnProperty(item[fieldId])){continue;}if(!groupsContent.hasOwnProperty(groupId)){groupsContent[groupId]=new Array(groupCounts[groupId]);}//Copy data (because of unmodifiable DataView input.
  var extended=util$4.bridgeObject(item);extended.x=util$4.convert(item.x,'Date');extended.end=util$4.convert(item.end,'Date');extended.orginalY=item.y;//real Y
  extended.y=Number(item.y);extended[fieldId]=item[fieldId];var index=groupsContent[groupId].length-groupCounts[groupId]--;groupsContent[groupId][index]=extended;}//Make sure all groups are present, to allow removal of old groups
  for(groupId in this.groups){if(this.groups.hasOwnProperty(groupId)){if(!groupsContent.hasOwnProperty(groupId)){groupsContent[groupId]=new Array(0);}}}//Update legendas, style and axis
  for(groupId in groupsContent){if(groupsContent.hasOwnProperty(groupId)){if(groupsContent[groupId].length==0){if(this.groups.hasOwnProperty(groupId)){this._removeGroup(groupId);}}else{var group=undefined;if(this.groupsData!=undefined){group=this.groupsData.get(groupId);}if(group==undefined){group={id:groupId,content:this.options.defaultGroup+groupId};}this._updateGroup(group,groupId);this.groups[groupId].setItems(groupsContent[groupId]);}}}this.forceGraphUpdate=true;this.body.emitter.emit("_change",{queue:true});}};/**
   * Redraw the component, mandatory function
   * @return {boolean} Returns true if the component is resized
   */LineGraph.prototype.redraw=function(){var resized=false;// calculate actual size and position
  this.props.width=this.dom.frame.offsetWidth;this.props.height=this.body.domProps.centerContainer.height-this.body.domProps.border.top-this.body.domProps.border.bottom;// check if this component is resized
  resized=this._isResized()||resized;// check whether zoomed (in that case we need to re-stack everything)
  var visibleInterval=this.body.range.end-this.body.range.start;var zoomed=visibleInterval!=this.lastVisibleInterval;this.lastVisibleInterval=visibleInterval;// the svg element is three times as big as the width, this allows for fully dragging left and right
  // without reloading the graph. the controls for this are bound to events in the constructor
  if(resized==true){this.svg.style.width=util$4.option.asSize(3*this.props.width);this.svg.style.left=util$4.option.asSize(-this.props.width);// if the height of the graph is set as proportional, change the height of the svg
  if((this.options.height+'').indexOf("%")!=-1||this.updateSVGheightOnResize==true){this.updateSVGheight=true;}}// update the height of the graph on each redraw of the graph.
  if(this.updateSVGheight==true){if(this.options.graphHeight!=this.props.height+'px'){this.options.graphHeight=this.props.height+'px';this.svg.style.height=this.props.height+'px';}this.updateSVGheight=false;}else{this.svg.style.height=(''+this.options.graphHeight).replace('px','')+'px';}// zoomed is here to ensure that animations are shown correctly.
  if(resized==true||zoomed==true||this.abortedGraphUpdate==true||this.forceGraphUpdate==true){resized=this._updateGraph()||resized;this.forceGraphUpdate=false;}else{// move the whole svg while dragging
  if(this.lastStart!=0){var offset=this.body.range.start-this.lastStart;var range=this.body.range.end-this.body.range.start;if(this.props.width!=0){var rangePerPixelInv=this.props.width/range;var xOffset=offset*rangePerPixelInv;this.svg.style.left=-this.props.width-xOffset+'px';}}}this.legendLeft.redraw();this.legendRight.redraw();return resized;};LineGraph.prototype._getSortedGroupIds=function(){// getting group Ids
  var grouplist=[];for(var groupId in this.groups){if(this.groups.hasOwnProperty(groupId)){var group=this.groups[groupId];if(group.visible==true&&(this.options.groups.visibility[groupId]===undefined||this.options.groups.visibility[groupId]==true)){grouplist.push({id:groupId,zIndex:group.options.zIndex});}}}util$4.insertSort(grouplist,function(a,b){var az=a.zIndex;var bz=b.zIndex;if(az===undefined)az=0;if(bz===undefined)bz=0;return az==bz?0:az<bz?-1:1;});var groupIds=new Array(grouplist.length);for(var i=0;i<grouplist.length;i++){groupIds[i]=grouplist[i].id;}return groupIds;};/**
   * Update and redraw the graph.
   *
   * @returns {boolean}
   * @private
   */LineGraph.prototype._updateGraph=function(){// reset the svg elements
  DOMutil$3.prepareElements(this.svgElements);if(this.props.width!=0&&this.itemsData!=null){var group,i;var groupRanges={};var changeCalled=false;// this is the range of the SVG canvas
  var minDate=this.body.util.toGlobalTime(-this.body.domProps.root.width);var maxDate=this.body.util.toGlobalTime(2*this.body.domProps.root.width);// getting group Ids
  var groupIds=this._getSortedGroupIds();if(groupIds.length>0){var groupsData={};// fill groups data, this only loads the data we require based on the timewindow
  this._getRelevantData(groupIds,groupsData,minDate,maxDate);// apply sampling, if disabled, it will pass through this function.
  this._applySampling(groupIds,groupsData);// we transform the X coordinates to detect collisions
  for(i=0;i<groupIds.length;i++){this._convertXcoordinates(groupsData[groupIds[i]]);}// now all needed data has been collected we start the processing.
  this._getYRanges(groupIds,groupsData,groupRanges);// update the Y axis first, we use this data to draw at the correct Y points
  changeCalled=this._updateYAxis(groupIds,groupRanges);//  at changeCalled, abort this update cycle as the graph needs another update with new Width input from the Redraw container.
  //  Cleanup SVG elements on abort.
  if(changeCalled==true){DOMutil$3.cleanupElements(this.svgElements);this.abortedGraphUpdate=true;return true;}this.abortedGraphUpdate=false;// With the yAxis scaled correctly, use this to get the Y values of the points.
  var below=undefined;for(i=0;i<groupIds.length;i++){group=this.groups[groupIds[i]];if(this.options.stack===true&&this.options.style==='line'){if(group.options.excludeFromStacking==undefined||!group.options.excludeFromStacking){if(below!=undefined){this._stack(groupsData[group.id],groupsData[below.id]);if(group.options.shaded.enabled==true&&group.options.shaded.orientation!=="group"){if(group.options.shaded.orientation=="top"&&below.options.shaded.orientation!=="group"){below.options.shaded.orientation="group";below.options.shaded.groupId=group.id;}else{group.options.shaded.orientation="group";group.options.shaded.groupId=below.id;}}}below=group;}}this._convertYcoordinates(groupsData[groupIds[i]],group);}//Precalculate paths and draw shading if appropriate. This will make sure the shading is always behind any lines.
  var paths={};for(i=0;i<groupIds.length;i++){group=this.groups[groupIds[i]];if(group.options.style==='line'&&group.options.shaded.enabled==true){var dataset=groupsData[groupIds[i]];if(dataset==null||dataset.length==0){continue;}if(!paths.hasOwnProperty(groupIds[i])){paths[groupIds[i]]=line.calcPath(dataset,group);}if(group.options.shaded.orientation==="group"){var subGroupId=group.options.shaded.groupId;if(groupIds.indexOf(subGroupId)===-1){console.log(group.id+": Unknown shading group target given:"+subGroupId);continue;}if(!paths.hasOwnProperty(subGroupId)){paths[subGroupId]=line.calcPath(groupsData[subGroupId],this.groups[subGroupId]);}line.drawShading(paths[groupIds[i]],group,paths[subGroupId],this.framework);}else{line.drawShading(paths[groupIds[i]],group,undefined,this.framework);}}}// draw the groups, calculating paths if still necessary.
  bar.draw(groupIds,groupsData,this.framework);for(i=0;i<groupIds.length;i++){group=this.groups[groupIds[i]];if(groupsData[groupIds[i]].length>0){switch(group.options.style){case"line":if(!paths.hasOwnProperty(groupIds[i])){paths[groupIds[i]]=line.calcPath(groupsData[groupIds[i]],group);}line.draw(paths[groupIds[i]],group,this.framework);// eslint-disable-line no-fallthrough
  case"point":// eslint-disable-line no-fallthrough
  case"points":if(group.options.style=="point"||group.options.style=="points"||group.options.drawPoints.enabled==true){points.draw(groupsData[groupIds[i]],group,this.framework);}break;case"bar":// bar needs to be drawn enmasse
  // eslint-disable-line no-fallthrough
  default://do nothing...
  }}}}}// cleanup unused svg elements
  DOMutil$3.cleanupElements(this.svgElements);return false;};LineGraph.prototype._stack=function(data,subData){var index,dx,dy,subPrevPoint,subNextPoint;index=0;// for each data point we look for a matching on in the set below
  for(var j=0;j<data.length;j++){subPrevPoint=undefined;subNextPoint=undefined;// we look for time matches or a before-after point
  for(var k=index;k<subData.length;k++){// if times match exactly
  if(subData[k].x===data[j].x){subPrevPoint=subData[k];subNextPoint=subData[k];index=k;break;}else if(subData[k].x>data[j].x){// overshoot
  subNextPoint=subData[k];if(k==0){subPrevPoint=subNextPoint;}else{subPrevPoint=subData[k-1];}index=k;break;}}// in case the last data point has been used, we assume it stays like this.
  if(subNextPoint===undefined){subPrevPoint=subData[subData.length-1];subNextPoint=subData[subData.length-1];}// linear interpolation
  dx=subNextPoint.x-subPrevPoint.x;dy=subNextPoint.y-subPrevPoint.y;if(dx==0){data[j].y=data[j].orginalY+subNextPoint.y;}else{data[j].y=data[j].orginalY+dy/dx*(data[j].x-subPrevPoint.x)+subPrevPoint.y;// ax + b where b is data[j].y
  }}};/**
   * first select and preprocess the data from the datasets.
   * the groups have their preselection of data, we now loop over this data to see
   * what data we need to draw. Sorted data is much faster.
   * more optimization is possible by doing the sampling before and using the binary search
   * to find the end date to determine the increment.
   *
   * @param {array}  groupIds
   * @param {object} groupsData
   * @param {date}   minDate
   * @param {date}   maxDate
   * @private
   */LineGraph.prototype._getRelevantData=function(groupIds,groupsData,minDate,maxDate){var group,i,j,item;if(groupIds.length>0){for(i=0;i<groupIds.length;i++){group=this.groups[groupIds[i]];var itemsData=group.getItems();// optimization for sorted data
  if(group.options.sort==true){var dateComparator=function dateComparator(a,b){return a.getTime()==b.getTime()?0:a<b?-1:1;};var first=Math.max(0,util$4.binarySearchValue(itemsData,minDate,'x','before',dateComparator));var last=Math.min(itemsData.length,util$4.binarySearchValue(itemsData,maxDate,'x','after',dateComparator)+1);if(last<=0){last=itemsData.length;}var dataContainer=new Array(last-first);for(j=first;j<last;j++){item=group.itemsData[j];dataContainer[j-first]=item;}groupsData[groupIds[i]]=dataContainer;}else{// If unsorted data, all data is relevant, just returning entire structure
  groupsData[groupIds[i]]=group.itemsData;}}}};/**
   *
   * @param {Array.<vis.GraphGroup.id>} groupIds
   * @param {vis.DataSet} groupsData
   * @private
   */LineGraph.prototype._applySampling=function(groupIds,groupsData){var group;if(groupIds.length>0){for(var i=0;i<groupIds.length;i++){group=this.groups[groupIds[i]];if(group.options.sampling==true){var dataContainer=groupsData[groupIds[i]];if(dataContainer.length>0){var increment=1;var amountOfPoints=dataContainer.length;// the global screen is used because changing the width of the yAxis may affect the increment, resulting in an endless loop
  // of width changing of the yAxis.
  //TODO: This assumes sorted data, but that's not guaranteed!
  var xDistance=this.body.util.toGlobalScreen(dataContainer[dataContainer.length-1].x)-this.body.util.toGlobalScreen(dataContainer[0].x);var pointsPerPixel=amountOfPoints/xDistance;increment=Math.min(Math.ceil(0.2*amountOfPoints),Math.max(1,Math.round(pointsPerPixel)));var sampledData=new Array(amountOfPoints);for(var j=0;j<amountOfPoints;j+=increment){var idx=Math.round(j/increment);sampledData[idx]=dataContainer[j];}groupsData[groupIds[i]]=sampledData.splice(0,Math.round(amountOfPoints/increment));}}}}};/**
   *
   * @param {Array.<vis.GraphGroup.id>} groupIds
   * @param {vis.DataSet} groupsData
   * @param {object} groupRanges  | this is being filled here
   * @private
   */LineGraph.prototype._getYRanges=function(groupIds,groupsData,groupRanges){var groupData,group,i;var combinedDataLeft=[];var combinedDataRight=[];var options;if(groupIds.length>0){for(i=0;i<groupIds.length;i++){groupData=groupsData[groupIds[i]];options=this.groups[groupIds[i]].options;if(groupData.length>0){group=this.groups[groupIds[i]];// if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.
  if(options.stack===true&&options.style==='bar'){if(options.yAxisOrientation==='left'){combinedDataLeft=combinedDataLeft.concat(groupData);}else{combinedDataRight=combinedDataRight.concat(groupData);}}else{groupRanges[groupIds[i]]=group.getYRange(groupData,groupIds[i]);}}}// if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.
  bar.getStackedYRange(combinedDataLeft,groupRanges,groupIds,'__barStackLeft','left');bar.getStackedYRange(combinedDataRight,groupRanges,groupIds,'__barStackRight','right');}};/**
   * this sets the Y ranges for the Y axis. It also determines which of the axis should be shown or hidden.
   * @param {Array.<vis.GraphGroup.id>} groupIds
   * @param {Object} groupRanges
   * @returns {boolean} resized
   * @private
   */LineGraph.prototype._updateYAxis=function(groupIds,groupRanges){var resized=false;var yAxisLeftUsed=false;var yAxisRightUsed=false;var minLeft=1e9,minRight=1e9,maxLeft=-1e9,maxRight=-1e9,minVal,maxVal;// if groups are present
  if(groupIds.length>0){// this is here to make sure that if there are no items in the axis but there are groups, that there is no infinite draw/redraw loop.
  for(var i=0;i<groupIds.length;i++){var group=this.groups[groupIds[i]];if(group&&group.options.yAxisOrientation!='right'){yAxisLeftUsed=true;minLeft=1e9;maxLeft=-1e9;}else if(group&&group.options.yAxisOrientation){yAxisRightUsed=true;minRight=1e9;maxRight=-1e9;}}// if there are items:
  for(i=0;i<groupIds.length;i++){if(groupRanges.hasOwnProperty(groupIds[i])){if(groupRanges[groupIds[i]].ignore!==true){minVal=groupRanges[groupIds[i]].min;maxVal=groupRanges[groupIds[i]].max;if(groupRanges[groupIds[i]].yAxisOrientation!='right'){yAxisLeftUsed=true;minLeft=minLeft>minVal?minVal:minLeft;maxLeft=maxLeft<maxVal?maxVal:maxLeft;}else{yAxisRightUsed=true;minRight=minRight>minVal?minVal:minRight;maxRight=maxRight<maxVal?maxVal:maxRight;}}}}if(yAxisLeftUsed==true){this.yAxisLeft.setRange(minLeft,maxLeft);}if(yAxisRightUsed==true){this.yAxisRight.setRange(minRight,maxRight);}}resized=this._toggleAxisVisiblity(yAxisLeftUsed,this.yAxisLeft)||resized;resized=this._toggleAxisVisiblity(yAxisRightUsed,this.yAxisRight)||resized;if(yAxisRightUsed==true&&yAxisLeftUsed==true){this.yAxisLeft.drawIcons=true;this.yAxisRight.drawIcons=true;}else{this.yAxisLeft.drawIcons=false;this.yAxisRight.drawIcons=false;}this.yAxisRight.master=!yAxisLeftUsed;this.yAxisRight.masterAxis=this.yAxisLeft;if(this.yAxisRight.master==false){if(yAxisRightUsed==true){this.yAxisLeft.lineOffset=this.yAxisRight.width;}else{this.yAxisLeft.lineOffset=0;}resized=this.yAxisLeft.redraw()||resized;resized=this.yAxisRight.redraw()||resized;}else{resized=this.yAxisRight.redraw()||resized;}// clean the accumulated lists
  var tempGroups=['__barStackLeft','__barStackRight','__lineStackLeft','__lineStackRight'];for(i=0;i<tempGroups.length;i++){if(groupIds.indexOf(tempGroups[i])!=-1){groupIds.splice(groupIds.indexOf(tempGroups[i]),1);}}return resized;};/**
   * This shows or hides the Y axis if needed. If there is a change, the changed event is emitted by the updateYAxis function
   *
   * @param {boolean} axisUsed
   * @param {vis.DataAxis}  axis
   * @returns {boolean}
   * @private
   */LineGraph.prototype._toggleAxisVisiblity=function(axisUsed,axis){var changed=false;if(axisUsed==false){if(axis.dom.frame.parentNode&&axis.hidden==false){axis.hide();changed=true;}}else{if(!axis.dom.frame.parentNode&&axis.hidden==true){axis.show();changed=true;}}return changed;};/**
   * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the
   * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for
   * the yAxis.
   *
   * @param {Array.<Object>} datapoints
   * @private
   */LineGraph.prototype._convertXcoordinates=function(datapoints){var toScreen=this.body.util.toScreen;for(var i=0;i<datapoints.length;i++){datapoints[i].screen_x=toScreen(datapoints[i].x)+this.props.width;datapoints[i].screen_y=datapoints[i].y;//starting point for range calculations
  if(datapoints[i].end!=undefined){datapoints[i].screen_end=toScreen(datapoints[i].end)+this.props.width;}else{datapoints[i].screen_end=undefined;}}};/**
   * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the
   * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for
   * the yAxis.
   *
   * @param {Array.<Object>} datapoints
   * @param {vis.GraphGroup} group
   * @private
   */LineGraph.prototype._convertYcoordinates=function(datapoints,group){var axis=this.yAxisLeft;var svgHeight=Number(this.svg.style.height.replace('px',''));if(group.options.yAxisOrientation=='right'){axis=this.yAxisRight;}for(var i=0;i<datapoints.length;i++){datapoints[i].screen_y=Math.round(axis.convertValue(datapoints[i].y));}group.setZeroPosition(Math.min(svgHeight,axis.convertValue(0)));};var LineGraph_1=LineGraph;/**
   * This object contains all possible options. It will check if the types are correct, if required if the option is one
   * of the allowed values.
   *
   * __any__ means that the name of the property does not matter.
   * __type__ is a required field for all objects and contains the allowed types of all objects
   */var string$1$1='string';var bool$1$1='boolean';var number$1$1='number';var array$1$1='array';var date$1='date';var object$1$1='object';// should only be in a __type__ property
  var dom$1$1='dom';var moment$5$1='moment';var any$1$1='any';var allOptions$3$1={configure:{enabled:{'boolean':bool$1$1},filter:{'boolean':bool$1$1,'function':'function'},container:{dom:dom$1$1},__type__:{object:object$1$1,'boolean':bool$1$1,'function':'function'}},//globals :
  alignCurrentTime:{string:string$1$1,'undefined':'undefined'},yAxisOrientation:{string:['left','right']},defaultGroup:{string:string$1$1},sort:{'boolean':bool$1$1},sampling:{'boolean':bool$1$1},stack:{'boolean':bool$1$1},graphHeight:{string:string$1$1,number:number$1$1},shaded:{enabled:{'boolean':bool$1$1},orientation:{string:['bottom','top','zero','group']},// top, bottom, zero, group
  groupId:{object:object$1$1},__type__:{'boolean':bool$1$1,object:object$1$1}},style:{string:['line','bar','points']},// line, bar
  barChart:{width:{number:number$1$1},minWidth:{number:number$1$1},sideBySide:{'boolean':bool$1$1},align:{string:['left','center','right']},__type__:{object:object$1$1}},interpolation:{enabled:{'boolean':bool$1$1},parametrization:{string:['centripetal','chordal','uniform']},// uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)
  alpha:{number:number$1$1},__type__:{object:object$1$1,'boolean':bool$1$1}},drawPoints:{enabled:{'boolean':bool$1$1},onRender:{'function':'function'},size:{number:number$1$1},style:{string:['square','circle']},// square, circle
  __type__:{object:object$1$1,'boolean':bool$1$1,'function':'function'}},dataAxis:{showMinorLabels:{'boolean':bool$1$1},showMajorLabels:{'boolean':bool$1$1},icons:{'boolean':bool$1$1},width:{string:string$1$1,number:number$1$1},visible:{'boolean':bool$1$1},alignZeros:{'boolean':bool$1$1},left:{range:{min:{number:number$1$1,'undefined':'undefined'},max:{number:number$1$1,'undefined':'undefined'},__type__:{object:object$1$1}},format:{'function':'function'},title:{text:{string:string$1$1,number:number$1$1,'undefined':'undefined'},style:{string:string$1$1,'undefined':'undefined'},__type__:{object:object$1$1}},__type__:{object:object$1$1}},right:{range:{min:{number:number$1$1,'undefined':'undefined'},max:{number:number$1$1,'undefined':'undefined'},__type__:{object:object$1$1}},format:{'function':'function'},title:{text:{string:string$1$1,number:number$1$1,'undefined':'undefined'},style:{string:string$1$1,'undefined':'undefined'},__type__:{object:object$1$1}},__type__:{object:object$1$1}},__type__:{object:object$1$1}},legend:{enabled:{'boolean':bool$1$1},icons:{'boolean':bool$1$1},left:{visible:{'boolean':bool$1$1},position:{string:['top-right','bottom-right','top-left','bottom-left']},__type__:{object:object$1$1}},right:{visible:{'boolean':bool$1$1},position:{string:['top-right','bottom-right','top-left','bottom-left']},__type__:{object:object$1$1}},__type__:{object:object$1$1,'boolean':bool$1$1}},groups:{visibility:{any:any$1$1},__type__:{object:object$1$1}},autoResize:{'boolean':bool$1$1},throttleRedraw:{number:number$1$1},// TODO: DEPRICATED see https://github.com/almende/vis/issues/2511
  clickToUse:{'boolean':bool$1$1},end:{number:number$1$1,date:date$1,string:string$1$1,moment:moment$5$1},format:{minorLabels:{millisecond:{string:string$1$1,'undefined':'undefined'},second:{string:string$1$1,'undefined':'undefined'},minute:{string:string$1$1,'undefined':'undefined'},hour:{string:string$1$1,'undefined':'undefined'},weekday:{string:string$1$1,'undefined':'undefined'},day:{string:string$1$1,'undefined':'undefined'},month:{string:string$1$1,'undefined':'undefined'},quarter:{string:string$1$1,'undefined':'undefined'},year:{string:string$1$1,'undefined':'undefined'},__type__:{object:object$1$1}},majorLabels:{millisecond:{string:string$1$1,'undefined':'undefined'},second:{string:string$1$1,'undefined':'undefined'},minute:{string:string$1$1,'undefined':'undefined'},hour:{string:string$1$1,'undefined':'undefined'},weekday:{string:string$1$1,'undefined':'undefined'},day:{string:string$1$1,'undefined':'undefined'},month:{string:string$1$1,'undefined':'undefined'},quarter:{string:string$1$1,'undefined':'undefined'},year:{string:string$1$1,'undefined':'undefined'},__type__:{object:object$1$1}},__type__:{object:object$1$1}},moment:{'function':'function'},height:{string:string$1$1,number:number$1$1},hiddenDates:{start:{date:date$1,number:number$1$1,string:string$1$1,moment:moment$5$1},end:{date:date$1,number:number$1$1,string:string$1$1,moment:moment$5$1},repeat:{string:string$1$1},__type__:{object:object$1$1,array:array$1$1}},locale:{string:string$1$1},locales:{__any__:{any:any$1$1},__type__:{object:object$1$1}},max:{date:date$1,number:number$1$1,string:string$1$1,moment:moment$5$1},maxHeight:{number:number$1$1,string:string$1$1},maxMinorChars:{number:number$1$1},min:{date:date$1,number:number$1$1,string:string$1$1,moment:moment$5$1},minHeight:{number:number$1$1,string:string$1$1},moveable:{'boolean':bool$1$1},multiselect:{'boolean':bool$1$1},orientation:{string:string$1$1},showCurrentTime:{'boolean':bool$1$1},showMajorLabels:{'boolean':bool$1$1},showMinorLabels:{'boolean':bool$1$1},start:{date:date$1,number:number$1$1,string:string$1$1,moment:moment$5$1},timeAxis:{scale:{string:string$1$1,'undefined':'undefined'},step:{number:number$1$1,'undefined':'undefined'},__type__:{object:object$1$1}},width:{string:string$1$1,number:number$1$1},zoomable:{'boolean':bool$1$1},zoomKey:{string:['ctrlKey','altKey','metaKey','']},zoomMax:{number:number$1$1},zoomMin:{number:number$1$1},zIndex:{number:number$1$1},__type__:{object:object$1$1}};var configureOptions$2={global:{alignCurrentTime:['none','year','month','quarter','week','isoWeek','day','date','hour','minute','second'],//yAxisOrientation: ['left','right'], // TDOO: enable as soon as Grahp2d doesn't crash when changing this on the fly
  sort:true,sampling:true,stack:false,shaded:{enabled:false,orientation:['zero','top','bottom','group']// zero, top, bottom
  },style:['line','bar','points'],// line, bar
  barChart:{width:[50,5,100,5],minWidth:[50,5,100,5],sideBySide:false,align:['left','center','right']// left, center, right
  },interpolation:{enabled:true,parametrization:['centripetal','chordal','uniform']// uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)
  },drawPoints:{enabled:true,size:[6,2,30,1],style:['square','circle']// square, circle
  },dataAxis:{showMinorLabels:true,showMajorLabels:true,icons:false,width:[40,0,200,1],visible:true,alignZeros:true,left:{//range: {min:'undefined': 'undefined'ined,max:'undefined': 'undefined'ined},
  //format: function (value) {return value;},
  title:{text:'',style:''}},right:{//range: {min:'undefined': 'undefined'ined,max:'undefined': 'undefined'ined},
  //format: function (value) {return value;},
  title:{text:'',style:''}}},legend:{enabled:false,icons:true,left:{visible:true,position:['top-right','bottom-right','top-left','bottom-left']// top/bottom - left,right
  },right:{visible:true,position:['top-right','bottom-right','top-left','bottom-left']// top/bottom - left,right
  }},autoResize:true,clickToUse:false,end:'',format:{minorLabels:{millisecond:'SSS',second:'s',minute:'HH:mm',hour:'HH:mm',weekday:'ddd D',day:'D',month:'MMM',quarter:'[Q]Q',year:'YYYY'},majorLabels:{millisecond:'HH:mm:ss',second:'D MMMM HH:mm',minute:'ddd D MMMM',hour:'ddd D MMMM',weekday:'MMMM YYYY',day:'MMMM YYYY',month:'YYYY',quarter:'YYYY',year:''}},height:'',locale:'',max:'',maxHeight:'',maxMinorChars:[7,0,20,1],min:'',minHeight:'',moveable:true,orientation:['both','bottom','top'],showCurrentTime:false,showMajorLabels:true,showMinorLabels:true,start:'',width:'100%',zoomable:true,zoomKey:['ctrlKey','altKey','metaKey',''],zoomMax:[315360000000000,10,315360000000000,1],zoomMin:[10,10,315360000000000,1],zIndex:0}};var optionsGraph2d=/*#__PURE__*/Object.freeze({allOptions:allOptions$3$1,configureOptions:configureOptions$2});var DataSet$3$1=index$3.DataSet;var DataView$3$1=index$3.DataView;var Validator$3$1=Validator$1$2.Validator;var printStyle$2$1=Validator$1$2.printStyle;var allOptions$4$1=optionsGraph2d.allOptions;var configureOptions$3=optionsGraph2d.configureOptions;var Configurator$2=Configurator$1.default;/**
   * Create a timeline visualization
   * @param {HTMLElement} container
   * @param {vis.DataSet | Array} [items]
   * @param {vis.DataSet | Array | vis.DataView | Object} [groups]
   * @param {Object} [options]  See Graph2d.setOptions for the available options.
   * @constructor Graph2d
   * @extends Core
   */function Graph2d(container,items,groups,options){// if the third element is options, the forth is groups (optionally);
  if(!(Array.isArray(groups)||groups instanceof DataSet$3$1||groups instanceof DataView$3$1)&&groups instanceof Object){var forthArgument=options;options=groups;groups=forthArgument;}// TODO: REMOVE THIS in the next MAJOR release
  // see https://github.com/almende/vis/issues/2511
  if(options&&options.throttleRedraw){console.warn("Graph2d option \"throttleRedraw\" is DEPRICATED and no longer supported. It will be removed in the next MAJOR release.");}var me=this;this.defaultOptions={start:null,end:null,autoResize:true,orientation:{axis:'bottom',// axis orientation: 'bottom', 'top', or 'both'
  item:'bottom'// not relevant for Graph2d
  },moment:moment$3$2,width:null,height:null,maxHeight:null,minHeight:null};this.options=util$4.deepExtend({},this.defaultOptions);// Create the DOM, props, and emitter
  this._create(container);// all components listed here will be repainted automatically
  this.components=[];this.body={dom:this.dom,domProps:this.props,emitter:{on:this.on.bind(this),off:this.off.bind(this),emit:this.emit.bind(this)},hiddenDates:[],util:{toScreen:me._toScreen.bind(me),toGlobalScreen:me._toGlobalScreen.bind(me),// this refers to the root.width
  toTime:me._toTime.bind(me),toGlobalTime:me._toGlobalTime.bind(me)}};// range
  this.range=new Range_1$1(this.body);this.components.push(this.range);this.body.range=this.range;// time axis
  this.timeAxis=new TimeAxis(this.body);this.components.push(this.timeAxis);//this.body.util.snap = this.timeAxis.snap.bind(this.timeAxis);
  // current time bar
  this.currentTime=new CurrentTime_1(this.body);this.components.push(this.currentTime);// item set
  this.linegraph=new LineGraph_1(this.body);this.components.push(this.linegraph);this.itemsData=null;// DataSet
  this.groupsData=null;// DataSet
  this.on('tap',function(event){me.emit('click',me.getEventProperties(event));});this.on('doubletap',function(event){me.emit('doubleClick',me.getEventProperties(event));});this.dom.root.oncontextmenu=function(event){me.emit('contextmenu',me.getEventProperties(event));};//Single time autoscale/fit
  this.initialFitDone=false;this.on('changed',function(){if(me.itemsData==null)return;if(!me.initialFitDone&&!me.options.rollingMode){me.initialFitDone=true;if(me.options.start!=undefined||me.options.end!=undefined){if(me.options.start==undefined||me.options.end==undefined){var range=me.getItemRange();}var start=me.options.start!=undefined?me.options.start:range.min;var end=me.options.end!=undefined?me.options.end:range.max;me.setWindow(start,end,{animation:false});}else{me.fit({animation:false});}}if(!me.initialDrawDone&&(me.initialRangeChangeDone||!me.options.start&&!me.options.end||me.options.rollingMode)){me.initialDrawDone=true;me.itemSet.initialDrawDone=true;me.dom.root.style.visibility='visible';me.dom.loadingScreen.parentNode.removeChild(me.dom.loadingScreen);if(me.options.onInitialDrawComplete){setTimeout(function(){return me.options.onInitialDrawComplete();},0);}}});// apply options
  if(options){this.setOptions(options);}// IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!
  if(groups){this.setGroups(groups);}// create itemset
  if(items){this.setItems(items);}// draw for the first time
  this._redraw();}// Extend the functionality from Core
  Graph2d.prototype=new Core();Graph2d.prototype.setOptions=function(options){// validate options
  var errorFound=Validator$3$1.validate(options,allOptions$4$1);if(errorFound===true){console.log('%cErrors have been found in the supplied options object.',printStyle$2$1);}Core.prototype.setOptions.call(this,options);};/**
   * Set items
   * @param {vis.DataSet | Array | null} items
   */Graph2d.prototype.setItems=function(items){var initialLoad=this.itemsData==null;// convert to type DataSet when needed
  var newDataSet;if(!items){newDataSet=null;}else if(items instanceof DataSet$3$1||items instanceof DataView$3$1){newDataSet=items;}else{// turn an array into a dataset
  newDataSet=new DataSet$3$1(items,{type:{start:'Date',end:'Date'}});}// set items
  this.itemsData=newDataSet;this.linegraph&&this.linegraph.setItems(newDataSet);if(initialLoad){if(this.options.start!=undefined||this.options.end!=undefined){var start=this.options.start!=undefined?this.options.start:null;var end=this.options.end!=undefined?this.options.end:null;this.setWindow(start,end,{animation:false});}else{this.fit({animation:false});}}};/**
   * Set groups
   * @param {vis.DataSet | Array} groups
   */Graph2d.prototype.setGroups=function(groups){// convert to type DataSet when needed
  var newDataSet;if(!groups){newDataSet=null;}else if(groups instanceof DataSet$3$1||groups instanceof DataView$3$1){newDataSet=groups;}else{// turn an array into a dataset
  newDataSet=new DataSet$3$1(groups);}this.groupsData=newDataSet;this.linegraph.setGroups(newDataSet);};/**
   * Returns an object containing an SVG element with the icon of the group (size determined by iconWidth and iconHeight), the label of the group (content) and the yAxisOrientation of the group (left or right).
   * @param {vis.GraphGroup.id} groupId
   * @param {number} width
   * @param {number} height
   * @returns {{icon: SVGElement, label: string, orientation: string}|string}
   */Graph2d.prototype.getLegend=function(groupId,width,height){if(width===undefined){width=15;}if(height===undefined){height=15;}if(this.linegraph.groups[groupId]!==undefined){return this.linegraph.groups[groupId].getLegend(width,height);}else{return "cannot find group:'"+groupId+"'";}};/**
   * This checks if the visible option of the supplied group (by ID) is true or false.
   * @param {vis.GraphGroup.id} groupId
   * @returns {boolean}
   */Graph2d.prototype.isGroupVisible=function(groupId){if(this.linegraph.groups[groupId]!==undefined){return this.linegraph.groups[groupId].visible&&(this.linegraph.options.groups.visibility[groupId]===undefined||this.linegraph.options.groups.visibility[groupId]==true);}else{return false;}};/**
   * Get the data range of the item set.
   * @returns {{min: Date, max: Date}} range  A range with a start and end Date.
   *                                          When no minimum is found, min==null
   *                                          When no maximum is found, max==null
   */Graph2d.prototype.getDataRange=function(){var min=null;var max=null;// calculate min from start filed
  for(var groupId in this.linegraph.groups){if(this.linegraph.groups.hasOwnProperty(groupId)){if(this.linegraph.groups[groupId].visible==true){for(var i=0;i<this.linegraph.groups[groupId].itemsData.length;i++){var item=this.linegraph.groups[groupId].itemsData[i];var value=util$4.convert(item.x,'Date').valueOf();min=min==null?value:min>value?value:min;max=max==null?value:max<value?value:max;}}}}return {min:min!=null?new Date(min):null,max:max!=null?new Date(max):null};};/**
   * Generate Timeline related information from an event
   * @param {Event} event
   * @return {Object} An object with related information, like on which area
   *                  The event happened, whether clicked on an item, etc.
   */Graph2d.prototype.getEventProperties=function(event){var clientX=event.center?event.center.x:event.clientX;var clientY=event.center?event.center.y:event.clientY;var x=clientX-util$4.getAbsoluteLeft(this.dom.centerContainer);var y=clientY-util$4.getAbsoluteTop(this.dom.centerContainer);var time=this._toTime(x);var customTime=CustomTime.customTimeFromTarget(event);var element=util$4.getTarget(event);var what=null;if(util$4.hasParent(element,this.timeAxis.dom.foreground)){what='axis';}else if(this.timeAxis2&&util$4.hasParent(element,this.timeAxis2.dom.foreground)){what='axis';}else if(util$4.hasParent(element,this.linegraph.yAxisLeft.dom.frame)){what='data-axis';}else if(util$4.hasParent(element,this.linegraph.yAxisRight.dom.frame)){what='data-axis';}else if(util$4.hasParent(element,this.linegraph.legendLeft.dom.frame)){what='legend';}else if(util$4.hasParent(element,this.linegraph.legendRight.dom.frame)){what='legend';}else if(customTime!=null){what='custom-time';}else if(util$4.hasParent(element,this.currentTime.bar)){what='current-time';}else if(util$4.hasParent(element,this.dom.center)){what='background';}var value=[];var yAxisLeft=this.linegraph.yAxisLeft;var yAxisRight=this.linegraph.yAxisRight;if(!yAxisLeft.hidden&&this.itemsData.length>0){value.push(yAxisLeft.screenToValue(y));}if(!yAxisRight.hidden&&this.itemsData.length>0){value.push(yAxisRight.screenToValue(y));}return {event:event,what:what,pageX:event.srcEvent?event.srcEvent.pageX:event.pageX,pageY:event.srcEvent?event.srcEvent.pageY:event.pageY,x:x,y:y,time:time,value:value};};/**
   * Load a configurator
   * @return {Object}
   * @private
   */Graph2d.prototype._createConfigurator=function(){return new Configurator$2(this,this.dom.container,configureOptions$3);};var Graph2d_1=Graph2d;var DOMutil$1$1=DOMutil$3;// data
  var Timeline$1=Timeline_1;var Graph2d$1=Graph2d_1;var timeline={Core:Core,DateUtil:DateUtil,Range:Range_1$1,stack:Stack,TimeStep:TimeStep_1,components:{items:{Item:Item,BackgroundItem:BackgroundItem_1,BoxItem:BoxItem_1,PointItem:PointItem_1,RangeItem:RangeItem_1},BackgroundGroup:BackgroundGroup_1,Component:Component_1,CurrentTime:CurrentTime_1,CustomTime:CustomTime,DataAxis:DataAxis,DataScale:DataScale_1,GraphGroup:GraphGroup_1,Group:Group_1,ItemSet:ItemSet,Legend:Legend_1,LineGraph:LineGraph_1,TimeAxis:TimeAxis}};// bundled external libraries
  var moment$6$1=moment$3$2;var Hammer$1=hammer$1$2;var keycharm$1$1=keycharm$3;

  // utils
  var index$4 = {
    util: util$1,
    DataSet: DataSet,
    DataView: DataView,
    Queue: Queue,
    Network: Network,
    network: network,
    Graph3d: Graph3d$1,
    graph3d: graph3d,
    Timeline: Timeline$1,
    Graph2d: Graph2d$1,
    timeline: timeline,
    DOMutil: DOMutil$1$1,
    keycharm: keycharm$1$1,
    moment: moment$6$1,
    Hammer: Hammer$1
  };

  return index$4;

}));
//# sourceMappingURL=vis.js.map
